{
    "list2016": [
        {
            "title": "52°North Initiative for Geospatial Open Source Software GmbH",
            "orgLink": "http://52north.org/",
            "projects": [
                {
                    "title": "Terrain Model Generation and Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6383180932186112/",
                    "content": "The 52°North Triturus library, is extremely powerful and provides a lot of functionalities. This library is used in a lot of interesting projects such as terrainServer and worldviz. Currently, the terrainServer offers Web-based services providing perspective terrain views. The idea of this project is to extend Terrain model generation and analysis to practical scenarios, where it would be desirable to have Web-based access to analysis tools (e.g., difference surfaces, mass calculations, inclination analysis) and to model generation functions, using the Triturus library. In the Google Summer of Code program, we shall try to achieve Web-based access for few of these tools. This module will be named ‘terrainTools’ and will be a standalone project.",
                    "projectCode": "https://wiki.52north.org/Projects/GSoC2016TerrainModelGenerationandAnalysis"
                },
                {
                    "title": "Usability improvements for smle",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6208761773424640/",
                    "content": "Usability improvements and new features development for smle - web-based SensorML descriptions editor.",
                    "projectCode": "https://github.com/52North/smle/commits/master?author=sheff146"
                },
                {
                    "title": "Visual Analytics of EnviroCar Tracks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4801686195404800/",
                    "content": "The EnviroCar project intends to provide users with detailed information regarding various phenomenons of vehicle performance. The motivation of this project is to build a Standalone Track Analysis page in JavaScript(AngularJS) that could also serve as the starting point for the next generation website of the EnviroCar project. The current website implementation is in PHP and the intention is to implement it with AngularJS to allow for more flexibility while analyzing single track performance and also additional features like comparative track analysis. The above goal will be pursued with the help of LeafletJS, HighCharts, OpenCPU or ShinyApps. I have also proposed to add a framework to allow for incorporating a Rating's page that allows the user to compare his/her performance with average expected performance from a similar vehicle.",
                    "projectCode": "https://naveenjafersite.wordpress.com/2016/08/22/google-summer-of-code-2016/"
                }
            ],
            "techStack": [
                "javascript",
                "java",
                "ogc standards",
                "web services"
            ]
        },
        {
            "title": "aimacode",
            "orgLink": "https://github.com/aimacode/",
            "projects": [
                {
                    "title": "Implementation of Module on Logic (Chapters 7 – 9) for 4th Edition",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5695589685657600/",
                    "content": "The project will mainly consist of providing implementation for algorithms in Java from the book Artificial Intelligence - A Modern Approach. Using JDK 8’s features, and considering the release of the Fourth edition of the book, Module III, which encompasses Propositional and First Order Logic, will have its set of algorithms implemented.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1ctgEuHO-g7BeoI-DYjeGZiWE3n2o3aXfSOs0Nwv9v5k/edit?usp=sharing"
                },
                {
                    "title": "Python Implementations & Visualization of Algorithms in AIMA 4th Edition.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5724681378201600/",
                    "content": "AIMA-Python’s current repo has code for most of the algorithms in the third edition. The proposed project aims to update these implementations and add additional implementations in the fourth edition. Auxiliary Interactive Visualizations will also be made with the aim of providing intuitive explanations of the algorithms. The visualizations will make use of IPython along with pylab, JS and some other libraries like networkx etc to make them interactive.",
                    "projectCode": "https://gist.github.com/reachtarunhere/de76d24f8e8bdda4c0e4223a31dfa75c"
                },
                {
                    "title": "‘aima-python’ code to accompany the book “AI: A Modern Approach”",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5450837216198656/",
                    "content": "Develop the \"aima-python\" repository by implementing Python code to reflect pseudo-codes from the 4th edition of the book \"AI: A Modern Approach\" written by Stuart Russell, Peter Norvig. Add unit-tests and good documentation to all the implemented algorithms. Add examples of usage and explanations along with visualizations (interactive and otherwise) in Jupyter notebooks to make it easy for beginners/learners to understand the concepts from the book and also the Udacity's MOOC—Intro to Artificial Intelligence.",
                    "projectCode": "https://docs.google.com/document/d/1U8Nq7ZH-UVxV4hNh51bSDIJe1G6H6LSaO6oZuG4xRb4/edit?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "java",
                "javascript"
            ]
        },
        {
            "title": "AOSSIE - The Australian National University's Open-Source Software Innovation and Education",
            "orgLink": "https://cecs.anu.edu.au/current-students/student-opportunities/google-summer-code-anu",
            "projects": [
                {
                    "title": "Dynamic Network Analysis in Rogas",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5092347436072960/",
                    "content": "Developing a visualization tool that can visualize graphs dynamically, and designing dynamic analysis strategies that can provide a flexible and efficient way for conducting various network analysis tasks dynamically",
                    "projectCode": "https://github.com/shallyan/GSoC-Rogas"
                },
                {
                    "title": "Extempore - Live coding with simulation codes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4715014292242432/",
                    "content": "I will be using investigating the opportunities that Extempore provides in creating a more dynamic workflow for scientists programming simulation and how Extempore can be used to make these simulations more powerful. With the help of some C++ fluid dynamics code, I will be exploring the best ways to use Extempore to create a more effective environment for scientific simulation while doing some real physics. It will show off how extempore can be used to change non-trivial aspects of a simulation at run time.",
                    "projectCode": "https://github.com/extemporelang/incremental-fluids/commits/master?author=peningtonj"
                },
                {
                    "title": "Implementation of theorem prover based on Skeptik's data structures and Conflict Resolution algorithm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6674954703601664/",
                    "content": "Skeptik[1] is a tool focused on compression of proofs, but it's also possible to generate proofs using it's infrastructure.There is a new algorithm developed by ANU employees, called Conflict Resolution algorithm[2], which has no implementation yet and can generate proofs in first-order logic.Conflict Resolution algorithm extends well­known SAT ­solver DPLL[3]  and CDCL[4] algorithm and tries to generalize it’s ideas for first­-order logic. In CR we negate instances (substitutions) of decision literals (unlike CDCL where we negate decision literals), but main idea is the same: we decide to assign truthness to some atom and then try to propagate and achieve truthness of some other atoms. Eventually, we will reach a conflict or satisfactions and generate some conflict clauses if reached conflict.",
                    "projectCode": "https://github.com/Paradoxika/Skeptik/pull/123"
                },
                {
                    "title": "Local Community Detection Search Using a Conceptual View",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5515055835643904/",
                    "content": "Rogas is based on a conceptual view of network analytics, where two families of topological constructs have been introduced and implemented for network analytics query processing. The two constructs introduced in Rogas  are: CLUSTER-BY and RANK-BY, which play an important role in analyzing the topological structure that lies beneath based entities and relationships. However, local community search queries are still needed in Rogas framework. In a local community search query, the objective is to find the communities that are associated with a given set of query vertices. Implementation of local community search functionality needs careful modeling into NAER model as well.The proposed project aims at adding the local community search functionality into Rogas. This makes Rogas a more general framework that covers a broader range of network analytics applications. Moreover, this project aims at implementing and instantiation of three local community detection techniques chosen from the state-of-the-art ones in the field of network analytics. This can bring Rogas a new level of functionality with a more detailed coverage of network analytics applications.",
                    "projectCode": "https://github.com/orezvani/GSOC-Rogas/commits/local-community-search"
                },
                {
                    "title": "Parsers implementation and extension of proof compression algorithms from propositional to first-order logic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5643440998055936/",
                    "content": "Skeptik [1] is a collection of data structures and algorithms focused especially on the compression of formal proofs.Resolution proofs, in particular, are used by various sat-solvers, smt-solvers and automated theorem provers, as certificates of correctness for the answers they provide. These automated deduction tools have a wide range of application areas, from mathematics to software and hardware verification.By providing smaller resolution proofs that are easier and faster to check, Skeptik aims at improving the reliability of these automated deduction tools and at facilitating the exchange of information between them.This project aims to implement full TPTP-TSTP parsers [2] and a random generator of first order logic proofs to test a diverse variety of algorithms.Regarding proof compression, this project aims to lift the ideas behind splitting proof compression algorithm [3] (developed for propositional logic) to first order logic and to explore improvements for similar algorithms already implemented in Skeptik.References\n[1] github.com/Paradoxika/Skeptik\n[2] www.cs.miami.edu/~tptp/\n[3] en.wikipedia.org/wiki/Resolution_proof_compression_by_splitting",
                    "projectCode": "https://github.com/Paradoxika/Skeptik/commits/develop?author=EzequielPostan"
                },
                {
                    "title": "Private medical data comparison functions for similar patient matching",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6232264908210176/",
                    "content": "Current implementation of PPSPM Software (http://dmm.anu.edu.au/PPSPM/) handles similar patient matching (SPM) based on  Bloom filter based masking and matching techniques of numerical attributes (such as age, blood pressure, BMI, and date of birth), categorical attributes (such as gender and marital status)  and string attributes (such as names and addresses) (Vatsalan et al. 2016). Aim of this R&D project is to extend the functionality of PPSPM software to increase the accuracy and probability of Similar Patient Matching by identifying and  incorporating advanced techniques (while preserving privacy) to include other complex patient medical data (such as scan image, textual data, medical reports, and geographical data) in record linkage.",
                    "projectCode": "https://github.com/Mathuv/PPSPM-TextMM"
                }
            ],
            "techStack": [
                "scala",
                "lisp",
                "llvm",
                "python",
                "postgresql"
            ]
        },
        {
            "title": "Apache Software Foundation",
            "orgLink": "http://www.apache.org",
            "projects": [
                {
                    "title": "[FLINK-3599] Code Generation in Serializers and Comparators of Apache Flink",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6292775360266240/",
                    "content": "The current implementation of the serializers can be a performance bottleneck in some scenarios. These performance problems were also reported on the mailing list recently. I plan to implement code generation into the serializers to improve the performance.I did some preliminary benchmarks on the Nine Men’s Morris)application being developed by Gábor Gévay and Márton Balassi using a profiler. The runtime of the application was 47 seconds with the default serializers and 35 seconds with the handwritten ones. After switching to handwritten serializers, the number of samples in java.lang.reflect, org.apache.flink.api.java.typeutils.runtime, and sun.reflect was reduced to 36% from 54%. The majority of the rest of the calls to java.lang.reflect are from the comparators. The number of garbage collections was also significantly reduced. Similarly, by adding handwritten serializer to the POJO word count example could reduce the runtime from 9.5s to 8s on a 100mb input file. Note that, these benchmarks did not measure the potential speedups from the rework of the tuple serializer and the comparators.",
                    "projectCode": "https://github.com/Xazax-hun/flink/commits/serializer_codegen?author=Xazax-hun"
                },
                {
                    "title": "Add MongoDB to Tajo Storage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5515426813444096/",
                    "content": "Apache Tajo currently embeds HDFS, S3, Openstack, HBase, RDBMS storage plugins, so users can connect those data sources to Apache Tajo. The project is to add a MongoDB storage plugin to tajo-storage so users can connect MongoDB to Tajo. Implementing the new module tajo-storage-mongodb (storage plugin for MongoDB) will be the major part of the project.",
                    "projectCode": "http://janakact.blogspot.com/2016/08/gsoc-2016-add-mongodb-to-tajo-storage.html"
                },
                {
                    "title": "Add support for arbitrary CPU and RAM in the ComputeService (jclouds-482)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5984606893375488/",
                    "content": "This project will add support for arbitrary CPU and RAM in the ComputeService on JClouds. Some providers do not have the hardware profiles concept and in the current implementation of ComputeService use workarounds to overcome that lack and provides a fixed configuration. This project will allow the user to specify CPU and RAM.",
                    "projectCode": "https://gist.github.com/ivanlomba/4f4eee3a46e13f90c2ce71b2929a2250"
                },
                {
                    "title": "Add the ability to sync events from CalDAV to Apache OpenMeetings Calendar",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5864271036547072/",
                    "content": "The project will add the ability to sync events from OpenMeetings Calendar and iCal/CalDAV Protocol. OpenMeetings is a Web-Conferencing and collaboration software which already has a Calendar, but it does not integrate with CalDAV yet. This project aims to include the ability to use the CalDAV as a front-end feature by any user or organization to allow bidirectional access to the calendar server.This task will make use of the CalDAV4j, iCal, and jackrabbit-webdav libraries to implement the CalDAV client for OpenMeetings.This will be done in 3 stages:CalDAV implementation to the calendar would be one major upgrade to the current OpenMeetings Calendar, which at the moment uses a local database on the OpenMeetings Server to store the calendar data, allowing groups more flexibility in setting and viewing their respective schedules.",
                    "projectCode": "https://cwiki.apache.org/confluence/display/OPENMEETINGS/[GSoC+2016]+Add+syncing+from+CalDAV+to+Apache+OpenMeetings+Calendar"
                },
                {
                    "title": "Adding PaaS support to Brooklyn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5559741749133312/",
                    "content": "The Apache open-source-project Brooklyn is a multi- cloud application management platform. Brooklyn can manage the provisioning and deployment of cloud applications, can monitor applications’ health and metrics, and handle the dependencies between components. It enables cross-computing features through a unified API built over jClouds to manage IaaS services offered by various providers. The tool offers a REST API and a GUI that enables a single-click deployment of applications across multiple machines, locations and clouds.As it was aforementioned, Brooklyn provides an API for the management of IaaS cloud services and ssh resources for a great number of providers and establishes a lifecycle for the management of services and applications. This project propose to extend this API with facilities for the management of PaaS offerings such as Google App Engine, AWS services, Heroku, CloudFoundry (such as Pivotal or Bluemix) , Openshift, etc., providing an homogeneous access to IaaS and PaaS services. Moreover, it opens up some interesting proposal such as adding new technologies support, e.g., Python, PHP and adding new management policies in order to take advantage of PaaS features.",
                    "projectCode": "https://mail-archives.apache.org/mod_mbox/brooklyn-dev/201608.mbox/%3C5472759B-2FB5-4B49-ADF9-3A45DB645CD9%40lcc.uma.es%3E"
                },
                {
                    "title": "Apache Cassandra: Make streaming operations resumable",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5429448547500032/",
                    "content": "Apache Cassandra provides different operations which involves streaming within different nodes and data centers like bootstrap, rebuild, decommission and so on. These operation are not resumable, in case of failure we have to transfer again all data. \nSuppose in a hypothetical scenario that one user performs a operation which may take one day to be completed, if some error occurred,  he will need to restart all the process which means a waste that could be saved if such operation is resumable. Therefore in this project we aims to implement rebuild operations resumable. If time allows, we will also try to make other operation resumable.",
                    "projectCode": "https://gist.github.com/kdmu/55b14b7b4e1b8749fa9194bc5fa7da8c"
                },
                {
                    "title": "Apache CouchDB datastore implementation for Apache GORA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4520211218694144/",
                    "content": "Apache Gora open source framework provides an in-memory data model and persistence for big data. Gora supports persisting to column stores, key value stores, document stores and RDBMSs, and analyzing the data with extensive Apache Hadoop MapReduce support. \nApache CouchDB is a document-oriented NoSQL database that uses JSON to store data, JavaScript as its query language using MapReduce, and HTTP for an API.It could be nice to support CouchDB as a datastore at Gora.",
                    "projectCode": "https://cwiki.apache.org/confluence/display/GORA/Apache+CouchDB+Datastore+Implementation+%28GORA-437%29+Reports"
                },
                {
                    "title": "Apache Hama benchmark against Spark and Flink",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6604885264957440/",
                    "content": "Distributed system performance benchmarks are an important source of information for decision makers who must choose the right technology for their next compute or data intensive problems. Since, important decisions rely on trustworthy experimental data, so a benchmark of Apache Hama with other available systems might prove to get additional attention by big data community. After working on Hama last year, I know its capabilities and where it stands in comparison to other in-memory distributed systems. Yet lack of experimental results makes it hard to convince data engineers to move to Hama. So for this year's GSoC, I am planning to do a performance benchmark against Apache Spark and Flink. In addition to this, I will contribute to multiple Jira tickets that are in open or pending status for quite some time.",
                    "projectCode": "https://github.com/bsikander/GSoC-16"
                },
                {
                    "title": "Apache Spark: Build monitoring UI and related infrastructure for Spark SQL and structured streaming",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5923875250503680/",
                    "content": "As more efforts have been made to Spark SQL, there are more demands on providing more information and metrics through Spark UI in an effective way. Specifically, users and developers want to (1) browse information for every individual Spark SQL sessions, (2) get continuous updates from jobs created by structured streaming, and (3) have an easy and intuitive way to debug runtime issues. In this work, we aim to make efforts to response the above three demands by adding features, improvements, and related infrastructures to Spark UI for Spark SQL and structured streaming.",
                    "projectCode": "https://github.com/apache/spark/pulls?q=author%3Anblintao"
                },
                {
                    "title": "Apache SYNCOPE-809",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5478022748569600/",
                    "content": "The SYNCOPE-809 feature request points out the lack of a plugin for IDEs to allow users to create and edit mail templates and report stylesheets in the IDE itself instead of doing so using their dashboard. The feature request also provides a sample layout for the plugin where the mail and report templates are listed in a tree layout and made available for the user to view, edit and create new ones. The aim of this project will be to build a plugin that will solve the aforementioned problem and host it on the server so that end users can easily access and install the plugin on their own installation of eclipse and deployment of syncope.",
                    "projectCode": "http://blog.tusharmishra.in/?p=197"
                },
                {
                    "title": "Apache VXQuery - Fully integrate Lucene Indexing into VXQuery",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4595108200579072/",
                    "content": "The wide use of XML for document management and data exchange has created the need to query large repositories of XML data. Apache VXQuery is implemented to efficiently query such large data collections and take advantage of parallelism. The system builds upon two other open-source frameworks -- Hyracks, a parallel execution engine, and Algebricks, a language agnostic compiler toolbox. Apache VXQuery extends these two frameworks and provides an implementation of the XQuery specifics.\nThe main idea of the project is to integrate Lucene indexing to the VXQuery system. It already has some capabilities of Lucene such as,  Create a Lucene index from an XML file and execute a query by using that index. This project is to fully integrate the Lucene and extend the indexing capabilities of the system. Such as, enabling queries to dynamically select to use indexing at run time,  extend indexing for HDFS folders, allow updates to collection indexes (when Adding/Deleting/Modifying XML files).",
                    "projectCode": "http://mail-archives.apache.org/mod_mbox/vxquery-dev/201608.mbox/%3CCAOg5xaAiEV7bScgTLsYJAiGfQmxd1Ct8En9bXPiQfdaOuMxTRQ%40mail.gmail.com%3E"
                },
                {
                    "title": "Apache Zeppelin Notebooks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6266081870086144/",
                    "content": "Apache Zeppelin is becoming a popular web-based notebook for exploratory data analytics due to features like pluggable interpreters and custom GUIs using display systems. Although Zeppelin interacts with many frameworks and libraries to analyze data and show the results, it is needed to show them through showcasing notebooks. This proposal describes a plan to build at least 4 notebooks showing the best of Zeppelin. For that, I propose to use Flink and Spark, including MLlib and GraphX, for the back-end processing systems, Helium and Angular Display System for the front-end and choose public data sets to show a real and attractive application.",
                    "projectCode": "https://github.com/bustios/zeppelin-notebooks"
                },
                {
                    "title": "Derby bug Fixing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4811187468369920/",
                    "content": "Apache Derby is a Realational Database Management System that is implemented entirely in java. The Derby JIRA has collected the community's knowledge about known bugs in Derby. The main goal of this project, Derby bug fixing is to fix as many of the known open bugs as possible and contribute towards a more stable version of Apache Derby.",
                    "projectCode": "https://docs.google.com/document/d/1f8IiMjrzQbCYd4oa1Tl7DUrFBwnXUn_ER6gP1aDG2aM/edit?usp=sharing"
                },
                {
                    "title": "Fineract: Implement integration for Unified Payments Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5563761838522368/",
                    "content": "Apache Fineract is an open source system for core banking as a platform.The National Payments Corporation of India (NPCI) recently proposed an Unified Payments Interface by releasing its API and technical specification.To allow Fineract users to better integrate into India's financial landscape it is proposed that UPI be implemented as a possible connector to the Fineract platform. The solution is twofold:",
                    "projectCode": "https://github.com/meta-coder/incubator-fineract/commits/upi-sdk?author=meta-coder"
                },
                {
                    "title": "Implementing a Python Utility Library for accessing PO.DAAC NASA JPL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6191933286252544/",
                    "content": "Physical Oceanography Distributed Active Archive Center(PO.DAAC) at NASA Jet Propulsion Laboratory has a web API enabling efficient machine-to-machine communication and data transfers. This project is aimed at implementing a python API to interact with PO.DAAC and access the data by interacting with the RESTful web services provided by PO.DAAC’s API, which thereafter will be integrated with the Apache Open Climate Workbench. The Apache Open Climate Workbench(OCW) project has already got support for using RCMES and local datasets for data analysis and plotting. With ESGF data source support on its way this project will be a new milestone for OCW for Climate Model Evaluation.",
                    "projectCode": "https://cwiki.apache.org/confluence/display/CLIMATE/Create+data+source+input+for+NASA+JPL+PO.DAAC"
                },
                {
                    "title": "Improving Discussion Threads and UI/UX of Apache Allura",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6641326720286720/",
                    "content": "",
                    "projectCode": "https://allura.apache.org/posts/2016-gsoc-16.html"
                },
                {
                    "title": "In-Situ Simulation Management and Analysis Using Apache Airavata",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4904644882989056/",
                    "content": "The goal of this project is to extend Apache Airavata to allow in-situ data reporting and analysis for Molecular Dynamics (MD) workflows. The resulting gateway will allow users to create custom event listeners that monitor all simulations and report when a user-defined condition is encountered. It will also allow users to stream partial results and computational resource usage over time. As a proof of concept, the extensions created in this project will be tested using MD trajectory data collected from simulations of a small molecule and standard MD analysis techniques. While this project will be tested using a MD workflow, the result will be extensible to other scientific and big data workflows.",
                    "projectCode": "https://gist.github.com/jeffkinnison/49252125d0475ca19390abfa41d615ad"
                },
                {
                    "title": "JCache DataStore Implementation for Apache Gora",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4849721646514176/",
                    "content": "JCache DataStore implementation for Apache Gora using Hazelcast JCache provider.",
                    "projectCode": "https://github.com/apache/gora/commits/master?author=djkevincr"
                },
                {
                    "title": "JSONiq Support to Apache VXQUERY",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5813866374103040/",
                    "content": "The Apache VXQUERY processor is responsible for parsing and querying large amounts of XML documents. The XML format is currently used in a variety of ways such as representation (HTML), enabling data exchange between services (SOAP, REST), etc. An alternative to XML is the JSON format which is widely considered significantly more lightweight. Thus, the goal of this project is to add support for parsing and querying JSON data based on the JSONiq language specification to the VXQUERY project. Specifically, we want to add arrays, which is one of JSON items in the VXQUERY data model.",
                    "projectCode": "http://mail-archives.apache.org/mod_mbox/vxquery-dev/201608.mbox/%3Ce4ac9280-cf23-3bcf-e491-2fff68671d2a%40ucr.edu%3E"
                },
                {
                    "title": "Mapping between the GeoTIFF metadata to ISO 19115",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6447441695997952/",
                    "content": "The goal of this project is to improve the Apache SIS coverage module in order to meet the needs of space agencies. Particularly, this includes translate the formats GeoTIFF metadata to ISO 19115  , and creating a simple applycation web prototype (VNSC)  to ensure the module is on the right track",
                    "projectCode": "http://haonguyen123.blogspot.com/2016/08/mapping-between-geotiff-metadata-to-iso-19115.html"
                },
                {
                    "title": "Notebooks for Weather Data Analytics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6665478663569408/",
                    "content": "My primary goal with this project is to build a notebook­ front ends so users can interact with weather data. As an initial goal, I will work with Apache Airavata community to build a data pipeline to perform Extract-­Transform-­Load (ETL). I was inspired by the ZEPPELIN-684 idea but eventually got drifted into a concrete suggestion from Apache Airavata.",
                    "projectCode": "https://github.com/apache/airavata-sandbox/tree/master/Interacting_with_Airavata_using_ipython_Notebook"
                },
                {
                    "title": "Nuxeo repository and Authority connector for Apache ManifoldCF",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5250916420681728/",
                    "content": "Nowadays, there are many containers of information, each one is specialized in a different approach, such as Nuxeo. This makes many companies have their information distributed in multiple repositories, making it difficult to relate all off it and this causes that may have redundant information.Manifold native connector that support Nuxeo, will allow many companies to use this powerful framework to connect Nuxeo with others repositories and centralize their information, as I have been looking at the mailing list and CMIS connector there is problematic for some cases and certain tasks, so a native connector would be better.",
                    "projectCode": "https://github.com/davarresc/nuxeo-manifold-connector"
                },
                {
                    "title": "OPENNLP-840 - Sentiment Analysis Project Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6317132388237312/",
                    "content": "My proposal involves developing an ideal model for sentiment analysis for OpenNLP by starting with a simple model and advancing to the desired advanced model applicable in many situations. I will be using Twitter data for my tests, and my final outcome will include the final developed advanced model specified in the article and documentation describing how it was created, how it works, how efficient and accurate it is, as well as tutorial on how to learn it. I have already started working on some parts of the project.",
                    "projectCode": "http://irds.usc.edu/SentimentAnalysisParser/blog.html"
                },
                {
                    "title": "Port core OS and a subset of the utilities to a new 32-bit microcontroller",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5683813690638336/",
                    "content": "Apache Mynewt OS is a rapidly developing operating system specially designed for 32-bit microcontrollers. With the development of IoT, embedded system will play a critical role. Power, memory, storage, efficiency will play some crucial role there. Currently Mynewt OS supports  ST Micro’s STM32 (BSTM32F3DISCOVERY board), Nordic nRF52 (nRF52 Development Kit), Atmel's SAMD21(Arduino Zero board). In all above MCUs are based on ARM architecture.\nIn my approach, after discussing with the community we have decided to create a port for PIC32MX270F256D MCU (PIC32 Bluetooth Starter Kit).",
                    "projectCode": "https://gist.github.com/SanjeewaUoM/93e80f116e6fc878b31d771ecc2104d8"
                },
                {
                    "title": "Predicting Criminal Moments with Hidden Markov Models",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6146525818257408/",
                    "content": "We aim to construct a probabilistic model which explains a hypothetical\ncriminal's behavior based on that criminal's actions. We will be given the\ncriminal's motions and the crimes they have committed, and from this, we will try\nto find a probabilistic model that explains their behavior. We are planning to\nconstruct a Hidden Markov Model, which is a probabilistic system describing the\ntransitions between the criminal's actions.Treating the criminal's decisions about what locations to go to, and which\ncrimes to commit, as the result of a Markov process, we can use statistical\nmethods to reconstruct a model that predicts their behavior. For this project\nwill use a simulated criminal whose actions are generated by an agent-based\nmodel (resulting from a previous GSoC project). We should be able to create a\nmodel that is nearly equivalent to the original program. With the reconstructed\nmodel, the program should be able to make predictions about the criminal's\nfuture actions.",
                    "projectCode": "https://github.com/kebertx/crimgeoprofile"
                },
                {
                    "title": "Proposal for Apache Open Meetings: OPENMEETINGS-1353",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4660948707049472/",
                    "content": "My goal is to bring webRTC to Apache Open Meetings. These include adding features for\nSCTP protocol for signaling and change scheme for sharing video from central server to\np2p.\nhttps://issues.apache.org/jira/browse/OPENMEETINGS-1353\nhttps://issues.apache.org/jira/browse/OPENMEETINGS-1178",
                    "projectCode": "https://cwiki.apache.org/confluence/display/OPENMEETINGS/%5BGSOC+2016%5D+webrtc+implementation"
                },
                {
                    "title": "Proposal for the Apache REEF project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5207595501486080/",
                    "content": "Hi, I'm Won Wook Song, currently a final year BS student in Seoul National University in Republic of Korea. I'm interested in working on the Apache REEF project for the GSoC 2016 program for the summer.The reason why I chose this project is because I believe that technology will be able to make people’s lives better and make this globe a better place, and I believe that Big Data technologies will be able to fulfill these goals. With gigantic tides of data today, it is extremely important to process, analyze, and filter these data to make it meaningful. Apache REEF project is a project that contributes to this purpose, and I have found this opportunity to start contributing to fulfill my interests and goals.I have left comments on a few issues that I have found interesting and I have included more detail on the draft that I have attached to this application. I am highly motivated and enthusiastic about working on this project, and I hope that I could spend my summer building up experience and knowledge through this program.",
                    "projectCode": "https://github.com/apache/reef/commits?author=wonook"
                },
                {
                    "title": "Running Docker from Apache Taverna",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6625717198520320/",
                    "content": "Taverna is a comprehensive workflow engine which has several ways of creating work flows and there are multiple layers/interfaces exposed to interact with the workflows, such as desktop workbench, command line tool, web interactions through a dedicated Taverna server which expose REST/SOAP interfaces.When creating workflows, there can be various use cases to talk to external environments/systems and execute/pull information from them. OSGi based Taverna core platform provides plugins architecture to install custom plugins in ad hoc manner. This project is basically about creating a new Taverna activity plugin for Docker.  With this feature, Taverna users will be able to invoke/run docker images inside their workflows.",
                    "projectCode": "https://github.com/apache/incubator-taverna-common-activities/commits/docker?author=NadeeshDilanga"
                },
                {
                    "title": "Security Layer for NutchServer (NUTCH-1756)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6555348454342656/",
                    "content": "Apache Nutch is a highly extensible and scalable open source web crawler software project. Stemming from Apache Lucene, the project has diversified and now comprises two codebases, namely: \nNutch 1.x and Nutch 2.x. \nThis proposal aims to develop a security layer for Nutch 2.x",
                    "projectCode": "https://wiki.apache.org/nutch/GoogleSummerOfCode/SecurityLayer"
                },
                {
                    "title": "Smoke Tests and Continuous Integration Infrastructure for Apache Open Climate Workbench",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6547556846796800/",
                    "content": "The Open Climate Workbench (OCW) project has basic unit test coverage in the form of a test suite written using the nose framework. In order to improve test coverage, functionality and quality of tests the test framework should be updated. OCW would greatly benefit from a continuous integration (CI) infrastructure and automated test environment with a focus on large scale integration testing of climate model analysis. The current testing  makes the process of new code integration tedious and manual with potential regressions going unnoticed, this can lead to bugs and backwards incompatibility. This GSoC project proposes to build an improved test framework (smoke tests and unit tests) and set up continuous integration tools.",
                    "projectCode": "https://github.com/apache/climate/commits/master?author=jarifibrahim"
                },
                {
                    "title": "TAVERNA-880 Browse+use CWL tool descriptions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5397810476220416/",
                    "content": "The Taverna suite is consist of Taverna Engine, which handles both Taverna Workbench and\nthe Taverna Server. Taverna Server is used to execute remote workflows and workbench\nprovides GUI for create, run, import workflows.​This concept allow scientists who has limited\nknowledge in computing, limited technical resources to do complex process on Data. Also\nTaverna engine can be run on standard Windows, Linux or Mac OS.\nAt the moment Taverna workflows are constructed using SCULF2 API. So, Tavera Engine can’t\nexecute other workflows other than Taverna workflows. This is where CWL comes in ,The\nCommon Workflow Language (CWL)​. ​CWL allows one description of a workflow to be run on\nmultiple different platforms as long as they all support CWL. \" CWL builds on technologies such\nas JSON­LD and Avro for data modeling and Docker for portable runtime environments \".\nThe project mission is to bring CWL UI support in the Workbench which\nis a graphical way to build workflows and one of the steps in Add Common Workflow Language\nsupport to Taverna.",
                    "projectCode": "http://maanadevgsoc2016.blogspot.com/2016/08/final-evaluation.html"
                },
                {
                    "title": "VXQUERY-178: Support JSONiq - add objects to the data model",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5950762551083008/",
                    "content": "Apache VXQuery will be a standard compliant Xquery processor implemented in java. JSONiq is a query and processing language specifically designed for the popular JSON data model. It is much similar to XQuery burrowing a large numbers of ideas from XQuery. The \"JSONiq extension to XQuery\" allows processing XML and JSON natively and with a single language. This project aims at adding objects to the data model of VXquery allowing it to query JSON objects.",
                    "projectCode": "http://mail-archives.apache.org/mod_mbox/vxquery-dev/201608.mbox/%3CCAMOqS%2BjR6zvZ59xSeBa-KmBmKDRQtRuh2e2wPSD%2Bw8G_ttXopg%40mail.gmail.com%3E"
                },
                {
                    "title": "White Box and Regression Testing of the Mynewt OS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6741911901569024/",
                    "content": "This Project is based on testing.\nThe aim of this project is to have a white box and regression test carried out on the mynewt os.\nThis is very important for the operating system especially at this time of the development stage where there have been a rapid growth in the development of the OS.\nIf given the opportunity to execute this project, I am going to make sure the project sees completion within the time bound of the Summer of Code program.\nAlso I make sure I give it the to have a qualitative and a quantitative output",
                    "projectCode": "https://gist.github.com/NgesBrian/3e4521c0228f6c635e7b69318f38dccb"
                },
                {
                    "title": "Zeppelin Notebook Storage using P2P protocol",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4708984158158848/",
                    "content": "Zeppelin has implementations for storing notebook in local filesystem, local Git repository, S3 and Azure. The idea of this project is to add storage using P2P protocols like IPFS, dat , Zeronet or Bittorrent. Hence supporting versioning and allowing users to share their notebooks easily.",
                    "projectCode": "https://onkarshedge.github.io/gsoc2016/"
                },
                {
                    "title": "Zeppelin Notebooks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6203504733454336/",
                    "content": "The proposal outlines the work done in investigating about the project and the approach that will be taken to accomplish the goals laid down by the Zeppelin community. The proposal was prepared after researching about emerging data sets and the ways in which they could be analyzed to showcase the capabilities of Zeppelin with the added advantage of using a pluggable tool called Helium to provide custom visualizations and enhancements to the analysis of data in notebooks.",
                    "projectCode": "https://github.com/anish18sun/Zeppelin-Notebooks"
                }
            ],
            "techStack": [
                "java",
                "ruby",
                "python",
                "javascript",
                "couchdb"
            ]
        },
        {
            "title": "ArchC",
            "orgLink": "http://www.archc.org",
            "projects": [
                {
                    "title": "Booting the eCos RTOS on the ArchC Simulator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5750684989259776/",
                    "content": "This project is aimed at porting a (cut down version priority) operating system on a simulator to understand the actual  performances when implemented on hardware platforms. Functional simulators like ArchC are otherwise ISA dependent that does not give the whole picture needed for the benchmark performance on the actual hardware.  This will benefit as direct performance details onto the scheduler and the benchmark programs running on the OS can be extracted from the simulation.",
                    "projectCode": "https://github.com/ArchC/ecos-mips-platform"
                },
                {
                    "title": "Developing RV32G Processor Model",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6674291399589888/",
                    "content": "MPSoCBench developed by the ArchC team currently provides four ISA simulators namely ARM, PowerPC, MIPS and SPARC processor models. The ultimate goal of this project is to make the existing MPSoCBench platform more powerful by adding a new processor model based on the open-source RISC-V architecture. By the end of the project one will have a fully functioning RV32IMAFD (also known as RV32G) processor model which will be directly executable on the ArchC simulator. Also, the model will contain files that will allow it to be used with the MPSoCBench platform.",
                    "projectCode": "http://pavanitripathi.blogspot.in/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "archc"
            ]
        },
        {
            "title": "ASCEND",
            "orgLink": "http://ascend4.org/",
            "projects": [
                {
                    "title": "Adding Incompressible Fluids EOS to FPROPS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5077604826611712/",
                    "content": "A wide range of research and engineering applications involve computing the thermodynamic properties of substances that are in the incompressible regime. I propose to append a model for incompressible fluids to the existing models in FPROPS. The simplifications in the formulation of incompressible EOS can significantly increase the performance of the computations compared to those with the general Helmholtz based EOS.",
                    "projectCode": "http://ascend4.org/User:Vishnu"
                },
                {
                    "title": "Improvements to the Conditional Modeling Syntax",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5433202885787648/",
                    "content": "ASCEND provides support for Conditional modeling, where a model can contain both variant and invariant equations. Invariant equations must be respected by the model at all times while the variant equations only are included in the model if certain conditions are met. For example, a model for fluid flow will have different sets of equations depending on the phase of the flow (laminar, turbulent or sonic flow).  Unfortunately, the current syntax for conditional modeling has been considered unintuitive by some of its users and there is demand for a better alternative.In this project, my goal is to precisely identify why the current syntax is considered unintuitive and use this information to design and implement a better alternative. The identification would be based on a review of code examples using the current conditional model syntax and the implementations would be made by modifying the existing Bison-based compiler.",
                    "projectCode": "http://ascend4.org/User:Hugo"
                },
                {
                    "title": "Improving GUI and functions of Graphical flowsheet editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4624785082417152/",
                    "content": "The project is to improve ASCEND canvas GUI such that it is easier to use for public. In detail, tasks include creating usable simulation models, improving ASCEND language, adding load/save and undo/redo functions, and debugging for current ASCEND, etc.",
                    "projectCode": "http://ascend4.org/User:Mike"
                }
            ],
            "techStack": [
                "python",
                "c",
                "c/c++"
            ]
        },
        {
            "title": "BeagleBoard.org",
            "orgLink": "http://beagleboard.org",
            "projects": [
                {
                    "title": "API support for Beaglebone Blue",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6295262146330624/",
                    "content": "The aim of the project is to create easy-to-use APIs for the hardware on the BB Blue. This would consist of developing/improving kernel drivers for the on-board devices and then re-implementing the Strawson APIs to use these kernel drivers. These APIs will then be used by real-time applications which can be run on BB Blue. In the later phase of the project, support for BB Blue will be added in Ardupilot and ROS will be ported to BB Blue using these APIs.",
                    "projectCode": "https://github.com/kiran4399/bb_blue_api/blob/master/Readme.md"
                },
                {
                    "title": "BeagleBoard GSoC'16: Improving Bone101 Experience",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4505918104403968/",
                    "content": "This idea is aimed to improve the experience of Bone101 to make the most use of it to be friendly to novice developers, allowing them to work with BBUI inside tutorials, write python code beside Javascript, and discover new experience of Bone101 in Cloud9 IDE.",
                    "projectCode": "https://github.com/amragaey/bone101/wiki/BeagleBoard-GSoC'16:-Improving-Bone101-Experience"
                },
                {
                    "title": "BeagleScope",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4885400476712960/",
                    "content": "Many applications require mechanisms for high speed, real time and continuous data acquisition from a sensor that is essentially an ADC. Most hobbyists would want to use simple devices, rather than high end converters with differential serial interfaces to communicate as these high end devices can be expensive. The typical serial data communication protocols used for this are somewhat limited in terms of speed, while parallel data communication definitely has an advantage of higher speed data transfers.This GSoC project aims to utilize the two PRUs present in the PRUSS2 subsystem and their low latency architecture to get a fast, generic, parallel analog converter interface, in the form of parallel bus, ready for various applications. The project will provide a ready to use firmware, user-space library, kernel driver, and the subsystem to manage all the parallel data transactions. This will further allow developers to build some cool applications like function generators, oscilloscopes, voltmeter etc.",
                    "projectCode": "https://github.com/ZeekHuge/BeagleScope/wiki"
                },
                {
                    "title": "Exposing The PRU as an I2C,SPI,UART device",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5936772366204928/",
                    "content": "Bitbanging  an SPI  or/an I2C device in Linux leads to a lot of problems.It consumes a lot of valuable CPU cycles.And since Linux is an non-preemptive OS(And not an RTOS),once we start bitbanging,other important tasks that require CPU time would suffer.Thus,there are a lot of software overheads in doing the same.\nTo avoid this on the BBB,we could offload the task of bitbanging I2C,SPI,UART, to the PRU.The PRU is a separate core and,hence,not affected by the Linux Scheduler. Hence the motivation for exposing the PRU as an I2C,SPI,UART device comes from the fact that they would be no software overheads in doing it and hence,we would gain extra serial interfaces without wasting valuable CPU cycles in bitabanging.This project involves writing Device Tree Overlays,Device Drivers and PRU firmware code for Bitbanging I2C,SPI and UART.",
                    "projectCode": "https://github.com/chanakya-vc/PRU-I2C_SPI_master/wiki"
                },
                {
                    "title": "Porting the CTAG face2|4 multichannel soundcard drivers to BeagleBoard-X15 (AM5728 SoC). Create library to make use of AM5728 DSPs (C66x).",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5351212496977920/",
                    "content": "The CTAG face2|4 Audio Card is a multichannel I2S soundcard based on the AD1938 audio codec by Analog Devices. Currently the soundcard can only be used with a BeagleBone Green/Black. Due to CPU intensive calculations in digital audio the BeagleBoard-X15 seems to be a perfect alternative to realize  more complex audio effects and synthesizers and achieve lower latencies. Moreover the BeagleBone-X15 (TI AM5728 SoC) offers two separate DSPs (C66x) which can be used to offload cpu-intensive multimedia tasks in asymmetric multiproccesing (AMP) configurations. The goal of the project is to port the soundcard drivers to the BeagleBoard-X15 and create an user-space library to make use of C66x DSPs via TI OpenCL and TI DSPLIB.",
                    "projectCode": "https://github.com/henrix/libdsp-x15/wiki"
                },
                {
                    "title": "SPI slave driver implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6567958478323712/",
                    "content": "SPI slave driver implementation. The task is to create a driver controlling SPI hardware controller in slave mode, and to ensure optimal performance through the use of DMA and interrupt. Creating an easy to implement realization of SPI slave would definitely help the BeagleBone community members to write applications based on SPI much more easily. The first implementation of my protocol driver is going to example of a bidirectional data exchange. This application will provide the BeagleBone community with valuable experience and will be a good example of SPI slave.\nHardware limitations make it impossible to perform any realization of the device using SPI slave. Sending away data to the master during one transaction is not possible. One transaction is enough to receive data by slave device. To receive and send back data, two transactions are needed. The data received from master device in a single transaction is transferred to the user after completing the transaction. The user's reply to received data is sent in the next transaction.",
                    "projectCode": "https://github.com/pmezydlo/SPI_slave_driver_implementation/wiki"
                }
            ],
            "techStack": [
                "beaglebone",
                "javascript",
                "python",
                "linux",
                "c"
            ]
        },
        {
            "title": "Beam Community",
            "orgLink": "http://beamcommunity.github.io",
            "projects": [
                {
                    "title": "Distributed Intermediate Tree Elimination in Lasp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5343745964769280/",
                    "content": "Lasp computations are formed using a small subset of a functional language. In functional languages, it is very common to see intermediate lists—and, more generally, intermediate trees—serve as glue between functions. If these intermediate structures, however, are not used by any other part of the program, replicating them in the underlying network that supports the Lasp language exacts a non-negligible cost at run-time.This project aims to enable Lasp to generate efficient reductions of these intermediate trees into a single value that represents the combination of multiple functions.",
                    "projectCode": "https://ergl.github.io/gsoc2016.html"
                },
                {
                    "title": "Implement an elixir backend for indexing and extending the database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6734232231608320/",
                    "content": "Barrel is a distributed database built on top of Erlang and CouchDB. There are provisions in Barrel to extend the database with user defined modules and hooking them to database events like database creation, deletion, updates etc. Barrel now uses Hooks to let modules subscribe to the events and register a callable that can return and modify results.Secondary indexes can also be created using functions that accept a Doc and return a Key/Value tuple.Right now there is provision only for functions written in Erlang or Javscript.The aim of the proposal is to add Elixir to the list of languages supported by Erlang.  This would allow more developers to extend barrel and also brings a whole bunch of libraries and support from the Elixir ecosystem.",
                    "projectCode": "https://github.com/sivsushruth/gsoc/wiki/GSoC-report-for--Barrel-BEAM-Community"
                },
                {
                    "title": "Implementation of Real-time Statistics in Zotonic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5266916516036608/",
                    "content": "Implement a module which will help give insight into the traffic of a Zotonic server/site through visualization of the stats in real-time. The system already knows a lot about the visitors (user-agent, referrer, ip-address etc) and it would be nice to leverage this into a real-time display per site or aggregated over the whole server. Including historical views for later analysis.",
                    "projectCode": "https://github.com/tahteche/zotonic/commits/mod_admin_statistics?author=tahteche"
                },
                {
                    "title": "Implementing op-based CRDTs in Lasp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6443343760326656/",
                    "content": "Conflict-free Replicated Data Types (CRDTs) make the design of eventually consistent systems non ad-hoc and anomaly-free by formalizing the reconciliation mechanism of diverging replicas. Pure operation-based (aka op-based) CRDTs are variants of CRDTs that are generic and more efficient as they allow for compact solutions in both the sent messages and the state size. On the other hand, Lasp is a new programming model designed to simplify large scale, fault-tolerant, distributed programming using state-based CRDTs. It would be very interesting to implement the operation-based approach in Lasp and compare it with the currently implemented state-based approach.",
                    "projectCode": "https://gist.github.com/gyounes/de1709f254e84812713079d34786afc8"
                },
                {
                    "title": "Improve ejabberd configuration and extensibility with configuration DSL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6013787169619968/",
                    "content": "This project aims to improve the ejabberd configuration, extensions and plugins writing using the Elixir programming language and its DSL capabilities. The project is relative to the #4 idea proposed by the ejabberd community.",
                    "projectCode": "https://gist.github.com/gabrielgatu/7aae9fa01f6640946324e33aad2e609c"
                },
                {
                    "title": "Privileged Entity Support to Write Powerful External Components for ejabberd",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6611252822409216/",
                    "content": "Writing XMPP components is a good way to enhance the functionality of XMPP servers like ejabberd.  Jabber Component Protocol (XEP-0114) is used today for this goal. However, this protocol is quite limited. The goal of this project is to implement XEP-0356 Privileged entity and XEP-0355 Namespace delegation server extensions to XMPP that will allow to run more powerful component on ejabberd. Implementation of these extensions can help to extend ejabberd functionality with existing powerful components like Collecta or SàT and give an impulse to create new services.",
                    "projectCode": "https://gist.github.com/Amuhar/e319ba56ba52bf62f1f5ad29b03c7b74"
                }
            ],
            "techStack": [
                "erlang",
                "elixir",
                "xmpp",
                "beam",
                "mqtt"
            ]
        },
        {
            "title": "Berkman Center for Internet and Society",
            "orgLink": "http://cyber.law.harvard.edu/",
            "projects": [
                {
                    "title": "Admin Panel Customization in Book-a-Nook",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4917822647959552/",
                    "content": "Book-a-Nook is an online platform where a user can look up for available community  spaces like libraries and make reservation requests to the admin. The admin checks for the conflicts and sends the corresponding confirmations. This project aims to ease the process of confirming such requests. Another major aim is to allow admin to gain useful insights on such demands through graph visualizations and report generation. The project will also aid in notifying a requestor of his/her requests’ status and favoriting locations as well as nooks.",
                    "projectCode": "http://shubhpatel108.github.io/gsoc/final-submission.pdf"
                },
                {
                    "title": "Data-Agnostic Visualization Widgets [Internet Monitor Dashboard]",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5754182434816000/",
                    "content": "At this stage, the data visualization widgets available in the Internet Monitor Dashboard are all pre-tailored, with the front and back-end closely integrated (a custom UI for every data source), which makes it harder to scale up to new data sources.The goal of this project is to make visualization data-agnostic, in the sense that the backend is separated as much as possible from the front end, allowing for re-use of visualization code, easier scaling up, and giving the user more visualization options for both existing and new data sources.In my proposed solution, this is done through new, visualization-only/client-side meteor packages that are then integrated with new and existing widget-type packages.",
                    "projectCode": "http://gsoc16.maarouf.me/"
                },
                {
                    "title": "Dotplot Project Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5301321083125760/",
                    "content": "DotPlot is a web platform which enables users with little or no programming skills create data visualisations. The platform utilises D3.js JavaScript library wrapped in an easy to use interface.",
                    "projectCode": "https://github.com/berkmancenter/dotplot/commits/master?author=chaitanyya"
                },
                {
                    "title": "Improvements for Question Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6387501132414976/",
                    "content": "The objective of this proposal is to improve the existing user interface and optimise page speed of the Question Tool. The proposed layout improves user interaction and provides visibility of maximum questions at a glance. Moreover, the proposed update layout also reduces sudden changes to the interface such as flashes and ensures smooth injection of new questions to the existing page. Besides, the optimisation of JavaScripts and CSS files (i.e. static assets) helps the web page to be loaded relatively faster than the unoptimized version. And to achieve the desired output, Mockups, JavaScript, CSS and HTML will be used.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1Si8jq2DyMa7KShIoJozZMgW1UM_PhW_IWqeVxV7Sfbg/edit?usp=sharing"
                },
                {
                    "title": "IPFS friendly & distributed version of Amber",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5870562895200256/",
                    "content": "The main aim of this project is to come up with distributed and resilient version of Amber, which can help it in achieving the real vision of 404/broken-link free internet. The project can be divided into two different parts which involves IPFS integration, and distributed Amber design and implementation.IPFS is the new P2P hypermedia protocol made to achieve “The permanent web” by Protocol Labs. It can be seen as a single BitTorrent swarm, exchanging objects within one Git repository. It will be added into Amber’s backend options using official PHP IPFS API implementation.This section of project deals with distributed version of Amber which enable Amber nodes to communicate and share cached contents with each other (P2P cache sharing). The proposed design can be briefly divided as:Technologies:\nPython, PHP, Networking concepts, Basic cryptography",
                    "projectCode": "https://docs.google.com/document/d/1RdgpdrKaw9U2oLZum2F5Vex8JUCWXwdTSfc61yjRYgk/edit?usp=sharing"
                },
                {
                    "title": "LibraryBox iOS App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5631818011246592/",
                    "content": "An iOS app for LibraryBox written in Swift.  The app sends Notifications and WatchKit Complications on proximity to a LibraryBox based on iBeacon ranging. Main focus is set on ease of use and user experience.",
                    "projectCode": "https://soleil-alpin.com/gsoc2016/2016/08/workproductsubmission.html"
                },
                {
                    "title": "New Data Integration Platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5650665401483264/",
                    "content": "Implement a new Data Integration Platform that will allow for more data sources and a scalable ETL process. This will allow the Dashboard Widgets and Data Platform to utilize thousands of more historical data and provide a more dynamic view of \"Internet Health\"",
                    "projectCode": "http://dphuang2.github.io/streamsets_scripts/"
                },
                {
                    "title": "New onboarding experience to enhance UX for Teem especially for newcomers.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6225932247367680/",
                    "content": "The goal of my proposal is to provide Teem users with a new on boarding experience which will help newcomers to easily find communities appealing to them. Since Teem, as a community driven project, puts a lot of importance on user-centered design, the process should be quick and simple. I will be implementing a contextualized search which will work on tags. The tags will automatically get detected based on the description of a Teem/Community. Apart from them mockups will be implemented to enhance the experience.",
                    "projectCode": "https://prastut.github.io/2016/08/20/GSoC/"
                },
                {
                    "title": "Project Lumen",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6323410288246784/",
                    "content": "The aim of this project is not only to build features that will speed and ease administrative tasks for the Lumen project staff, but also to build gateways to help import data from several sources for analyses. This project will also take care of upgrading the current framework to the latest version and fix any loopholes that might make room for security breaches; hence protecting confidential information. My work and contribution will be mainly based on improvement that includes, but not limited to, important upgrades of the framework, concentrating on the importer to make it faster and efficient.",
                    "projectCode": "https://gist.github.com/siaw23/394f9f5d93544d19c153b5495e870faf"
                },
                {
                    "title": "Wave Federation protocol over the Matrix Protocol",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5749069813121024/",
                    "content": "SwellRT is a full-stack framework for developing decentralized real-time collaborative apps in JavaScript/Java/Android. It is based upon Apache Wave protocol formerly known as Google Wave protocol. This protocol is implemented over an XMPP transport layer. Our project aims to change to matrix protocol which is better suited for our requirements.",
                    "projectCode": "https://github.com/Waqee/incubator-wave/blob/master/MATRIX-FEDERATION.md"
                }
            ],
            "techStack": [
                "ruby on rails",
                "javascript",
                "sql/nosql",
                "meteor.js",
                "go"
            ]
        },
        {
            "title": "BioJS",
            "orgLink": "http://biojs.net/",
            "projects": [
                {
                    "title": "Bonestagram - DICOM visualisation made fun",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6178961948147712/",
                    "content": "Bonestagram is an Augmented Reality web project that aims to encourage everyone to collect a personal copy of their medical scans. Most people today do not realise that when you undergo an MRI, CT, Xray or other medical imaging procedure, the health record belongs to you and you can ask for a copy of the result. It is a good idea to keep a personal collection of the medical scans because they are useful when you seek second opinion or when you move and visit a new clinic. Also, in the case of new injuries or emergencies, having easy access to prior scans is very helpful, and sometimes even critical.Bonestagram provides a fun, interactive visualisation on the web for medical scans. Users will be able to see their medical scans in the browser, and interact with the visualisation through the web cam.Bonestagram is Javascript-based and the components created will be submitted to the mentoring organisation BioJS as building blocks for visualisation of biological data on the web.For a preview of the development progress, please feel free to check out this video (https://www.youtube.com/watch?v=uWDkqoFHr_g).",
                    "projectCode": "https://github.com/fayeli/biojs-vis-bonestagram"
                },
                {
                    "title": "Generic protein expression view for Human Body",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6540014615789568/",
                    "content": "I am a software engineering student from China who have a wonderful front-end development experience, especially have biologically relevant projects and award-winning experience. In this proposal , our target is to develop a generic protein expression view for human body and publish it to biojs, so that biojs will benefit from this project because at the end we will have a generic expression viewer that can be re-used by others.",
                    "projectCode": "https://github.com/calipho-sib/hierarchic-heatmap-table-component/commits/master?author=linjinjin123"
                },
                {
                    "title": "Visualization of target-disease relationships in drug discovery",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5101048368726016/",
                    "content": "Purpose of this project is the creation of a data visualization component part of the BioJS BioJS. The visualization aims to create an association map among targets (proteins,protein complexes and RNA molecules) and diseases using the Open-Targets API. It is a portable \"plug-play\" web component, available be used by anyone interested to demonstrate association of similar nature.",
                    "projectCode": "http://partizanos.github.io/VizTargetDiseases/about.html"
                }
            ],
            "techStack": [
                "javascript",
                "python"
            ]
        },
        {
            "title": "Biomedical Informatics, Emory University",
            "orgLink": "http://bmi.emory.edu",
            "projects": [
                {
                    "title": "Building Survival Models from Genomic Data with Google TensorFlow",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5796901790154752/",
                    "content": "Large-scale cancer genomic research, such as TCGA project generated huge amount of high-dimensional data, yet most features are under-explored for clinical application. Previously, our mentor has developed a cox neural network model that can predict patients' survival time using TCGA genomic data with extremely high accuracy. Here we propose to explore methods that rank the importance of input genomic/clinical features for this cox model based on both prediction accuracy and biological information of these features to understand the underlying biology of cancer and translate the existing implementationin Theano library to TensorFlow with comprehensive documentation and hopefully develop a user-friendly web-server for average biologist/clinicians to use and draft a manuscript.",
                    "projectCode": "https://github.com/cooperlab/SurvivalNetTF"
                },
                {
                    "title": "De-Mystifying Medical Imaging DICOM Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6745323447779328/",
                    "content": "A lot of Medical Imaging data used and shared today is formatted using the DICOM standard. It can be collected and rendered into a Descriptive Data Structure which can be rendered into HTML through the use of POSDA, however this software is coded in Perl run on a server back-end. This makes the program not portable, slow, and dependent on the up-time of the server it is hosted on. Therefore the goal of this project is to design and release a portable, stand-alone program coded in JavaScript able to mirror what POSDA does and interpret and display DICOM IOD tables on any device with a browser as well as add new features such as new rendering parameters and make UI more usable and responsive.",
                    "projectCode": "https://github.com/vupeter/posdaJS"
                },
                {
                    "title": "Information Visualizations using Datascope",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5402338713927680/",
                    "content": "DataScope is an interactive dashboard system for doing exploratory analysis on large biomedical datasets. Currently the dashboard is splitted into two important parts. The left panel of the dashboard contains interactive filters that provide useful visualizations using the dataset and have the property that regions from these graphics can be selected triggering all the other filters and the visualizations from the right panel to get updated according with the region that has been selected previously by the user.\nThis project will involve extending Datascope to provide better features to the users like dynamically add/change visualizations and filters on runtime, implement new visualizations: Parallel Coordinates, Choropleth Maps, Chord Diagrams and Treemaps, add support for Streaming Data, add support for Vega and Vega-Lite and use Compass for recommending visualizations.",
                    "projectCode": "https://bitbucket.org/srflorea/interactive-data-exporation/commits/branch/stefan-gsoc"
                },
                {
                    "title": "Multi-resolution Analysis of Pathology Data with Convolutional Neural Networks (CNNs)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5733351038124032/",
                    "content": "The ultimate goal of this project is exploring high and low-resolution images techniques for performing high-level inferences over complete tissue medical slides, which presents a few challenging aspects regarding storage and processing.\n    The high-level inferences consist of learning patterns between summarized slides and target labels for solving a specific problem. For example, it could be interesting to calculate the abundance (by area) of regions like angiogenesis, necrosis, and infiltrating lymphocytes to infer patient-level characteristics.\n    A tissue slide can easily reach around 20GB in-memory, which turns intractable many approaches of feeding those slides entirely to a classifier. One recent method for addressing this problem is sampling regions based on low-resolution features (i.e. texture, boundaries) for extracting information about the tissue. Moreover, this method can also help with speeding up the processing, since after cropping the proposed regions, the problem would be turned into a tractable learning problem.",
                    "projectCode": "https://github.com/cooperlab/RegionProposal/commits/master?author=ennauata"
                },
                {
                    "title": "Near Duplicate Detection in Medical Image Archives Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4775297916338176/",
                    "content": "I plan to complete the project with method of classification and indexing technology on Spark as well as Hazelcast if necessary. Hope for more guidence",
                    "projectCode": "https://bitbucket.org/BMI/medicurator/commits/all"
                }
            ],
            "techStack": [
                "java",
                "medical imaging",
                "deep learning",
                "hadoop",
                "python"
            ]
        },
        {
            "title": "Blender Foundation",
            "orgLink": "http://www.blender.org",
            "projects": [
                {
                    "title": "Blender Mantaflow Integration: Single Code Fluid Solver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6446945761492992/",
                    "content": "Liquids and smoke are both fluids and share properties. It therefore makes sense to have one single fluid solver in Blender which handles all fluid simulations.In this project I plan to add liquid simulations to the existing Mantaflow (smoke) integration. More specifically, I would like to achieve the same functionality from the Elbeem code base with Mantaflow. Besides smaller Mantaflow specific features, the novel NB FLIP will be implemented as well.",
                    "projectCode": "https://wiki.blender.org/index.php/User:Sebbas/GSoC_2016"
                },
                {
                    "title": "Cycles: Texture system improvements and better user feedback",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5211918117634048/",
                    "content": "This project is about improving Cycles' texture system on CPU and GPU, by removing limitations and making it more memory efficient. Furthermore the user feedback should be improved, informing users more visible about (V)RAM usage.",
                    "projectCode": "https://wiki.blender.org/index.php/User:DingTo/GSoC_2016/User_Documentation"
                },
                {
                    "title": "Implementing a Denoising Filter in Cycles",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4588777955655680/",
                    "content": "The goal of this project is to implement an optional denoising step in Cycles, which would be executed between the actual pathtracing and the Compositor and remove remaining noise from the image, at the cost of some accuracy.In the last few years, a lot of great research regarding denoising the output of pathtracers has been published, but these algorithms rely on additional information provided by the renderer, which makes an integration in the Compositor very memory-intensive and a challenge in UI design.Because of that, this proposal is about having a denoiser right in Cycles - where all the additional information (like feature passes and variance info) is available and can be used to produce results that are far better than general image denoising, often allowing to cut render times by 75% or more.The workflow will be as simple as possible: An additional panel in the rendering properties will allow to switch denoising on and off, along with further options for advanced users to fine-control the behavior of the filter.",
                    "projectCode": "https://wiki.blender.org/index.php/User:Lukasstockner97/GSoC_2016"
                },
                {
                    "title": "Improvements for Bezier Curves",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5039885886947328/",
                    "content": "Most architectural and engineering projects nowadays involve a strong part of surface modeling. To do this kind of modeling objects like Bezier or NURBS curves are required. These provide a great amount of editing freedom. However, current limitations require these objects to be converted to meshes in order to perform tasks such as multiple material assignment. With this project I propose to improve curve editing by adding features that currently require the curve to be converted to mesh, or cannot be performed at all. I will also improve the documentation of the code related to curve editing (by editing documentation and by improving the comments on the code).",
                    "projectCode": "https://wiki.blender.org/index.php/User:Genio84/gsoc2016/reports#Final_reports"
                },
                {
                    "title": "Layer Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6406819358441472/",
                    "content": "An improved layer management system that adds industry standard features for organizing display of scene content Blender. This includes the ability to use as many layers as needed and tools for layer organization, such as naming, grouping and ordering.",
                    "projectCode": "https://wiki.blender.org/index.php/User:Julianeisel/GSoC-2016"
                },
                {
                    "title": "Multi-view Reconstruction with Witness Camera for Blender",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6588179184353280/",
                    "content": "The estimation of camera motion plays an important role in visual effects (VFX) industry, which enables the interaction between the virtual and the reality. Currently Blender only supports solving camera motion from a single view, which sometimes does not give satisfactory solutions. In this project, I will implement a generic-purpose multi-view tracking system that incorporates witness cameras to strengthen the estimation result. This project is composed of a front-end UI integration mainly for users to specify matched marks across cameras, and back-end optimization engine that operates on the user input. This multi-view reconstruction system will increase the stability of the camera tracking solver and help artists create high-quality visual works.",
                    "projectCode": "http://hlzz.github.io/blender3/"
                },
                {
                    "title": "P-BVH enhanced vertex painting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5900898517647360/",
                    "content": "Vertex painting is an essential part of 3D animation, especially in Blender. Often used in skin weighting, vertex painting provides an intuitive way for 3D artists to define how bones deform the vertices of a polygonal mesh.Currently, Blender uses OpenGL selection when painting vertices. Although convenient for painting only visible vertices, this technique has several problems.OpenGL selection:These shortcomings and more can be resolved by adding a “paint occluded vertices” option, which would use Blender’s Paint Bounding Volume Hierarchies for vertex painting.",
                    "projectCode": "https://developer.blender.org/D2150"
                },
                {
                    "title": "UV Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6041636006002688/",
                    "content": "As someone who uses Blender as his main tool on a daily basis I know just how cabale Blenders UV Editor is ...But I also know about its shortcomings and areas for improvement regarding the current tool-set. In this project I aim to improve the UV Editing workflow by improving the current tools as well as adding new ones. Improvements to a UV tool could mean enhancing its features, working on usability or both of course.",
                    "projectCode": "https://wiki.blender.org/index.php/User:SaphireS/gsoc2016/finalreport"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "python",
                "opengl"
            ]
        },
        {
            "title": "Boston University / XIA",
            "orgLink": "https://github.com/AltraMayor/XIA-for-Linux/wiki",
            "projects": [
                {
                    "title": "Gsoc Proposal - Accelerating LPM with Poptrie",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5163583092555776/",
                    "content": "Accelerating the forwarding speed of the LPM principal with poptrie.  The goal of this project is to accelerate the forwarding speed of LPM principal with poptrie, a recent data structure that employs a number of features available in modern general-purpose processors to look up the longest prefix lightning fast.",
                    "projectCode": "http://code-poptrie.blogspot.in/"
                },
                {
                    "title": "Upgrading the FIB hash table of principals to the relativistic hash table",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5621510089736192/",
                    "content": "The forwarding information base (FIB) of principals that have flat XIDs uses the default hash table available in Linux XIA. However this hash tables does not have the shrink feature. There exists a data structure known as relativistic hash table that is dynamically resizable (can expand and shrink), scalable and concurrent. This hash table, also known as rhashtable, also requires less memory per item in the table. The final aim of the project would be to augment the Linux XIA kernel with the power of relativistic programming by upgrading the FIB hash table to the relativistic hash table.",
                    "projectCode": "https://github.com/sachinparyani/GSoC-Linux-XIA"
                }
            ],
            "techStack": [
                "xia",
                "c",
                "linux kernel",
                "advanced data structures"
            ]
        },
        {
            "title": "BRL-CAD",
            "orgLink": "http://brlcad.org",
            "projects": [
                {
                    "title": "Automatic Polygonal Mesh Healing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4553385546088448/",
                    "content": "The aim is to provide features that will be useful in automatic polygonal healing of a mesh, which BRL-CAD essentially represents as a bag of triangles (bot). Defects in meshes occur when we import from one file format to another file format (here .g being the native format). They might also occur due to imprecise arithmetic, modelling transformations, designers’ fault, programming bugs, etc. Some of these are inevitable. Thus we require some programmatic method to heal meshes which are defective. There are quite a few features already present to heal meshes, but these are not sufficient. Hence, the project. Existing features include: removal of unused and exactly duplicate vertices, dangling edges, decimation of edges, and fusing of equivalent faces. The features that will added are: checking manifold connectivity, removal of gaps, T - joints, overlaps, large holes, and degenerate triangles.",
                    "projectCode": "https://tandoorichickblog.wordpress.com/2016/08/23/gsoc16workproduct/"
                },
                {
                    "title": "BRL-CAD Web Infrastructure Update",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4574276803887104/",
                    "content": "This project aims to update current web infrastructure of BRL-CAD organisation. Specifically: creating new main web site at ‘brlcad.org’ as a central hub of all BRL-CAD web products, improving and redesigning documentation.",
                    "projectCode": "https://gist.github.com/sniok/fb6a1bcf4cf78303a874fa2389739764"
                },
                {
                    "title": "GPGPU Support for Boolean Evaluation Used in Ray Tracing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4727606599483392/",
                    "content": "BRL-CAD  uses Constructive Solid Geometry (CSG) to create complex objects by combining two or more primitives, with the help of Boolean operators. I propose to improve the performance of Boolean evaluation, by utilizing GPU's to perform the required operations. The challenge is to restructure the code to facilitate parallel implementation.",
                    "projectCode": "https://catchchaos.wordpress.com/2016/08/21/gsoc-wrap-up/"
                },
                {
                    "title": "LibreCAD 3 Scriptable User Interface Creation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5442058571481088/",
                    "content": "This project will add to LibreCAD 3 an user interface allowing end-users to create and manipulate elements in the document without having to write a Lua script.",
                    "projectCode": "https://gsoc16.feragon.net/?d=2016/08/23/17/56/12-final-code-submission"
                },
                {
                    "title": "LibreCAD V3 Beziers and File I/O Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4568741127913472/",
                    "content": "LibreCAD V3 Beziers and File I/O Support project involves further development of the LibreCAD v3 Kernel and LibreCAD Software itself.LibreCAD at the moment is at very beginning stage of its development and lacks many features to be a robust kernel and a Solid Usable Software.LibreCAD v3 Evolution considers this issue and tends to implement 3 featues in this kernel.",
                    "projectCode": "https://github.com/librecad/librecad_3/commits/master?author=gaganjyot"
                },
                {
                    "title": "Online Geometry Viewer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5228426898178048/",
                    "content": "OGV has the ambition to become something of an Instagram for 3D models. It includes features like profiles, likes, comments, followers. But the code is a lot buggy and unstable.",
                    "projectCode": "http://gauravjeetsingh.github.io/2016/08/23/final-evaluation.html"
                },
                {
                    "title": "Plate Mode NURBS raytracing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5381249082327040/",
                    "content": "In Constructive Solid Geometry (CSG) system, the modeling process is usually represented as boolean operations of some basic primitives such as cubes, spheres, etc. This method is often used in solid modeling system and its operations always construct the basic solid modeling pipeline.\n    Besides, the boundary representation (B-rep) is also a method for representing models by using a collection a connected surface elements. So for the purpose of solid modeling, it is commonly impractical to represent these thin solids exactly as bounded volume, thus an available approach is to assign an implicit thickness to each face and then we can consider the thickness as a face property. Simply speaking, when shooting a ray towards the B-rep model, we can get ‘in’ and ‘out’ hit point from a face while the ‘out’ hit point is a small offset from the ‘in’ one with given thickness value along the ray direction.",
                    "projectCode": "http://bojianwu.github.io/gsoc2016/"
                },
                {
                    "title": "The FreeCAD Plugin Installer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5462279277510656/",
                    "content": "My main idea is to implement a plugin manager for FreeCAD that will be used to install/remove/update plugins and other unofficial workbenches/modules/macros. Besides this project will make the life of the FreeCAD developers, workbench authors as well as the end-user easier.",
                    "projectCode": "https://github.com/mandeeps708/PluginManager"
                },
                {
                    "title": "User Interface for Customizing Models",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4808295478984704/",
                    "content": "This project intends to define user interface to Customize Model interactively instead of modifying them manually.  It will make the user able to create the templates for given model which can further be changed as per user’s requirements.",
                    "projectCode": "https://github.com/openscad/openscad/pull/1751"
                }
            ],
            "techStack": [
                "opencl",
                "opengl",
                "c/c++",
                "python",
                "tcl"
            ]
        },
        {
            "title": "BuildmLearn",
            "orgLink": "http://www.buildmlearn.org",
            "projects": [
                {
                    "title": "Improve existing BuildmLearn Toolkit app and add new templates to it.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4936867338256384/",
                    "content": "BuildmLearn Toolkit app is an easy-to-use android app that helps the users make another mobile apps without any knowledge of android application development. It helps creating mobile application with various functionality and allows teachers to input their custom content.",
                    "projectCode": "https://github.com/opticod/GSoC-16-Work-Report/blob/master/README.md"
                },
                {
                    "title": "mConference Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4617854347378688/",
                    "content": "The 'mConference Framework' project aims at developing an Android Framework which allows organizers to create apps for conferences and events. Using this framework, the organizers can create apps for any event, conference or meetup by creating and adding data in the configuration file (XML) from a static webpage.",
                    "projectCode": "https://github.com/BuildmLearn/mConference-Framework/commits/master?author=jaiagarwal"
                },
                {
                    "title": "Physics Simulations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5505373637181440/",
                    "content": "This mobile application is targeted at school and university students studying Physics.\nThe application would present various physics simulations to choose from. These simulations will range from basic simulations like spring and pendulum simulation to complex simulations like collisions. Once the user selects a simulation, they will see the simulation animating in real time. The user can also interact with the simulations by providing touch input, dragging objects or changing parameters like gravity, length (of pendulum, string), etc.\nAs studies indicate, students are more interested to learn the concepts of Physics by actually seeing them in a tangible form in a lab, than studying the concepts in a classroom.",
                    "projectCode": "https://github.com/BuildmLearn/Physics-Simulations/commits/master?author=costinpapuc"
                },
                {
                    "title": "University Campus Portal (UCP)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4662615959666688/",
                    "content": "THE PROBLEM - \nMany universities do not have a place online for student-student and student-faculty interactions. Some universities do post results, notices etc. on their websites, but it's not easily accessible, and there is no way to notify the students when these uploads are done. Interaction amongst various student bodies, clubs etc. are done through Facebook/ Google groups, which is very inefficient. There is a need for a common platform that can incorporate these thingsThe idea is to develop a Free & Open source Web application for Universities. Any university should be able to easily deploy this web app on their servers. The platform will provide the following featuresDiscussion Forums : A place for students and professors to have discussions.News : A way for the administration to push relevant news to the studentsEvents: A way for both Faculty and the students to post information about events happening around the campusAcademic notices: These includes exam schedule, time tables and results.Recruitment Drives: A place where students get to see the placements and internship offers, their eligibility criteria and also a way to apply to them by submitting their resumes.",
                    "projectCode": "https://github.com/BuildmLearn/University-Campus-Portal-UCP/commits/master?author=pranav15197"
                }
            ],
            "techStack": [
                "python",
                "django",
                "bootstrap",
                "android"
            ]
        },
        {
            "title": "Canadian Centre for Computational Genomics (C3G) - Montreal node",
            "orgLink": "http://computationalgenomics.ca/",
            "projects": [
                {
                    "title": "Improved Tools for Genetic Diversity Modelling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5538756002054144/",
                    "content": "Interpreting genomic data largely relies on simulation software. One important family of software simulates population-level diversity over the course of evolution as a function of selection and demography. The ∂a∂i open-source package, developed by Ryan Gutenkunst (http://gutengroup.mcb.arizona.edu), is the leading software in the field, but is limited when handling large datasets.This project aims to overhaul the computational engine of the ∂a∂i software by implementing a recently developed approach for solving partial differential equations. The project will use ∂a∂i's interface and code-base, but introduce a new spectrum simulation engine. Using a moment-based approach will improve performance and reduce numerical uncertainty, offering the genetics community with a general-purpose simulation tool that can address larger and more complex datasets than previously possible.A prototype version of the computational engine is already running. The goal of this project will be to optimize the engine and embed it efficiently in the existing code-base.",
                    "projectCode": "https://gist.github.com/wlong799/2734e30df249bb088fca09d03198b730"
                },
                {
                    "title": "Improving SegAnnDB genomic segmentation app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6010805925445632/",
                    "content": "SegAnnDb  (Segmentation Annotation Database) is a web app, which helps researchers analyze a chromosome profile for copy number alterations in genes. Many studies have found that copy number variations are linked to diseases like - cancer, tumors, Alzheimers etc. Study and analysis of CNVs is an active area of research in bioinformatics.SegAnnDB allows users to upload a profile and then annotate it on basis of loss, gain, deletion, and amplification  Various profiles are stored in the webapp and researchers can work with them. SegAnnDB provides most accurate results when compared to other applications.  It uses concepts of machine learning and data analysis to arrive at most accurate models.The aim of this project is to add various significant features into SegAnnDB , some of these will be -This project will greatly improve collaboration on SegAnnDB, it will also make its development easier and more people will start using it in their research and analysis.",
                    "projectCode": "http://abstatic.github.io/gsoc-final.html"
                },
                {
                    "title": "Integrate structural variants calls in the tumor_pair pipeline from MUGQIC Pipeline",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5100032340525056/",
                    "content": "The goal of this project is to implement additional steps in the tumor_pair pipeline in order to integrate Structural Variant detection in the analysis. Tools like Lumpy,Delly,SCoNEs and PopSV would be integrated as part of this project to extend the tumor_pair pipeline to include analysis of Structural variants like deletions, tandem duplications, inversions and translocations and also the estimation of Copy Number variation.",
                    "projectCode": "https://docs.google.com/document/d/1yoOaCmXKc6AXuhj5Gsmu7PxdYdz8O6kqrRd3Z6kaKYM/edit?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "r-project",
                "javascript",
                "sql",
                "git"
            ]
        },
        {
            "title": "Catrobat",
            "orgLink": "http://www.catrobat.org",
            "projects": [
                {
                    "title": "Feature Completeness (Scratch)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6126711791943680/",
                    "content": "The target of my project is to implement some new features to Catrobat's Android-App \"Pocket Code\", that are already available in Scratch. Catrobat and Scratch are visual programming languages. In contrast to Scratch, Catrobat is customized for mobile devices, like smartphones and tablets. The new features will improve the functionality and usability of Pocket Code and will it make more similar to Scratch.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1b9dKX4vJtdEPoQo4Xb7sZlszSWvq95NDGuuitrEyXTU/edit?usp=sharing"
                },
                {
                    "title": "HTML5 Player: Compatibility/Feature Completeness (Scratch)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5369190424772608/",
                    "content": "HTML5 Player: Compatibility/Feature Completeness (Scratch)",
                    "projectCode": "https://docs.google.com/spreadsheets/d/11u2wuu0POGvWN3ZAhROaQZbehYLxB6VN-FzsTqz1Pmk/edit?pref=2&pli=1#gid=0"
                },
                {
                    "title": "HTML5 Player: Rendering + Physics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5704499326877696/",
                    "content": "The HTML5 player currently makes use of the fabricJs library to render sprites to the viewport.\nWe only use fabricJs to draw sprites and handle click/tap events- therefore the whole framework is a lot of overhead (even if custom compiled).\nOur application was already designed to replace this library to enable individual caching logic on sprites and looks. Also physics is going to be released soon but there is no support as of yet.The aim of the proposed project would be to take fabricJs out of our project and replace the needed functionality with our own code. Also we would like to add physics support to be ready for upcoming releases.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1rbs5C5_8thJO4HahvmBbUX_FhHgv-CItSEuO1RJaTjs/edit?usp=sharing"
                },
                {
                    "title": "Pocket Code - Integrate S2C",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5704093720903680/",
                    "content": "My work is targeting the Scratch to Catrobat converter. The Scratch to Catrobat converter is a tool that converts programs written in MIT's popular visual desktop programming language Scratch into Catrobat programs. In contrast to Scratch, Catrobat is a visual programming language tailor-made for mobile devices, like smartphones and tablets.This project is intended to improve the user experience of the conversion process. The main points of these improvements refer to replacing the web interface with a native UI (directly integrated into Pocket Code's Android app) and implementing a WebSocket client that communicates with a central web service. In addition to that, users can search for Scratch programs inside the app and select programs they would like to convert. Those Scratch programs are then converted by the server into Pocket Code programs that can be executed on their mobile device. On the server-side, the web service should act as a central hub for any kind of client applications being planned in the future. Thus, server-related preparations and improvements have to be made as well.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1cX9XogwItA-p1t0rxF-K_v1lgCyhsJyEgHL0M_-4lkM/edit?usp=sharing"
                },
                {
                    "title": "Raspberry Pi Integration + Feature Completeness (Scratch)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5046997547483136/",
                    "content": "Besides of GPIO pins, special sensors etc should be accessible from within PocketCode. It should be possible to trigger self defined events and retrieve information via a Socket connection. This should be realized via user-defined scripts on both the RPi and the PocketCode side.There are still several bricks and features which are available in Scratch, but not in Pocket Code. First, These features and bricks are needed to have an more improved programming experience and second in order to have a working Scratch2Catrobat programs converter.Examples:Additionally, single- and multi-touch should be implemented",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1jr2z-XNm0uWlXXfp9-6T6HKRL-hDRhge0TWzHEN1SrI/edit?usp=sharing"
                },
                {
                    "title": "Scenes and Feature Completeness",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5726162068176896/",
                    "content": "This project aims to provide Scenes in Projects, which are basically Projects in a Project. This should help to handle larger Projects with Levels for example. There are still several features, that are not implemented from the Scratch project. I aim to integrate the following: Pen Bricks, Think/Say Bubble Bricks, GPS Data, Debug Mode",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1ouxvrHVn6bhs7QQgksYdCR2RUdg_b5EL3nC8mjVVvBM/edit?usp=sharing"
                },
                {
                    "title": "Social Media Features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4856054307356672/",
                    "content": "I would love to add the following social media features outlined on the Catrobat Ideas Page:All details can be found in my proposal on Google Docs.Further implementations that came up during my GSoC work have been Userbricks and Object Grouping within the Pocket Code app.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/13OwlViA0szaLwQBT2Xx0IQMtpPFIZJHtvKJFqGKELOU/edit?usp=sharing"
                }
            ],
            "techStack": [
                "android",
                "java",
                "html5",
                "web",
                "javascript"
            ]
        },
        {
            "title": "cBioPortal for Cancer Genomics",
            "orgLink": "http://cbioportal.org/",
            "projects": [
                {
                    "title": "Build a web service and auto updating pipeline to provide 3D structure alignments for BioPortal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5458181341839360/",
                    "content": "cBioPortal provides web resources in cancer genome research. Building a web service to provide protein alignments between ensembl and PDB sequences will help mapping mutations to protein 3D structures. Building an auto updating pipeline will help cBioPortal kept adopting the updated protein structures, and advance the cancer research eventually. The project starts from downloading human proteins in all isoforms from ensembl and blast them against all PDB sequences. The alignments will be parsed and stored into carefully designed databases. A JSON based API will be built upon the database via predefined methods in database query, and cBioPortal obtained the alignments from the exposed API. A pipeline will also be constructed to update the alignments weekly. Once new structures from PDB were released, the pipeline initiate automatically to update the alignments on the updated structures. The updated alignments were stored into the database and a regression test was applied to check the correctness on a validation set. Performance, robustness, reliability and developing feasibility were all considered in the proposal.",
                    "projectCode": "https://github.com/cBioPortal/pdb-annotation/wiki/GSOC-2016-project-summary-and-guide"
                },
                {
                    "title": "Improving the clinical timeline of cBioPortal's patient view",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4613756411707392/",
                    "content": "The primary aim of this project is to improve the cBioPortal’s clinical-timeline. The present implementation (https://github.com/cbioportal/clinical-timeline) is pretty rudimentary and there is a lot that can be improved upon. There are many new features that I plan to implement so that the end users and the researchers have better tools for analyzing and visualising the data.Along with the features, proper unit tests will be written which will help maintain the project better, ensure it doesn’t break anytime and also demonstrate that my code works.\nMany unattended bugs that the timeline has will also be fixed so that it works smoothly and as expected.This project will provide a better toolset for clinicians to analyse the patient’s data and that in turn would help society at large. I am really passionate about this project and the fact that my work could affect the lives of millions of cancer patients across the world is highly satisfying and motivating.",
                    "projectCode": "https://github.com/cbioportal/clinical-timeline/commits/master?author=rohangoel96"
                },
                {
                    "title": "Integration of Proteomics Data to cBioPortal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5256488603877376/",
                    "content": "A key step towards the development of effective personalized cancer treatments is the collection of vast stores of patient data on a variety of tumor types, and cBioPortal has taken these efforts by The Cancer Genome Atlas (TCGA) and provided an accessible visualization tool for biological data discovery. Currently, cBioPortal has a multitude of information on DNA and RNA, but their information on protein levels derives from protein arrays, a technology that has severe limitations relative to mass spectrometry. Clinical Proteomic Tumor Analysis Consortium (CPTAC) has performed mass spectrometry on the patient samples for TCGA tumors and it also includes information on post-translational modifications. I propose to integrate this information with the cBioPortal visualization interface. This involves extending their database with protein abundances and PTMs based on the CPTAC data and updating the cBioPortal interface with a new tab for post-translational modifications and updating existing tabs to accommodate the new protein data. By providing this upgrade, a tool that helps both scientists and doctors see personal and population biology at a glance will gain a new dimension.",
                    "projectCode": "https://pambot.github.io/posts/gsoc2016-cbioportal"
                },
                {
                    "title": "Onco Query Language (OQL) editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6736105642655744/",
                    "content": "cBioPortal allows the analysis and visualization of published cancer genomic datasets. These datasets must be queried by entering symbols of genes of interest. \"OQL\" keywords can also be added to further refine the query.My project focuses on improving the querying experience on cBioPortal. This is done by giving users visual feedback regarding the correctness of the symbols that they have entered. For incorrect symbols, similarly-spelled valid symbols are provided as suggestions. This is useful when a user has misspelled a gene symbol, or has entered an incomplete/ambiguous symbol. Furthermore, when a user wants to enter OQL keywords, a multi-level prompt menu is provided where a user can choose keywords and see a description of what they mean. Upon selecting it, the keyword is added to their query.",
                    "projectCode": "https://gist.github.com/shrumit/ff3c282f9e2e5260d1b28886202aca7a"
                },
                {
                    "title": "Prototype Plugin framework for Authentication",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5537963580588032/",
                    "content": "My proposal outlines my project goals. I have detailed my vision about how could the problem be solved. Also, I tried to enhance my strengths. I feel that I can be a good candidate due to my passion for technology and also for your field of interest.\nI looking forward to reading any comments on my proposal in order to improve it. \nI am really willing to participate in Google Summer of Code as part of your team!",
                    "projectCode": "https://drive.google.com/open?id=11FVU_BYcrEQOz2IwN1_5GSSOmC1hZ8j-szo000P9EnQ"
                }
            ],
            "techStack": [
                "java",
                "javascript",
                "web",
                "html",
                "big data"
            ]
        },
        {
            "title": "CCExtractor Development",
            "orgLink": "http://www.ccextractor.org",
            "projects": [
                {
                    "title": "Downloading subtitles from various Internet TV services.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6200591940321280/",
                    "content": "The project deals with downloading of subtitles from popular online TV Services like Netflix, BBC, Amazon, Hulu. The project aims to perform this task without the need for the user to interact with the browser.",
                    "projectCode": "http://www.ccextractor.org/doku.php?id=public:gsoc:google_summer_of_code_16_abhishek_vinjamoori"
                },
                {
                    "title": "DVD Subtitles, CEA-708 completion and Example programs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5348332989841408/",
                    "content": "Currently CCExtractor has support for DVD Closed Caption. New DVDs contain DVD subtitles instead of the older DVD Closed Captions. This project aims to provide support for newer standard used by DVD subtitles that are bitmap based containing image files.CEA-708 is the standard for closed captioning for digital television streams in the United States and Canada.  In the proposed project the implementation for CEA-708 subtitles is to be updated to cover all types of input and support little-used protocols/parts of the standard.I aim to build programs to serve as examples for libraries that others can incorporate instead of using entire CCExtractor program.",
                    "projectCode": "http://www.ccextractor.org/doku.php?id=public:gsoc:google_summer_of_code_16_rishabh_garg"
                },
                {
                    "title": "Hardsubx - Extraction of burned in subtitles from videos",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6126684411527168/",
                    "content": "I want to add the capability of extracting burned in (hard) subtitles from videos to CCExtractor. As of now, CCExtractor works by only extracting caption data in the video if it is present in specific structures in the stream, and skips the actual video data (pixels) completely. But a lot of videos have hard subtitles burned into them, extracting which is a computer vision problem, and something which CCExtractor did not earlier have the capability to process.I want to create a system which will be able to extract well-formed subtitles from any input video, and be robust to the variations in font, size, color and language of the subtitles.",
                    "projectCode": "https://abhinavshukla95.wordpress.com/2016/08/18/google-summer-of-code-work-product-submission/"
                },
                {
                    "title": "Improving GitHub CI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4866498594078720/",
                    "content": "Improve GitHub CI by automating it and unify submission of new samples through the existing platform.",
                    "projectCode": "https://canihavesome.coffee/gsoc2016"
                },
                {
                    "title": "News Shot Classification and Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4670630905511936/",
                    "content": "My aim is to classify and analyze different types of news shots which are encountered in the news broadcast videos that Red Hen processes everyday. The system will extract visual features (such as the presence of a particular object, scene type, etc.) in the form of class labels, and may help provide low level semantic information used for further processing. I also intend to develop a classifier which classifies on the basis of camera shot type (such as Newsperson(s), Background roll, Graphics, etc). The developed pipeline will finally be deployed onto the Case Western Reserve University distributed computing cluster.",
                    "projectCode": "https://shrutigullapuram.wordpress.com/2016/08/22/gsoc-work-product-submission/"
                },
                {
                    "title": "Repository and Services for it",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4640927985434624/",
                    "content": "Describes how I'd improve/implement repository, notification and metadata services for it",
                    "projectCode": "http://new.ccextractor.org/doku.php?id=public:gsoc:real-time_repository_ruslan_kuchumov"
                }
            ],
            "techStack": [
                "c",
                "video",
                "ffmpeg",
                "subtitles",
                "linux"
            ]
        },
        {
            "title": "Celluloid",
            "orgLink": "http://celluloid.io",
            "projects": [
                {
                    "title": "Celluloid - Adding new features to Reel",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5679493490409472/",
                    "content": "Reel is Celluloid::IO native, evented server which serves as bare-bones for http and webSocket server providing functionality such as Connection Management and Multithreading , Fault Tolerance. This project aims to extend Reel by adding new important features such as Session handler,Multi-part parser, and bringing Reel up to HTTP/2 standard.",
                    "projectCode": "https://github.com/celluloid/GSoC/blob/master/reports/2016-reel_features.md"
                },
                {
                    "title": "Celluloid - Benchmarking and Performance Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6658547928530944/",
                    "content": "Celluloid has gone through a lot of improvements since v0.13. This has somehow affected the performance. The aim of my project primarily is to create a benchmarking suite which will be used to tune performance optimizations. The benchmarking suite will cover all the features of Celluloid.\nFurther I will create benchmarking suite for Reel.The value of this project is immense to the Celluloid community as it will help us refactor and improve the performance drastically before the 1.0 release of Celluloid.",
                    "projectCode": "https://github.com/celluloid/GSoC/blob/master/reports/2016-performance.md"
                },
                {
                    "title": "Extract ECell",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5079450320371712/",
                    "content": "Prepare the existing ECell code for public release.",
                    "projectCode": "https://github.com/celluloid/GSoC/blob/master/reports/2016-ecell_extraction.md"
                }
            ],
            "techStack": [
                "ruby",
                "multi-threading",
                "multi-core",
                "zeromq",
                "high-resolution timers"
            ]
        },
        {
            "title": "Ceph",
            "orgLink": "http://ceph.com",
            "projects": [
                {
                    "title": "End-to-end Performance Visualization",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5689128981102592/",
                    "content": "Tracing support with annotation-based traces is a promising approach to allow developers to get a view into the performance behavior of Ceph components. Past efforts have used the blkin library to instrument some parts of Ceph's codebase, and some plugins have been created to allow these traces to be visualized in Twitter's Zipkin platform.This project would add value to the Ceph community by extending the tracing capabilities and integrating the Zipkin visualizations in Ceph's continuous integration processes, allowing developers to quickly get performance information after changes or after testing particular scenarios.The objectives would be achieved by performing the following tasks:",
                    "projectCode": "http://vears91.github.io/babeltrace-zipkin/"
                },
                {
                    "title": "Improve Ceph’s Python Infrastructure",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5472707458105344/",
                    "content": "This project aims to improve Ceph’s Python infrastructure, making the codebase clean, modern, and maintainable. A major part of this improvement would be migrating to advanced Pythonic idioms and porting all the components written in Python 2 to the new, and more feature-rich Python 3 version. This will be done while also maintaining support for Python 2 using a project-wide compatibility layer.With Ceph’s growing codebase and complexity, it is imperative to structure the Python code into independent packages for easy maintenance. The build system of Cython bindings for Ceph libraries like RADOS, RBD, and Ceph FS will be improved, making them ready to be deployed to PyPI. Some other open-ended goals of the project are to refactor and rewrite components of Ceph which have seen very little maintenance in the past.",
                    "projectCode": "https://gist.github.com/onyb/e5c282d3368631f5d46d62b37bc0ef0d"
                },
                {
                    "title": "ON-THE-WIRE ENCRYPTION SUPPORT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6068323590602752/",
                    "content": "Ceph does a cryptographic handshake when establishing a connection in order to mutually authenticate the client and server, but the actual data is not encrypted. This project would use the existing session key to encrypt that traffic. Obviously this will provide ceph with a more safe transmission mode.",
                    "projectCode": "https://gist.github.com/zhjwpku/1bc4202671ed06c799f0bf4739416429"
                },
                {
                    "title": "Python 3 Support for Ceph",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4926120524775424/",
                    "content": "Ceph is coded mostly in C++, however many of its high-level parts are written in Python. Currently they support only Python 2.6 and 2.7.The purpose of this project is to port Ceph and its additional components to Python 3.x, which is the current version of the language, while keeping compatibility with the previous versions.",
                    "projectCode": "https://gist.github.com/BlaXpirit/82dc8b81e4e94bdb4ee3d3ec436faa53#file-gsoc-2016-md"
                }
            ],
            "techStack": [
                "c/c++",
                "python",
                "object-storage"
            ]
        },
        {
            "title": "CERN SFT",
            "orgLink": "http://ep-dep-sft.web.cern.ch/",
            "projects": [
                {
                    "title": "BLonD code optimization strategy for parallel and concurrent architectures",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4557913783795712/",
                    "content": "Our objective is to determine the best architectural and parallelization options for the BLonD future C++ code base. Project includes:Main project deliverable will be a report covering possible architecture directions rooted in profile data, performance tests and future possibilities. This report will include UML diagrams showing architectural blueprints for concurrency and parallelism directions, structured performance analysis of performed tests and created prototypes, a table comparing selected technologies in terms of:",
                    "projectCode": "https://github.com/kiliakis/BLonD-minimal-cpp/commits/master?author=OlegJakushkin"
                },
                {
                    "title": "GPU-accelerated Deep Neural Networks in TMVA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5080491044634624/",
                    "content": "During recent years deep learning techniques haven proven extremely powerful in many different applications and have successfully been applied to high energy physics data. The aim of this project is to make these techniques available to the HEP community by integrating them into TMVA/Root. Since the training of deep neural networks is computationally highly demanding, the main focus of this project will be to enable GPU-accelerated training of deep neural networks with TMVA. This will be achieved by integrating readily available GPU deep learning frameworks as back-ends into the current implementation. The targeted hardware are OpenCL capable devices as well as CUDA capable devices. The resulting implementation will allow for platform- and vendor-independent accelerated training of deep neural networks. In addition to that, the currently available network features will be extended with convolutional and pooling layers.",
                    "projectCode": "http://simonpf.github.io/gsoc/final.html"
                },
                {
                    "title": "Implementation of task-based transport for GeantV",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4831149671055360/",
                    "content": "The current parallelism model of GeantV is data-oriented where a static set of threads is predefined to perform the work, the set of transport threads and distributor thread. In this model a concurrent queue data structure is used as a common source for threads. The main objective of this project is to adapt the steering of this work to a task-based approach using Thread Building Blocks (TBB).",
                    "projectCode": "http://www.face.ubiobio.cl/~jfuentes/blog/geantv"
                },
                {
                    "title": "Integrating Machine Learning in Jupyter Notebooks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5469210012549120/",
                    "content": "Toolkit for Multivariate Data Analysis (TMVA) is a framework (part of data analysis framework ROOT) which contains ML packages, frequently used by high-energy physicists in searches for new particles. Project's goal is to make TMVA more integrated in Jupyter notebook environment. First step in this road is implementing JavaScript visualization for a list of features currently available in the TMVA Graphical User Interface. In this project also will be implemented interactive feature engineering and interactive training mode using JavaScript in front end. These completions of TMVA not only make TMVA well integrated in notebook environment, but also provides better usability, better user experience and make easier to produce better results with less effort.",
                    "projectCode": "https://github.com/qati/GSOC16/blob/master/README.md"
                },
                {
                    "title": "Integration of Spark parallelisation in TMVA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6454630665945088/",
                    "content": "The proposed project involves the support for Spark parallelization in TMVA. Machine learning procedures like k-fold cross validation, hyper parameter tuning as well as many others can be parallelized to decrease computational time. The goal of the proposed project is to implement the existing C++ code in to PySpark.",
                    "projectCode": "https://docs.google.com/document/d/1X0j8-zGtdKJ9LzDFRSWbxLcrgx4soduYgzhCp8rsSLg/edit#heading=h.8tiee4i9lhm5"
                },
                {
                    "title": "Multistep methods for integrating trajectory in field",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6548924257009664/",
                    "content": "Implementation of Adams multistep methods in Geant4",
                    "projectCode": "http://dmitriisorokin.blogspot.com/2016/08/alternative-integration-methods-and.html"
                },
                {
                    "title": "New Physics Model in Sixtrack package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6512372474707968/",
                    "content": "SixTrack is a 6D particle tracking code used to compute the trajectories of individual relativistic charged particles in circular accelerators. It uses various physics models to apply the effect of different accelerator elements via mapping formulae. Sixtrack is missing a few models implementation which are required to achieve higher accuracy in particle tracking. This project will aim to implement and test these new models with the goal of adding them in the official code.",
                    "projectCode": "http://vikasnt.github.io/SixTrack/"
                },
                {
                    "title": "Performance 3D Web Graphics with Interactive Features for JSRoot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6045990297534464/",
                    "content": "The ROOT project is developing a JavaScript library for reading and rendering ROOT objects in modern web browsers. The rendering of 3D objects is done with the library THREE.js, and though much of the conversion has already been implemented, there are still many desirable features left to be added. These include interactively selecting particular model components, adjusting a cutting plane to view various cross sections, animation, camera tracks, and possibly an exploded view to more closely examine complex regions. In addition to creating these new features, the project will improve the rendering performance. The current implementation can handle several hundred volumes, but this figure will be increased as much as possible, and finally a method for pruning down geometries to manageable sizes will be devised.",
                    "projectCode": "http://transdimensional.xyz/gsoc/index.html"
                },
                {
                    "title": "Reflection-based Python-C++ language bindings: cppyy - Integrate the Cling backend into PyPy/cppyy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4649541810782208/",
                    "content": "For the purpose of High Energy Physics (HEP) Experiments, the framework required should be able to support the scale and complexity of HEP codes. cppyy is such a framework that provides a fully automated, run time, language bridge between Python and C++. For cppyy, both the implementations - CPython (the default byte-code Python interpreter written in C) and PyPy (a Python interpreter written in Python language) - support CINT, an interpreter for C/C++ for rapid development. Moreover, the CPython version also supports Cling. Cling is an interactive C++ interpreter, built on the top of Clang/LLVM that provides a high-performance alternative to the C++ interpreter in ROOT called CINT.The purpose of this project is (1) to integrate the Cling back-end into PyPy implementation; while (2) ensuring maximum reuse of existing code on both CPython/cppyy and PyPy/cppyy implementations for better compatibility and maintenance; and (3) implement a method for distribution of Clang modules with the standard Python distribution tools using pip, the Python Packaging Authority recommended tool for managing and installing packages.",
                    "projectCode": "https://drive.google.com/open?id=0B1wZt_mPLAFMdWFnTzc2NTZKZHc"
                },
                {
                    "title": "TMVA Project in Machine Learning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5764515320823808/",
                    "content": "Toolkit for Multivariate Data Analysis (TMVA), integrated into the ROOT framework hosts a variety of machine classification methods which have become essential to extract a maximum of the available information from the data in high energy physics. This project aims to provide support for feature engineering in TMVA toolkit by creating new features from the existing feature set based on some basic operations with the goal of finding higher-performing features.",
                    "projectCode": "https://abhinavmoudgil95.github.io/google%20summer%20of%20code/2016/08/23/gsoc-conclusion.html"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "javascript",
                "clang"
            ]
        },
        {
            "title": "Chapel",
            "orgLink": "http://chapel.cray.com",
            "projects": [
                {
                    "title": "Incremental Compilation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5942240530661376/",
                    "content": "Currently, re-compiling a Chapel program would mean re-compiling the parts that haven’t changed, including the functions that haven’t been altered since the last compilation. The idea behind this project is to utilise the already existing information that compiler already has to speed up re-compilation. The main steps in the project would be to start away with restructuring the way currently elements with same name are distinguished. The main goal would be to create a code cache which can be stored in as a part of the object file. We would like to utilise our code cache to avoid re-instantiation and recompilation for functions that are already present as a part of the code cache, and finally we want to be able to re-link the correct functions and symbols from the cache during the building of the executable.",
                    "projectCode": "https://gist.github.com/kushalsingh007/c6901b7a5b416f3c4ebdde166a8fa5ca"
                },
                {
                    "title": "Reporting stack traces on halt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5240769828880384/",
                    "content": "Chapel is a programming language that wants to make the development of parallel applications easier. This project wants to extend the Chapel runtime with the support to stack traces when an unrecoverable error is encountered. A stack trace is a list of functions in the call stack at the moment of the error: this can immensely help developers during the debugging phase since it permits to see where, in the source code, the error is generated.",
                    "projectCode": "https://github.com/chapel-lang/chapel/commits?author=panzone"
                }
            ],
            "techStack": [
                "python",
                "chapel",
                "c",
                "c++",
                "high performance computing"
            ]
        },
        {
            "title": "CiviCRM",
            "orgLink": "https://www.civicrm.org",
            "projects": [
                {
                    "title": "Cividroid 2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5352655605989376/",
                    "content": "My perception for the next evolution of Cividroid revolves around the concept of ‘Dashlets’. During my frequent visit to the CiviCRM Dashboard on the demo set-up, I find that, it gives a holistic view of many of the crucial data one would want to see from their CiviCRM installation. Since they’re mostly powered by CiviReports, there is an opportunity to derive a lot of new Dashlets. Introducing Dashlets into Cividroid sounds very natural and they will feel just like home on Android which itself has a concept of ‘widgets’.",
                    "projectCode": "https://github.com/MounaAnnavarapu/Cividroid-2.0-Dashlets"
                },
                {
                    "title": "CiviREBUX: Report Building Extension for CiviCRM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6595368154300416/",
                    "content": "CiviREBUX is an native CiviCRM extension for drafting custom Contribution and Membership reports via a drag-n-drop interface. CiviREBUX combines powerful visualization and transformation techniques which gives the users the full capabilities of modern browsers and the freedom to design the right elements for their reports. CiviREBUX also supports saving and loading of report templates for later use. It works well with all the 3 CiviCRM-supported CMS - Wordpress, Drupal and Joomla, hence native.CiviREBUX integrates seamlessly within the CiviCRM Dashboard and goes live seconds after installing the extension. CiviREBUX is a mix of the most popular desktop-based spreadsheet software and fast browser applications, essentially, a spreadsheet software running on your browser.",
                    "projectCode": "https://civicrm.org/blog/ypranay/introducing-civirebux-native-report-building-extension-for-civicrm"
                },
                {
                    "title": "Import from Google Sheets",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5158058154000384/",
                    "content": "I'm Saurabh Batra, a sophomore student at IIT Guwahati, India. I've been actively contributing to Civi since October 2015 and my main point of contact and mentor has been Eileen McNaughton. The project I'm interested in developing for GSoC 2016 is the one Eileen proposed.",
                    "projectCode": "https://github.com/saurabhbatra96/com.saurabhbatra96.civiimport#comsaurabhbatra96civiimport"
                },
                {
                    "title": "Integrating CiviCRM with Zapier",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5942583859609600/",
                    "content": "This project was written in aim of participation in the Gsoc 2016, This proposal explains how to integrate CiviCRM with Zapier an integration platform for all sort of applications which now could be communicating together. The document also proposes an API which will intend do a two-way mechanism to enable the same triggers and action on Zapier to be replicated on CiviCRM.",
                    "projectCode": "https://wiki.civicrm.org/confluence/display/CRMDOC/Example+2%3A+Integrating+CiviCRM+and+Zapier%3A+User+Story+1"
                },
                {
                    "title": "Responsive Email Layout",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4623169906278400/",
                    "content": "Majority of people use emails to communicate over the internet and with more more mobile devices coming in different sizes, there is a basic need to make the emails support these different devices. While text emails, work fine on these different sized devices, brilliant looking html based emails suffers, sometime making it impossible to be read on mobile devices.\nEmails are also the main medium to connect the organization and the participants in CiviCRM.. The project I would like to work on will be “Responsive Layout for Emails” that would include  making emails more reliable and readable over different devices by providing a simplified and responsive layouts for email. Considering the situation of current world, 50% of emails open occurs on mobile device and 70% of people delete emails instantly which do not timely render. The main aim of the project would be to let people read emails sent through CiviCRM properly on all of their devices.\nAlso, I would like to propose a more systematic and consistent email mechanism for system generated emails. This will allow end-users to align system emails to the brand of their organization.",
                    "projectCode": "https://wiki.civicrm.org/confluence/display/CRM/Responsive+Email+Layout"
                },
                {
                    "title": "Social Media Integration with CiviCRM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5781292268388352/",
                    "content": "The sheer number of social media users has been increasing exponentially along with social media websites. Day by day, Social Media is integrating deeper with people's lives. Social Media Integration with CiviCRM will allow users to quickly login securely to the website without the hassle of remembering another extra password and provide access to features such as event registration and petition signing quicker. On the other hand, organizations using CiviCRM can have their different events, campaigns and petitions promoted and publicized in different social media platforms and analyze how people react to them all at one place. Social Media Integration with CiviCRM will boost the exposure of CiviCRM as a platform and make it even easier for people to connect.",
                    "projectCode": "https://github.com/siddharthg/org.civicrm.civisocial"
                },
                {
                    "title": "Synchronization Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4975806048632832/",
                    "content": "CiviCRM already has integration with many email marketing services like MailChimp, Constant Contact, Google Apps. However all of them have different workflows and interfaces. The goal of this project is to create a framework which will enable us to use the functionalities provided by different email marketing services in a unified manner. The project primarily focuses on synchronizing contact information. The main aspect of the project is to synchronize the mailing list and the groups of different external services. Whenever some changes are made through a certain service, these changes will then be reflected in real time in the CiviCRM account associated with it. The objectives of this project will certainly  help the users to save a lot of time and effort as they can truly focus on the best offerings of all the services and not be exposed with intricacies associated with it.",
                    "projectCode": "https://adikare.github.io/org.civicrm.genericsync/"
                },
                {
                    "title": "Work to improve and expand CiviMobile",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5743754254221312/",
                    "content": "The current release is more than three years old, so the extension has languished somewhat. There are several issues in the outstanding implementation (such as a buggy contact search capability) and the design is fairly dated.I would seek to work with the current extension to:with the goal of releasing an updated version which is more user-friendly and more capable than the current one.",
                    "projectCode": "https://github.com/AdamHillier/com.webaccessglobal.module.civimobile/wiki/GSOC-Project:-final-wrap-up"
                }
            ],
            "techStack": [
                "php",
                "javascript",
                "mysql",
                "angularjs",
                "d3js"
            ]
        },
        {
            "title": "Classical Language Toolkit",
            "orgLink": "http://cltk.org",
            "projects": [
                {
                    "title": "CLTK Latin/Greek Backoff Lemmatizer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6499722319626240/",
                    "content": "Lemmatization is a core preprocessing task for NLP which allows for meaningful comparisons of different forms of a given word in a corpus. For highly inflected languages like Latin and Greek, the task is particularly important for two reasons: 1. words often have a dozen or more possible forms (and, as opposed to go in English, this is the norm and not only a characteristic of irregularly formed words), and 2. small corpus size in general often demands that counts for a given feature like words be based on the broadest measure possible. Currently available Latin lemmatizers rely largely on dictionary-based look up methods, which is a good solution for frequently occurring and unambiguous forms. For my Google Summer of Code project, I propose to rewrite the CLTK Latin and Greek lemmatizers to handle a higher percentage of forms by applying a backoff tagging approach.",
                    "projectCode": "https://gist.github.com/diyclassics/fc80024d65cc237f185a9a061c5d4824"
                },
                {
                    "title": "Enhancements in the CLTK webapp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6243113458728960/",
                    "content": "The CLTK webapp aims to provide a modern reading environment for documents present in the CLTK corpora. This project aims to enhance the reading experience for the user by providing related material items like definitions, commentary and translations. Also, the ability to add annotations and save bookmarks along with an enhanced profile view will provide a personalised experience to the user.",
                    "projectCode": "https://suheb.github.io/gsoc2016/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "java"
            ]
        },
        {
            "title": "CloudCV",
            "orgLink": "http://cloudcv.org",
            "projects": [
                {
                    "title": "Build Deep Learning models online",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4929000031911936/",
                    "content": "This is a user interface to draw and configure deep neural networks and supports import / export of model configuration file from / to caffe & tensorflow deep learning frameworks",
                    "projectCode": "https://github.com/Cloud-CV/IDE"
                },
                {
                    "title": "CVFY",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5040066812444672/",
                    "content": "The aim of this project is to create a framework that can help people create a web based demo out of their machine learning code and share it. Others can test the model without going into the implementation details. Usually testing models by other people involves a lot of preparation and setup. This project aims to cut that down.",
                    "projectCode": "https://ashishchaudhary.in/gsoc-2016-finish"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "lua",
                "caffe",
                "torch"
            ]
        },
        {
            "title": "Computational Biology @ University of Nebraska-Lincoln",
            "orgLink": "http://helikarlab.org",
            "projects": [
                {
                    "title": "Boolean-based Representations of Biological Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5311138573058048/",
                    "content": "The goal of this project is to develop a model that can visualize biological networks as logic gate circuits, and vice-versa. In recent years, discrete dynamic modeling has emerged as a powerful method of modeling and understanding biological systems. One type, boolean network models (which was initially used as a prototypical model of genetic regulatory networks), has been shown to be a tractable approach for modeling large-systems. A boolean network consists of a set of nodes whose state is binary and is determined only by other nodes in the network through Boolean functions. The simplicity and self-containment of these graphs makes it extremely fast to simulate these systems and is also a very realistic interpretation of how biological networks actually work. Unfortunately, no libraries yet exist for converting a visualization of a biological network into a logic gate visualization and vice-versa.Thus, the aim of this GSoC project is to develop a web-based tool that can visualize biological networks, and also transform these networks into a logic gate-based system.",
                    "projectCode": "https://github.com/joshim5/ccBooleanAnalysis"
                },
                {
                    "title": "Idea 1 - Ales Saska",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5836327174012928/",
                    "content": "Javascript/WebGL component for interactive visualization of large-scale network graphs",
                    "projectCode": "http://blog.alessaska.cz/post/my_contribution_to_google_summer_of_code_2016"
                },
                {
                    "title": "Idea 1: Javascript/WebGL Component For Interactive Visualization Of Large-Scale Network Graphs.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5025643506958336/",
                    "content": "This project will center around the development of additional optimization techniques to enable interactive visualization of very large networks, as well as new interactive graph features, including node/edge selection/addition/removal and node/edge styling.Specific components of this project include:Optimalization of already implemented interactivity features: node / edge (straight line) selection.\nImplementation of curve edges selection.\nText rendering using SDF (signed distance field).\nEditable texts.\nPossibility to visualize multiple values per single node using colors / styles / textures.\nAdvanced styling for nodes and edges (like using textures for edges to achieve dotted / dashed lines).\nDemo page to preview all implemented features.",
                    "projectCode": "https://znbiz.github.io/gsoc2016/"
                },
                {
                    "title": "Interactive Platform for Statistical Computing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5035968876773376/",
                    "content": "The goal of this project is to develop a web-based platform that enables anyone to perform various statistical computations in an easy-to-use, interactive, and graphical manner. This would allow user to perform statistical analysis who are unfamiliar with R programming.",
                    "projectCode": "https://github.com/HelikarLab/StatisticalPlatform/wiki/Interactive-Platform-for-Statistical-Computing"
                },
                {
                    "title": "Mobile Based Blood Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4835738575175680/",
                    "content": "The aim of this project is to use the camera and processing power of modern day cell phones to develop an intuitive and user-friendly application for the detection of cancer biomarkers from a small drop of blood. This will serve as a screening test for the same. The application will allow the user to take images of the blood samples in a set format. The image will then be segmented using a background subtraction algorithm to detect the regions of interest. After noise removal, the intensity of each individual blob will be calculated. A linear curve will be fit through the intensity and known concentration data and the concentrations of the unknown samples will be estimated from the standard curve which will quantify the various molecules present in the sample.",
                    "projectCode": "http://abdulfatir.github.io/GSoC16/index.html"
                }
            ],
            "techStack": [
                "webgl",
                "javascript",
                "mysql",
                "react"
            ]
        },
        {
            "title": "Computational Science and Engineering at TU Wien",
            "orgLink": "http://www.iue.tuwien.ac.at/cse/",
            "projects": [
                {
                    "title": "Carbon Footprint for Google Maps Firefox Port",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5739656318550016/",
                    "content": "During this project i would start with porting the basic implementation of the carbon dioxide calculation and would after that is complete create and implement the options page as well as the core implementation for translations in addition to porting the exsisting translations for the extension.",
                    "projectCode": "https://github.com/OiWorld/CarbonFootprintGoogleMaps/commits/master?author=kolpa"
                },
                {
                    "title": "Carbon Footprints",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4860074396745728/",
                    "content": "The project aims at developing extensions for multiple browser which allows a user to use the extension for most of leading map services, the extension would calculate and show Travel Cost and CO2 Emission for different routes to their location on the map while taking into consideration the type, speed and age of the vehicle.",
                    "projectCode": "https://github.com/OiWorld/CarbonFootprintGoogleMaps/commits?author=PrateekGupta1509"
                },
                {
                    "title": "Colibri OpenADR connector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6463848471068672/",
                    "content": "This is a brief overview of what I intend to do. I want to implement the standardized smart grid\nconnection ”OpenADR”. What are the advantages to implement this interface into the Colibri\nproject? The grid operators have the possibility to inform the customer about e.g. the current\nenergy price, with this standardized interface. The customer can control his electrical consumers\nregarding the given information. Colibri with the OpenADR connection helps to automate this\nprocess on the customer side. The Colibri control module can reduce or increase the total power\nconsumption depending on to the information from the other smart grid agents. In the end this\nwill result in a more stable grid, because the energy producer and consumer will stand in an\ninterdependency. This also leads to an better usage of the energy resources which is a great benefit\nfor the society. Therefore it is a good idea to add this functionality to the Colibri project.",
                    "projectCode": "https://github.com/dschachinger/colibri/commits/master?author=faustmann"
                },
                {
                    "title": "Colibri – OBIX Connector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5257281025343488/",
                    "content": "The OBIX Connector is intended to connect the OASIS OBIX platform to Colibris semantic interface. The Colibri smart energy management system will be able to subscribe to different resources in building automation systems behind an OBIX gateway. This enables the system to gather specific information from these resources. Therefore, the connector and its REST binding for OBIX will be implemented and packed into an independent OSGi bundle in the Colibri system. The connector will provide technology-independent and generic communication with building automation resources. It will also simplify the communication and interconnection between Colibri and high-level integration OBIX gateways as subsystems behind the OBIX gateways are hidden and encapsulated form the Colibri semantic interface.",
                    "projectCode": "https://github.com/dschachinger/colibri/commits/master?author=goJoWe16"
                },
                {
                    "title": "Colibri: MATLAB Simulink Connector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5637641986899968/",
                    "content": "Colibri provides a platform for smart building energy management. Semantics about the building, the building automation systems, other energy-consuming or energy-producing devices, and the environment are used to elaborate optimization strategies. Basically, simulation for the behaviour of the building automation system is performed. Simulation is done by designing individual components and their interconnection is then simulated using MATLAB Simulink. A Java-based connector is implemented in this project so as to link the simulation to the Colibri platform. This component(connector) should be able to read values from and write values to the running MATLAB Simulink simulation. These data exchanges are then sent to Colibri semantic core.",
                    "projectCode": "https://github.com/dschachinger/colibri/commits/master?author=PratyushTalreja"
                },
                {
                    "title": "Enhancing Language Learning using Mind the Word",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5454264331665408/",
                    "content": "The focus of my project is to make the process of learning a new language less intrusive for a user. This involves two primary changes to the existing Mind the World Chrome extension - UI revamp and enhancing the core functionalities. User interface and user experience play a critical role in learning anything. The first part of the project will build a completely new Material UI for all the views of the extension viz. Popup, Translation settings, Advanced settings and Contribute pages.The second part of the project is to improvise the core functionality of the extension. This involves the following -All these features simplify the user’s learning experience and work towards achieving the aim of Mind the Word i.e. to provide an immersive language learning experience.",
                    "projectCode": "http://ankit-m.github.io/2016/08/19/GSOC-Mind-the-Word-Ankit-Muchhala.html"
                },
                {
                    "title": "Improving and Porting Carbon Footprint for Google Maps to Safari and Firefox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6580164238508032/",
                    "content": "With global warming on rise, there is an urgent need to cut down our carbon footprints. Recently my city, New Delhi made headlines being one of the most polluted cities in the world. I think everyone should be aware of the amount of pollution they are pushing into the atmosphere so that they can reflect upon their actions. I found this smart extension a great attempt to do so. Therefore I would like to improve this extension and make it available to users who use other browsers such as Safari and Firefox.",
                    "projectCode": "https://github.com/OiWorld/CarbonFootprintGoogleMaps/commits/master?author=heychirag"
                },
                {
                    "title": "Mind The Word",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6708695966679040/",
                    "content": "In every web page visited, the extension randomly translates a few words into the target language specified by the user. Because the translated words are kept in context, it is easy to infer and memorize their meanings. Therefore, one effortlessly learn new vocabulary and improve your language skills. \"Mind the Word\" is currently used by 13500 users and is installed by 40 new users every day.",
                    "projectCode": "https://medium.com/@rohankatyal/https-medium-com-rohankatyal-eat-sleep-mindtheword-repeat-gsoc16-ec4249f38062#.891vzdic9"
                },
                {
                    "title": "R/Privacy: Raising the quality and trust of data privacy software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5431294041260032/",
                    "content": "Data privacy has become one of the hot topics in society, but also in research. In the light of data available to the public or to researchers, data privacy should ensure that individuals cannot be identified.\nThis project aims to improve the code quality of the R package sdcMicro (used for data anonymization) and the R package simPop (used for simulating synthetic confidential data). This can be achieved by writing tests using R packaged like \"Testthat\" and \"devtools\".",
                    "projectCode": "https://drive.google.com/drive/folders/0B-E7Nkn1YWJXeTJCT285RXladWs?usp=sharing"
                },
                {
                    "title": "Visualizing Tool for Probabilistic Classification data in WEKA, RapidMiner, KNIME and R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5632687473688576/",
                    "content": "Multi-Class Classification is a central task in data mining there are a variety of classifiers that compute scores of the samples to belong to the classes. The aim is to deliver a product that will be used to analyse the classification algorithms, find sources of classification errors and reducing errors using available data features. This involves evaluating performance of classifiers using Interactive Visualizations and providing the users with useful and reproducible information about classification Data. Back-end plugins for  WEKA, RapidMiner, KNIME and R to acquire and export classification data to front-end that produce visualizations using web technologies (D3.js) in form of stacked bar charts and confusion matrix, which will easy, intuitive and high quality implementation to interactively select certain samples in the visualization for further investigation and detailed feature analysis  run in default browser to provide platform independent functionality. A guide and documentation for all the code for easy installation, usage, interpretation of results and further extension of project related to this tool in the form of a web-page will be a part of this project.",
                    "projectCode": "https://katehara.github.io/classilist-site/"
                }
            ],
            "techStack": [
                "javascript",
                "html",
                "css",
                "java",
                "c++"
            ]
        },
        {
            "title": "Copyleft Games",
            "orgLink": "https://www.copyleftgames.org/",
            "projects": [
                {
                    "title": "Integrated Development Environment for PySoy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4665476944756736/",
                    "content": "I would like to work on developing an Integrated Development Environment (IDE) for PySoy. The aim of the IDE is to provide all the features of a text based IDE such as autocompletion, direct execution, e.t.c along with debugging tools.As a part of the project, I will be using iPython module. It is an extension to the Python interpreter offering additional features. I will be integrating PySoy specific UI and debugging tools to facilitate faster game development.April 22 - May 23 (Community Bonding Period)Discuss my ideas comprehensively with the CopyLeft Games community. For the pre-GSOC task, I will be writing the missing bindings and fix bugs (If any) in the necessary widget classes.May 23 - June 27 (Mid Term Evaluation)Develop PySoy specific IDE plugin set for Gedit. This includes plugins for autocompletion, direct execution and debugging of scripts from Gedit itself along with a handler created using iPython API.June 28 - August 23 (Final Evaluation)Develop Body debugging, Field debugging, and general debugging systems. Create an example PySoy script to demonstrate different features of the IDE.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1ILOKveltziHY5NRH98Cec_y8K8E-TAGruz9cvqR4aGI/edit?usp=sharing"
                },
                {
                    "title": "Vox.GL Bootstrap",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5137226757308416/",
                    "content": "Currently Vox.GL offers the potential to bring a new generation of children into programming, building on the dynamic nature offered by voxel systems and the popularization of Minecraft, these systems provide excellent platforms for getting younger and new programmers working with something they can see and touch. Vox.GL hopes to make these opportunities arrive with software freedom too.This position requires a clean, functional product to be available, which Vox.GL is currently anything but. As part of GSoC 2016, I will improve functionality of Vox.GL's build system, diagnose and fix existing graphical and input glitches, and push into fleshing out the core framework that will comprise the fully featured Vox.GL ecosystem. This includes entities, levels/chunks, storage, graphics, controllers/input options, packaging, physics and scripting. The completion of GSoC 2016 focuses on five main tasks: Fixing existing bugs, worlds and rendering infrastructure, entities and physics. With additional work as time permits.",
                    "projectCode": "https://docs.google.com/document/d/1go_XqbNDlfU4K4CzzUkEoK8yfOQfa1tILhVPtOls7S8/edit?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "opengl",
                "c"
            ]
        },
        {
            "title": "coreboot",
            "orgLink": "https://www.coreboot.org/",
            "projects": [
                {
                    "title": "Better Support for RISC-V Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5773424962043904/",
                    "content": "The goal of this project is to get coreboot running on a physical board with a RISC-V processor. So far, only emulated boards (QEMU and Spike) are supported.The board will be a lowRISC on a Diligent Nexys 4 FPGA development board.",
                    "projectCode": "https://blogs.coreboot.org/blog/2016/08/23/gsoc-better-risc-v-support-wrap-up/"
                },
                {
                    "title": "Panic room - Take a deep breath",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5851661012566016/",
                    "content": "Coreboot is a firmware that aims at replacing the initialisation process performed by the BIOS or UEFI firmware at each boot of the computer system that it’s installed on.\nIn order to achieve this, Coreboot has to understand and support the underlying hardware that it is running on, adding a new motherboard can be quite an error-prone and tedious process that can even take up to several months of work if none or just a few of the device’s components are already supported.\nOne of the tools used to make this process easier is SerialICE, a system software debugger that allows the developer to log and intercept the vendor’s BIOS accesses to the hardware and sends the information through a serial or EHCI debug port.This project idea aims at reducing the time and frustration of this process through:",
                    "projectCode": "https://blogs.coreboot.org/blog/2016/08/23/gsoc-panic-room-recap/"
                },
                {
                    "title": "​Obscure Features, Locking/Unlocking of Access  Protection, EEPROMs and CFI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5439533130711040/",
                    "content": "The broad goal is to enhance flashrom by adding new and (somewhat) obscure features and, merging pending patches. This project comprises several sub-projects -Build towards a single flashrom codebase. Basic patches exist in the ChromiumOS branch, but further work needs to be done.Investigate changes arising in the core infrastructure (including libflashrom) and produce mergeable code that is sustainable.Give flashrom the ability to auto-detect chips with CFI capability (similar to auto-detecting SFDP-capable chips).",
                    "projectCode": "https://drive.google.com/drive/folders/0B-Cccp-WWmeuUlh5M3pxT0cyQm8"
                }
            ],
            "techStack": [
                "c",
                "assembly",
                "open hardware"
            ]
        },
        {
            "title": "CVXPY",
            "orgLink": "http://www.cvxpy.org/",
            "projects": [
                {
                    "title": "A Centralized Library for Convex Optimization and Integration of CVXPY with ILOG CPLEX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5154474272227328/",
                    "content": "This project proposal formalizes my intention on helping CVXPY in creating and implementing a new library to centralize the shared functionality from CVXPY, CVX, and Convex.jl. By the end of the project, the main goal is to have an efficient C++ library that performs the required actions: convert a convex optimization problem given by any of these modeling frameworks into standard form, call the solver, and return the solution to the correspondent problem. In addition, this proposal presents my intention to integrate CVXPY with ILOG CPLEX solver. This would provide the user an alternative solver other than Elemental, Gurobi, MOSEK, and GLPK. This proposal presents the main steps to accomplish both goals and possible collaborations after Google Summer of Code 2016. Finally, the proposal is concluded with a summary of my academic, research, and coding background experience.",
                    "projectCode": "https://drive.google.com/open?id=0B49UhwSycqrMMzJtdkdSMUZIckk"
                }
            ],
            "techStack": [
                "python"
            ]
        },
        {
            "title": "D Foundation",
            "orgLink": "http://dlang.org/",
            "projects": [
                {
                    "title": "A replacement of std.xml for the Phobos standard library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5056473587515392/",
                    "content": "XML is probably the most used storage and interchange format for structured and semi-structured data, being also used for object serialization and configuration files.\nA good XML library is fundamental for many large applications; as such, shipping with a well-written std.xml would greatly benefit Phobos and more generally the D ecosystem.\nThe goal of this project is to produce a library for handling the XML format and replace the current std.xml with it.",
                    "projectCode": "https://github.com/lodo1995/experimental.xml/tree/v0.1.2"
                },
                {
                    "title": "Improvements for dstep.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5732312192909312/",
                    "content": "This is a project to improve the dstep conversion tool. The major goal is to extend dstep to the point in which it is able to create bindings for the most of existing C libraries (in particular libclang bindings that are used by the dstep itself).",
                    "projectCode": "https://github.com/ciechowoj/dstep/commits/master?author=ciechowoj"
                },
                {
                    "title": "Precise Garbage Collection for D",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5710606233501696/",
                    "content": "Implementing precise collection as a first step towards a better garbage collector.",
                    "projectCode": "https://drive.google.com/open?id=0B-UTFTbYro4vQzJnR1NQa3E4WTA"
                },
                {
                    "title": "Science for D - a non-uniform RNG",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4617597723082752/",
                    "content": "D is a modern language that offers the convenience of Python at the speed of C++. While D is constantly evolving, its support for scientific research is still sparse. This project will be focused on improving Mir (Phobos’s upcoming science module) by adding a universal non-uniform random number generator (RNG) based on Tinflex. In contrast to the standard acceptance-rejection method, Tinflex requires only knowledge of the probability density function, its first two derivatives and a partitioning in intervals with at most one inflection point and is thus easier to use. Moreover a lot of common non-uniform random distributions will be added.",
                    "projectCode": "http://forum.dlang.org/post/ckwjysezxagpnrdkbtpq@forum.dlang.org"
                }
            ],
            "techStack": [
                "dlang",
                "c++"
            ]
        },
        {
            "title": "dbpediaspotlight",
            "orgLink": "http://dbpedia.org",
            "projects": [
                {
                    "title": "A Hybrid Classifier/Rule-based Event Extractor for DBpedia Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5042255903588352/",
                    "content": "In modern times the amount of information published on the internet is growing to an immeasurable extent. Humans are no longer able to gather all the available information by hand but are more and more dependent on machines collecting relevant information automatically. This is why automatic information extraction and in especially automatic event extraction is important. \nIn this project I will implement a system for event extraction using Classification and Rule-based Event Extraction. The underlying data for both approaches will be identical. I will gather wikipedia articles and perform a variety of NLP tasks on the extracted texts. First I will annotate the named entities in the text using named entity recognition performed by DBpedia Spotlight. Additionally I will annotate the text with Frame Semantics using FrameNet frames. I will then use the collected information, i.e. frames, entities, entity types, with the aforementioned two different methods to decide if the collection is an event or not.",
                    "projectCode": "https://github.com/dbpedia/event-extractor"
                },
                {
                    "title": "Automatic mappings extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5465189923160064/",
                    "content": "DBpedia currently maintains a mapping between Wikipedia info-box properties to the DBpedia\nontology, since several similar  templates exist to describe the same type of info-boxes.\nThe aim of the project is to enrich the existing mapping and possibly correct the incorrect mapping's using  Wikidata.Several wikipedia pages use Wikidata values directly in their infoboxes. Hence by using the mapping between Wikidata properties and DBpedia Ontology classes along with the info-box data across several such wiki pages we can collect several such mappings.\nThe first phase of the project revolves around using various such wikipedia templates , finding their usages across the wikipedia pages and extracting as many mappings as possible.In the second half of the project we use machine learning techniques to take care of any accidental / outlier usage of Wikidata mappings in wikipedia. At the end of the project we will be able to  obtain a correct set of mapping which we can use to enrich the existing mapping.",
                    "projectCode": "http://www.mail-archive.com/dbpedia-discussion@lists.sourceforge.net/msg07829.html"
                },
                {
                    "title": "Combining DBpedia and Topic Modelling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6754883239673856/",
                    "content": "DBpedia, a crowd- and open-sourced community project extracting the content from Wikipedia, stores this information in a huge RDF graph.\nDBpedia Spotlight is a tool which delivers the DBpedia resources that are being mentioned in the document.Using DBpedia Spotlight to extract and disambiguate Named Entities from Wikipedia articles and then applying a topic modelling algorithm (e.g. LDA) with URIs of DBpedia resources as features would result in a model, which is capable of describing the documents with the proportions of the topics covering them. But because the topics are also represented by DBpedia URIs, this approach could result in a novel RDF hierarchy and ontology with insights for further analysis of the emerged subgraphs.The direct implication and first application scenario for this project would be utilizing the inference engine in DBpedia Spotlight, as an additional step after the document has been annotated and predicting its topic coverage.",
                    "projectCode": "https://github.com/dbpedia/topicmodel-extractor/wiki/GSoC-2016-Progress-Log-Wojciech-Lukasiewicz"
                },
                {
                    "title": "DBpedia Lookup Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6452757254897664/",
                    "content": "DBpedia is one of the most extensive and most widely used knowledge base in over 125 languages. DBpedia Lookup is a tool that allows The DBpedia Lookup is a web service that allows users to obtain various DBpedia URIs for a given label (keywords/anchor texts). The service provides two different types of search APIs,  namely, Keyword Search and Prefix Search. The lookup service currently returns the query results in XML (default) and JSON formats and works on English language. It is based on a Lucene Index providing a weighted label lookup, which combines string similarity with a relevance ranking in order to find the most relevant matches for a given label.  As a part of the GSOC 2016, I am going to implement an improvised Lucene search module by generating indexes from SPARQL end points and RDF dumps. This module will also take care of the surface forms of the labels and will be an independent module that can be used on any RDF knowledge base.",
                    "projectCode": "https://github.com/dbpedia/dbpedia-gsoc/wiki/Gsoc-2016:-DBpedia-Lookup-Improvement"
                },
                {
                    "title": "Inferring infobox template class mappings from Wikipedia + Wikidata",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4884906018603008/",
                    "content": "There are many infoboxes on wikipedia. Every infobox has some properties. Actually, every infobox follows a certain template. In my project, the goal is to find mappings between the classes (eg. dbo:Person, dbo:City) in the DBpedia ontology and infobox templates on pages of Wikipedia resources using techniques of machine learning.There are lots of infobox mappings available for a few languages, but not as many for other languages. In order to infer mappings for all the languages, cross-lingual knowledge validation should also be considered.The main output of the project will be a list of new high-quality infobox-class mappings.",
                    "projectCode": "https://github.com/dbpedia/mappings-autogeneration"
                },
                {
                    "title": "Integrating RML in the Dbpedia extraction framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5147656280080384/",
                    "content": "This project is about integrating RML in the Dbpedia extraction framework. Dbpedia is derived from Wikipedia infoboxes using the extraction framework and mappings defined using the wikitext syntax. A next step would be replacing the wikitext defined mappings with RML. To accomplish this, adjustments will have to be made to the extraction framework.",
                    "projectCode": "http://www.mail-archive.com/dbpedia-discussion@lists.sourceforge.net/msg07837.html"
                },
                {
                    "title": "The List Extractor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5451876061413376/",
                    "content": "The project focuses on the extraction of relevant but hidden data which lies inside lists in Wikipedia pages. The information is unstructured and thus cannot be easily used to form semantic statements and be integrated in the DBpedia ontology. Hence, the main task consists in creating a tool which can take one or more Wikipedia pages with lists within as an input and then construct appropriate mappings to be inserted in a DBpedia dataset. The extractor must prove to work well on a given domain and to have the ability to be expanded to reach generalization.",
                    "projectCode": "https://github.com/dbpedia/list-extractor"
                },
                {
                    "title": "The Table Extractor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4881737138044928/",
                    "content": "Wikipedia is full of data hidden in tables. The aim of this project is to exploring the possibilities of take advantage of all the data represented with the appearance of tables in Wiki pages, in order to populate the different versions of DBpedia with new data of interest. The Table Extractor has to be the engine of this data “revolution”: it would achieve the final purpose of extract the semi structured data from all those tables now scattered in most of the Wiki pages.",
                    "projectCode": "https://github.com/dbpedia/table-extractor"
                }
            ],
            "techStack": [
                "java",
                "scala",
                "rdf",
                "python",
                "nosql"
            ]
        },
        {
            "title": "Debian Project",
            "orgLink": "https://www.debian.org/",
            "projects": [
                {
                    "title": "Android SDK Tools in Debian",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5478686052581376/",
                    "content": "Android is the most widely used free, open source mobile operating system.\nThe tools used to create applications for the platform are also open source,\nand this project involved bringing them into Debian, and updating the packages already present.\nAs such, this is a large project with multiple sub-projects.\nThe end goal here is to be able to build Android apps using only Debian packages, all free software.",
                    "projectCode": "https://wiki.debian.org/ChirayuDesai/SummerOfCode2016"
                },
                {
                    "title": "Android SDK Tools in Debian",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6664655908896768/",
                    "content": "The Android platform is free software, including the tools used for developing apps for Android. Debian-derivatives are already a preferred platform for Android developers, and many Android SDK tools are included in Debian as part of the Android Tools and Java teams. This project is about working towards the goal of having the entire Android toolchain and SDK in Debian so that Android apps can be developed using only free software from easy-to-use packages. In combination with Replicant, this will make the most popular operating system in the world, Android, into a 100% Free Software platform.",
                    "projectCode": "https://wiki.debian.org/MouaadAallam/SummerOfCode2016/"
                },
                {
                    "title": "Android SDK Tools in Debian",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5147973570789376/",
                    "content": "Improve the existing Android SDK packages in Debian and bring in more of them.",
                    "projectCode": "https://wiki.debian.org/KaichungYan/SummerOfCode2016"
                },
                {
                    "title": "AppRecommender - integration with AppStream",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4868344087838720/",
                    "content": "AppRecommender is a recommender system for Debian packages. Currently, this application can only be run through terminal commands. The idea of this project is to integrate it with graphical package managers, in order to reach more users.",
                    "projectCode": "https://lucasmoura.github.io/blog/2016/08/01/apprecommender-gsoc-final-report"
                },
                {
                    "title": "APT↔dpkg communication rework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5104997591154688/",
                    "content": "APT-based tools work with the user to figure out how their system should look like after they are done installing/removing packages and their dependencies. The actual installation/removal of packages is done by dpkg as instructed by APT based on the wishes of the user.Historically APT has a super micro-management approach to this task which hasn't aged that well over the years mostly ignoring changes in dpkg and growing into an unmaintainable mess hardly anyone can debug and everyone fears to touch – especially as more and more requirements are tacked onto it.Proposed is the introduction of an abstraction layer similar to the \"External Dependency Solver Protocol\" (EDSP) which is used to let apt talk to external dependency solvers. This layer would not only allow the easier collection of the required data for debugging failures but ultimately allows the introduction of multiple (competing) ordering strategies.",
                    "projectCode": "https://david.kalnischkies.de/blog/posts/2016/gsoc_2016_summary/"
                },
                {
                    "title": "CI for Debian-Med",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6277419778441216/",
                    "content": "The Debian Med project prepares packages that are associated with\nmedicine, pre-clinical research, and life sciences. Its developments are\nmostly focused on three areas for the moment: medical practice, imaging\nand bioinformatics.The Debian Med team has packaged a lot of medical (biological,\nscientific) tools and libraries. We want to make these tools work %100\nefficient, stable and featuring reproducible results. In this project\nwe'll add auto package tests to tools which don't have these tests, hunt\nbugs of packages which failed in autopkgtests and take stability, user\nconfidence into the results to higher levels like what Continous\nIntegration concept of Debian do.To whom may be curious about the concept: The Debian continuous\nintegration (debci) is an automated system that coordinates the\nexecution of automated tests against packages in the Debian system.\nDebci will continuously run autopkgtest test suites from source packages\nin the Debian archive.  The long term goal is to equip every package\nin the field of biology with such a test suite and this GSoC project\nshould gain a solid base for the long term goal.",
                    "projectCode": "https://docs.google.com/document/d/1LBj4Ys39_gxTVwLx8iJGJ8bqB_hCUG0qvQYFq9_-v0M/edit?usp=sharing"
                },
                {
                    "title": "Create new recommendation strategy for AppRecommender",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5089770455695360/",
                    "content": "This project aims at creating a new strategy for AppRecommender. The new approach would only be triggered when the user installs a new package. AppRecommender would them use this contextual information and mix it together with the user already installed packages. Therefore, this new strategy focus on recommending new packages that are related to the package being installed while also taking in consideration to user preferences.",
                    "projectCode": "http://softwarelivre.org/lucianopc/blog/apprecommender-last-gsoc-report"
                },
                {
                    "title": "Developer Horizon and other extensions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5819438557298688/",
                    "content": "I propose to work for following projects for Google Summer of Code 16 under Debian.",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/WorkProduct/Developer_Horizon_and_extensions"
                },
                {
                    "title": "Improving distributed and secure communication using free software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4886025126019072/",
                    "content": "Distributed and secure communication for the sake of user's privacy has never been as much needed as of now. That's why I feel a great pleasure to work on OpenDHT, a critical library used by Ring, a project soon to be imported in the debian software. This summer, thanks to the Google Summer Of Code program, I will work on developping new functionalities in OpenDHT aiming at reducing overall generated traffic, maintaining and optimizing critical parts of OpenDHT, optimizing data persistence solution on the network and use TCP protocol instead of UDP for OpenDHT.",
                    "projectCode": "http://sim590.github.io/post/gsoc/final/"
                },
                {
                    "title": "Improving voice, video and chat communication with free software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6344242221809664/",
                    "content": "I want to contribute to a project which support high end communication via free and open source tools. I want to contribute to FreeRTC project",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/StudentApplications/PranavJain/WorkProduct"
                },
                {
                    "title": "Improving voice, video and chat communication with free software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6470515334053888/",
                    "content": "The project is aimed at improving the mips and mipsel ports. My implication in the project will therefore reflect the needs of the team that have been working on the project before me. Starting with the to-do list, I will be able to gain knowledge of the issues and objectives that need to be adressed. As I work on the project I will acquire  deeper understanding of it and will eventually be able to contribute in a more creative way; the ultimate form of my participation would be finding and fixing bugs that have not been recorded in the past. I hope to achieve that last step.",
                    "projectCode": "https://drive.google.com/open?id=0B6lw9jw-ACGSc2hEOGlXZnlFVFk"
                },
                {
                    "title": "Improving voice, video and chat communication with free software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6570957976109056/",
                    "content": "Free RTC is for running your own, independent, federated and peer-to-peer RTC solutions, including instant messaging (IM), voice-over-IP (VoIP), video/webcam, social networking and WebRTC, using open\nstandards and, in many cases, free, open source software. During the development of the project I would like to implement additional plugins for common applications. WordPress, Drupal, Joomla, Mediawiki, Redmine and Django are widely used in the Internet. The integration of such applications would increase the usage and the popularity of the application.",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/WorkProduct/Free_WebRTC_plugins"
                },
                {
                    "title": "Improving voice, video and chat communication with free software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6404166679265280/",
                    "content": "Project include fixing and resolving some bugs with opportunity to bring and implement something innovative that will make this project a splendid project. Debian organisation gives an opportunity to student to participate in Google Summer of Code and can become a part of world's biggest organisation by contributing in it.",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/WorkProduct/UditRaikwar"
                },
                {
                    "title": "Improving WebRTC, Apache Camel and Jitsi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5570021484920832/",
                    "content": "ICE and TURN support for Jitsi, SIP message for Apache Camel, WebRTC server probe.",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/StudentApplications/NikVaes/workproduct"
                },
                {
                    "title": "Indexation over a distributed network",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6573755878866944/",
                    "content": "As some project, like Ring, need some form of indexation, which could be usefull, for example to index user profile, or some other ressources. Indexation then would become a great feature to have on such project.",
                    "projectCode": "https://docs.google.com/document/d/1sWIEGvmVdvbWOaJ7QCXGJt_08ZjeSRnYrYQrgk4hDbg/edit?usp=sharing"
                },
                {
                    "title": "Ring project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6477112403820544/",
                    "content": "I will work on the RING project for Savoir Faire Linux. I will create tool to know the exact performances of the ring software on the different platforms. This new software has to know for example the size of bandwidth use by the Ring software and what capacity he use on the computer. These information will be really important for the rest of the team to optimize the program.",
                    "projectCode": "https://gasuleg.github.io/gsoc2016/final_report/2016/08/19/Final-Evaluation.html"
                },
                {
                    "title": "Support for KLEE in Debile",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5010782383243264/",
                    "content": "Writing and maintaining software is challenging. Software is complex and keeping it\nbug-free remains an unsolved problem. Debian Stretch, the next Debian stable release, comprises 850 million lines of software source code. Code written in the C programming language accounts for 41% of the lines, which is more than in any other programming language. Debile, Debian’s package analysis platform, so far includes the CppCheck, Clang Static Analyzer, and Coccinelle tools for packages with C, C++, and Objective-C code. However, all of the tools perform static analyses, which can result in false positives. Too many reported false positives hinder adoption of the tools. To address this issue, I propose to integrate the KLEE tool into Debile. KLEE performs dynamic analysis on C programs and reports only true positives, i.e. real bugs. It does so by systematically exploring as many as possible execution paths in a given program. Errors that KLEE reports exist only along feasible execution paths, i.e. they correspond to real bugs in the program.",
                    "projectCode": "https://dimjasevic.net/marko/2016/08/14/summary-of-my-google-summer-of-code-2016-project/"
                },
                {
                    "title": "Telepathy Connection Manager for Ring protocol",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5047255782391808/",
                    "content": "Telepathy is the framework for Real-time communication on the major\nLinux desktops and Ring is a secure and distributed peer to peer network for real time communications.A Telepathy Connection Manager helps Telepathy front end to support Ring.",
                    "projectCode": "https://gist.github.com/alok4nand/35a8e085fc62a8641cbf653881ab3ca2"
                },
                {
                    "title": "Web Client and Connection Manager for reSIProcate",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5634704229269504/",
                    "content": "I will work to add a support for a Web Client in conference calls and a Connection Manager for reSIProcate. I will also make a good effort at making the chat messaging and buddy list work in telepathy-resiprocate",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/StudentApplications/MateusBellomo"
                },
                {
                    "title": "YooHoo - The Perfect Chat Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5889807301476352/",
                    "content": "Project Details: YooHoo, is a interactive chat engine, which supports text, audio, video chats and file sharing. It is to facilitate one-to-one chats, group chats, create events and manage them online(assign tasks and schedule deadlines etc). It has also got a integrated set of bots, for mainly connecting with wiki.debian.org, packages.debian.org etc to provide instant help for queries, suggest apps etc. It also include provision for creating new bots using custom codes.\nThe main aim of YooHoo is to create a collaborative environment for those who are working on Linux systems. With its in-build bots it can provide live assistance to users, suggest the best apps available for his needs, get latest releases and news, which can improve user experience a lot.Benefits to Debian: Will help to provide automated help to its users (by the bot) as well as ask new queries, report bugs etc, thus bridging the gap between a normal user and Debian system.Why Debian?: Well, Once you start exploring her, your curiosity never ends. Of all the other distros I have used, I learned more on Linux by using Debian. She is simple, minimalist and is highly educative in a learn by doing approach.",
                    "projectCode": "https://wiki.debian.org/SummerOfCode2016/WorkProduct/Balram"
                }
            ],
            "techStack": [
                "python",
                "c",
                "c++",
                "ruby",
                "django"
            ]
        },
        {
            "title": "Discourse",
            "orgLink": "http://discourse.org",
            "projects": [
                {
                    "title": "Eventhooks for Discourse",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6577775968256000/",
                    "content": "I will build webhooks for Discourse. The webhook is a HTTP callback. It post the payload to external URL when an event happened.Technical considerations are available on Discourse Meta.",
                    "projectCode": "https://meta.discourse.org/t/webhooks-feedback/49046"
                },
                {
                    "title": "Topic summaries, Canned Replies and Presence features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5975621553356800/",
                    "content": "",
                    "projectCode": "https://gist.github.com/adrapereira/f198238afb874ee692da08f4982aa203"
                }
            ],
            "techStack": [
                "ruby",
                "ruby on rails",
                "javascript",
                "ember",
                "docker"
            ]
        },
        {
            "title": "Distributed and Unified Numerics Environment (DUNE)",
            "orgLink": "https://www.dune-project.org",
            "projects": [
                {
                    "title": "Python bindings for the DUNE grid interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5796349886857216/",
                    "content": "DUNE, the Distributed and Unified Numerics Environment, is a modular toolbox to solve partial differential equation with grid-based methods. Thus, the central part of the DUNE project are the interface classes that describe a wide range of domain tessellations.In order to ensure efficiency in scientific computations and support high-performance computing applications, a lot of static polymorphism is used in these interface classes, through function inlining and C++ templates. Consequently, using DUNE can be quite difficult for everyone: beginners have to acquire detailed C++ knowledge and even advanced users are limited in their productivity due to some subtleties.The project idea aims to provide Python bindings of the interface classes to make DUNE more useable. In fact, it would give the possibility to use Python for testing the underlying C++ classes, enable rapid prototyping and implementing new grids would be more easier for developers. Users who do not have or want detailed C++ knowledge could then use DUNE to solve partial differential equation in Python, using the bindings.",
                    "projectCode": "http://misg.github.io/gsoc/dune/2016/08/22/python-bindings-for-the-dune-grid-interface"
                },
                {
                    "title": "Spline geometries for isogeometric analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5610205735813120/",
                    "content": "Isogeometric analysis is a finite element technique that allows to solve partial differential equations defined on spline surfaces. This is useful because a lot of geometries used in engineering are directly available in this format, and the grid generation step can be skipped. However, no Dune grid implementation is currently able to represent spline geometries. The goal of this project is to develop such a grid manager for the special case of spline surfaces representable as a single tensor-product patch.",
                    "projectCode": "http://gsoc2016xinyun.blogspot.de/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "cmake"
            ]
        },
        {
            "title": "Django Software Foundation",
            "orgLink": "https://www.djangoproject.com",
            "projects": [
                {
                    "title": "Reworking Django's Indexes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5000784504684544/",
                    "content": "This proposal aims to provide more customisability to Django users in operations related to database indexes - their creation, modification. Another objective is to add support for creation of more complex indexes in Django using different methods (like RTree, Hash) on relevant backends (most notably PostgreSQL), such as functional indexes and indexes with different algorithms (e.g. GiST).",
                    "projectCode": "https://gist.github.com/akki/f45c7cf5db30c025f49d862d82dd259a"
                }
            ],
            "techStack": [
                "python",
                "django"
            ]
        },
        {
            "title": "Drupal",
            "orgLink": "https://www.drupal.org/",
            "projects": [
                {
                    "title": "Add Password-based Public-key Encryption to Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5398018513698816/",
                    "content": "The goal of this project is to provide a role-based data encryption feature for securely storing highly sensitive data in Drupal 8. Accordingly, ownCloud’s Data Encryption Model will be used in this project which is proven to be truly secure and highly scalable. An end-user will just enable this new encryption mechanism for the sensitive fields in his website. And then even in the case of a full database breach, he’ll have the surety that his sensitive data is still well protected.",
                    "projectCode": "https://github.com/talhaparacha/pubkey_encrypt/commits/gsoc2016?author=talhaparacha"
                },
                {
                    "title": "CKEditor plugins for TMGMT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6157951773442048/",
                    "content": "The Translation Management Tool (TMGMT) module is an extension to support editors, publishers, translators and project managers during their process of content translation. Since I think that Local Translator is a very useful submodule, there are still lots of things missing. The tool was working in Drupal 7, but it was rather limited in functionality and by far not fulfilling expectations of professional translators. I believe the next goal is to make the Local Translator a professional CAT Tool and I would like to help with implementing CKEditor plugins using Javascript. Because TMGMT wants to use the CKEditor libraries to build an alternative non-WYSIWYG translation editor, I would propose to implement some special linguistic actions like defining segments, marking them in the UI and masking specific HTML tags.",
                    "projectCode": "https://github.com/sasanikolic90/tmgmt_ckeditor"
                },
                {
                    "title": "Drupal 8 media solution module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4781665473789952/",
                    "content": "The aim of the project is to provide an overall Drupal 8 media module which would bundle the components and configurations of the existing independent media modules. The Drupal media team has been working on various independent modules for quite some time now and since most modules are almost functional, it is important to have an overall module. This module would help accelerate Drupal as the preferred media inclusion CMS amongst other alternatives - thus enabling enhanced development and user experience for all interested parties.",
                    "projectCode": "https://gist.github.com/isthegeek/4f1b8f39e36f99ca052ffaf2211c4d5a"
                },
                {
                    "title": "Integrate Google Cloud Vision API to Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5307612941778944/",
                    "content": "Google Cloud Vision API bring to picture the automated content analysis of the images. The API can not only detect objects ranging from animals to famous monuments, but also detects faces on emotions. In addition, the API can also help censor images, extract text from images, detect logos and landmarks, and even the attributes of the image itself, for instance the dominant color in the image.\nThis feature has not been implemented in the Content Management Systems, and its integration in Drupal can give the users, a powerful tool which carries out automated content analysis of the images. Integration of this API would not only add to Drupal characteristics, but also would open up a new horizon for Drupal.",
                    "projectCode": "http://arpitjalandrupal.blogspot.in/2016/08/gsoc-2016-work-product-of-google-vision.html"
                },
                {
                    "title": "Port Google Login Authenticator To Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5131691081334784/",
                    "content": "The Google Login Authenticator Module adds an extra layer of security to the Drupal login architecture.\nThe plugin no longer works in Drupal 8 because of the architecture change between Drupal 7 and 8, Drupal 8 being more Symfony rich.\nThe aim of this project is to port the the module over to Drupal 8 as a plugin for Two Factor Authentication Module which works in Drupal 8.\nAdditional functionality like checking for time discrepancy will also be added in this port.",
                    "projectCode": "https://github.com/therealssj/GSoC2016-Final-Report"
                },
                {
                    "title": "Port Mailhandler to Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6513712504504320/",
                    "content": "The Drupal 8 version of Mailhandler is based on Inmail module and takes mail (usually from an IMAP mailbox) and imports it as whatever type of content you choose. Beside the configured content type, you can specify the content type directly in your email subject. It enables you to select different authentication methods and mail analyzers as well.Mailhandler Comment is a submodule that allows you to post comments by email.Mailhandler includes a demo module to help you get started.",
                    "projectCode": "https://github.com/fantastic91/mailhandler"
                },
                {
                    "title": "Porting Comment alter module to Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6288931096100864/",
                    "content": "Comment alter allows changing values of a fields on a node through comments. The module allows selecting any field of the content type to be altered from comments unlike any other contributed modules  present in Drupal. It can be used to create a full featured bug tracker, customer support, etc. The modules strives to integrate different modules like core's Node module to store the changes as new revisions and Diff module for displaying the changes made in a particular comment.\nAt present the module is available for Drupal 7 only and thus we have this project to port the module for Drupal 8.",
                    "projectCode": "https://anchal29.github.io/blog/2016/08/21/GSoC-16-Porting-Comment-Alter-Module.html"
                },
                {
                    "title": "Social API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6182373494358016/",
                    "content": "The Social API will harmonize social networking functionality in Drupal, providing an extensible module that allows site administrators and developers enable options for autoposting to and user authentication via social networking's services, as well as making use of these services' widgets.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1J8SpsmozQsIWstOh6UIe00FOKy1opnGExvLfLK6P5MA/edit?usp=sharing"
                },
                {
                    "title": "Solving content conflicts with merge algorithms in Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5655297389494272/",
                    "content": "With the introduction of Multi-version module in Drupal 8 we suddenly have a very powerful content revision API that can handle branching and conflict DETECTION. But there is not yet a way to SOLVE revision conflicts. \nThe proposed solution is to create PHP library which would find lowest common ancestor(LCA) from DAG and perform a recursive 3 way merge with LCA as base file. The libraries would merge the updates in base file if no conflict arises.  However, for the case when a merge conflict occurs and has to be solved manually, a JS code editor library(CodeMirror) would be integrated with Plugin UI which would allow users to solve a merge conflict by displaying all the 3 files(Base, Theirs and Mine) in a 3 pane view.\nMore details: https://groups.drupal.org/node/508466#project35",
                    "projectCode": "http://rakeshverma.in/final-submission"
                }
            ],
            "techStack": [
                "php",
                "symfony",
                "sql",
                "javascript",
                "html5"
            ]
        },
        {
            "title": "Eclipse Foundation",
            "orgLink": "http://eclipse.org",
            "projects": [
                {
                    "title": "Eclipse CHE: Pair programming with Eclipse Che Cloud IDE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4930443140923392/",
                    "content": "Nowadays people tend to work with cloud IDEs more than  standalone IDEs. Simplified sharing mechanisms do a  major role in cloud IDEs.  Pair programming is one of the main features of eclipse che which allows a programmer to see his fellow programmer’s cursor simultaneously which is very useful here Moreover, chatting with other participants while coding is a very significant  feature  since communication plays a major role in programming.Assume that a person is modifying a file and another one is modifying another file which is not opened by the first person both are getting notified and I’m focusing on implementing these three features in my project.",
                    "projectCode": "http://www.rnavagamuwa.com/open-source/gsoc-2016-final-submission-pair-programming-with-eclipse-che-cloud-ide/"
                },
                {
                    "title": "Eclipse EASE Jupyter Kernels",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5292257359953920/",
                    "content": "This Google Summer of Code proposal describes a project to create custom Jupyter kernels for the Eclipse Advanced Scripting Environment's (EASE) script interpreters. These kernels can be used to execute code from an existing Jupyter instance and give feedback from the EASE script engine. A typical example for such code feedback would be an image of a calculated graph. A generic framework to easily publish this data from script code or EASE modules needs to be provided. The focus of this project is on implementing the kernels and not on creating custom Eclipse views for Jupyter clients. Since custom views might be desired in the future this project should take this into consideration.",
                    "projectCode": "https://github.com/kmhsonnenkind/ease_jupyter_kernels"
                },
                {
                    "title": "EMF Forms goes AngularJS: A web-based editor for UI schemata",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5186912281165824/",
                    "content": "The objective of this project is to make the creation of web forms easier and more accessible to non-programmers. By taking advantage of the AngularJS framework, EMF Forms provides a web renderer (JSON Forms), which is capable of automatically generating validated forms using just JSON schemata. The creation of those schemata with a text editor is still cumbersome. The goal of this project is to develop a visual editor (the JSON Forms editor), which allows to create the declarative UI descriptions using concepts such as DnD, Live Preview and validation.",
                    "projectCode": "https://docs.google.com/document/d/1nqM4JER7vEU0O7k6Ppz7oImdKdqiWDG7FgpEUhU3XSc/edit?usp=sharing"
                },
                {
                    "title": "EMF Forms goes AngularJS: Backend integration with OpenAPI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5717424225648640/",
                    "content": "This project consists on integrating EMF Forms with OpenAPIs to automatically create web UIs that communicate with REST services.",
                    "projectCode": "https://docs.google.com/document/d/1yUrT86F5VFLcuNvreY8O3qNS7f-SyKBn9d54hD2W7ZE/edit?usp=sharing"
                },
                {
                    "title": "Implement filesystem sync in Eclipse Flux",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6114091298979840/",
                    "content": "Add support of file-system based synchronization in Eclipse Flux.",
                    "projectCode": "https://gist.github.com/fjodorver/b5dcfe291bebaea8f8f76fe31220177d"
                },
                {
                    "title": "Interface to send additional requested data for Eclipse Automated Error Reporting Initiative",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5364336843292672/",
                    "content": "Exentsion of the AERI module with a new interface to submit requested \"needinfo\" data directly from the IDE to avoid the roundtrip of a user to the bugzilla or submission page.",
                    "projectCode": "https://docs.google.com/document/d/1jcvye7i6EHozZgvv8kfpjUDlZTvhgHAPuk2CmYDdmng/pub"
                },
                {
                    "title": "JUnit and TestNG Test Runner Plugin for Eclipse Che",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4996791795712000/",
                    "content": "Eclipse Che provides an open source IDE and a platform for developing Java ,JavaScript, Php projects and cloud IDE extensions. The Che is mainly support for developing Java projects with Maven. Currently, Che does not have a Java test runner build in with it and the Java developers must either use maven or command line to run their test cases. However a modern IDE should provide easy way for run the test cases. Therefore the purpose of this project is to build an extendable test runner plugin for Eclipse Che IDE such that developers can easily run their test cases and view the results.",
                    "projectCode": "https://docs.google.com/document/d/1_dcEZuq3jzsYoto_Fq8naT-jE32f343qH_VHS0W-PiQ/edit?usp=sharing"
                },
                {
                    "title": "Sign and Verify Script",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6714493367222272/",
                    "content": "EASE is a scripting project for eclipse which allows users to execute scripts from local and remote sources. It is a threat to user in executing scripts from unknown sources especially scripts stored on remote server.  One way to provide authenticity and integrity is digital signature. I would like to work with EASE Eclipse community to extend project to provide signing and verifying script functionality to users. For providing signing feature, we can use java security API. It provides simple classes and methods to perform wide range of things like signing files using private key of user, export certificates, import certificates, verify signature, generating public and private keys, etc. User will be uploading his script on server, from where remote users can directly access such scripts through code and verify them before execution to know their credibility. I plan to provide several UI enhancements to support script signing efficiently. With successful completion of this project, EASE users will be able to judge nature of script before execution.",
                    "projectCode": "https://docs.google.com/document/d/1xWA3TiPQVgPvY_f-DPPJYihptfG4L92_3zb0vA6VVf8/edit?usp=sharing"
                },
                {
                    "title": "Statistics from the Developer Workspace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5739238230327296/",
                    "content": "In this project, “Developer Statistics“ should be extended through GIT metrics and new Mylyn statistics/views. Furthermore the UI should be cleaned up and optimized.",
                    "projectCode": "https://docs.google.com/document/d/18OW0AWDE6xxY4jJD32N8pMhdkNeyjwmvir_6yAzHqVM/pub"
                },
                {
                    "title": "Vorto : Web based Graphical IoT System Modeling Too",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5176288276905984/",
                    "content": "The Vorto Web based IoT System Modeling tool provides user to design/model the IoT solution in a graphical way using web browser (Chrome/Firefox) using HTML5 canvas.",
                    "projectCode": "https://github.com/nagavijays/IoT-Graphical-System-Modeler/commits?author=tharindu99"
                },
                {
                    "title": "Web-based Dev Tool to create Information Models",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6393479726891008/",
                    "content": "This project aims to create a web based code editor for Information models provided on Eclipse Vorto. The web editor will be used to provide similar functionality and user experience for editing Information Models as provided by the Vorto plugin on Eclipse. The Information models created will be stored in the central JCR repository but can only be edited by the users who created them. Through this project I aim to implement this enhancement : https://github.com/eclipse/vorto/issues/66",
                    "projectCode": "http://shivkandikuppa.blogspot.in/2016/08/gsoc-2016-final-submission-vorto_22.html"
                }
            ],
            "techStack": [
                "java",
                "geospatial",
                "c/c++"
            ]
        },
        {
            "title": "Fedora Project",
            "orgLink": "http://getfedora.org",
            "projects": [
                {
                    "title": "Ansible and the Community (or automation improving innovation)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4844704050970624/",
                    "content": "The Community Blog is becoming an important part of the Fedora Project. This site is a shared responsibility between CommOps and the Infrastructure team. Unlike most applications in the Fedora infrastructure, the Community Blog is not based off Ansible playbooks. Ansible is an open-source configuration management suite designed to make automation easier. Fedora already uses Ansible extensively across its infrastructure.My task would be migrating the Community Blog (and by extension, Fedora Magazine) to an Ansible-based set up and writing the documentation for any related SOPs.In the current set up, the Community Blog and Fedora Magazine are managed separately from each other, and are managed by a single Infrastructure team member. By moving them to Ansible-based installations and merging the WordPress bases together, it adds the following benefits:",
                    "projectCode": "https://blog.justinwflory.com/2016/08/gsoc-2016-thats-wrap/"
                },
                {
                    "title": "Cockpit Project's support for systemd timers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6610383359967232/",
                    "content": "A major component of the Fedora Server is the Cockpit Project, a web-based management console for servers. Systemd provides timer support for system services.\nI would like to implement a module in Cockpit that manages scheduled tasks using systemd timers. This project is also mentioned in the TODO-list of the Cockpit feature roadmap page.",
                    "projectCode": "https://medium.com/@harishanand95/gsoc-2016-final-submission-1fb33bbfeb50"
                },
                {
                    "title": "Fedora CommOps - Statistics Automation and Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5233084924428288/",
                    "content": "This project aims at automating the process of statistics gathering and visualization across the entire Fedora Contributor base.",
                    "projectCode": "https://sachinwrites.xyz/2016/08/15/gsoc-final-week/"
                },
                {
                    "title": "Make pagure adaptable for pkgs.fedoraproject.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5642400273793024/",
                    "content": "pkgs.fedoraproject.org is a place which hosts about 17k git repos for rpms. Presently, it uses cgit. But, we do have Pagure for hosting git repos. After addition of few more features, we will be able to host pkgs.fedoraproject.org on a pagure instance. It will make pagure even more flexible software for hosting git repos and sharing code. I am sure project maintainers of pkgs.fedoraproject.org will like the change.",
                    "projectCode": "https://gist.github.com/vivekanand1101/4dbc1f6e55373081c038915dc412e2f0"
                },
                {
                    "title": "OSTree: Drop privileges for HTTP fetches",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6747409996578816/",
                    "content": "OSTree currently runs as root while doing all operations, including doing fetches from external repositories over HTTP. But libsoup is not exactly a secure well-tested library, and few projects use it. Running the fetch operations in a separate low-privileged process will add more security, as will switching to libcurl.Furthermore, the aria2 project implements a feature not found in Curl or LibSoup, namely multiplexing downloads from multiple servers. (e.g. for file A, aria2 can download 50% from server 1 and 50% from server 2). Moving to an external process will allow a pluggable fetching implementation, allowing the use of aria2's features for those who want itFurther work may be done for the Fedora Modularization WG or ostree-related projects (such as GNOME Continuous)Full project proposal: https://fedoraproject.org/w/index.php?title=GSOC_2016/Student_Application_allangardner",
                    "projectCode": "https://github.com/Mathnerd314/ostree/commits/libsoup-2?author=Mathnerd314"
                },
                {
                    "title": "Pagure",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4824862644240384/",
                    "content": "I am trying to propose features and improvement in Pagure, which is a code review management system.",
                    "projectCode": "https://farhaanbukhsh.wordpress.com/category/gsoc/"
                }
            ],
            "techStack": [
                "python",
                "flask",
                "postgresql",
                "html5",
                "javascript"
            ]
        },
        {
            "title": "FFmpeg",
            "orgLink": "https://ffmpeg.org",
            "projects": [
                {
                    "title": "FFv1 P frame support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5391653909037056/",
                    "content": "This project proposed implementation of P frames with motion compensation and motion estimation support for FFv1 FFmpeg codec and its fine-tuning until the best compression rate is achieved. \nIt is important to provide common use lossless FFmpeg codec with ability to work with P frames, so it would be more effective and it would make FFv1 competitive with existing I+P frame lossless codecs.",
                    "projectCode": "https://gist.github.com/theacetoace/1440449c7dc6cb34f4dc797c9bda3e62"
                },
                {
                    "title": "Improve selftest coverage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5186119859699712/",
                    "content": "Doing changes on large projects can break the project, besides finding bugs can be hard and tedious. Tests help to prevent, find and fix bugs much quicker. FFmpeg contains many self-tests, but still more code is not tested. My work is to significantly improve selftest coverage.",
                    "projectCode": "https://github.com/FFmpeg/FFmpeg/commits/master?author=psincraian"
                },
                {
                    "title": "Motion Interpolation Filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5503363592486912/",
                    "content": "Generate video frames by means of interpolation between existing ones by estimating the \"true\" motion using various algorithms, in attempt to make the video smooth.",
                    "projectCode": "https://docs.google.com/document/d/16HocGB8AviXsRohkKMObag-ayG74ib4LTXOqyn6nd_w/edit?usp=sharing"
                },
                {
                    "title": "MPEG-4 Audio Lossless Coding (ALS) encoder implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5071180629278720/",
                    "content": "The project aims at enhancing and merging the MPEG-4 ALS encoder, which has been written already, into the official FFmpeg codebase. Second, the encoder is to be brought through the usual reviewing process to hit the codebase at the end of the timeline.\nAlso, support for decoding 32-bit floating point data will be added to the decoder.",
                    "projectCode": "https://github.com/FFmpeg/FFmpeg/commits/master?author=omerjerk"
                },
                {
                    "title": "Tee muxer improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5588593460379648/",
                    "content": "Tee muxer is capable of writing same coded packets to multiple outputs. However in current implementation outputs are being blocked by each other and lack mechanism for gracefully restarting output in case of failure. This disallows usage of tee muxer for high-availability purposes.In the proposed project tee muxer will be rewritten so that each of the output will be processed independently and the behaviour of the outputs in case of failure will be configurable by user.",
                    "projectCode": "http://ffmpeg.org/pipermail/ffmpeg-devel/2016-August/198108.html"
                },
                {
                    "title": "TrueHD Encoder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4887887262777344/",
                    "content": "Dolby TrueHD is one of the lossless audio codecs used on Blu-ray discs. FFmpeg is capable of decoding TrueHD content, but encoding functionality is missing. MLP (Meridian Lossless Packing) is a lossless audio codec used on DVDs, and is the basis for TrueHD. A nearly functional MLP encoder had been written in 2009 by Ramiro Polla.For this project, that encoder is first to be updated to fit into the current codebase of FFmpeg and to be tested for conformance against proprietary MLP encoder(s). Second, the encoder is to be updated to implement TrueHD functionality, allowing it to losslessly encode audio to play it on hardware devices capable of TrueHD decoding. Finally, the encoder is to be brought through the usual reviewing process to hit the codebase at the end of the project.",
                    "projectCode": "http://jailuthra.in/2016/08/gsoc-3.html"
                },
                {
                    "title": "VDPAU filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4843924245970944/",
                    "content": "FFmpeg has implemented VDPAU video decoding for quite a time.This project focuses on adding VDPAU filtering support to FFmpeg, allowing to further decrease processor load.",
                    "projectCode": "https://github.com/Benjaminst123/FFmpeg/commits/master"
                }
            ],
            "techStack": [
                "c",
                "asm",
                "git"
            ]
        },
        {
            "title": "FOSDEM VZW",
            "orgLink": "http://fosdem.org",
            "projects": [
                {
                    "title": "Implement overall change tracking in OSEM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5639221461123072/",
                    "content": "Open Source Event Manager (OSEM) is an event management application tailored to Free Software Conferences.\nSoftware conferences tend to have multiple people in charge of its organization.This can often lead to confusion as one organizer may not be aware of the changes made by another organizer/user to some aspect of the conference.\nThe primary aim of this project is to create a page similar to a Changelog which would allow organizers to have an overview of all the changes made to all aspects of a conference and allows them to take related actions.This provides organizers  with a higher degree of control over the organization of their conferences.",
                    "projectCode": "https://gist.github.com/nishanthvijayan/86e49608f259acaa8c0702d78fd480e7"
                }
            ],
            "techStack": [
                "ruby on rails",
                "postgresql",
                "git"
            ]
        },
        {
            "title": "FOSSASIA",
            "orgLink": "http://fossasia.org",
            "projects": [
                {
                    "title": "CommonsNet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6209061078958080/",
                    "content": "Across the world there are different legal settings and requirements for sharing of Internet connections and specifically Open Wifi connections. The main aim of my project is making all of these wireless details transparent to Wifi users by providing them in an easy-to-understand and clear manner. The website generates a human readable file and a machine readable file of the level of sharing that is offered by someone.",
                    "projectCode": "https://gist.github.com/agwisniewska/7c59390602fd90d0587b2d4e4393a2d9"
                },
                {
                    "title": "Conception and development of loklak_depot: a platform and marketplace for data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5323730880299008/",
                    "content": "loklak_depot is a new product, which aims to be a platform, for all things data. The big-picture aim is to:My work will focus on developing the main loklak_depot functionality, specifically work on the Secure Accounts and AAA system, on developing AskSusi and make them use the data scraped, and fix server issues in general.",
                    "projectCode": "https://gist.github.com/shivenmian/7e0815a9ed91c2cd4ca661e9c82f6b6c"
                },
                {
                    "title": "Create REST APIs to write data to the Open Event Organizer Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4901518415233024/",
                    "content": "",
                    "projectCode": "https://github.com/fossasia/open-event-orga-server/commits?author=shivamMg"
                },
                {
                    "title": "Enhancements to the FOSSAsia Open Event Android App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4543415047946240/",
                    "content": "Enhancing the FOSSAsia Open Event Template to add new functionalities like",
                    "projectCode": "https://gist.github.com/the-dagger/742f3bbd565718355d7ef1e6cbe8353b"
                },
                {
                    "title": "Enhancing Open Event Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6544601640861696/",
                    "content": "",
                    "projectCode": "https://github.com/fossasia/open-event-orga-server/commits?author=aviaryan"
                },
                {
                    "title": "GSOC proposal for Timeline and Search Navigation for loklak.net",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4879108618059776/",
                    "content": "loklak is free software hosted on loklak.org which provides message search results from twitter in json format. \nloklak is a complete search engine back-end solution with a JSON api. What is missing to provide a search web page is a web page design showing the json search results as timeline in the style of a twitter search result. \nAdd features to the existing wall and improve the current timeline so that it becomes a common social platform for social media. \nBasically it should look like https://twitter.com/search?src=typd&q=fossasia in the right column while the left column has to provided new/other search navigation tools. The data to be presented will all be within the json API of loklak. The timeline web page must also provide - switching off the left navigation columns and switching on self-refreshing which turns the timeline into a twitterwall - some kind of animation when selecting navigation options in the left column (i.e. fade-in and fade-out of select options)",
                    "projectCode": "https://gist.github.com/sopu/d4c76e24984d65500cc83a4856e1fc39"
                },
                {
                    "title": "Improve and enhance the Open Event system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6289482999398400/",
                    "content": "Open event system is at a basic stage, but the functionality is still not complete, like the server is not secure, the app is not fully customisable, doesn't have the tests and the webapp is kind of really basic and slow. So, I plan to improve that and work on making the system better and ready to be used by organisers all over the world for their events.",
                    "projectCode": "https://gist.github.com/mananwason/882471d00e09d1c96aafae57a6098caa"
                },
                {
                    "title": "Improve sTeam",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6141210527793152/",
                    "content": "The aim of my project is to improve the interface of sTeam and make it more interactive and secure. I will be adding the TLS protocol for all the network communication and then work on the improve the user interface adding the plugins for vim and emacs. Towards the end I would be improving the packaging and error management making the installation process easier and smooth.",
                    "projectCode": "https://github.com/Siddhant085/sTeam/wiki/Siddhant085-Work-during-GSOC-2016"
                },
                {
                    "title": "Improve the Open Event Organizer Server and implement missing features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5373822412783616/",
                    "content": "Organizing an event like a Conference or a technical festival is not an easy task. Here’s where the need for a software platform to assist the team in managing the various aspects of the event arises.And I believe Open-Event could be the answer to that. Open-Event Organizer server shouldn’t just be for adding/editing and accessing the sessions, speakers, tracks, etc. It should also be able to assist the organizers in planning the event, managing it, and post-event documentation.",
                    "projectCode": "https://github.com/fossasia/open-event-orga-server/commits/development?author=niranjan94"
                },
                {
                    "title": "Improve tooling for sTeam collaboration platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5929253354864640/",
                    "content": "A Collaborative software is an application software designed to help people involved in a common task to achieve their goals. sTeam is one such collaboration platform which gives it's\nuser's the ability to share their knowledge, ideas and codes in their working groups and receive\nfeedback and reviews for their work in an efficient and well organized manner. sTeam is an open environment which keeps track of virtual spaces. In order to inspect the sTeam server while it is\nrunning we need the command line utilities. This project aims to improve the overall utility of the\nsTeam platform mainly focusing on the command line tools of this platform.It would also focus on simplifying the deployment and collaborating the new web-interface with the existing functions of the platform.",
                    "projectCode": "https://github.com/ajinkya007/sTeam/wiki/GSOC-16-Work:-sTeam-CLI-%5Bajinkya007%5D"
                },
                {
                    "title": "Loklak apps/microservices to the open tweet platform loklak.net and IoT integrations using the loklak backend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6447260770500608/",
                    "content": "loklak is free software hosted on loklak.org which provides message search results from twitter in json format. loklak is a complete search engine back-end solution with a json api. Loklak’s API can be used to build twitter clones and client alike, one of them being loklak.net. One of the main features that’s pending in such a tool is the ease of adding angular micro services and modularizing the existing application to run on micro services. Alongside the data store of loklak is magnificent and provides the ability to build IoT platforms using the loklak server. In this proposal I would like to enhance the service architecture of loklak.net and build a proof of concept IoT application demonstrating the capabilities of the loklak server.",
                    "projectCode": "https://drive.google.com/file/d/0ByvcOk0FPKwKQ2dqb2FPMnJkZkk/view?usp=sharing"
                },
                {
                    "title": "Loklak: IoT prototypes and a loklak backend systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5369164386533376/",
                    "content": "IoT has been a growing field and has been ever increasing at tremendous rates, All of this makes it important to have open data systems such that the applications can communicate openly while at the same time ensuring that the user has complete control and power over the data that one and their devices are sharing with the world. I believe the dynamic nature of the project is very promising and can prove to be a turning point in the way people have their personal data stores for their IoT platforms.I want to Build IoT tools which use loklak_server as their main data store and provide a proof of concept on local home loklak server so that the users can maintain the power over the data that’s being shared and build complete applications around that.",
                    "projectCode": "https://docs.google.com/document/d/1FxkKu1SwrOruzMYLM2R6l8Ro1HnogABZ1s-u8XKRQdU/edit?usp=sharing"
                },
                {
                    "title": "Open Event Orga Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4922402962145280/",
                    "content": "Solution which will accelerate a process of creating conference event",
                    "projectCode": "https://gist.github.com/rafalkowalski/2c3cdf586f0961f1c747b4e7de9668af"
                },
                {
                    "title": "Open Event Organizer Server Feature Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4774998610804736/",
                    "content": "The proposal looks forward to implement features such as API auth, calendar export, review system, etc.  that could make the project better and more user friendly. The proposal also looks forward to make UI/UX enhancements in the Admin Dashboard to make the process much more intuitive.",
                    "projectCode": "https://gist.github.com/SaptakS/ae5be5186110cd559e5213b33938407a"
                },
                {
                    "title": "Open Event Web and Mobile App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5381507317235712/",
                    "content": "I wish to contribute to the development of the client side apps of Open Event project (both web and android) and be able to fix the existing bugs, and add features more features from the Roadmap",
                    "projectCode": "https://github.com/fossasia/open-event-webapp/commits/development?author=championswimmer"
                },
                {
                    "title": "Open Source Science Experiments & Data Acquisition System  for Physics Education and Research with ExpEYES - Pocket Science Lab",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5233580858933248/",
                    "content": "Pocket Science Lab at FOSSASIA aims to develop open source hardware & software technology to improve science education in the developing  world. The main component of PSL is ExpEYES, an open source hardware and software framework for developing science experiments. (http://expeyes.in)This proposal aims to develop open science experiments for various branches of Physics. It also aims to continue improvements in the work done during my GSoC-2015  project “Sensor Plug-ins, Add-on devices and GUI Improvements for ExpEYES”  (https://goo.gl/2B2CNO). The sensor plug-ins developed during GSoC-2015 project will be used for designing new low-cost  experimental set-ups.The new development  that will be undertaken is adding wireless node module for accessing sensors with PSL. This will enable PSL to fetch data from various sensors wirelessly and it will be useful in many experiments involving oscillatory and rotatory motions.\nDevelopment of  low cost modules for characterization in Physics research for example -  study of  sound and light absorption,  measurement  of  thermal conductivity etc, is yet another important feature of this project.",
                    "projectCode": "http://wavicles.github.io/"
                },
                {
                    "title": "Open-Event-Webapp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6735847407747072/",
                    "content": "The objective of the project is to implement new features in the Open-event-webapp , improving the User Experience ,integrating the Fossasia Open-event-orga-server with the webapp and finally using ng-update to port the app on Angular 2.0 using ng-forward.",
                    "projectCode": "https://aayusharora.github.io/"
                },
                {
                    "title": "Proposal for Knitting and IoT-cloud services",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4926423051534336/",
                    "content": "Over the past years I have become an open source enthusiast valuing community. I would be happy to join the FOSSASIA community in their effort to create open-source software and hardware in this year’s Google Summer of Code. Therefor, I apply for several projects in the context of the Google Summer of Code under the FOSSASIA umbrella: all from the FashionTec, “Implement support for additional knitting machines and enhance UX”, “Code a printable circular knitting machine with an optional mini-computer and enhance knitapp”, “Additional Plugins and Features for Knitting Machine Software”, and form the IoT Track “Internet of Things IoT prototype using RPi/Odroid/Arduino hardware and a loklak back-end”.",
                    "projectCode": "https://niccokunzmann.github.io/blog/2016-08-10/Google-Summer-of-Code-Contributions"
                }
            ],
            "techStack": [
                "javascript",
                "android",
                "python",
                "java",
                "json api"
            ]
        },
        {
            "title": "Free and Open Source Silicon Foundation",
            "orgLink": "http://fossi-foundation.org/",
            "projects": [
                {
                    "title": "QEMU port of OpenRISC",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5634130582700032/",
                    "content": "QEMU is a free and open virtual machine software that can be useful for the OpenRISC community for testing and teaching software development on the platform.The idea is to provide full support of the OpenRISC platform with some software already (the Linux operating system) and other devices, all running efficiently on the host system.Alongside with the software, documentation should be provided, to guide the community and (especially) beginners on how to use the platform to development and testing.",
                    "projectCode": "https://github.com/dalmonian/qemu/commits/final-gsoc?author=dalmonian"
                },
                {
                    "title": "RISC-V port to Parallela",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6309771351162880/",
                    "content": "With this proposal I hope to benefit the open-source hardware enthusiast community with work related to the incredible Parallela board used by thousands of students and hobbyists around the world.  This project will focus on the integration of the RISC-V rocket core, inside the Zynq FPGA device of Parallela. The RISC-V rocket core is an implementation of the RISV-V ISA that has gotten a lot of attention and support due to being clean, modular and power efficient. This project will allow owners of Parallela boards to write and execute RISC-V programs with minimal effort from their side. The system will work out of the box with a prebuilt binary image ready to be placed in an SD card and users will be able to re-build it with minimal effort. Moreover, a tutorial document will be created to aid inexperienced users make the most of this work and allow them to modify it for their own needs and purposes with custom hardware and / or software code.",
                    "projectCode": "https://github.com/eliaskousk/parallella-riscv"
                },
                {
                    "title": "Yosys Tools: Automatic schematic generation for web browsers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5834884065001472/",
                    "content": "Schematics are a great way to understand electronic circuits, and specially when we are using high level descriptions, it becomes essential that we are able to portray what we have in mind. Automatic schematic generation will allow us to generate publication quality schematics directly from HDLs (verilog in this case).The objective is to take input a circuit desciption in json format (generated by yosys tools), and automagically create a schematic for it. The algorithm will run on the client side, so there will be no need to send data to server (thus no privacy concerns). Moreover interactivity with the generated circuit will allow it to be used as a great tool for learning circuits and HDL.I plan to implement the core algorithm as library which can be easily extended to work with a variety of cases like",
                    "projectCode": "https://github.com/RishabhRawat/schematicGenerator/commits?author=RishabhRawat"
                }
            ],
            "techStack": [
                "open hardware",
                "fpga",
                "compiler",
                "python",
                "javascript"
            ]
        },
        {
            "title": "FreeBSD",
            "orgLink": "https://www.FreeBSD.org/",
            "projects": [
                {
                    "title": "Add SCSI passthrough to CTL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6277627815919616/",
                    "content": "CTL is the FreeBSD SCSI target layer. There are various SCSI commands, but it's usually used for block-level access. This projects focuses on making CTL capable of providing physical optical drive as a whole to the initiator machine",
                    "projectCode": "https://github.com/bhimanshu1997/freebsd/commits/master?author=bhimanshu1997"
                },
                {
                    "title": "Adding SCSI passthrough to CTL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5648334039547904/",
                    "content": "The purpose of this project is to export physical SCSI devices with all their features over iSCSI through CTL as an actual SCSI target.",
                    "projectCode": "https://github.com/suraj5/freebsd/commits/master"
                },
                {
                    "title": "Ethernet Ring Protection Switching",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5447855972024320/",
                    "content": "Ethernet Ring Protection Switching (ERPS) provide sub-50ms protection and recovery switching for Ethernet traffic in a ring topology and at the same time ensuring that there are no loops formed at the Ethernet layer, which is defined in ITU-T G. 8032. The goal of this project is to implement the ERPS protocol in FreeBSD, so that the appliances such as pfSense and FreeNAS can be directly plugged into the ERPS network without the need to sit behind routers.",
                    "projectCode": "https://docs.google.com/document/d/1aeZ1v5jMDn6Ez3-fpegwhAqogZrubFIXkI119mcHd1o/edit?usp=sharing"
                },
                {
                    "title": "Grant-Table User-Space Device",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6242443443830784/",
                    "content": "A grant-table user-space device will allow user-space applications to map and share grants (Xen way to share memory) among Xen domains.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/GrantTableUserSpace"
                },
                {
                    "title": "HD Audio device model in userspace for bhyve",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6558894755151872/",
                    "content": "The bhyve hypervisor does not have any sound card emulation at the moment. This project is proposed by Peter Grehan and aims to implement the High Definition Audio Specification which is one of the best performant and supported device in the nowadays operating systems. Some of the reasons to have this device are: support for multiple input and output streams, up to 16 channels per stream, command-response codec communication, DMA channel for each stream and it is interfaced with the PCI bus. The main goal is to have a functional implementation by the end of the summer that will allow playing sounds inside a bhyve virtual machine.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/HDAudioEmulationForBhyve"
                },
                {
                    "title": "High-performance P4 software switch using netmap",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4750576889888768/",
                    "content": "Software switches are a key component of any cloud infrastructure,\nand even proposal focused on hardware targets, such as P4 (http://p4.org),\ncannot ignore software implementations and their performance.Historically, software packet processors have been limited in\nperformance by network I/O, but this is no more true with high\nspeed frameworks such as netmap and DPDK.In this project I would like to implement a modified version of the reference p4\nswitch on FreeBSD, which uses netmap for faster packet I/O: the goal would be\nreaching the 1 Mpps order-of-magnitude speed (current reference implementation\nis limited to 150 Kpps for a simple l2 switch with 2 hosts).This would enable P4 to be used in fast networking experimens as well as real\nenvironments.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/HighPerformanceP4SoftwareSwitch"
                },
                {
                    "title": "High-performance TCP/IP networking for bhyve VMs using netmap passthrough",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5927286796713984/",
                    "content": "Modern cloud computing technologies require powerful virtualization tools. The bhyve hypervisor is currently missing an high performance Virtual Machine networking solution, comparable to vhost-net on Linux and QEMU-KVM. Using netmap passthrough, I would like to extend the bhyve hypervisor to support high speed TCP/UDP traffic (~20 Gbps per VM interface) .",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/PtnetDriverAndDeviceModel#preview"
                },
                {
                    "title": "Improving libvirt support for bhyve",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5784838569197568/",
                    "content": "The primary aim of this project would be to improve libvirt support for bhyve. Missing API functions in the libvirt bhyve driver shall be implemented and where necessary interfaces to the bhyve user-space tools added.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/ImprovingLibvirtSupportForBhyve"
                },
                {
                    "title": "libnv improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5098158929477632/",
                    "content": "The libnv library allows to easily manage name value pairs as well as send and receive them over sockets. You are able to add bools, strings, numbers, descriptors, binaries or even nest one nvlist in another. Nvlist has a great potential since it’s API simplifies the work done by a developers. It still needs some improvements. For example we can add a JSON format or improve efficiency of operations in libnv.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/libnvImprovements"
                },
                {
                    "title": "Non-BSM to BSM Conversion Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4694123034443776/",
                    "content": "Let's imagine a FreeBSD server which collects audit records from machines that are not necessarily using BSM as the format of their audit records. The idea is to create a tool which would be able to load a module, read audit records in a non-BSM format and output audit records in BSM that misses as little data as possible due to the differences between format standards.I’ll focus mainly on the Linux Audit and Windows format.The aim of the project is to ease the maintenance of a network of servers with different audit format. The tool would allow to comfortably manage different audit log files collected from our servers and examine them using default FreeBSD administration tools which support BSM format.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/NonBSMtoBSMConversionTools"
                },
                {
                    "title": "Support bhyve as a Vagrant VM backend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6640955742486528/",
                    "content": "Vagrant is a tool to create and manage virutal environment, which can be used to for creating and configure lightweight, reproducible, and portable development environments. This project is aiming at producing a Vagrant plugin to make bhyve as a new provider of Vagrant which makes bhyve users can use Vagrant to manage their VMs more easily.",
                    "projectCode": "https://github.com/jesa7955/vagrant-bhyve/commits/master?author=jesa7955"
                },
                {
                    "title": "TCP/IP Regression Test Suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6631273544024064/",
                    "content": "Regression testing is one of the most critical elements of the test artifacts and proves to be one of the most preventive measures for testing a software. Currently, within FreeBSD, there is no such tool to perform regression testing of the TCP/IP network stack. The purpose of this project is to develop tests using a regression testing tool which can then be integrated with FreeBSD. The wire level regression test suite will exercise various states in the TCP/IP protocol suite, with both IPv4 and IPv6 support. Once integrated, the tool will also facilitate further development of such tests. The regression testing tool of choice here is Packetdrill. Packetdrill currently supports testing multiple scenarios for TCP/IP protocol suite within Linux. The existing Linux test suite implemented within Packetdrill will provide a basis for understanding, and implementation of the FreeBSD test suite.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2016/TCP-IP-RegressionTestSuite"
                }
            ],
            "techStack": [
                "c/c++",
                "clang",
                "llvm",
                "shell script",
                "make"
            ]
        },
        {
            "title": "Freifunk",
            "orgLink": "http://freifunk.net",
            "projects": [
                {
                    "title": "A schema-based configuration system for OpenWrt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6011300383555584/",
                    "content": "I'd like to create an alternative to OpenWrt's UCI configuration system, improving on the following points:While the technical realization of this plan is not set in stone yet, I think this project will consist of the following parts (and their corresponding documentation):",
                    "projectCode": "http://blog.freifunk.net/2016/gsoc-ece-configuration-system-summary"
                },
                {
                    "title": "DynaPoint - A dynamic access point validator and creator for OpenWrt/LEDE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5759497725280256/",
                    "content": "Find an easily configurable solution for making the wireless access ssid in OpenWrt/LEDE dependent on a set of network conditions.",
                    "projectCode": "https://github.com/thuehn/dynapoint"
                },
                {
                    "title": "Implementing Pop-Routing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5374689325088768/",
                    "content": "OONF (OLSRv2) is a link state routing protocol. It works sending periodical messages to his neighbors with the aim of transmitting information about topology changes. With these information each node of the network is able calculate the paths to reach any other destination. \nThese messages are periodically generated, based on the configuration parameter that regulates the sending interval. A short period will make the network react rapidly but it will also cause a large overhead due to control messages.\nPop Routing is a recent technique that takes advantage of the knowledge of the network topology to find the optimal value for the OONF’s timers. Using Pop Routing every node computes its own “betweenness centrality” and uses it to calculate the optimal trade-off between convergence and overhead. The  algorithm has been developed at the UniTN and the needed libraries to compute the BC are available as free software.\nMy goal is to build a daemon that can calculate autonomously the BC of the network, together with a plugin for OONF that will use this value to tune its timers.",
                    "projectCode": "http://blog.freifunk.net/2016/implementing-poprouting-final-evaluation"
                },
                {
                    "title": "Monitoring and quality assurance of open wifi networks: the client view",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5172789354954752/",
                    "content": "Running a huge open wifi network that is split into different network areas needs monitoring to assure an appropriate quality of service to it's users. Until now we just monitor our servers to recognize network bottlenecks and failures. But to assure an appropriate quality of service we also need the users view onto the network.The goal of this task is to build a software running on low budget OpenWRT-Routers like WR841ND that acts like a client and regulary gathers status data from the clients view onto the network. Some common tasks of this software would be:The software should be build as OpenWRT package and should contain a user interface for the Luci web interface",
                    "projectCode": "http://blog.freifunk.net/2016/monitoring-and-quality-assurance-open-wifi-networks-out-client-view-final-evaluation"
                },
                {
                    "title": "netifd extension: external device handlers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5944457270657024/",
                    "content": "In this project, we will extend netifd by a generic device handler interface, which is exposed via the ubus IPC system to enable interaction with external device handlers. In other words, the goal is to decouple the device management functionality from netifd to other separately maintained device managers to allow both sides to evolve independently. Moreover, the decoupling will allow netifd to manage devices of types which may even be unknown to netifd without the need to change the central UCI network device configuration in /etc/config/network. In this project, we will present a basic proof-of-concept module which outsources the control over Open vSwitch in OpenWrt to an external device handling entity. Specifically, we will realize a small daemon acting as a relay between the ovs command line tools and netifd's ubus device handler interface. Native support of Open vSwitch in OpenWRT will open a wide range of different use-cases.",
                    "projectCode": "http://blog.freifunk.net/2016/google-summer-code-2016-external-netifd-device-handlers-final-milestone"
                },
                {
                    "title": "OpenWrt - poWquty (poWer quality)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5178692250632192/",
                    "content": "Sustainable energy production and consumption are crucial for a prospering life on earth. Decentralized energy production is one of the next big challenges, which will influence the energy production in the future years. The emerging smart grids include an inherent need for communication for monitoring and control purposes in a more and more dynamic environment. One of the major challenges is monitoring the power quality parameters in a decentralized manner. The Freifunk mesh network is an outstanding example for a decentralized infrastructure that could be augmented with grid related functionalities to cope with future energy challenges. The main goal of this project is to enable power quality measurements on OpenWrt. Voltage samples from the electric socket are retrieved at the router. Next power quality parameters are calculated, and finally made available for retrieval over IP networks.",
                    "projectCode": "http://blog.freifunk.net/neez-el-sayed"
                },
                {
                    "title": "Provide a cryptographic implementation for Qaul.net",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6078005789065216/",
                    "content": "The Qaul,net project provides a mesh-wifi network for people to connect and share information to other people on the network, helping them avoid potentially compromised or censored channels of communication. It does however currently do so without any cryptographic layer, exposing potentially personal data to the public in clear text via wireless channels as well as not allow users to verify other users and messages identities.\nProviding a cryptographic layer for Qaul.net, implementing not only public/ private key method encryption (either via RSA or ECC) but verifiable identities would make Qaul.net a much safer and more private channel of communication for everybody.",
                    "projectCode": "https://spacekookie.de/gsoc2016/what-i-have-done-in-gsoc-2016/"
                },
                {
                    "title": "SWOON: Simultaneous Wireless Organic Optimization within Nodewatcher",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5110178932326400/",
                    "content": "In modern urban areas it is very common to experience a lot of Wi-Fi spectrum congestion in the 2.4GHz and 5GHz bands. High density of omnidirectional antennae per unit area directly translates to low SNR and thus bad wireless performance of our nodes. In the case where we only control one wireless node, not much can be done. We can scan the surroundings and choose the channel with a maximal SNR. But with a node database system, we can simultaneously optimize the spectrum allocation (both in terms of bandwidth as well as the center frequency, i.e. channel) across different nodes. SWOON is an algorithm that would maximize channel capacities over multiple nodes in close proximity.",
                    "projectCode": "http://blog.freifunk.net/2016/swoon-simultaneous-wireless-organic-optimization-within-nodewatcher-final-steps"
                }
            ],
            "techStack": [
                "openwrt",
                "olsr",
                "batman",
                "c",
                "lua"
            ]
        },
        {
            "title": "Gambit - Software Tools for Game Theory",
            "orgLink": "http://www.gambit-project.org/",
            "projects": [
                {
                    "title": "Best responses representation in bimatrix games",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5583575864836096/",
                    "content": "Gambit is the first software for quantitative analysis in game theory. GTE (Game Theory Explorer) is a GUI (Graphical User Interface), it allows users to create and modify game settings and it computes corresponding equilibria. The project aims at making GTE an efficient tool for game theory learning, allowing for a better understanding of equilibria. It consists on a graphical display of best responses and equilibria in GTE. It can be divided in for main steps.Game settings can be specified by two matrices or a tree.  The first step is to convert both representations into a generic input format for graphical displaying.\nThe second step is to provide a 2D graph of best responses. This graph would be updated as the user modifies settings. It corresponds to the midterm evaluation.\nThe third step focuses on JavaScript implementation. This will include 3D display, the possibility of modifying the game directly on the graph and allowing users to download good quality drawing of the display.\nThe last step is to display the path between equilibria by the Lemke-Howson algorithm.At the end of the project, GTE will provide intuitive displays to understand game theory results.",
                    "projectCode": "https://github.com/gambitproject/jsgte/blob/master/INFOS/amelie.md"
                },
                {
                    "title": "GTE: the Future Tool in Game Theory",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6027418322075648/",
                    "content": "I am interested in Gambit and GTE for two reasons. First, I believe that the project provides an incredibly useful tool for any researcher using Game Theory in an accessible setting that is not currently available. Had I known of the existence of the GTE during High School I would have used it extensively in a project regarding the use of characterizations of the weak sequential equilibrium for the Chain Store Paradox applied to Political scenarios. Second, I am fascinated by Game Theory and I am eager to explore its computational side. Specifically, I am interested in updating and complementing the current software using JavaScript to improve its functionalities and bring it closer to the straightforward and adaptable tool it will become.",
                    "projectCode": "https://github.com/gambitproject/jsgte/blob/master/INFOS/jaume.md"
                },
                {
                    "title": "Re-design of GTE in Javascript",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5981651687440384/",
                    "content": "Gambit is one of the leaders for analyzing games as models of strategic interaction. But it needs to be installed and since people tend to skip over the tedious job of downloading, installing and setting up a software, the reach of gambit is restricted. This project aims at providing a browser interface to the Game Theory Explorer so that the resources of gambit are more easily accessible to people.",
                    "projectCode": "https://github.com/gambitproject/jsgte/blob/master/INFOS/harkirat.md"
                }
            ],
            "techStack": [
                "javascript"
            ]
        },
        {
            "title": "Ganeti",
            "orgLink": "http://www.ganeti.org",
            "projects": [
                {
                    "title": "Optimize balancing speed by accounting for migration speed",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4647525055201280/",
                    "content": "I wish to solve the task of optimize balancing speed and providing balancing user options for HTools.\nThe main idea is to get make process of balancing more predictive and controllable. After that improve HTools by preventing bad moves during balancing calculation.",
                    "projectCode": "https://github.com/leshchevds/ganeti/commits/all_patches?author=leshchevds"
                }
            ],
            "techStack": [
                "python",
                "haskell",
                "kvm",
                "xen",
                "virtualization"
            ]
        },
        {
            "title": "Genes, Genomes and Variation",
            "orgLink": "http://www.ensembl.org",
            "projects": [
                {
                    "title": "Graphical workflow editor for eHive using Blockly",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5977064662368256/",
                    "content": "eHive is a system used to run computation pipelines in distributed environments. eHive workflows are currently being migrated to a Relax NG specification. Currently the eHive workflows are manually coded and this requires expertise in computer science. It also takes up a lot of time. Due to such shortcomings handling workflows becomes very cumbersome.This project aims to remove these drawbacks of the existing system by creating a graphical editor for eHive workflows using Google's Blockly library which would enable us to visualize the XML code in terms of Blockly blocks and provide output for them in XML format using Blockly's existing \"Export to XML\" option. The backbone of this graphical editor would be some rules written to handle the Relax NG XML schema specification and to create Blockly blocks automatically in accordance with the same.For example, the XML to Blockly converter would apply pre-defined rules to the Relax NG specification entered by the user, and generate code to represent the specification using Blockly blocks.The proposed editor would have capabilities of handling not just workflows for eHive, but any specifications written using the Relax NG schema.",
                    "projectCode": "https://github.com/Ensembl/XML-To-Blockly/commits/gh-pages?author=anujk14"
                },
                {
                    "title": "Visualization of Genomic Sequence Graphs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5861745595777024/",
                    "content": "Recent scientific advances have lead to a huge increase in the amount of available genomic sequence information. In the past this sequence information consisted of a single reference sequence, which can be relatively easily visualised in a linear way. Today we often know multiple variants of a particular DNA sequence. The differences between the individual sequences are called polymorphisms and can range in size from variations of a single base pair (single nucleotide polymorphism = SNP) to variations involving long stretches of DNA.There are a number of approaches (and file formats) for formally encoding variants of genomic sequences and their relationships in the form of graphs. Unfortunately it is often difficult to visualise these graphs in a way which conveys the complex information yet is intuitively easy to understand. The goal of this project is to help in the visualisation of genomic sequences and their variations by providing a JavaScript module which generates visual representations of genomic sequence graphs. This module aims to display the information about all sequence variants in a single visualisation as elegantly as possible.",
                    "projectCode": "https://github.com/wolfib/sequenceTubeMap"
                }
            ],
            "techStack": [
                "mysql",
                "javascript",
                "perl"
            ]
        },
        {
            "title": "Gentoo Foundation",
            "orgLink": "http://www.gentoo.org",
            "projects": [
                {
                    "title": "Bring Native Clang Support to Gentoo",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4881556212547584/",
                    "content": "Clang is a C/C++/Obj-C compiler spawned from the LLVM project, famous for its modular design, rich diagnostic messages, non-intrusive license, etc. Some Unix flavors, including FreeBSD and OS X, have already adopted a purely clang/LLVM based toolchain. It would be interesting and beneficial to have clang as a first-class compiler, in place of GCC, on Gentoo as well. This task involves bootstrapping a freestanding clang along with its supporting libraries, and deploy them on Gentoo.",
                    "projectCode": "https://blogs.gentoo.org/gsoc2016-native-clang/2016/08/17/gsoc-2016-code-submission-status/"
                },
                {
                    "title": "Continuous stabilization of Gentoo Packages",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5432994848309248/",
                    "content": "Gentoo is an operating system with extreme focus on configurability and performance. To provide fully customizable experience, without interfering with the stability of the system, Gentoo has a concept of masked packages. These masked packages (or versions) are either untested, or are known to be unstable and are installed only if the user explicitly unmasks them. While this concept is a boon to the stability of the operating system, the current implementation requires the packages to be tested manually by a team of developers. This significantly increases the time in which new packages are made safely available to the users. The goal of this project is to provide a mechanism to test and stabilize the packages automatically with little or no human intervention.",
                    "projectCode": "http://orca.varstack.com/"
                },
                {
                    "title": "Gentoo Keys Improvements and the new MetaManifest system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5407654004391936/",
                    "content": "Gentoo-GPG is a python-based project that allows the user/developer to encrypt and sign their data and communications and ensuring integrity of distributed data in Gentoo tree (ebuilds, files and distfiles so that malleability of a distributing server isn't possible) by creating GPG keys and is used for Gentoo’s release media like installation CDs, Live DVDs and other GPG-signed documents. It will also be used by the Gentoo infrastructure for GPG-signed git commit validation, as well as, provide functions for commit authentication by developers. The Meta-Manifest brings security of distribution of Gentoo Software by providing a much less expensive way of verifiable distribution from Gentoo Infrastructure to a user system, while data is conveyed over completely untrusted networks and systems.",
                    "projectCode": "https://blogs.gentoo.org/gsoc2016-gentoo-gpg/2016/08/17/gentoo-gpg-final-report/"
                },
                {
                    "title": "kernelconfig",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4931016787492864/",
                    "content": "Automated creation of kernel configuration files from curated sources, detected hardware, installed packages and user input.",
                    "projectCode": "https://github.com/dywisor/kernelconfig/commits/master?author=dywisor"
                },
                {
                    "title": "libebuild",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6172897454325760/",
                    "content": "The purpose of this project is to provide a shared and well-tested implementation of parsing package atoms and related support for pkgcore - alternative package manager for Gentoo, similar to portage, which aims for high performance, good extensibility and a clean design.",
                    "projectCode": "https://blogs.gentoo.org/gsoc2016-libebuild/2016/08/20/final-submission/"
                }
            ],
            "techStack": [
                "shell script",
                "c/c++",
                "python",
                "perl",
                "sql"
            ]
        },
        {
            "title": "Git",
            "orgLink": "http://git-scm.com/",
            "projects": [
                {
                    "title": "Incremental Rewrite of Git Bisect",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5595001820020736/",
                    "content": "Git bisect is a frequently used command which helps the developers in finding the commit which introduced the regression. Some part of it is written in shell script. I intend to convert it to portable C code thus making them builtins. This will increase Git’s portability.",
                    "projectCode": "https://drive.google.com/drive/folders/0B2SBIDYEkAaiV2xhNWZNSUdWOVE?usp=sharing"
                }
            ],
            "techStack": [
                "c",
                "shell script",
                "git"
            ]
        },
        {
            "title": "GitHub",
            "orgLink": "https://github.com/github",
            "projects": [
                {
                    "title": "Add support for lookup by repository ID throughout GitHub APIs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5626090403921920/",
                    "content": "The GitHub API supports looking up repositories by owner and name, but a secondary API exists which supports looking up repositories by their numeric ID. As far as repositories are a key feature of the GitHub API, adding support for this will flow through a significant part of the codebase and involve a number of core components.",
                    "projectCode": "https://github.com/octokit/octokit.net/issues/1120#issuecomment-224547350"
                },
                {
                    "title": "Enhanced User Management for GitHub Classroom",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4920090390691840/",
                    "content": "Classroom for GitHub is a Ruby on Rails application designed to automate repository creation and access control, making it easy for teachers to distribute starter code and collect assignments on GitHub. However, it does not have powerful student management functionalities right now, which means a teacher can not reassign students to another team, change the team name or set an identifier for students, etc.To make the GitHub classroom more wonderful, I propose to implement various features for student management and build a student management interface for the classroom project, on which the teacher can have an overview of students involved in the classroom, management group assignment teams, and add identifiers for students, etc. By implementing those features, we can make GitHub classroom more easy to use and give the teacher more control on their classrooms.",
                    "projectCode": "https://gist.github.com/dinever/848ac259967c850f18b994b7b3038feb"
                },
                {
                    "title": "Enhancements for GitHub Classroom",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5491949985333248/",
                    "content": "In this project, I will work on improving the existing GitHub Classroom based on the current user feedback, such as building dashboards for teachers and site admins and implement functions that helps teachers better manage their classrooms.",
                    "projectCode": "https://gist.github.com/cyhsutw/0d5df3151337c044edcac66073ea0ec3"
                },
                {
                    "title": "GUI/Administrative interface for Jekyll",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6704160481214464/",
                    "content": "Wide usage of CMS applications like Wordpress proved that once a site is setup, ordinary users can maintain, populate and extend the site through a well designed interactive GUI. The goal of this project is to develop a graphical user interface to achieve the same purpose for Jekyll so that non-tech Jekyll users can also use and enjoy their application better than before.",
                    "projectCode": "https://github.com/jekyll/jekyll-admin/pulls?q=is%3Apr+author%3Amertkahyaoglu+is%3Aclosed"
                }
            ],
            "techStack": [
                "git",
                "atom",
                "node.js",
                "ruby",
                "c#"
            ]
        },
        {
            "title": "Global Alliance for Genomics & Health",
            "orgLink": "https://genomicsandhealth.org",
            "projects": [
                {
                    "title": "Beacon Compliance Suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5553409088290816/",
                    "content": "Main tasks include the following:The tasks links for detailed info:https://github.com/mcupak/beacon-cli/issues/1https://github.com/mcupak/beacon-client/issues/1https://github.com/mcupak/beacon-network-cli/issues/1https://github.com/mcupak/beacon-network-client/issues/1https://github.com/mcupak/beacon-java/issues/1https://github.com/mcupak/beacon-java/issues/2https://github.com/mcupak/beacon-java/issues/5https://github.com/mcupak/beacon-java/issues/6https://github.com/mcupak/beacon-java/issues/3",
                    "projectCode": "https://gist.github.com/artemik/2a985c4a4c604cf6f212463a568ef10c"
                },
                {
                    "title": "Building a Better Beacon: Developing Supporting Tools for the Beacon Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4806214433112064/",
                    "content": "With beacons being lit and the specification readily being adopted by organizations all over the world, there is a need for a toolkit which guarantees compliance with the defined beacon API. The toolkit should contain an entire compliance test suite for organizations looking to implement the beacon API, as well as adapters (or protocols for creating adapters) for organizations which want to user their current data for the beacon. My proposed project will implement the toolkit as well as generate more community documentation to further simplify the beacon creation process.",
                    "projectCode": "https://gist.github.com/patmagee/08b73b93f4be6dbca87406e35cf6d9b0"
                },
                {
                    "title": "GSoC Student Proposal for SMART/FHIR and GA4GH",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6615272911798272/",
                    "content": "I am submitting  a proposal for integrating SMART/FHIR and GA4GH",
                    "projectCode": "https://drive.google.com/file/d/0BwMrLWyiMI9pQ0Z1U0hmb2tST2M/view?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "java",
                "protobuf",
                "sql"
            ]
        },
        {
            "title": "GNOME",
            "orgLink": "https://www.gnome.org/",
            "projects": [
                {
                    "title": "Audio tag editing support for GNOME Music",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5029663596347392/",
                    "content": "Make GNOME Music more than just a read-only view of the user's music collection by providing features to embed metadata into the music files.",
                    "projectCode": "https://gist.github.com/saifulbkhan/f3d470880fd505d68d9192a715786857"
                },
                {
                    "title": "Boxes: More SPICE features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5668387241852928/",
                    "content": "GNOME Boxes is an application used to access virtual and remote systems, which targets typical desktop users.\nThis proposal is about successfully fixing/implementing the list of bugs/features related to remote accessing virtual machines through SPICE.It will involve implementing important features, like shared folders, sharing wifi-geolocation, allowing SPICE connections to be discoverable on the network and using SSH to connect to a SPICE display.",
                    "projectCode": "https://alexandruvisarion.wordpress.com/2016/08/23/gnome-boxes-gsoc-evaluation/"
                },
                {
                    "title": "Configurable Shortcuts for Pitivi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5663998322147328/",
                    "content": "My primary goal is to implement customisable shortcuts for the Pitivi video editor. Users will be able to set their preference for every single currently existing shortcut in Pitivi, which will improve the usability as well as speed up their work.I will extend Pitivi to use the new GtkShortcutsWindow for viewing of the shortcuts, as well as refactor the Preferences window in Pitivi to handle the customisation. For Preferences, I want the UI to be modern and sleek, thus I will use GtkStackSidebar.Finally, I want to bring the JKL navigation shortcuts to the Pitivi timeline. Users will be able to playback forward and backward at various speeds (up to 4x), depending on the number of times they press the J or L key, and play or pause the playback by using K.",
                    "projectCode": "http://www.jakubbrindza.com/2016/08/gsoc-with-pitivi.html"
                },
                {
                    "title": "Games: Add gamepad support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6223562767597568/",
                    "content": "The ultimate goal of my proposal is to add support for gamepad to the GNOME Games project. A video game player without gamepad support does not offer a very good experience to the users",
                    "projectCode": "https://meghprkh.github.io/blog/2016/08/22/GSoC-Summary/"
                },
                {
                    "title": "Games: Support more game formats",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5660765553950720/",
                    "content": "Games is a GNOME application that let's you pick games from your library and play them. Basically, the project aims to be like what Music app is for your music library. The project has been in active development for more than 9 months, and it is expected to continue to improve.There are more than 25 game formats that we aim to support, this proposal\nlooks into support as much game formats as possible.",
                    "projectCode": "http://rgascons.cc/gsoc/2016/08/22/final-evaluation.html"
                },
                {
                    "title": "GNOME Music ownCloud support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5140181963243520/",
                    "content": "GNOME has had support for ownCloud integration since the release of GNOME 3.8 with more apps supporting it as a source every release. This project intends to integrate ownCloud as a source of music in GNOME Music, which would allow end users to play, browse and search their music collection stored remotely in their ownCloud servers.",
                    "projectCode": "https://drive.google.com/open?id=0BxMIJYZ8OAEiSzJSRFl5YXpzT1k"
                },
                {
                    "title": "Horizontal Map Wrapping In Libchamplain",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5646111125536768/",
                    "content": "Libchamplain is a C library used to display maps. Currently, exploring locations right on the edge of the map is quite tricky. Having the map wrap horizontally will make navigation easier, smoother and more intuitive.",
                    "projectCode": "https://github.com/GNOME/libchamplain/commits/master?author=StanciuMarius"
                },
                {
                    "title": "Implementation of week view in GNOME Calendar",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5194537727164416/",
                    "content": "GNOME Calendar is the calendar application for GNOME. Although it is a usable product, it still misses the important Week and Day view required by users for organizing the week, and planning a given day. The project aims at adding the feature of week-view in the calendar for better user experience for an end user.",
                    "projectCode": "https://github.com/pandusonu2/gnome-calendar/commits/wip/pandusonu/week-view?author=pandusonu2"
                },
                {
                    "title": "Improve Search Functionality in GNOME Logs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5406874199392256/",
                    "content": "My proposal is about improving the current search functionality in GNOME Logs.The current search functionality doesn't have any graphical option to specify from which journal field (PID, GID, process name, systemd unit etc.) the user would like to search the logs. Also, it lacks a filter to specify the date-time (timestamp) range of the journal between which the user would like to see the logs.So, for this purpose, a search popover will be added besides the search entry where the user can select the journal field and the journal timestamp range filters. The user will also be able to enter a custom journal timestamp range in a submenu in the search popover. The search popover will also support an option to match the exact string or match in any part of the entered string.A search provider will be implemented for GNOME Logs to expose the search results to GNOME Shell using a shell search provider D-Bus API. The user can see the logs related to the entered search term in the GNOME Shell overview using this functionality.When the user clicks on a search provider result, a new window will open showing the details of the selected log.",
                    "projectCode": "https://docs.google.com/document/d/1X444jRRdH0AgixSrUFQdwzfeUTiZ9BLQ4XKZsNbaalI/edit?usp=sharing"
                },
                {
                    "title": "Improve the user experience for new and existing users",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6273873477632000/",
                    "content": "While experienced IRC users have no problem getting used to Polari, the growing number of new users that are not familiar with IRC clients demands an improved and fast initial setup so that user retention is favored and a new room blank state, in order to add a more friendly look to the current blank state.A better initial experience would definitely help new users, but what about regular ones that are already used to Polari? Since this project aims towards improving the overall user experience for both new and accustomed users, contextual popups, enhanced nickname   tab-completion, favorite users section contained in the user list and the clever filtering of their status messages would definitely prove to be valuable assets for the future versions of Polari.With the help of Florian Muellner and Bastian Ilso, whom will aid me as mentors in the process of developing these ideas, I plan on adding user-friendly features that would enhance the user onboarding capabilities of Polari, making it easier for people to use our application.",
                    "projectCode": "https://gist.github.com/raresvis/2f7fd50a81281404a143d49f8f8a27a7"
                },
                {
                    "title": "Modernising GNOME Keysign",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5210475008622592/",
                    "content": "GNOME Keysign is a project that got started from the idea to make people more involved and interested in creating trusted “connections” by using digital keys.\nTherefore, this application is meant to ease the entire process of signing OpenPGP keys so that more people can use it regardless of their GnuPG knowledge.GNOME is pushing the envelope when it comes to balancing security, functionality, and usability. This project is about bringing a GTK Builder based UI to GNOME Keysign as well as investigating what's missing for it to become an xdg-app.",
                    "projectCode": "https://github.com/andreimacavei/gnome-keysign-glade-ui/tree/gsoc"
                },
                {
                    "title": "Nautilus: Batch renaming",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5353229252558848/",
                    "content": "Until now, renaming of multiple files was a tiresome task, as the user had to do that file by file. The goal of this project is to provide Nautilus with the option of batch renaming files in a nice and easy way.",
                    "projectCode": "https://docs.google.com/document/d/1WSecNPzzDzQrLeE9-rNwf4YJV91AK0g0coD28uVdXtk/edit?usp=sharing"
                },
                {
                    "title": "Nautilus: Integrate file-roller and compressed file management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5271934111580160/",
                    "content": "This project aims to make compression and decompression a transparent\nprocess to the user, minimizing interaction with archives. In the vast majority of\ncases, compressed files are just an intermediary point between the user and his\ncontent. It is desired that the user will have full access to this content right from the\nstart, rather than being given the indirect means available now (for example,\nfile-roller selectively decompresses files and stores them in a hidden cache). Also,\nsince dealing with archives is actually dealing with files, the user will be able to do\nthis from the file manager.From the developer’s perspective, moving archive support to a library will\nallow for compression and decompression to be handled internally by applications.\nThis aims to reduce the usage of file-roller so it can eventually be removed as an\napplication.",
                    "projectCode": "https://gist.github.com/razvanch/71f0822221896e9786af3dd6756ddaf3"
                },
                {
                    "title": "PKCS#11 certificate chooser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4975013627166720/",
                    "content": "Various tools needs certificate and keys for a authentication.The user's certificate and key may reside in the PKCS#11 token so these tools need a user friendly way to select a certificate and keys, showing an available PKCS#11 token, similar to seahorse which shows all the available tokens and the certificate/keys in the PKCS#11 token.",
                    "projectCode": "https://docs.google.com/document/d/1CIFESQ-8Ldi1Vp5taIPJlS04eAg_ATOb5v7ibxrNFEY/edit?usp=sharing"
                },
                {
                    "title": "Proxies in NetworkManager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6165470784782336/",
                    "content": "The project aims at implementing WPAD lookup via DHCP , DNS & VPN servers and also providing manual proxy support in NetworkManager . Merged proxy configuration will be pushed into PacRunner for each of the connections and PacRunner will be fixed to select the most appropriate configuration from the multiple configurations registered in it by NetworkManager for answering a proxy query .",
                    "projectCode": "https://atulhjp.wordpress.com/2016/08/21/gsoc16-work-product/"
                },
                {
                    "title": "Uploading photos to Google",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5484483453124608/",
                    "content": "Sharing is critical for Photos. The inability to upload content is one of the bigger missing pieces, and this will be a big step forward in that direction. The functionality will allow users to upload  single, multiple and even the album(as a whole) to Google-Photos.",
                    "projectCode": "https://bugzilla.gnome.org/show_bug.cgi?id=751181"
                },
                {
                    "title": "Web: Bookmarks Subsystem Update",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5570186035855360/",
                    "content": "The goal of my proposal is updating the bookmarks subsystem by refactoring the current code and implementing the new bookmarks menu design proposed by the designers.",
                    "projectCode": "https://git.gnome.org/browse/epiphany/log/?h=wip%2Fbookmarks&qt=author&q=Iulian+Radu"
                },
                {
                    "title": "Web: Session Sync",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5749862234587136/",
                    "content": "The ultimate goal of my proposal is to allow users of GNOME Web to seamlessly sync data with Firefox with only using a Firefox account. Epiphany will benefit of having a working communication with the Firefox Accounts Server that will be further used to sync bookmarks across different devices and, hopefully, history, passwords and open tabs too in the near future.",
                    "projectCode": "https://git.gnome.org/browse/epiphany/log/?h=wip/ephy-sync&qt=author&q=Gabriel+Ivascu"
                }
            ],
            "techStack": [
                "c",
                "python",
                "javascript",
                "gtk+"
            ]
        },
        {
            "title": "gnss-sdr",
            "orgLink": "http://www.gnss-sdr.org",
            "projects": [
                {
                    "title": "GNSS-SDR port to android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6603922655412224/",
                    "content": "I'm proposing to implement a GNSS-SDR Android port with a QT/QML GUI.",
                    "projectCode": "https://github.com/Hoernchen/grand-build"
                },
                {
                    "title": "Implementation of the BeiDou signal tracking block for the GNSS-SDR Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6588550162153472/",
                    "content": "Implementation of the signal tracking algorithms for BeiDou open service signals (B1I), following the examples already implemented for GPS L1 C/A and Galileo E1. This would set the basis of a multi-constellation receiver GPS+Galileo+BeiDou.",
                    "projectCode": "https://gnsssdrgsoc2016.wordpress.com/2016/08/18/beidou-tracking-block-for-gnss-sdr/"
                },
                {
                    "title": "Project Frisbee : An Antenna Array Receiver Testbed for GNSS-SDR",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6354326805020672/",
                    "content": "In the modern day, GNSS Receivers form the heart of numerous systems - positioning, navigation, time-keeping, synchronisation of communication systems, power metering systems etc.  Many civilian and military critical infrastructure depend on these receivers to provide accurate estimates of time and position.    A denial of GNSS Service to these installations through intentional or unintentional interference could escalate into catastrophic proportions and is a major threat to counter towards Critical Infrastructure Protection.One of the effective methods of mitigating the spoofing attacks and other intentional/unintentional interference with GNSS receivers have been demonstrated to be Antenna Array based receivers that use multiple GNSS Receivers and antennae to identify possible interference sources and to cancel their effects.The goal of this project would be to develop a circular array of GNSS receiver modules with patch antennae on a single PCB, that would resemble the form factor of a Flying Disc and hence the name - Frisbee.",
                    "projectCode": "https://drive.google.com/folderview?id=0B09wqnLOWhrQZDIwSHh0SGw1RkU&usp=sharing"
                }
            ],
            "techStack": [
                "c/c++",
                "c++11",
                "c++14",
                "gnss"
            ]
        },
        {
            "title": "GNU Mailman",
            "orgLink": "http://list.org",
            "projects": [
                {
                    "title": "Implement module to process ARC headers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4980126248861696/",
                    "content": "With the adoption of stricter email authentication policies to curb spam, intermediate mail handlers like mailing lists suffer potential problems of getting their mails flagged as spam and returning undelivered. The solution for this lies in the recently drafted IETF ARC (Authenticated Received Chain) protocol. From Mailman's point of view, ARC is a protocol that can help mitigate denial of service to subscribed addresses at Yahoo!, AOL, and other sites that have a p = reject DMARC policy. With Google too set to migrate to a DMARC p=reject policy in the near future, the importance of the ARC protocol has become more significant.Basically, setting up ARC would allow Mailman to securely register its handling of the message, thus allowing the set-up of a trust mechanism between Mailman and the involved MTAs and hence reducing the denial of service.",
                    "projectCode": "http://summerofprotocols.blogspot.in/2016/08/authenticated-received-chain-protocol.html\n"
                },
                {
                    "title": "Message Queue based Archiver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6197654182690816/",
                    "content": "As part of the project, I intend to develop a message queue based system pluggable to the Mailman core archiving interface(IArchiver) which will enable reliable, asynchronous and multi-client archiving. This will also lead to a more robust distributed architecture while also expanding the scope of Mailman server allowing it to hook it up to a wide variety of web applications like static web page generators, event trackers or websockets servers.",
                    "projectCode": "http://codefullofsummer.blogspot.in/2016/08/gsoc-work-submission-summary.html"
                },
                {
                    "title": "Proposal for project : Preset List Settings Template(aka Styles)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6460436924858368/",
                    "content": "This project will tackle the problems faced by the users while creating a new list or changing the settings of the existing lists. This project will make it easier for users to create new styles and apply them to a list by providing them a web interface(as a part of Postorius) that will enable them to create new styles, edit/copy/inherit existing ones and apply them to a mailing list. For example, if a user wants to change whether Mailman sends a message to the unsubscriber when he/she leaves the mailing list, then, he would just change the 'send_goodbye_message' attribute in the style being used by that particular list and all done!!! The web interface will help the administrators in managing the styles with just a few click without having them to type long commands at shell. This will enhance the overall user experience.",
                    "projectCode": "http://contributingtofoss.blogspot.in/2016/08/wrap-up.html"
                }
            ],
            "techStack": [
                "python",
                "email",
                "django"
            ]
        },
        {
            "title": "GNU Octave",
            "orgLink": "http://www.octave.org",
            "projects": [
                {
                    "title": "Generalised eigenvalue problem",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5066033379409920/",
                    "content": "Certain calling forms of the eig function are currently missing, including:",
                    "projectCode": "https://barbaralocsigsoc2016.blogspot.hu/2016/08/summary.html"
                },
                {
                    "title": "GSoC 2016 EXPONENTIAL INTEGRATORS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6328908383256576/",
                    "content": "I propose a project about the implementation of some Exponential Integrators.\nExponential integrators are a class of numerical methods for the solution of partial and ordinary differential equations. This class of methods is based on the exact integration of the linear part of an initial value problem and this can help to mitigate the stiffness of a differential equation. My idea is to implement at least four methods, the two basic methods exponential Euler and exponential Rosenbrock-Euler, and then two advanced methods with adaptive time stepping, one from Runge-Kutta and one from Rosenbrock-type exponential integrator family. This is my initial idea, but I'm willing to take advice and expand the project during the work period. I want to implement the methods as m-file so an implementation of this type should go into odepkg.",
                    "projectCode": "http://gsoc2016exponentialintegrators.blogspot.it/2016/08/final-evaluation.html"
                },
                {
                    "title": "GSoC ode15s project proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6106026155704320/",
                    "content": "One of the major missing functions in Octave is ode15s, which is an effective solver for stiff Differential Equations and Differential Algebraic Equations. The goal of this project is to implement a Matlab compatible adaptive BDF solver for Differential Algebraic Equations (DAEs). The interface would need to be compatible with ode15s while for the backend the SUNDIALS library would be used, which has both a C and a MEX interface. This function will be included in Octave core together with the other ODE solvers that will be released with version 4.2",
                    "projectCode": "http://gsoc2016ode15s.blogspot.it/"
                },
                {
                    "title": "Implement boolean operations on polygons",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5461783343005696/",
                    "content": "",
                    "projectCode": "https://bitbucket.org/amr_keleg/octave-geometry/commits/all?search=user(Amr)"
                },
                {
                    "title": "Symbolic Package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5334537018015744/",
                    "content": "This project aims at writing a library in C++ that provides and interface to octave files (.m) to interact with python modules in a more efficient way. It surely will intend to provide more functionality atleast in terms of catching exceptions and provide suitable error messages, if possible, by using callback functions to handle such situations.\nFor the solution, I propose to use Boost.Python (if it’s acceptable in terms of License) because I already have worked with boost libraries (not with Python library but with some others) and I think boost can prove to be the perfect solution. I intend to fully complete the interface with Boost.Python and to modify every file to use it before end of GSoC.",
                    "projectCode": "https://genuinelucifer.wordpress.com/2016/08/22/summary-of-work-done-during-gsoc/"
                }
            ],
            "techStack": [
                "hg",
                "c++"
            ]
        },
        {
            "title": "GNU Project",
            "orgLink": "http://www.gnu.org",
            "projects": [
                {
                    "title": "[MediaGoblin] Subtitle Interface along with keyboard hotkeys for video player",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4725761105723392/",
                    "content": "Building a subtitle interface for the current video player. Popular formats of the subtitles would be supported along with multiple subtitles/captions for a single video. In addition to this, the user will be able to customize the subtitles/captions (If they want to, according to their own convenience). After this adding keyboard hotkeys support for the video player.",
                    "projectCode": "http://lists.mediagoblin.org/pipermail/devel/2016-August/001465.html"
                },
                {
                    "title": "A private and secure auctioning library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5688349176102912/",
                    "content": "This project is about developing a secure and private auctioning library incorporating an algorithm by Felix Brandt. We modified the algorithm to use Ed25519 as a cryptographic primitive for simplicity and speed in the outcome calculation.In the end the library should be usable in conjunction with TALER as the payment system to provide a cryptographically protected alternative to eBay and other centralized auctioning platforms.The code can be cloned from git://gnunet.org/libbrandt",
                    "projectCode": "https://gnunet.org/node/2630"
                },
                {
                    "title": "Cleanup ffcall",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4990459134869504/",
                    "content": "GNU Libffcall is a collection of four libraries which can be used to build foreign function call interfaces in embedded Interpreters:Avcall  - Calling C functions with variable arguments.\nVacall  - C functions accepting variable argument prototypes.\nTrampoline  - Closures as first-class C functions.\nCallback  - Closures with variable arguments as first-class C functions (a re-entrant combination of vacall and trampoline).Foreign Language Interface allows one to call a function implemented in C from inside CLISP and to do many related things, like inspect and modify foreign memory, define a “callback” (i.e., make a lisp function available to the C world), etc. To use this facility, one writes a foreign function description into an ordinary Lisp file, which is then compiled and loaded as usual; or just evaluates the appropriate form in the read-eval-print loop. This will be served as a testing part for cleanup.My GSOC project focuses on two libraries : avcall cleanup which use GNU CLISP.",
                    "projectCode": "https://drive.google.com/drive/folders/0B96joKik42vZUVoyeVBZNzVFZ0U?usp=sharing"
                },
                {
                    "title": "Code Refactor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5603016765865984/",
                    "content": "GNU Libffcall is a collection of four libraries which can be used to build foreign function call interfaces in embedded Interpreters:Avcall  - Calling C functions with variable arguments.\nVacall  - C functions accepting variable argument prototypes.\nTrampoline  - Closures as first-class C functions.\nCallback  - Closures with variable arguments as first-class C functions (a re-entrant combination of vacall and trampoline).LibffCall Code is written in C & assembly language and there is no technical documentation regarding it, which makes extremely difficult to understand the code. As there is assembly code for different platforms so there is use of different instruction sets, opcode’s and labels which make it a programmer's nightmare. So there is an immediate need of refactoring the code for helping programmers to understand  the code for future reference.",
                    "projectCode": "https://drive.google.com/drive/folders/0B3vKYDJ2MRHuTGxKWnloejNENzQ?usp=sharing"
                },
                {
                    "title": "GCC - Development of GIMPLE Front End",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5765958429835264/",
                    "content": "The purpose of this project is to develop a tool which will ease the process of unit testing in gcc. Writing a test-case in C to generate the required GIMPLE form for testing a pass is hard, so it’s nice to have a front end through which we can directly feed input to the pass instead to going through C route. GIMPLE FE will allow us to give GIMPLE as a input and run it on required passes.",
                    "projectCode": "https://github.com/PrasadG193/gcc_gimple_fe/commits/master"
                },
                {
                    "title": "GCC - Further work on addressing mode selection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6604585959424000/",
                    "content": "The aim of this project is to improve the addressing mode selection pass in GCC that was made the previous summer.",
                    "projectCode": "https://gist.github.com/erikvarga/c7d5cbfe341796316062afaa04503459"
                },
                {
                    "title": "GCC - Replace Libiberty with Gnulib",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4503908059709440/",
                    "content": "For projects using Libiberty, most of that functionality can be provided by Gnulib and therefore there is no real advantage to the GNU project to have two libraries for substantially the same purpose. This project involves replacing the libiberty library with gnulib within the scope of GCC.",
                    "projectCode": "https://gcc.gnu.org/wiki/replacelibibertywithgnulib"
                },
                {
                    "title": "Implement xattr Support of Hurd Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5786848613892096/",
                    "content": "The current hurd's ext2fs server uses a reversed field in inode to store passive translator setting. It is  a  ad-hoc method and causes that hurd's file system can not work well on other system. Implement xattr support can help hurd store this data in a more general way.",
                    "projectCode": "http://lists.gnu.org/archive/html/bug-hurd/2016-08/msg00075.html"
                },
                {
                    "title": "Integrating npm into the Guix ecosystem",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5616011994726400/",
                    "content": "This project will allow Guix hackers to more easily package software that is\ndistributed through the Node Package Manager (npm), as well as allowing Node\ndevelopers on Guix to make use of the reproducible builds guarantee of Guix.After completing this project, it should be possible to easily make use of the\npackages with less-problematic dependency graphs in the npm registry on the Guix\nSoftware Distribution.",
                    "projectCode": "https://github.com/wordempire/guix/pull/1"
                },
                {
                    "title": "Liberty Eiffel meets Windows",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5853506506326016/",
                    "content": "Liberty Eiffel language available on windows environment.",
                    "projectCode": "http://wiki.liberty-eiffel.org/index.php/GSoC_-_Windows_Support"
                },
                {
                    "title": "Lilypond - Allow spanners to cross voices",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4959294852169728/",
                    "content": "Lilypond is a free music notation program that produces quality sheet music. The music is first written in a text format; Lilypond then processes the file to output a graphical representation.Due to limitations in Lilypond's input syntax, one class of notational devices, spanners (e.g. slurs), are implemented with the assumption that they must start and end in the same voice. However, it is often desirable to have spanners start and end in different voices; in fact, any music that involves multiple simultaneous voices may use such notation.Presently, getting Lilypond to produce spanners between voices is not impossible, but requires an awkward workaround using a hidden voice. Although this works, it requires users to artificially add \"music\" that isn't actually there to compensate for a limitation of Lilypond. This project aims to develop a semantically clear and less confusing method of inputting cross-voice spanners.",
                    "projectCode": "http://lilypondblog.org/2016/08/google-summer-of-code-2016-cross-voice-spanners/"
                },
                {
                    "title": "Porting GuixSD to GNU/Hurd",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5796530812354560/",
                    "content": "In this project, we would like to port the Guix Software Distribution to GNU Hurd.  By the end of the project, Guix should be able to handle and use the available Hurd mechanisms, have the required tools to produce a working, bootable, system vm/image with GNU Shepherd as the init daemon and offer the same functionality as you would expect from booting into a GNU/Linux GuixSD system.",
                    "projectCode": "https://lists.gnu.org/archive/html/guix-devel/2016-08/msg01002.html"
                },
                {
                    "title": "Rewrite Hydra to be more integrated with Guix",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4508804322426880/",
                    "content": "The idea of this project is to write a continuous build system in Guile Scheme inspired by Hydra, in order improve Guix infrastructure parenthood.",
                    "projectCode": "https://notabug.org/mthl/cuirass"
                },
                {
                    "title": "Rust implementation of GNUnet utils",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6591089830002688/",
                    "content": "Improve the Rust implementation of GNUnet utils, possibly including adding support for asynchronous IO using mio, or perhaps a higher level asynchronous IO library built upon it, such as rotor, mioco, eventual_io, or gj.",
                    "projectCode": "https://gnunet.org/node/2629"
                },
                {
                    "title": "ScholarLY Annotations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6751120848322560/",
                    "content": "The ScholarLY 'annotate' module is a new tool, currently in a workable preliminary state, which extends the LilyPond music engraving software to add various implementations of textual annotations for collaborative workflows and the creation of critical editions. This project aims to improve functionality of the module within the LilyPond environment, and to extend the various outputs of those annotations. As such, the primary target features include triggering of score items from within annotations, ability to render score snippets in annotations, addition of new output file types of annotation logs (it currently supports plaintext and tex), ability to handle and export latex-ready footnotes, and the creation of a versatile LaTeX package (which does not exist yet in any state) for compiling the annotations (from the previously exported log) in LaTeX with customizable options for styling and distribution. Ultimately, 'annotate' offers a comprehensive functionality that hasn't yet been achieved in traditional/commercial softwares, and which will benefit a range of engravers from amateurs and individuals to professionals and group settings.",
                    "projectCode": "https://gist.github.com/jefferyshivers/1f4ecc61615b2a200ea8e6d309e7d029"
                }
            ],
            "techStack": [
                "posix",
                "c",
                "lisp",
                "python",
                "eiffel"
            ]
        },
        {
            "title": "GNU Radio",
            "orgLink": "http://gnuradio.org",
            "projects": [
                {
                    "title": "PyBOMBS & CGRAN Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6399277127434240/",
                    "content": "This proposal focuses on improving the areas of CGRAN and Pybombs collectively, to enhance the user experience and provide simple UI interfaces to install GNU Radio and other OOT Modules in a hassle free way. The proposal also plans on extending Pybombs support to GNU Radio's embedded working group.",
                    "projectCode": "http://ninjacomics.github.io/radioblogr/2016/08/gsoc_final_eval.html"
                },
                {
                    "title": "Signal Analysis Toolbox (gr-inspector)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5180547676504064/",
                    "content": "Signal intelligence describes the gathering of information out of intercepted radio signals with unknown origin and unknown parameters. GNU Radio has already the ability to do signal intelligence, but it is only possible through some detours. Real-time signal intelligence is hardly possible. The tool gqrx has some of this ability (real-time AM/FM demodulation), but there is no final solution for this problem at this time. The target of this project is to develop an easily accessible and extendible solution for this workflow including automatic signal detection and automatic modulation classification. Further deliverables are a radio service allocation database, blind synchronization methods and an automatic demodulation block.",
                    "projectCode": "https://github.com/gnuradio/gr-inspector/commits/master?author=sbmueller"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "software radio",
                "dsp",
                "rf"
            ]
        },
        {
            "title": "GPAC",
            "orgLink": "http://gpac.io",
            "projects": [
                {
                    "title": "Hardware-accelerated media decoding on Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4785383036420096/",
                    "content": "The goal of this project is to make \"osmo4\" player take advantage of the Android's low level media APIs i.e. MediaCodec APIs by writing a decoding module for it. This will result in better battery life and less CPU usage.Another important goal is to redesign the osmo4 Android App to make it look much better than the current version. It will follow Material Design guidelines and will also come with a redesigned file manager.",
                    "projectCode": "https://github.com/rauf/gpac/commits/android_osmo4?author=rauf"
                }
            ],
            "techStack": [
                "mp4",
                "dash",
                "mp4box",
                "javascript",
                "c++"
            ]
        },
        {
            "title": "Green Navigation",
            "orgLink": "https://www.isp.uni-luebeck.de/research/projects/green-navigation",
            "projects": [
                {
                    "title": "Front end rethink",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6469645871611904/",
                    "content": "Green Navigation is an innovative project with gigantic potential to promote the use of electric vehicles by providing users with a robust tool to compute the most energy-optimal routes. The UI is certainly usable at the moment, but I propose to re-think the current application architecture and redesign the UI to make the web app look so polished and sleek that our users will want to use the service.In addition, I propose to integrate a few new features, including live weather and traffic data, as well as terrain data to take the app experience to the next level.",
                    "projectCode": "https://gist.github.com/marksurnin/2c29d08c0bd0237a5080eef96d332dfc"
                },
                {
                    "title": "Prototyping Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4735845688934400/",
                    "content": "Build a new prototyping tool for comparing and visualizing new routing algorithms rapidly.",
                    "projectCode": "https://medium.com/@sidthekid/gsoc-2016-review-868291cceebb#.vzz51kcur"
                },
                {
                    "title": "Real-Time Navigation and Smart Notifications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6619293001187328/",
                    "content": "Green Navigation will become a great tool to calculate routes and compare routing algorithms. But imagine a front-end, that shows directions of the route and interesting informations about the current position in real-time! In this proposal I will show how to extend Green Navigation to a complete navigation system.My ideas would not only fit to the front-end project Integration of new features, they will be fit more to the project own idea.The idea is to create a mockup of a smart notification system, which will show directions of the calculated route as well as every other useful information existing in database. The notification could be a paper-card element, which shows up at top of the web app. Furthermore the mockup should be open enough to handle data added in future.",
                    "projectCode": "https://goo.gl/TlafFw"
                }
            ],
            "techStack": [
                "javascript",
                "postgresql",
                "polymer",
                "go",
                "electromobility"
            ]
        },
        {
            "title": "gRPC",
            "orgLink": "http://www.grpc.io",
            "projects": [
                {
                    "title": "GRPC Python compatibility support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6052322958376960/",
                    "content": "Python is, originally, a specification for a programming language. This\nspecification has been implemented differently in different\nimplementations of the language specification.A small, and by no means exhaustive, list of some major python implementations\nis:The project intends to add support for latest CPython versions (3.4, 3.5, and 3.6) and latest PyPy version (5.3) to the GRPC Python library as well as pave way for supporting other Python variants down the line.",
                    "projectCode": "https://github.com/grpc/grpc/commit/d13a780be0ced116172539aeb6e84ee2112d9857"
                },
                {
                    "title": "OpenLambda: RPC-Aware Storage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6122691702554624/",
                    "content": "New serverless-computing platforms such as Google Cloud Functions, AWS\nLambda, and OpenLambda provide RPC handling to cloud customers.  The\nRPC handlers are inherently ephemeral; these services do not guarantee\nthe persistence of state between invocations, so serverless-computing\nmust be used in conjunction with a cloud database.  We propose\nbuilding an RPC-aware storage engine that runs alongside these\nserverless-computing platforms.  There are several opportunities for\ntight integration: (1) client RPC calls introduce new, meaningful\nconsistency boundaries; (2) RPC schedulers aware of database replicas\ncan make better locality decisions; and (3) coordinating handler\npausing with database change batches would improve performance.\nOur database will coordinate with handler workers via gRPC calls.",
                    "projectCode": "https://github.com/open-lambda/load-balancer/commits/master?author=sturdevant"
                }
            ],
            "techStack": [
                "distributed systems",
                "networking",
                "micro-services",
                "scalability",
                "http/2"
            ]
        },
        {
            "title": "Health Information Systems Programme",
            "orgLink": "https://www.dhis2.org/",
            "projects": [
                {
                    "title": "DHIS - Tracker longitudinal Charting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4562449269260288/",
                    "content": "DHIS is one of the most popular open source health management information system/framework used by over 47 countries in the world including Sri Lanka. It has two basic architectures embedded in it, mainly the aggregation and tracking. The main functionality of tracker capture app of DHIS2  is to collect and analyze the patient based (individually identifiable) statistical data.Longitudinal Analysis is an important statistical and public health approach where data gathered over a period of time is visualized for temporal trends. Hence, the gathered data can be analyzed to make conclusions about the behaviour of the tracked subject over a long period, giving accurate picture than a cross sectional visualization. Graphical visualization of analyzed data is widely used technique in longitudinal analysis to make it easier to understand the trends and study the patterns and behaviours of the subject at a single glance.The goal of this project is to add dynamic longitudinal charting support for DHIS - tracker capture app.",
                    "projectCode": "https://medium.com/@cwidanage/scoc-summary-356b757c545d"
                },
                {
                    "title": "Partial rendering of front-end, ReactJS based applications on JVM by using Nashorn engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6454372431036416/",
                    "content": "Web Sites have evolved a lot from static mundane texts to interactive ajax based web sites and today’s Single Page Applications which provides user with a very intuitive experience. React has been one of the front-runner frameworks spearheading this more robust front ends rendering SPA frontend dramatically fast.\nThis has been at the cost of getting down a barrage of javascript in the beginning and rendering it on the fly using the browser’s Javascript and rendering engines.  This is counter intuitive to the User Experience goals of a single page application paradigm.A trivial solution that comes into mind is to push this workload to the server to process this Logic in the back end and send it to the server. This raises the concerns of the requirement of an Isomorphic JS backend such as NodeJS. However, with a back end that utilize Java 8 which comes packing with a much more advanced Javascript Engine - Nashorn, possibilities crop up.The main idea of this project wraps around finding an efficient paradigm to develop SPA’s by pre-rendering partially or whole HTML DOMs in the back end and delegating the basic DOM rendering of the static or partially static contents to the browser.",
                    "projectCode": "https://docs.google.com/document/d/1-1G1GEpA3I4ZXp7MI6yU2LhG_ion9MVBDav8Fbx9fec/edit#"
                },
                {
                    "title": "Re-implement DHIS2 android data capture applications to use shared database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5026137965068288/",
                    "content": "Currently all DHIS2 android apps (data capture, event capture, tracker capture, dashboard) are using their own sandboxed databases. In most situations, all mentioned apps share similar/common metadata, which means that same information is duplicated in several places. Even more, in some cases app needs an access to data of another app (for example dashboard app can perform analysis of data stored in event capture application).\nThe aim of this project is to make all of the above mentioned apps share a common (shared) database. Instead of having one database per each app, one app will be implemented with shared database which will store and sync data to the server, while other apps will play a role of clients with UI part only.",
                    "projectCode": "https://gist.github.com/prempalsingh/39df6113c409306d63f7a76e8d2e8001"
                },
                {
                    "title": "Re-implementing DHIS Dashboard App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5996152839208960/",
                    "content": "The various DHIS apps have different implementations. So, a general SDK had been developed which could be used for uniform development.The aim is to re - implement the dashboard app based on the DHIS SDK guidlines and add the corresponding supporting code in SDK along with some new re-usable components, and use latest/better technologies such as MVP architecture, Rx Android , Dagger , etc.",
                    "projectCode": "http://laavanyebahl.com/blog/2016/08/21/gsoc-final-submission/"
                },
                {
                    "title": "User Profile App using ReactJs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5970603957813248/",
                    "content": "As a part of modernising the architecture of DHIS 2, we are in the process of rewriting server based system maintenance apps as modern client side web apps. While development of settings app, maintenance app and app-management app is nearly complete, the User Profile App is yet to get started. As part of the GSOC 2016, I propose to develop user profile application for DHIS2. This app will essentially provide a user interface to DHIS2 users to -I will be using ReactJS view library and will follow a Flux based architecture to write this app. The application's architecture should be such that we can reuse most of its components in other apps using D2-UI. It is important that the overall look and feel of this app matches that of the other new client-side applications. D2 should be extended by adding methods and properties so that it is capable of performing all operations required to view and update user profile and account settings.",
                    "projectCode": "https://medium.com/@adheeshbhatia/user-profile-app-for-dhis-2-686aef2104d8"
                },
                {
                    "title": "Web App for quick entry of test data in DHIS2 tracker",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6293400009572352/",
                    "content": "The DHIS2 Tracker is a module for tracking entities across time and space through the context of a program, through several different stages within the program. It could be tracking patients through multiple visits for a health program, or tracking commodities like blood samples from a sample is taken, through a lab for analysis etc. Many DHIS2 Tracker projects need a substantial amount of test data in order to test reports and charts configured for the program. Because the metadata is different for each project, it is difficult to create a uniform import tool to import data from an arbitrary format like Excel.\nThe purpose for this project, is to create a web app for quick entry of test data in a tabular format based on a program’s metadata, with further possibilities for configuring which test data to be entered.",
                    "projectCode": "https://lists.launchpad.net/dhis2-devs/msg46482.html"
                }
            ],
            "techStack": [
                "java",
                "android",
                "javascript",
                "reactjs",
                "gradle"
            ]
        },
        {
            "title": "Homebrew",
            "orgLink": "http://brew.sh",
            "projects": [
                {
                    "title": "Better support HEAD formulae",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6302606271971328/",
                    "content": "For now HEAD formulae can't be upgraded by just running brew upgrade <formula> --HEAD. The only way to upgrade HEAD formula is to uninstall it and install once again or using reinstall which is almost the same thing. This is not very convenient. We don't know if it's time to upgrade formula, we don't have other versions. We don't reinstall stable formula to upgrade them and the same way we don't need to reinstall head formula to upgrade them. The outcome of the project is to provide HEAD versions and the ability to upgrade them.",
                    "projectCode": "https://gist.github.com/vladshablinsky/f85838450103acfce86ef53418e464c4"
                },
                {
                    "title": "Closer integrating Homebrew with Homebrew cask",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5374137421791232/",
                    "content": "The goal of my project is making Homebrew Cask better integrate with Homebrew by moving Cask core into Homebrew and making Cask commands use Homebrew code.",
                    "projectCode": "https://docs.google.com/document/d/1iuR5DwRNmY_zOwzLawZjOJQceSsJAj3b757N21ZrjeA/edit?usp=sharing"
                },
                {
                    "title": "GPG Verification in Homebrew",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6078376766865408/",
                    "content": "Adding GPG optional verification for source packages and Homebrew-provided binary packages (bottles).",
                    "projectCode": "https://gist.github.com/DomT4/cbd077abaebfc67a5b872780fe21cc42"
                },
                {
                    "title": "Integrating ruby-macho fully into Homebrew and removing external dependencies on install_name_tool/otool entirely",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6500589231931392/",
                    "content": "During last year's GSoC, I began work on transitioning Homebrew away from its XCode dependency by modifying the bottling system to hook certain necessary utilities (i.e., install_name_tool and otool) prior to installation.After GSoC ended I began work on ruby-macho,which will ultimately be capable of replacing last year's hooking system with a pure-Ruby library capable of the kinds of relocation operations that Homebrew's bottles require.My proposal for this summer is to continue work on ruby-macho, bringing it to feature-completeness with libmacho (at least for x86 and PPC). Additionally, I intend to get Homebrew's vendored version of ruby-macho activated by the end of the program for everyday users (rather than its current developer-only status).",
                    "projectCode": "http://blog.woodruffw.us/2016/08/20/State-of-Ruby-Macho-GSoC-2016-Wrapup-Edition"
                }
            ],
            "techStack": [
                "ruby",
                "git",
                "osx"
            ]
        },
        {
            "title": "Inclusive Design Institute",
            "orgLink": "http://inclusivedesign.ca",
            "projects": [
                {
                    "title": "Accessible, Responsive Music UI Controls",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5288711059144704/",
                    "content": "With the introduction of the Web Audio API and music frameworks such as Flocking, it's possible to make music and develop custom instruments entirely using Web technologies.A variety of user interface component libraries, such as Nexus UI, jQuery Kontrol, Interface.js and G200K's Polymer controls, have been developed to assist in the creation of musical interfaces. However, the majority of them aren't very \"web-like.\" Many are based on Canvas or bitmap images, and aren't compatible with responsive design techniques, can't be easily re-styled or customized using tools like CSS, and aren't accessible via the keyboard or with assistive technologies such as a screenreader.This project will involve the creation of a small collection of high-quality, responsive, SVG or DOM-based musical user interface controls such as knobs, sliders, x/y pads, button matrices, envelope editors, waveform viewers.",
                    "projectCode": "https://github.com/dinukadesilva/music-ctrls"
                },
                {
                    "title": "Data Visualization with Infusion",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6433018390511616/",
                    "content": "This came from a project I pitched last year with Antranig Basman and Colin Clark. Our goal is to make public data sources accessible for analysis and visualization by creating an end-user application that allows users to choose from data sources, do transformations on that data, and ultimately create shareable visualizations of the data. The goal is to make a rapid visualization framework that is accessible and has many available forms for the final representation including sonification to open representations of data up to the visually impaired.",
                    "projectCode": "https://github.com/wannabeCitizen/data-dashboard"
                },
                {
                    "title": "Game for First Discovery of Preferences",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4882108115845120/",
                    "content": "Project aims to develop a game that will help users to discover their appropriate digital and learning preferences in an interactive environment by engaging them in a process of “Learning to learn”.",
                    "projectCode": "https://github.com/PaliwalSparsh/Discovery-Cat/tree/v0.1.0"
                },
                {
                    "title": "Stanislav Shterev IDI UIO Responsive Design Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6238524554608640/",
                    "content": "My proposal for a project is to implement the current features of the User Interface Options on the responsive design.  The project goal is to also all new features to all version of the platform. The key features on the mockups will be added. I also have some ideas for additional customizations and minor design improvements.The aim is to create an easy to use tool that can be useful for every person on any device. I hope the everything will come together nicely and have an exceptional final product that people will love.",
                    "projectCode": "https://github.com/fluid-project/infusion/pull/726"
                }
            ],
            "techStack": [
                "javascript",
                "jquery",
                "html5",
                "css",
                "node.js"
            ]
        },
        {
            "title": "Indic Project",
            "orgLink": "http://indicproject.org",
            "projects": [
                {
                    "title": "Add Varnam support into Indic Keyboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6323110982713344/",
                    "content": "Varnam is an open source, cross platform transliteration module. Through this project Varnam would extend it's service to Android through the existing \"Indic Keyboard\" app. A separate, fully dedicated set of keyboards would be added for each language, with the Varnam engine powering them.",
                    "projectCode": "https://medium.com/@malayalee_coder/gsoc-final-report-8814d585f1d4#.su69ss35w"
                },
                {
                    "title": "Better use on boarding/first time user experience",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6366669735723008/",
                    "content": "Making a tutorial at the the time of setup of Indic Keyboard. Features such as Theme Selection, Swipe, Size Selection, Adding number rows etc will be added as part of the tutorial. New layouts for the keyboard will be added too.",
                    "projectCode": "https://arushidogra.wordpress.com/2016/08/21/gsoc-final-report/"
                },
                {
                    "title": "IBus-Braille Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6125344381730816/",
                    "content": "This project will make improvements on the project IBus-Braille that was successfully completed by a student under SMC. Hear IBus-Braille is an input method engine that work with IBus.  It is a six key approach. letters f, d, s, j, k, l represent 1 2 3 4 5 6 of the braille dots respectively. By pressing f and s together will produce letter k and like.  The project got a great acceptance from visually impaired people who uses languages with big character set.1 A core braille module that can be plugin to any web related requirement.\n2 Online IME Tool.\n3 Braille input method Plugin for chromium\n4 Braille input method Plugin for Firefox\n5 Make 8-dot braille possible \n6 Integrate IBus-Braille with Liblouis\n7 Announce extra information through Screen Reader\n8 Solve the dot 4 issue.\n9 Add Facility to write direct Braille Unicode\n10 Three to Six for disabled people with one hand\n11 User Interface for Creating and Editing Liblouis Tables\n12 Add support for more Indic Languages via liblouis",
                    "projectCode": "http://ibus-braille-enhancement.blogspot.in/2016/08/gsoc-2016-ibus-braille-enhancement.html"
                },
                {
                    "title": "Inflection aware spell checker for Malayalam",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6473408262963200/",
                    "content": "Develop a spell checker system that can handle inflections and differentiate intentional words and spelling mistakes. Initially, it will be implemented for Malayalam and then generalized for other languages. Done using Python on top of LibIndic platform.",
                    "projectCode": "https://balasankarc.in/tech/gsoc-final-report.html"
                },
                {
                    "title": "Language model and Acoustic model for Malayalam language for speech recognition system in CMU Sphinx",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5092843370577920/",
                    "content": "Speech is a complex phenomenon. People rarely understand how is it produced and perceived. The naive perception is often that speech is built with words, and each word consists of phones. The reality is unfortunately very different. Speech is a dynamic process without clearly distinguished parts. It's always useful to get a sound editor and look into the recording of the speech and listen to it.\nAll modern descriptions of speech are to some degree probabilistic. That means that there are no certain boundaries between units, or between words. Speech to text translation and other applications of speech are never 100% correct. That idea is rather unusual for software developers, who usually work with deterministic systems. And it creates a lot of issues specific only to speech technology.\nThe system is intended to develop Language model and Acoustic model to be used for speech recognition of Malayalam Language.",
                    "projectCode": "https://medium.com/@imSreenadh/its-a-wrap-fddf68149289#.p1p3mw1k2"
                },
                {
                    "title": "LibIndic Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5703131916664832/",
                    "content": "Additional modules and improvements to the libindic platform.",
                    "projectCode": "http://jerinphilip.github.io/posts/2016-08-22-gsoc-final-report.html"
                },
                {
                    "title": "Machine Transliteration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5374318347288576/",
                    "content": "Most of the existing works on Indian transliteration use character mappings coupled with a set of rules to transliterate. The statistical approaches have hardly been tried with a few exceptions. Apart from few statistical approaches, which use phrase based SMT and generative joint source-channel model for transliteration, most of the works on transliteration use rules defined over character mappings. In this proposal, I propose statistical learning for transliteration. The model parameters are learned from transliteration pairs which are automatically mined from parallel corpora.",
                    "projectCode": "http://irshadbhat.github.io/summary/"
                }
            ],
            "techStack": [
                "android",
                "python",
                "javascript",
                "ruby on rails",
                "c++"
            ]
        },
        {
            "title": "Inkscape",
            "orgLink": "https://inkscape.org/",
            "projects": [
                {
                    "title": "Better CSS Style Sheet Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5444506165968896/",
                    "content": "This project aims to enhance the support of CSS style sheets in Inkscape.The style values stored in the style attributes of the object are not recognized by the style sheet. A means to identify these changes and keeping a track of property values will be added. A dialog will be created to edit internal style sheets.",
                    "projectCode": "http://kamalpreetgrewal.com/gsoc-2016-work-report/"
                },
                {
                    "title": "Better data structure for selections",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5726533045977088/",
                    "content": "The main goal is designing new approach to untie selection object from user interface. Actual code base on legacy C code from SodiPodi and should be rewrite to improve quality, performance and usability.",
                    "projectCode": "http://bazaar.launchpad.net/~adrianboguszewski/inkscape/adrian/changes/14984?start_revid=14984"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "svg",
                "css",
                "gtk+"
            ]
        },
        {
            "title": "International Neuroinformatics Coordinating Facility",
            "orgLink": "http://www.incf.org",
            "projects": [
                {
                    "title": "Building cortical network models in NeuroML2 using procedural and declarative programming approaches",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5650639363244032/",
                    "content": "There is a long history of neuronal simulator-specific modelling in the fields of theoretical neuroscience and neuroinformatics. As a result, most of the single cell and neural network models have low RAPT (reproducibility, accessibility, portability and transparency). This has slowed the progress of using biophysically and anatomically detailed neural network models in understanding the brain function in health and disease. In a period of three months during the GSoC placement, I would like to contribute to the Open Source Brain (OSB) Initiative which aims to increase the RAPT of single cell and neural network models. The project will extend the initial work by the OSB on converting the thalamocortical network model by Traub et al. (2005) to the simulator-independent model format, NeuroML2. Firstly, I propose to annotate and implement the tests for spiking behaviour of Traub model cells which are converted to the NeuroML2 format. Secondly, I propose to create a generic Python-based package which can generate different configurations of cortical networks in the NeuroML2 format  and combine unique network components from different cortical network projects.",
                    "projectCode": "https://github.com/OpenSourceBrain/Thalamocortical/commits?author=RokasSt"
                },
                {
                    "title": "Image Search for Brain Maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4729307406532608/",
                    "content": "The brain search feature is a useful tool for researchers since it allows them to find studies from other researchers showing similar results. However, the current implementation is based on pairwise comparisons of brain maps which scale quadratically with the size of the database. This project will be centered in optimizing and refactoring the search method for other maps exhibiting similar patterns.",
                    "projectCode": "https://gist.github.com/erramuzpe/ae40c61a3aa6bb370e027599c714d185"
                },
                {
                    "title": "Implementation of a HDF5 export/import to EEGBase",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6308893298786304/",
                    "content": "The data produced by experiments of Electroencephalography (EEG) and Event­-related potentials (ERP) is stored in web portal of EEGBase, by implementing a system of templates. These templates allow the users to store data/metadata in odML format. However, the initiatives within the neuroinformatics community have proposed unification of data by using open standardized formats such as HDF5 or odML. This concept of opendata necessitates the development of the proposed library, which shall allow the conversion of data to either odML or HDF5 as per the requirements.",
                    "projectCode": "https://gist.github.com/ila057/c60c70a152fb86e6f5f11230700dcd9c"
                },
                {
                    "title": "Importing and exporting simulator-independent model-descriptions with the Brian simulator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5282286861811712/",
                    "content": "Brian simulator becomes more and more popular in neuroscience community. At the same time Python is now some kind of state-of-the-art in the field, so it is crucial to have big set of  tools helping scientists to work in that environment. Functionality of Brian grows up every year and as a recent user of that module who found it very useful I would like to contribute and just help developing the tool.",
                    "projectCode": "https://groups.google.com/forum/#!topic/brian-development/QAWrgILotho"
                },
                {
                    "title": "Modifying the current neuroshare to hdf5 converter to use the NIX format instead.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5223898660470784/",
                    "content": "I would be tweaking the current neuroshare converter so that any proprietary file that can be read with neuroshare could be converted to an open non-proprietary format. A major portion of my work would involve reading the docs for neuroshare converter,HDF5 format, nix and nixpy.",
                    "projectCode": "https://goseeky.wordpress.com/2016/08/14/gsoc-2016-with-incf/"
                },
                {
                    "title": "Modular Machine Learning and Classification Toolbox for ImageJ",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5149819064549376/",
                    "content": "The major goal of our project is come up with new architecture of existing plugin. Our ultimate goal is to reduce the coupling and make it cohesive to provide the possibility of including new filters, new learning algorithms, as well as modify, adapt or extend the  framework according to the developer's needs.In this document, I describe the problem domain of the project. I start with an description of the problem domain: Filters, learning  and evaluation. Then I give a high level overview of the proposed architecture, detailed design of \"Filter Framework\" of the system and additional constraints. Finally, I also share a small project based on discussed architecture.",
                    "projectCode": "https://sumit3203.github.io."
                },
                {
                    "title": "Optimization of neural network simulator via parallelisation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5087689409822720/",
                    "content": "SDDEKit is an algorithmic library written in c backing the neural network simulator of the Virtual Brain's project supporting the calculation of stochastic delay differential equation. Currently, the bottleneck resides on accessing history buffer, which is a look up table that traces the states over the time domain, each look up incurs a cache swap due to unstructured data alignment; and for each single time step, there are thousands of loop up taken place. My proposal is to migrate the whole simulation to a parallel programming platform with reorganised data structure, each thread will handle one input data entry and perform simulation.",
                    "projectCode": "https://drive.google.com/open?id=0B50zvRRmvWq3SkRkSy1FVWhFOEk"
                },
                {
                    "title": "Qt5 in PISAK.org, an open system for alternative communication",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4600262161334272/",
                    "content": "The project is about replacing technology used by the PISAK program to the Qt5 framework, what will improve its overall quality and allow for easier integration with other assistive technology software.",
                    "projectCode": "https://github.com/bjura/pisak2/commits/master?author=bjura"
                },
                {
                    "title": "Shailesh Tripathi- GSoC Project #9.2: Adding OpenCL support to GeNN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4563229074259968/",
                    "content": "GeNN uses the power of GPU parallelism to accelerate simulations. Currently GeNN only supports CUDA limiting its use to NVIDIA GPUs only. The projects focuses on adding OpenCL support to make it useful for any GPU.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1YdSBwirFWGA7FVFRbrWYfJVOty-HtU6V3T6nRXkYtkY/edit?usp=sharing"
                },
                {
                    "title": "The Virtual Brain Project #2: Improving  Parameter Space Exploration Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4585023617368064/",
                    "content": "In the last decade simulation models have become more prevalent in a variety of application areas. Each of these models define a set of input parameters which determine the features of the output. With enough of these outputs we can begin to perform what is known as reconstructing the black box in the field of parameter space analysis (Konyha et al.). One method to do this is through trial and error, where a researcher sets the input parameters to specific values based upon their experience, and collects the outputs as sample points to investigate later on (Sedlmair et al.). This is a computationally expensive method for exploring parameter space which limits the effectiveness of the program overall.This project represents an effort to update the Parameter Space Exploration (PSE) tool so that it can be used effectively for exploring the parameter space associated with each included large-scale brain model. This achieved would effectively reconstruct the black box of the model which is vital for our understanding of its validity, and supports ongoing work to better understand the original basis for our model, the human brain.",
                    "projectCode": "https://docs.google.com/document/d/1fmPD8wmhpVc8nwD_EYCAZVU2Nl0EVkKddCJ_b26Rqyw/edit?usp=sharing"
                },
                {
                    "title": "Towards Support for Reverse Engineering of Neural Circuits and Non-Linear Dimensionality Reduction in Fovea and PyDSTool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5004625816059904/",
                    "content": "Computational models of neural circuitry are increasingly superseding single neuron models for understanding dynamic processes in the brain. Recurrent Neural Networks offer an attractive method for simulating, replicating, and characterizing these circuits. PyDSTool currently supports simulation of neural circuity dynamics and linear methods of dimensionality reduction such as Principle Component Analysis for normalizing complex data; however, such methods are insufﬁciently tailored to working with non-linearly distributed data. I propose the implementation of a module targeted at providing non-linear dimensionality reduction via Sammon mappings, principal curves, and locally linear embeddings. In addition, I will create tools in Fovea that will allow for the intuitive visualization of datasets resolved by these methods.I also seek to provide a suite of tools to PyDSTool for constructing and training Recurrent Neural Networks and corresponding solutions for visualizing the operation, feedback mechanisms, network structure, and dynamical systems characteristics (e.g. attractors) of these models.",
                    "projectCode": "https://github.com/mcneela/Retina"
                },
                {
                    "title": "ZeroMQ-based distributed messaging system in the OpenBCI brain­-computer interface framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6062767245099008/",
                    "content": "OpenBCI (https://github.com/BrainTech/openbci) is GPL-licensed framework for building brain-computer interfaces. It automates common tasks such as: data acquisition of EGG (with support for multiple EEG amplifier vendors), eyetrackers, Kinect cameras and more. OpenBCI can be used to control large variety of devices ranging from SSVEP appliances to robots and drones. OpenBCI is tightly integrated with Svarog signal analysis software. Finally experimental setups can span across few computers connected to the same LAN. My proposal consists of rewriting core of the OpenBCI project to use ZeroMQ framework instead of unmaintained and aging Azouk-Multiplexer library. Such change is required as it is getting more and more difficult to keep OpenBCI library alive. The switch to a new solution will be beneficial in the long run.",
                    "projectCode": "https://github.com/mroja/openbci/tree/gsoc2016"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "gpu",
                "javascript",
                "java"
            ]
        },
        {
            "title": "Java Pathfinder Team",
            "orgLink": "http://babelfish.arc.nasa.gov/trac/jpf/",
            "projects": [
                {
                    "title": "Cache layer for jpf-nhandler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5182993391943680/",
                    "content": "JPF is the most popular model checking tool for Java applications. It is extensible and there are lots of\nextensions for various purposes. Jpf­nhandler is one of such extensions. Its goal is delegating the\nexecution of SUT methods from JPF to JVM level. \nOne goal of this project is to improve jpf-­nhandler performance using the cache layer. The latter\nprevents invoking methods more than once and problems caused by this. It also considerably increases\nthe jpf­nhnandler efficiency as each method is executed only once. If jpf­nhandler encounters delegated\nmethod that has been executed, it just reflects result of its invocation. Another goal is to extend the\nconverter component and including convertor classes for missing incompatible model classes.",
                    "projectCode": "https://bitbucket.org/nastaran/jpf-nhandler-gsoc2016/wiki/Home"
                },
                {
                    "title": "Extending SPF with handling of symbolic arrays, and implementing a replay module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5957049577897984/",
                    "content": "Symbolic Pathfinder (SPF) is an open-source symbolic execution tool, based on NASA Java Pathfinder (JPF) model checker, which is used in research and industry labs.\n    It executes Java bytecode using a custom JVM to perform its analysis.\n    We propose to add support for symbolic execution of complex datastructures, especially arrays, and to implement a module to generate concrete inputs and replay symbolic execution with concrete variables.",
                    "projectCode": "https://github.com/R1kM/Pathfinder"
                },
                {
                    "title": "Fingerprinting for Programs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6333797935087616/",
                    "content": "Fingerprinting for Programs is aimed at analyzing code blocks on a semantic level. This is done by symbolically executing the code block via SPF over JPF in order to generate path constraints for each possible path that a program may take. The path constraints are then put into canonical form and analyzed. Level of refinement of the path constraints dictate the level at which we model programs i.e. If we do not refine the path constraints at all, the program is modeled on a syntactical level. If we stop refinement early, the program is modeled on a semantic level but syntactical structure of the program is still considered. If we  completely refine the path constraints and put them into canonical form, the program is modeled on a semantic level with no consideration towards the syntactical structure of the program. This gives us options on applications of fingerprinting for programs. Further research in this field could result in semantic patterns not just being observed but rather analyzed. Applications of this analysis include the possible creation of a semantic auto-complete for programmers.",
                    "projectCode": "https://jpf.byu.edu/finger-printing/"
                },
                {
                    "title": "Improving JPF Inspector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5770847981666304/",
                    "content": "This project will bring the JPF Inspector debugging tool up to date with the most recent version of JPF and Java, and it will add additional features, among which are a command-line interface, new commands and JPF introspection.",
                    "projectCode": "https://github.com/Soothsilver/gsoc-inspector/wiki/2016-Changelog"
                },
                {
                    "title": "Java PathFinder for Android Devices",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5532152087183360/",
                    "content": "Java PathFinder (JPF) has potential to be used for verification of Android apps, as they are written in Java. There is already an ongoing project to use JPF to verify Android apps outside of the Android platform, but such approach has limitations on the app functionality that can be verified, because modelling of Android environment on the desktop is difficult. Moreover, some apps cannot be properly analyzed in this way, as they rely on system events, make native calls, or interact with other Android apps that are unavailable outside the platform.We propose an alternative approach: to create a fork of JPF and its extensions for Android platform. We plan to create an Android app that includes all sources of jpf-core, with necessary modifications, wrapped in the user interface (UI). The UI will start main method of underlying jpf-core, provide to it command line arguments, and display output. The underlying JPF will be executed as service.",
                    "projectCode": "https://bitbucket.org/matsurago/jpf-mobile-devices/commits/all"
                },
                {
                    "title": "Oracle-Based Program Repair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6263126664151040/",
                    "content": "The main idea of the project is to define program repairs, which make the program closest to its oracle.Initially, we have a program, which is implemented in an incorrect way. We apply some fix options in the form of simple syntactic changes to it. Then, we run the same set of inputs on the oracle program and the repaired versions of the program. Using SPF and Green we calculate the percentage of the inputs for which the oracle program and the repaired program produce the same outputs. This percentage is the indicator of the quality of each fix.",
                    "projectCode": "https://jpf.byu.edu/probabilistic-repair/"
                },
                {
                    "title": "PSYCO for Reactive Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5522244805591040/",
                    "content": "My projekt goal is to extend PSYCO by a symbolic search algorithm to generate a termination criteria for the learning phase and to enable PSYCO to check properties on reactive systems.The current JPF-PSYCO extension combines active automata learning and dynamic symbolic execution to generate interfaces of reactive components. Further in the accompanying theoretical work of Giannakopoulou et al.[1] is shown, that this interfaces are k-full, in case they are safe, permissive, and tight for all method sequences of length up to k, k ϵ ℕ. The evaluation part of the current PSYCO implementation shows that the choice of k heavily influences the runtime behavior of PSYCO. Further it is argued, that it is possible to choose k to a relative small value after a manual analysis of the source code. During my project I will implement a symbolic search on the symbolic transition system produced by JDART to generate possible good choices for k in an automated manner. Apart of the choice of k the symbolic search output can also be used to prove invariants on the analyzed components, e.g., the absence of assertion violations.",
                    "projectCode": "https://bitbucket.org/mmuesly/psyco_gsoc16/wiki/GSOC-2016%20Final%20Project%20Summary%20Malte%20Mues"
                },
                {
                    "title": "Using JPF to efficiently compute workload in Multi-Agent Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4633597818437632/",
                    "content": "No one likes to arrive at the airport only to realize that their flight has been delayed. Departure Sensitive Arrival Spacing (DSAS) is a new concept developed at NASA Ames Research Center that has been shown to improve flight scheduling, enabling more departing planes to leave the runway. In order to fully evaluate the concept, it’s necessary to thoroughly test its impact on the workload of the human operators. Java Pathfinder can be used to check for just such a property.",
                    "projectCode": "https://drive.google.com/open?id=0BwrgAhm5slznTFlpNUhJRjRXZ1k"
                },
                {
                    "title": "Verifying Safety of NextGen Models",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6338391671046144/",
                    "content": "The goal of NASA’s NextGen research is to accommodate the traffic increase coming over the 15 years. One requirement for NextGen is to provide a better, at least the same, level of safety system, compared to the current ATS (Air transportation System). Using the Brahms Multi Agent System Modeling framework, researchers at NASA and the FAA are building models describing actions of flight and ground staff. These models are being explored to find better ways to coordinate to keep planes in the air, as well as how to land them quicker and safer.Within those models, the Java Pathfinder tool has been used to verify properties related to safety and workload. This verification process suffers from the (in)famous state space explosion problem: for the large model it is not possible to do complete state space exploration.In this proposal we propose to use  the GALE optimizer (GALE is a fast heuristic algorithm which can find the optimal result to the multi-objectives problem by pruning the unpromising subspace) to find the most promising sub-state space in the models so that the verification process can be targeted and more efficient.",
                    "projectCode": "https://github.com/ai-se/brahms"
                },
                {
                    "title": "Visualization Support for JDart",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4834860522799104/",
                    "content": "JDart is a tool for performing concolic execution on a Java program. The aim of concolic execution is to explore additional behavior in the program by generating input values which will result in a different path being taken through a program (or method). The result of concolic execution is a constraints tree, i.e., a tree with its inner nodes reflecting the decisions that were made during the execution of the program. The nodes on the trees are labeled as: OK if the method was regularly exited, ERROR if there was an exception, or DONT_KNOW if no valuation could be generated for the respective path.Currently, the constraints tree is represented only as a plain text file which makes identifying the nodes and the statuses of leaves extremely hard in such a simplistic representation. To provide a better user experience, I will develop a web interface to visualize the constraints trees generated by JDart. At a very basic level, a user will have an intuitive overview on the whole generated trees. At a later stage, I will enable interactive operations on the web interface, e.g. letting user select on which part of a tree JDart should focus on.",
                    "projectCode": "http://chaofz.me/jdart-viz/description/"
                }
            ],
            "techStack": [
                "java",
                "jvm",
                "android",
                "distributed systems"
            ]
        },
        {
            "title": "JBoss Community",
            "orgLink": "http://www.jboss.org/",
            "projects": [
                {
                    "title": "AeroGear WebPush and UnifiedPush Server integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6663863487430656/",
                    "content": "The AeroGear UnifiedPush Server is a powerful and scalable server that allows sending push notifications to different (mobile) platforms. And now it’s time to extend it and add supporting for a new WebPush protocol, which will allow to send push notifications to the web browsers, such as Google Chrome and Mozilla Firefox.\nThe project also supposes integration of AeroGear WebPush Server with UPS, which will allow to send push notifications to any device without requirement to use vendor’s push-messaging systems (Google Cloud Messaging, Mozilla Push Service).",
                    "projectCode": "https://gist.github.com/idelpivnitskiy/71a3373c7625034bbb7be3976e050fe7"
                },
                {
                    "title": "Ceylon Markdown",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6635801781731328/",
                    "content": "This project aims to create a Markdown processor written in Ceylon that will be a part of the Ceylon SDK. This will be based mainly on the CommonMark spec. This will be a useful module since Ceylon already uses markdown in ceylon doc for documentation.",
                    "projectCode": "https://github.com/rohitmohan96/ceylon.markdown"
                },
                {
                    "title": "Ceylon TypeScript Loader",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5328730759102464/",
                    "content": "Write a program that loads TypeScript declarations for use in the Ceylon compiler.\nThis will allow people to use TypeScript libraries and programs, as well as JavaScript APIs with TypeScript declaration files (Browser, Node), typesafely from Ceylon (without the need for dynamic).",
                    "projectCode": "https://gist.github.com/lucaswerkmeister/64085bbf2ae17f702a0abdb46a5e3daf"
                },
                {
                    "title": "Drools Rules in Minecraft",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5937268300709888/",
                    "content": "Drools and Java can work together. Java and Minecraft work together. The obvious next step is to get Drools and Minecraft to work together.The plan is as follows:--A Minecraft mod boots up a list of Drools rules. These are either stored in a predetermined directory, or listed in a config file.--Minecraft does it's start-up routines. The user loads a world.--Each tick (world update) (or X ticks, determined by efficiency needs), the mod executes the rules.--The rules call functions in the mod's Drools API. This is where the majority of the work will come in—I'll have to write a largish set of functions for drools to use. The functions will take two shapes: returning boolean values for tests, or acting upon the world.--The mod reacts to the function calls, altering the world...–...which the user then interacts with.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/124mZDqz2cVahhoRPY7wzSvpsAIImOTlFO_5fWvFI7oI/edit?usp=sharing"
                },
                {
                    "title": "Gabov Anton. Smart HTTP/2-based protocol for Infinispan",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4952105882222592/",
                    "content": "Smart HTTP/2-based protocol for Infinispan.The Infinispan Server distribution contains a server module that implements Infinispan’s custom binary protocol called Hot Rod. The protocol was designed to enable faster client/server interactions compared to other existing text based protocols and to allow clients to make more intelligent decisions with regards to load balancing, failover and even data location operations.In 2015 the 2nd version of HTTP protocol (simply HTTP/2) was finally introduced. HTTP/2 provides a lot of features that are also implemented in Hot Rod protocol. For example, using the HTTP/2 will be more preferable than Hot Rod because the size of the requests and responses will be smaller.Expected results of this project are:",
                    "projectCode": "https://github.com/AntonGabov/infinispan/blob/topologyId/client/rest-client/GSoC.txt"
                },
                {
                    "title": "Hawkular-agent For Vert.x",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5922029756743680/",
                    "content": "Vert.x has already the capability to send metrics to Hawkular. However, students in thie proposal have to implement the functionality needed so that resources in vert.x can report themselves into the inventory of Hawkular, so that the Hawkular UI and other clients can find them with additional traits like operations, names of metrics etc. This also implies being able to run operations from Hawkular inside vert.x.",
                    "projectCode": "https://github.com/vert-x3/vertx-hawkular-metrics/commits/inventory-reporter?author=auszone"
                },
                {
                    "title": "Hibernate Search: JSR 352 batch job for re-indexing entities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4803353448022016/",
                    "content": "Hibernate Search is an extension to Hibernate ORM that brings the powers of full-text search via Lucene and Elasticsearch to JPA models. Think of it as Google: after processing the input keywords (e.g. ignoring stop words and applying different kinds of normalization), Hibernate Search returns results ordered by relevance. It brings significant benefits comparing to normal SQL for search-related uses cases. Its full-text index can be updated in two ways: Automatically, whenever data changes (using listeners hooked into Hibernate) or by means of the \"mass indexe\", which rebuilds the entire index for given entity types.This proposal aims to provide an alternative to  the current mass indexer, based on the Java Batch architecture as defined by JSR 352. This standardized tool JSR 352 provides task-and-chunk oriented processing, parallel execution and many other optimization features. This batch job should accept the entity type(s) to re-index as an input, load the relevant entities from the database and rebuild the full-text index from these.",
                    "projectCode": "http://in.relation.to/2016/08/22/new-implementation-of-mass-indexer-using-jsr-352/"
                },
                {
                    "title": "Improve existing Android client of Hawkular",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6500218254131200/",
                    "content": "World want to use features in mobility, and android is the best open source to provide that. Present Hawkular Android Client built for Alpha 3, Which provide Alerts and Metrics related to URL resources only. But after that features like Secret Store, Inventory of servers,  General purpose inventory etc have evolved. This project idea is about adding features to android client to make it compatible with recent Hawkular Server.",
                    "projectCode": "https://github.com/hawkular/hawkular-android-client/commits/master?author=anuj1708"
                },
                {
                    "title": "Test scheduling for large test suites",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6218247342915584/",
                    "content": "In real life projects it is not uncommon that the whole test suite takes hours to execute completely. This makes it hard to follow the good practices to execute the complete test suite for each commit. Providing early negative feedback (fail the tests as early as possible) could streamline the developer work.\nIn order to solve the problem it would be better to reorder the tests so most relevant test are executed first so they have the chance to fail early. “Most relevant” could mean : dependant on recently changed code, recently failing or most frequently failing tests.",
                    "projectCode": "https://drive.google.com/file/d/0B51JRSedIsfmdHhZSFVfeGNZNEE/view?usp=sharing"
                }
            ],
            "techStack": [
                "java",
                "android",
                "ide",
                "aerogear",
                "asciidoctor"
            ]
        },
        {
            "title": "Jenkins Project",
            "orgLink": "https://jenkins.io",
            "projects": [
                {
                    "title": "External Workspace Manager Plugin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5176706365128704/",
                    "content": "Currently, Jenkins’ build workspace may become very large in size due to the fact that some compilers generate very large volumes of data. The existing plugins that share the workspace across builds are able to do this by copying the files from one workspace to another, process which is inefficient.\nA solution for this problem is to create the External Workspace Manager Plugin.",
                    "projectCode": "https://alexsomai.github.io/gsoc-2016/"
                }
            ],
            "techStack": [
                "java",
                "groovy",
                "jenkins",
                "css",
                "html"
            ]
        },
        {
            "title": "Joomla!",
            "orgLink": "https://www.joomla.org/",
            "projects": [
                {
                    "title": "Browser Automated Tests for Joomla! CMS(covering Users and Content features)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6002483084132352/",
                    "content": "System development nowadays more than ever starts to look for automated test methods. \nThere are several main drivers for this trend -need for faster design‐develop‐test‐analysis cycle, push for higher quality, increasing complexity of systems and their integration and last but not least ever‐rising costs of manual testing. \nSoftware testing itself is very wide field with topics ranging from compliance frameworks.Automation Testing means using an automation tool to execute test case suite.\nThe automation software can also enter test data into the System Under Test, compare expected and actual results and generate detailed test reports.Test Automation demands considerable investments of money and resources. \nSuccessive development cycles will require execution of same test suite repeatedly. \nUsing a test automation tool it's possible to record this test suite and re-play it as required. \nOnce the test suite is automated, no human intervention is required.This project mainly a project for the Joomla CMS.",
                    "projectCode": "https://github.com/joomla-projects/gsoc16_browser-automated-tests/commits/staging?author=pritalpatel"
                },
                {
                    "title": "Improved multi-lingual content management‏",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4715316819001344/",
                    "content": "The goal of my project is to improve a multi-lingual site's back-end, meaning that besides having several content (articles, menu items, categories, contacts, etc.) separated by default, one can associate content languages with those items side-by-side to avoid tedious replication tasks of going back and forth to apply changes.",
                    "projectCode": "https://github.com/joomla-projects/gsoc16_improved-multi-lingual/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Ajreys%20"
                },
                {
                    "title": "Improving the menu item workflow in Joomla",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5640554780033024/",
                    "content": "This project is mainly a project for the Joomla CMS.\nThis Joomla GSoC project aims to improve the workflow regarding creating articles & menu buttons to those articles.\nIn Joomla 1.0 it was possible in the administrator back-end to create a menu link to an article from within the article edit view. In Joomla 3.x to create an article and menu item in the administrator back-end , one have to:",
                    "projectCode": "https://github.com/joomla-projects/gsoc16_menu-for-article/pull/15/commits"
                },
                {
                    "title": "Project X: JavaScript Unit Tests: Project Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6478555512832000/",
                    "content": "Since the Joomla core is written primarily in PHP the codebase currently has a comprehensive test coverage for PHP so far. What the codebase lacks is such a comprehensive test coverage for the collection of custom written JavaScript libraries. The project targets at introducing unit testing for those custom JavaScript libraries and automating the tests to run on Travis build triggered by a PR to the Github repository.",
                    "projectCode": "https://github.com/joomla-projects/gsoc16_js-unit-tests/commits/develop?author=Ruchiranga"
                },
                {
                    "title": "Recording actions logs, accessible by super admin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6627562692280320/",
                    "content": "To record actions of users within the CMS, to know who to blame when something wrong happens.This project is about making a Joomla! CMS extension to store the tasks performed by any user, informing those who did, where did when did and what made within the project.\nThis project has two main parts: capturing the log data and viewing the captured data. It will be a package that contains a plugin to store events and a component to view, filter and control them.I'll build a package that contains a component, plugin and module.\nThe plugin will have the logging system that will store users actions based on Joomla events.The component will be for viewing logs and controlling deleting and logging options. The module will be for viewing the logs of current user in the back-end.",
                    "projectCode": "https://github.com/joomla-projects/gsoc16_recording-action-logs/commits/staging?author=muhakh"
                }
            ],
            "techStack": [
                "php",
                "css",
                "html",
                "javascript",
                "jquery"
            ]
        },
        {
            "title": "jQuery Foundation",
            "orgLink": "https://jquery.org/",
            "projects": [
                {
                    "title": "A module system for Hammer.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5160583594770432/",
                    "content": "The advantages of organizing a program into several files or modules are similar to authors organizing a book into several chapters and sections. The structure helps people who aren’t yet familiar with the code find what they are looking for and makes it easier for the programmer to keep things that are related close together. This project aims at developing a module system for the wonderful Hammer.js library that is flexible, predictable and extensible in the new ES6 version of javaScript.",
                    "projectCode": "https://gist.github.com/arjunkathuria/6b92f8ac5f34a10e001ab30defe05e68"
                },
                {
                    "title": "Adding UI components to Chassis framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6032159965970432/",
                    "content": "Chassis aims at defining open standards for various CSS/JS libraries and the web in general. \nThe project aims to complete and deliver base styles for at least 5 UI components (e.g. tabs, modals, menus e.t.c) by the end of GSOC 2016. The project makes use of advanced SASS and JS for testing the components integration.",
                    "projectCode": "https://gist.github.com/nashvail/46949066c64578246f79c6b8356427ae"
                },
                {
                    "title": "Bug Hunt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4870252932366336/",
                    "content": "jQuery Mobile currently has a large number of open issues (~300). To maintain JQM’s vitality, this backlog should be necessarily cleared. This summer project aims to bring down this number to 50 (fifty) and categorize them in a proper and manageable manner and on the same time handle the communication and response to community both during and after the summer.",
                    "projectCode": "https://apsdehal.in/blog/gsoc-16-highlights"
                },
                {
                    "title": "Create a sandbox interface for tests",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5321045854650368/",
                    "content": "Testings of JavaScript application sometimes include modification of their own environment, such as global/native objects extensions and DOM manipulations. To avoid undesirable side effects, they have to be executed in a clean environment as much as possible.Since Intern JavaScript testing framework doesn't have this as the core feature yet, users have to manually reset or sandbox everything they care. The aim of this proposal is to solve this issue by implementing “sandbox interface” to Intern core API and make users get rid of the difficulties.The timeline of this proposal includes the following:",
                    "projectCode": "https://gist.github.com/hakatashi/fef709268d09fd844e4d13c57a461ea1"
                },
                {
                    "title": "jQuery Learning Center",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6439426750152704/",
                    "content": "The goal of this project is to develop a framework for the development and presentation of interactive tutorials in order to provide a full learning experience.",
                    "projectCode": "https://gist.github.com/ConnorCartwright/8fb408fbe4d18ac76530c207e5ebf191"
                },
                {
                    "title": "Proposal for commitplease project in jQuery",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5841216725843968/",
                    "content": "Projects like jQuery and Angular JS are written primarily with javascript and make extensive use of git as their version control system. Using git means that developers write commit messages. Nice and clean commit messages that adhere to an agreed-upon style are very common. So, implementing a way to validate these messages, like the commitplease project, makes a lot of sense. Currently, the commitplease project supports the jQuery style commit messages. Extending its support to the Angular-style ones (and possibly others) is a logical goal.",
                    "projectCode": "https://all3fox.github.io/2016/08/16/gsoc16-at-commitplease.html"
                },
                {
                    "title": "Qunit - Standard reporter interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5136916982792192/",
                    "content": "My project aims to improve the development of testing tools through a common interface for reporters. It is hard because there are already so many tools and each one has its own interface and they will no renounce so easily, but we will try.To achieve this we will implement the specification in a quite popular testing framework, Qunit, and then we will try to engage also other people, mainly maintainers of other open source testing solutions.This way any one that will build in the future a new testing tool will be encouraged to use this interface, because it is time saving and less code to write, it is in the spirit of code reuse.",
                    "projectCode": "https://flore7seven.wordpress.com/2016/07/16/gsoc2016/"
                }
            ],
            "techStack": [
                "javascript",
                "html5",
                "css",
                "jquery"
            ]
        },
        {
            "title": "JSK Robotics Laboratory",
            "orgLink": "http://www.jsk.t.u-tokyo.ac.jp",
            "projects": [],
            "techStack": [
                "euslisp",
                "openhrp",
                "openrtm",
                "ros"
            ]
        },
        {
            "title": "KDE",
            "orgLink": "https://www.kde.org/",
            "projects": [
                {
                    "title": "1 Krita Canvas Decorations Compatible with Modern OpenGL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5655612398501888/",
                    "content": "I aim  to  seek  out  the reliance on legacy functionality in the engine that powers the\nQPainter  class  and  to  convert  this  functionality  to  work  in version  3.2  Core  Profile.  This  will  enable  OSX  to  display decorations  and  will  likely  allow  Krita  to  run  on  Mac  OS X computers.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/JulianThijssen"
                },
                {
                    "title": "A staging area to improve selecting files in Dolphin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4788262543556608/",
                    "content": "Selecting multiple files in any file manager for copying and pasting has never been a pleasant experience, especially if the files are in a non-continuous order. Often, when selecting files using Ctrl+A or the selection tool, we find that we need to select only a subset of the required files we have selected. This leads to the unwieldy operation of removing files from our selection. Of course, the common workaround is to create a new folder and to put all the items in this folder prior to copying, but this is a very inefficient and very slow process if large files need to be copied. Moreover Ctrl+Click requires fine motor skills to not lose the entire selection of files.This is an original project with a novel solution to this problem. My solution is to add a virtual folder in all KIO applications, where the links to files and folders can be temporarily saved. The files and folders are \"staged\" on this virtual folder. Files can be added to this by using all the regular file management operations such as Move, Copy and Paste, or by drag and drop. Hence, complex file operations such as moving files across many devices can be made easy by staging the operation before performing it.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/ArnavDhamija"
                },
                {
                    "title": "Add educational activities to GCompris (In Qt Quick)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5161731424780288/",
                    "content": "GCompris is an educational software suite comprising of numerous activities for children aged 2 to 10. This project aims at creating two more activities (Nine Men’s Morris and Digital Electricity). These activities will be a nice addition to GCompris in terms of a strategy game and an education game, which will make it more resourceful, usable and popular among young children and teachers.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/PulkitGupta"
                },
                {
                    "title": "Add educational activities to GCompris (In Qt Quick)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6351465819930624/",
                    "content": "GCompris is a high quality educational software suite that aims to develop children’s skills and knowledge while playing very entertaining mini-games.\nGCompris was firstly developed in Gtk+ and lately ported to Qt. However, there are still several activities which are not yet available in the current version and need to be written from scratch. Activities like Paint, or Photo Hunter were loved by children and they miss them in this version. My goal is to port as many activities as I can, while keeping the quality up to the high expectation.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/StefanToncu"
                },
                {
                    "title": "Add softproofing and wide-gamut colour selector to Krita",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6030544789831680/",
                    "content": "Most consumer screens can only show a limited amount of colour, this we generally refer to as the sRGB space. Wide gamut editing is about editing values in larger spaces of colour(such as Adobe RGB or the ACES colour space) and emulating how that looks on the screen.Currently, Krita’s architecture has all the bells and whistles for wide-gamut editing. Two big items are missing: Softproofing and a good internal colour selector dialogue for selecting colours that are outside of the sRGB colour space.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/WoltheravanHovelltotWesterflier"
                },
                {
                    "title": "Adding support for the FITS data format in LabPlot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5445058069266432/",
                    "content": "Currently LabPlot provides no support on the handling of FITS files. The aim of this project is to provide support for FITS files, and to enable various operations on them.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/fkristof"
                },
                {
                    "title": "Ark project: Implement advanced editing of archives",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5775441717624832/",
                    "content": "Ark is an archive manager. For now it has lack of adding content to certain folder, moving, deleting and copying functionality. I'd like to propose some new control elements, which will present the new implemented functionality.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/Batyrenko_Vladyslav"
                },
                {
                    "title": "Devising the Plasma Mobile Emulator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4951924956725248/",
                    "content": "In KDE's annual world summit Akademy, KDE had bring to light about the project of Plasma Mobile stating it will be unique-both the dominant mobile operating systems and even different from ubuntu for phones. Currently if we want to try it out; Plasma mobile requires flashing it on phone device during development, which is not an ideal workflow. This proposal aims to devise emulator for plasma mobile (i.e. we want to make plasma mobile working inside desktop).Plasma Mobile emulator will be the solution for developing, testing and accessing plasma phones without having real phone.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/BhavishaDhruve"
                },
                {
                    "title": "digiKam automatic Red Eyes detection and correction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5480772601380864/",
                    "content": "digiKam includes a basic tool to fix red eyes in Image Editor. there is no automatic mode (detection and correction), which makes the process of fixing red eyes in a batch of images a time consuming task. The objective of this project is to add automatic red eye removal feature to digiKam BQM and Image Editor to detect and correct red eyes automatically.",
                    "projectCode": "https://docs.google.com/document/d/1x5JiEBMSZpuq-NuDbb6CvGeBDqpPR5zoPn4fhjgJI5I/"
                },
                {
                    "title": "DigiKam MySQL/MariaDB Database Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4617358412873728/",
                    "content": "DigiKam is an advanced digital photo management  application which enables user to view, manage, edit, organize, tag and share photographs under Linux systems. Currently, DigiKam use SQLite database support which is embedded database i.e. limited to local storage with one user. The goal of this proposal is to use MySQL database, which will provide the ease of more than one DigiKam accessing a remote and common database storage located on a remote server.",
                    "projectCode": "https://docs.google.com/document/d/19vubnbTjCBetgaDVq7IoPCHcv-CSf4JaM67qsj0vG5M/edit?usp=sharing"
                },
                {
                    "title": "Extending animation features in Krita",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5774868071055360/",
                    "content": "This project aims to bring Krita's animation features to more types of layers and masks, as well as provide means to generate certain types of interpolated frames and extend the user interface to accommodate these features.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/JouniPentikainen"
                },
                {
                    "title": "Fluent graphics across every tile level in Marble's OSM vector map",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4895231388418048/",
                    "content": "Marble has a new type of map view, which renders the OSM data as vector graphics, but it currently supports only high zoom levels(13-17). This project aims to deliver this real-time vector rendering functionality for every tile level.",
                    "projectCode": "https://github.com/KDE/marble/commits/master?author=freedawson@gmail.com"
                },
                {
                    "title": "Improve categorization and search on Inqlude web site",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6658291304235008/",
                    "content": "Inqlude is an open, crowd sourced archive of Qt libraries which helps developers to find, install and use Qt libraries easily. A public version of Inqlude runs at http://inqlude.org/. The current website has few options to search libraries under several categories. Hence this requires more use cases tailored to the data collected on Inqlude. The intended project task is to improve categorization and search on Inqlude website in order to offer a better user experience.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/Nanduni"
                },
                {
                    "title": "Julia Backend for Cantor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5829086664458240/",
                    "content": "The goal of the project is to implement Julia support for Cantor worksheet application with folowing features: command execution, variable management, syntax-highlighting, inline plotting and binding to existing wizards.",
                    "projectCode": "https://juliacantor.blogspot.ru/2016/08/cantor-gets-support-of-julia-language.html"
                },
                {
                    "title": "KDE Edu, LabPlot- Project: theme manager for plots",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6151543413800960/",
                    "content": "The main goal of this project is to develop a theme manager for LabPlot. In LabPlot, there already exists functionality to create and modify plots. Therefore, now I want to develop a Theme Manager with a group of different themes which can provide flexibility to the users to start, modify or save the plots according to the appearance of their preference. Moreover, the users save a lot of time if they already are provided with nice-looking themes suiting their taste.",
                    "projectCode": "https://github.com/KDE/labplot/commits/thememanager?author=prakritibhrdwj"
                },
                {
                    "title": "KDE Now",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4790279299137536/",
                    "content": "KDE Now is a Google Now substitute for the Plasma Desktop. Various useful information from one's Email is shown on a Plasmoid in the form of Cards.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/AdityaDevSharma"
                },
                {
                    "title": "Kdenlive: Windows and OSX Port",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4952476860022784/",
                    "content": "Kdenlive is an amazing video editing software. The features in kdenlive allow it to compete with many commercial solutions, but the userbase is limited to the fact that it is only available to linux users. By producing windows and OS X versions, we will be able to reach many more users.The Windows port will be produced using emerge or MXE, and I plan to finish it first, with the OS X port starting afterwards.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/joshwambua"
                },
                {
                    "title": "KDevelop Integration with Arduino and embedded development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6213589316665344/",
                    "content": "The actual Arduino IDE, was initially created with Java and is still a simple IDE that does not provides autocompletion, sentence errors, assembly visualizer, field for compiling and linking flags, syntax highlighting and other features present in both Kdevelop and Qt CreatorSome developers and educators say that Arduino IDE isn't as good and comfortable as a development ambient for higher education and development. In order to the to fix this situations, the development of Arduino plugins for KDevelop, Qt creator, Visual Studio and Eclipse began, but generally the setup for such plugins is complicated and it's necessary a good understanding of these IDEs and OS's ambient functionality.The main goal of this proposal is to add a native support to KDevelop with embedded systems, such as Arduino and ARM processors. Using avrdude, OpenOCD, GDB and other tools that are used in development of embedded systems.",
                    "projectCode": "https://phabricator.kde.org/diffusion/KDEVEMBEDDED/"
                },
                {
                    "title": "KDevelop: LLDB Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6014826014834688/",
                    "content": "Enabling kdevelop to use lldb as a debugging backend, which would be especially useful on Max OS X and Windows, where gdb support is rather scarce, and it can also help people that want to switch to lldb on linux by adding decent IDE support.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/PeifengYu"
                },
                {
                    "title": "KStars Lite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5053062041305088/",
                    "content": "Could Lord Rosse (William Parsons) that built the biggest telescope of the 19th century even imagine that more than he could observe can be now held in the pocket? And that is only one of the motivations for KStars Lite:",
                    "projectCode": "https://docs.google.com/document/d/1ccoSccTTasy6T5NDkLzXFjwcXh2tq8sslv2P0C-Co4w/"
                },
                {
                    "title": "KStars on Windows",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4769020016328704/",
                    "content": "KStars is a high quality planetarium program and at the same time a very powerful astronomy tool provided by the KDE Community. It is a free open-source software able to provide an accurate graphical representation of the night sky, from any location on Earth, at any date and time. Even though KStars is one of the best planetarium software, it currently has a major drawback: it lacks a fully working Windows version. The actual Windows installing process of KStars is slightly troublesome, especially for a user with no programming background. Therefore, developing a Windows version of KStars is crucial in the further development of KStars as it is one of the main astronomy software out there. It would fill a gap in KStars's reliability and would certainly make KStars more popular and appealing to everyone.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/RaphaelCojocaru"
                },
                {
                    "title": "LabPlot: Adding histogram and bar chart.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5225565913088000/",
                    "content": "This project implement two new plot types - histogram for continuous (quantitative) data\nand bar chart/plot for categorical​ data and support for different histagram types: ordinary, cumulative, average shifted and also advanced settings for the number of bins.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/anumittal"
                },
                {
                    "title": "LUKS & LVM support for Calamares & KDE Partition Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4946951921467392/",
                    "content": "Calamares  & KDE partition Manager currently depends on KPMCore for doing its disk partitioning tasks. While KPMCore supports many file systems; however, its support for LUKS and LVM2 is still lacking.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/ChantaraTith"
                },
                {
                    "title": "Minuet Mobile",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6230897497997312/",
                    "content": "Minuet is an application that allows users to play their favorite MIDI files. It helps novices and experts with learning more about music education. Currently, Minuet is available only as a Desktop Application.  This project aims to make a mobile application with the same functionalities as the Desktop version.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/AyushShah"
                },
                {
                    "title": "Neverland Theme Builder project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6689661745364992/",
                    "content": "KDE's Neverland is able to build full themes from a set of template files. The designer needs to only care about the css/js files and the correct nesting of the layout (html). Once satisfied, complete themes for any supported CMS can be outputted and then used accordingly. The project is based on node.js.\nTL;DR: you give Neverland a Html theme, it gives you WP theme, Drupal Theme, WikiToLearn theme ...",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/MinhChu"
                },
                {
                    "title": "Plasma PublicTransport",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4684125155885056/",
                    "content": "This project aims to port Plasma's PublicTransport applet to Plasma 5 and Qml",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/harishnavnit"
                },
                {
                    "title": "Porting activities in Qt version of GCompris.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4899329324089344/",
                    "content": "GCompris is an educational suite, that aims to teach kids, in the easiest way. Here we are not trying to replace the teacher. We are here just to make their work a little easier. And for this, I want to propose three activities. Family activity that will help kids understand how they are related to their relatives. After that  I will be working on the port of Submarine simulator and at last I will work on Collision Activity, that will be based on the concept of collision and conservation of momentum.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/RajdeepKaur"
                },
                {
                    "title": "Support for medium and low tile levels in the OSM Vector Map of Marble",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6218562351923200/",
                    "content": "As of now Marble supports rendering of OpenStreetMap vector data for higher tile levels. In order to make the vector OSM theme complete and end - user ready, support for medium and lower tile levels must be added.For supporting low level rendering( levels 1, 3, 5, 7, 9), Marble should render using the Natural Earth vector dataset instead of the OSM vector dataset. The reason for this is that Natural Earth dataset has categorically arranged data which is required for step by step rendering of lower levels. Apart from this the rendered data should be styled so as to match the OSM theme and tiling support must be added on the server and client side.For the medium level tiles, rendering must be performed using the OSM dataset. OSM dataset gives us many small chunks and nodes for a particular geographic data item. These chunks and nodes need to be filtered and reduced to a manageable size for each specific level so as to get optimal performance and less screen clutter.Rendering of higher level tiles can be improved by adding rendering support for roof-types and textures tags of buildings.",
                    "projectCode": "https://github.com/KDE/marble/commits/master?author=akshat.tandon@research.iiit.ac.in"
                },
                {
                    "title": "Umbrello: New Breath",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5891680712523776/",
                    "content": "The idea of this proposal is give a new breath to Umbrello. Updating the application to use Qt5 and KF5 libraries and implement a few features on the wishlist, that have more votes to be implemented, like a new UML diagram, add a few adjusts on the parse of the diagrams to C++ code, and fix the issues on Umbrello release for Ms Windows with KF5 libraries.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/LaysRodrigues"
                },
                {
                    "title": "Use Phabricator API to enhance KDE Reports",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5196547771858944/",
                    "content": "KDE Reports aims to provide insight about KDE projects from one place instead of having to go through different sources. The project goal is about adding the Phabricator to list of data sources that KDE Reports can fetch from. Phabricator is a suite of web applications which make it easier to build software while working with teams. It manages a set of tasks in a workboard and organizes them in a workflow. KDE Reports will use the Phabricator API to get these data about different KDE projects from Phabricator, show graphs and make reports about them. An extension part for the project is refactoring the code, increasing test suite coverage and upgrading to Rails 5.",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/AliMohamed"
                },
                {
                    "title": "Wiki-to-learn (W2L) Desktop Client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4719336908390400/",
                    "content": "A cross platform wiki-to-learn   browser . The browser will  also be available on Smartphones .  The main feature of the application is the offline mode . Now user can use wiki-to-learn even when they are not connected to internt .",
                    "projectCode": "https://community.kde.org/GSoC/2016/StatusReports/jgupta"
                },
                {
                    "title": "WikiToLearn Rating",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5934195385827328/",
                    "content": "The pages of content on wiki-style platforms can be more or less reliable and of good quality. But it all depends on parameters like author's credibility and interconnections between the pages. This project is aimed to develop a Rating Engine based on various parameters like User's Opinion, Author's Credibility,Page Interconnections and Revision History to evaluate the reliability and quality of articles and pages on such wiki-style learning platform.",
                    "projectCode": "https://community.kde.org/index.php?title=GSoC/2016/StatusReports/AbhimanyuSinghShekhawat&oldid=73635"
                }
            ],
            "techStack": [
                "qt",
                "cmake",
                "c++",
                "php"
            ]
        },
        {
            "title": "KolibriOS",
            "orgLink": "http://www.kolibrios.org/",
            "projects": [
                {
                    "title": "Bit torrent client for KolibriOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6132971438342144/",
                    "content": "Primary goal of this project is to implement a bit torrent client for KolibriOS.",
                    "projectCode": "http://chokshiutsav.github.io/BitTorrent/"
                },
                {
                    "title": "C layer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6693475676323840/",
                    "content": "writing layer between C and assembler code",
                    "projectCode": "https://github.com/punk-joker/kolibri-c-layer"
                },
                {
                    "title": "GUI-based FTP client for KolibriOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6252078934523904/",
                    "content": "The aim is to build a GUI-based FTP client in x86 assembly/FASM. Currently KolibriOS only has a CLI-based FTP client with basic functionality. People who are not familiar with a command line interface might find it difficult to operate the client.The client will support functions in the existing FTP client as well as other functions like searching for files within remote directory, resuming/aborting downloads, logging and GUI-specific features like displaying directory hierarchy, upload/download progress bar using boxlib GUI library.",
                    "projectCode": "https://gist.github.com/nisargshah95/0b431a80713f3239bbdbc43190da0e63"
                },
                {
                    "title": "KolibriOS. Development of TLS/SSL library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4568246669803520/",
                    "content": "I would like to work on TLS/SSL library for KolibriOS. I am going to write basic version of mbed TLS (used to be PolarSSL). Library will be written in pure FASM.\nI am going to implement in library a some base key exchange algorithms(Diffie-Hellman, RSA and maybe more), some types of hash-functions ( SHA256 - main task,SHA1, MD5), AES encryption algorithm, and random number generator.",
                    "projectCode": "https://github.com/Bandd-k/TLS-Library"
                }
            ],
            "techStack": [
                "fasm",
                "flat assembler",
                "x86 assembly",
                "i386",
                "i586"
            ]
        },
        {
            "title": "LabLua",
            "orgLink": "http://www.lua.inf.puc-rio.br/",
            "projects": [
                {
                    "title": "Add class-based object-oriented programming to Typed Lua",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5414114708946944/",
                    "content": "This project seeks to design and implement a class system for Typed Lua which will replace its current class definition style. It should feel like a cohesive component of the language, rather than a layer on top of Lua's meta-programming primitives. Because Typed Lua compiles to Lua and is designed to interact with regular Lua code, its code generator should support user-defined plug-ins for compiling Typed Lua class definitions into a specific untyped Lua class system.",
                    "projectCode": "http://kevinclancy.github.io/2016/08/18/a-class-system-for-typed-lua.html"
                },
                {
                    "title": "Admin Center, Elasticsearch integration for Sailor and Luagoogle",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6275718971392000/",
                    "content": "The admin center would be pivotal in utilizing the autogen functions and a configuration file editor would make it easy for the end user to edit conf files. Elasticsearch integration would enable a user to store his database models in the search index for fast and efficient searches.  Luagoogle can be used to get Google results programatically in lua at the backend itself.",
                    "projectCode": "https://github.com/sailorproject/sailor/pull/125"
                },
                {
                    "title": "An automatic generator of WSDL documents to LuaSOAP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5317443853484032/",
                    "content": "A fully automatic generator of WSDL documents to LuaSOAP composed by a generation module and a parameter based script.  This will improve the LuaSOAP library usage by extinguishing users need to fully understand WSDL types and its syntax.",
                    "projectCode": "https://docs.google.com/document/d/17hQuWujl7TU9izmKgsxkVkSFOaY7fm9mKW86yFLrMmc/edit?usp=sharing"
                },
                {
                    "title": "Extending the online tutorial of Céu with Emscripten and SDL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5719378301550592/",
                    "content": "I want to extend the tutorial offered by LabLua for the Ceu language. As it is, when you write code on their website and press submit, the code is sent to their server, compiled and the result is sent back. The problem with this, is that it doesn't show the entire capabilities of the language. For instance if you write a program that prints a message every second for 10 seconds, it will return that message printed ten times in an instant. What I want to do by using Emscripten is to have a real time tutorial, so that after the server sends back the result, it will actually print the message every one second, for ten seconds. I will also want to create a second tutorial that implements SDL as well. SDL is a language that can create shapes and interacts with keyboard inputs and the mouse. There already is compatibility between Ceu and SDL and there is also compatibility between SDL and Emscripten. The challenge is to create a synergy with all three languages. I believe this to be feasible, because you can transform a Ceu program into a C program that can then be compiled with Emscripten.",
                    "projectCode": "https://github.com/VicentiuM/Ceu-Emscripten/"
                },
                {
                    "title": "Improve elasticsearch-lua tests and builds",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6359851743576064/",
                    "content": "Elasticsearch is very good and scalable search engine. It provides a REST API accessed through JSON format. My project aims to improve the existing elasticsearch-lua client by adding extensive tests and documentation, thereby targeting a stable release.",
                    "projectCode": "https://dhavalkapil.com/blogs/Elasticsearch-Lua-GSOC-2016/"
                },
                {
                    "title": "Improving the Quality of Error Messages in PEG Parsers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4549674694344704/",
                    "content": "Parsing Expression Grammars (PEGs) are an expressive formalism for designing and implementing top-down parsers with local backtracking. An issue that users of PEG-based parsers face is poor reporting of syntax errors on the part of PEG-based parsers. Labeled failures are an extension to PEGs that aims to address this issue by annotating a PEG with labels corresponding to syntax errors, improving the quality of error messages generated by a PEG-based parser.LPegLabel is an extension of the LPeg tool that provides an implementation of PEGs with labeled failures. Labels can be used to signal different kinds of errors and to specify which alternative in a labeled ordered choice should handle a given label.The goal of this project is to rewrite the parsers of some Lua libraries, such as the module re from LPeg and lua-parser, by using LPegLabel. After this rewriting we should get parsers with better error messages.",
                    "projectCode": "https://undecidabot.github.io/lpeglabel-gsoc-2016/"
                },
                {
                    "title": "Next Generation of the LuaRocks test suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5757487680585728/",
                    "content": "In this project we focus on package manager for Lua modules, LuaRocks. Our main goal is to increase quality of test suite, because it's implemented as a big shell script that only does black-box testing. So we write new test suite with Lua unit testing framework busted.This will allow us to extend the test suite by writing smarter tests that check its behavior, write white-box tests of the internals, and also port the test suite to other platforms. Next step is to improve code coverage, by adding white-box tests for parts that are hard-to reach via black-box testing. Make tests cross-platform could be a challenge for Windows operating system. At the end we integrated code coverage results, merging the Linux and Windows runs.",
                    "projectCode": "https://docs.google.com/document/d/1ewzvCv6glpX0cO90D0hQSG_rAqVizCpg-4E9nd-KlhA/edit?usp=sharing"
                },
                {
                    "title": "Typed Lua Core Typechecker",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6507407224078336/",
                    "content": "The idea of this project is to use Haskell as another way of reasoning about the typing rules of Typed Lua. Project involves implementing parser and typechecker for Typed Lua Core - Typed Lua dialect which does not contain any syntactic sugar what simplifies reasoning about typing rules.",
                    "projectCode": "https://github.com/tomkee/typed-lua-core"
                }
            ],
            "techStack": [
                "lua",
                "luarocks",
                "elasticsearch",
                "netbsd",
                "céu"
            ]
        },
        {
            "title": "LibreOffice",
            "orgLink": "https://libreoffice.org",
            "projects": [
                {
                    "title": "Finish Firebird driver integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6236078839169024/",
                    "content": "Firebird database integration,\nupgrade to Firebird 3.0",
                    "projectCode": "https://lists.freedesktop.org/archives/libreoffice/2016-August/075015.html"
                },
                {
                    "title": "Implement Zoner Draw import filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4529893417156608/",
                    "content": "Zoner Draw is a good and easy to use vector graphics editor. Its development stopped several years ago and the last version (5) was released free of charge, which makes it a good choice for students, beginners etc. Unfortunately it can save documents only to its own format (ZMF), so it would be great for LibreOffice to support importing from this format.There are two variants of the format: one is used in the recent versions of Zoner Draw (4-5) and another, based on OLE2, was used by older versions (2-3). The most important parts of both formats have been already reverse engineered and available in OLEToy, but a bit more reverse engineering will be needed to reveal the missing parts.Similarly as for other import filters implemented in LibreOffice (libcdr, libvisio, libmspub, …), a C++ library (libzmf) based on librevenge will be implemented.",
                    "projectCode": "https://lists.freedesktop.org/archives/libreoffice/2016-August/075000.html"
                },
                {
                    "title": "Implementing legacy SAX  parser Interface with FastParser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5661108882898944/",
                    "content": "The idea is to implement XParser(legacy) and related APIs using XFastParser , and push the tokenization incrementally through to ODF import filters in xmloff/ module. FastParser has free parsing in another thread, so performance boost is expected.",
                    "projectCode": "https://lists.freedesktop.org/archives/libreoffice/2016-August/075031.html"
                },
                {
                    "title": "Improve user experience with Table Styles",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6679308995133440/",
                    "content": "The project aims to make Table Styles more user friendly and useful by increasing their support and improving workflow and accessibility. In the bigger picture that will make LibreOffice more unified.At the moment the support of Table Styles is limited, they work properly only directly after assigning to a table, but after saving and loading file Table Styles no longer work.\nTable Styles user interface is very limited. There is no toolbar or sidebar access. Table Styles dialog window lacks functionality.I would like to address the above mentioned flaws.",
                    "projectCode": "https://gist.github.com/ubap/55d22ef9b2e00347a2dc58ca4cb8b0ea"
                },
                {
                    "title": "Infrastructure for defining toolbars via .ui (Glade) files",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5625220941479936/",
                    "content": "The goal of this task is to create a new toolbar implementation that allows dynamic layout of widgets, and potentially tabbed toolbars too. Using that, it will be possible to easily define rich toolbars using Glade as the user interface designing tool.",
                    "projectCode": "http://eszkadev.blogspot.com/2016/08/gsoc-2016-final-report.html"
                },
                {
                    "title": "Redesigning the Template Manager and Emoji Toolbar Control",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4916035404693504/",
                    "content": "First Project (Redesigning the Template Manager): The current Template Manager of LibreOffice has some bugs and needs better implementation. This project will  completely transform this important feature and will improve its current usability. The idea will also have a significant impact on LibreOffice Impress where templates are used frequently.Second Project (Emoji Toolbar Control): This project has been included during GSoC coding period, not at the time of proposal. LibreOffice is ready to get an emoji toolbar control and the plan is to create it from scratch. This project will create a control which handles Unicode emoji data queried from a database and allow user to use it in the document.",
                    "projectCode": "https://akkidevblog.wordpress.com/2016/08/21/gsoc-with-libreoffice-work-product/"
                },
                {
                    "title": "Review of Sidebar and it's functionality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6280374179069952/",
                    "content": "The LibreOffice Sidebar has seen a lot of vital upgrades recently. Many sidebar functionalities were added and enhanced by Rishabh Kumar in GSoC 2015, although many desired functionalities have not been implemented yet. This project involves implementing sidebars for various such existing dialogs and functionalities like Page Properties, Media Playback etc., finishing up the work by Rishabh from last year on Page Tab, Slide Background Panel etc. and creating new Sidebar tabs like the Shapes Tab.",
                    "projectCode": "https://susobhang70.github.io/gsoc-report/libreoffice-gsoc-report"
                },
                {
                    "title": "Support ODF styles in Calc using Orcus",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4921533499703296/",
                    "content": "Orcus is an external filter library. The project is to implement missing code for style and conditional format and corresponding interface in Libreofffice Calc.  The last and comparatively  easier part  is to replace the hard coded cell styles with the styles imported through Orcus.",
                    "projectCode": "https://jaskaranvs.wordpress.com/2016/08/20/gsoc-project-submission-report/"
                },
                {
                    "title": "Unifying low-level text layout using HarfBuzz",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5960968467120128/",
                    "content": "To unify low level text layout in LibreOffice using HarfBuzz. The new layout class should be able to generate correct and similar glyph indices and positions across all major platforms (UNIX, Windows, OSX).Currently, LibreOffice has three different code paths, for text layout, one for each platform. This leads to different text rendering across different platforms and even across different versions of a particular OS due to changes in API implementation etc. This is the major issue this project addresses along with a host of other critical text layout issues.At the end of this project, LibreOffice will have a single text layout code path. This new layout engine will be linked to various platform dependent graphics API to draw the text.More information at my blog: https://somefoobar.wordpress.com/",
                    "projectCode": "https://somefoobar.wordpress.com/2016/08/24/gsoc-project-comes-to-an-end/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "java",
                "android",
                "opengl"
            ]
        },
        {
            "title": "Libvirt",
            "orgLink": "http://libvirt.org",
            "projects": [
                {
                    "title": "Abstracting device address allocation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4577232009822208/",
                    "content": "Libvirt provides a common and stable layer to securely manage domains (instances of operating systems) on a node (single physical machine). When creating a virtualized guest, one needs to tell libvirt, among other things, what one wants the virtualized hardware to look like. \nTo achieve this, one provides an XML file in the domain XML format. In these files, device addresses show up in many places. In order to make libvirt convenient to use, device addresses are sometimes autogenerated. There are also some constraints on these addresses.\nCurrently, code to deal with device addresses is scattered across the codebase. The project is to create an abstract structure that handles different types of addresses, assigns them and properly handles duplicates.",
                    "projectCode": "http://wiki-libvirt.rhcloud.com/page/Google_Summer_of_Code_2016/Abstracting_device_address_allocation"
                },
                {
                    "title": "Add libvirt support for LXC migration.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5273377220591616/",
                    "content": "Migration has become an important feature in the virtualization world. In severs, it is used for load balancing, updating and replacing hardware, periodic snapshots in HPC world, and many others. When dealing with container virtulization though things are different in migration procedure, compared to VMs. Here comes a  tool named CRIU, that helps at checkpointing and restoring a linux container. In this project, I am going to add libvirt support for migration of linux containers.",
                    "projectCode": "http://wiki-libvirt.rhcloud.com/page/Google_Summer_of_Code_2016/lxc_migration"
                },
                {
                    "title": "Asynchronous lifecycle events for storage objects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5359079803322368/",
                    "content": "The purpose of the project is to implement asynchronous lifecycle events for libvirt’s storage API.  Lifecycle events allow applications to get notifications about the state of the object, as well as for object creation, deletion etc, without having to pull libvirt at regular intervals asking for the state of the VM. This implementation will also include adding support to virt-manager for  storage events.\nAlso, part of the project is extending event-test.py from libvirt-python to watch for storage events and print messages about them, as well as add asynchronous event support for nodedev objects. Also extending the python API for the implementation in virt-manager and libvirt-python.\nAfter the implementation of the storage API, project includes implementation of asynchronous event support for nodedev objects, followed by extending the python API, implementation in virt-manager and in libvirt-python. When this part is finished, I'll continue working on nodedev, and add event support for udev and netcf drivers.",
                    "projectCode": "http://wiki-libvirt.rhcloud.com/page/Google_Summer_of_Code_2016/Asynchronous_lifecycle_events_for_storage_objects"
                },
                {
                    "title": "Making virsh more bash like",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4855751780597760/",
                    "content": "If you have ever used virsh, you certainly reached the point where you struggle with its user friendliness. Virsh is missing a lot of bash functionality that users consider natural: from automatic completion of object names, through redirecting command outputs through piping commands together. The aim would be to make these functions available in virsh and thus make user experience better, in both interactive and non-interactive mode.",
                    "projectCode": "http://wiki.libvirt.org/page/Google_Summer_of_Code_2016/Making_virsh_more_bash_like"
                }
            ],
            "techStack": [
                "c",
                "qemu",
                "xen",
                "containers"
            ]
        },
        {
            "title": "Liquid Galaxy Project",
            "orgLink": "https://github.com/LiquidGalaxy/liquid-galaxy/wiki/",
            "projects": [
                {
                    "title": "Cloud Point Visualization for Liquid Galaxy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4508230675857408/",
                    "content": "This project will join the capabilities of Cloud Point visualization and the high-resolution capabilities of Liquid Galaxy. Different middlewares will be reviewed and tested into the Liquid Galaxy and the best solution will be configured and implemented.\nIn this project we will have the possibility of used different Cloud Point scanning devices such as Project Tango and LIDAR.\nA management tool will also be implemented to manage the visualization of different Cloud Point .files",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/asherat666-lg-potree/commits/master?author=asherat"
                },
                {
                    "title": "Enabling Cesium for Liquid Galaxy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4553593583566848/",
                    "content": "Enabling other applications for Liquid Galaxy would greatly benefit the open source community, thereby nurturing the open source culture and encouraging inter-community bonding. This project aims at enabling Cesium - an open source virtual globe for Liquid Galaxy. The Liquid Galaxy project started off by making use of Google Earth for the panoramic system. The idea of this project is to enable Cesium to run across the multiple displays, providing an immersive and a riveting experience to the users. This project focuses on endowing Cesium with features such as Camera Synchronization, Content Synchronization across the displays and Space Navigation Camera Control.",
                    "projectCode": "https://github.com/abhishekvp/cesium-lg/commits?author=abhishekvp"
                },
                {
                    "title": "PILT (Panoramic Interactive Live Tracker)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5762247578091520/",
                    "content": "PILT project wants to create a standard to display static and dynamic information over the LG system. We are going to build a system that creates different layers of information in order to display useful representations in the system.The goal will be create a server that handles synchronous and asynchronous information and translates it into KML, moreover we will represent different uses cases like adding integrations with other Liquid Galaxy projects that has to send KML into the system.",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/PILT/blob/master/GSOC16.md"
                },
                {
                    "title": "Visualization DLP (Drone Logistics Platform)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5247075109306368/",
                    "content": "Main object of the project is the continuity of the FAED code, converting it to DLP, bug stabilizing it and documenting correctly.The aim of the DLP Project is to be a platform which acts as a logistic distribution platform and the visualization of the information relative with this project in the Galaxy Liquid platform.DLP project will generate a massive quantity of information that is very useful to have the opportunity to display it in the Galaxy Liquid technology.Project DLP data that will display Galaxy Liquid:The points where drone will use to land or take off which are drop points, drone hangars.\nWeather information focused in the weather that can be dangerous for the drone like rain, wind, snow…\nThe current position of the drone and its flying plan.",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/DLP/blob/master/GSOC2016.md"
                }
            ],
            "techStack": [
                "javascript",
                "ros",
                "gis",
                "cesium"
            ]
        },
        {
            "title": "lowRISC",
            "orgLink": "http://www.lowrisc.org",
            "projects": [
                {
                    "title": "Arduino to PULPino library porting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5567575769481216/",
                    "content": "PULPino is an open-source microcontroller system, based on a small 32-bit RISC-V core.Importing Arduino Libraries to PULPino architecture should introduce both PULP and RISC-V to the massive Arduino community and would benefit in educational purposes.At the end of this project; all Arduino core libraries would be ported and popular Arduino examples should be tested on PULPino core on FPGA to verify the functionality of the libraries, and all work should be published open source for modification by the open source community.",
                    "projectCode": "https://github.com/pulp-platform/pulpino/commits/master?author=El-Mohr"
                },
                {
                    "title": "Integrate more open-source IP for lowRISC on FPGAs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6680752104144896/",
                    "content": "To introduce open-source IP for components such as an NASTI slave memory mapped DDRx controller.",
                    "projectCode": "https://github.com/diadatp/nasti-ddrx-mc"
                },
                {
                    "title": "Porting OPTEE to lowRISC",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6017214285086720/",
                    "content": "This project aims to port OPTEE for a RISC-V based machine by implementing trust-zone mechanisms using minion cores and tagged memory. Also OPTEE will be para-virtualized on top of seL4 microkernel.",
                    "projectCode": "http://mahadevrahul.blogspot.in/2016/08/gsoc-lowrisc-trusted-execution.html"
                },
                {
                    "title": "Porting xv6 to the lowRISC platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4636347671248896/",
                    "content": "Xv6 is a “simple Unix-like teaching operating system”. It is based on Sixth Edition Unix and written in ANSI C for x86. Its simplicity coupled with its low code size (around 9000 lines, including comments) make it an excellent place to start learning how operating systems work and how to modify them. As it stands, xv6 runs on real hardware, but only if it is x86 compatible. Porting xv6 to run on the lowRISC platform wouldThis project will address all of these goals byI expect the most challenging parts of the port to be those that require software implementations of things x86 handles in hardware, for example the virtual memory implementation.",
                    "projectCode": "https://github.com/jeffreyrogers/pv6"
                }
            ],
            "techStack": [
                "verilog",
                "fpga",
                "chisel",
                "c++",
                "linux"
            ]
        },
        {
            "title": "MariaDB",
            "orgLink": "http://mariadb.org/",
            "projects": [
                {
                    "title": "Aggregate Stored Funtions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6517553815879680/",
                    "content": "Most of the current databases like Oracle, PostgreSQL, HSQL support the notion of CREATING AGGREGATE FUNCTIONS . This notion is missing from MariaDB, so this project deals with creating the support for aggregate functions for MariaDB. To incorporate the support for the aggregate stored functions first we have to form the syntax (discussed with the mentor and decided) and then analyse the changes that are needed to be made in the current CREATE FUNCTION implementation , so that it incorporates the implementation for the stored aggregate functions. The syntax for the aggregate stored functions takes in account of cursors , which are used as iterators and help to fetch rows from the database and the store the aggregate results.",
                    "projectCode": "http://varunraiko.github.io/aggregate-functions/"
                },
                {
                    "title": "NO PAD collations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5810025062727680/",
                    "content": "There are 3 main string types in MariaDB: CHAR, VARCHAR and TEXT. They vary storage methods, but they are using same comparision functions. MariaDB supports a lot of character sets and each character set supports many ways to comparison (for different languages and case sensetivity). Set of rules for comparing characters in a character set named collation.Now all collations have a one common rule: ignoring trailing spaces. So strings ‘aa   ‘ and ‘aa’ are equal. And the purpose of my proposal to add NO PAD collations, i. e way to take trailing spaces into account.",
                    "projectCode": "https://github.com/medvdanil/server/commits/10.2?author=medvdanil"
                },
                {
                    "title": "Pushing conditions into non-mergeable views and derived tables in MariaDB",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5040437790244864/",
                    "content": "The main goal of this project is to add the following optimization of the queries that use non-mergeable views and/or derived tables. The conditions in the where clause of such a query that depend only on the columns of non-mergable view/derived tables are pushed into the query defining this view/derived table. This project will cover simple cases with pushing separable condition as well as more complicated cases with pushing non-separable conditions. It will resolve the problem of extracting pushable conditions by using equality predicates. It also will detect separable pushable conditions that can be extracted by using the basic properties of comparison predicates.",
                    "projectCode": "http://gsocmariadbshagalla.blogspot.ru/2016/08/final-evaluation.html"
                },
                {
                    "title": "Unique Index for BLOBs And Adaptive Hashing for Generated Hash",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4971887159410688/",
                    "content": "First project is about creating unique indexes for blob and\nvarchar in Aria, MyISAM storage engine. It will provide user a direct\ninterface for creating index for blobs , varchars .By this way user can\nalso have unique constraint for blobs and very long strings.Second\nproject will optimize it further by reducing time complexity of equal\nquery from O(log b n) to O(1).\nBy doing this we can also reduce time complexity of distinct query for\nany storage engine from O(n*log(n)) to O(n).So innodb will also benefit\nfrom this project because it internally uses maria for finding distinct\nblob.",
                    "projectCode": "http://sachin1001gsoc.blogspot.in/2016/08/gsoc-2016.html"
                },
                {
                    "title": "Unique Indexes for blobs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6474232896684032/",
                    "content": "MyISAM  supports special kinds of indexes that only store the hash of the data in the index tree.This is used in internal temporary tables that the optimizer creates to resolve SELECT DISTINCT queries.So, MyISAM can do it internally, but there is no way for the end user to create such a unique constraint explicitly. The goal of the project is about giving the access to this MyISAM feature to the SQL layer and allowing the end user to create long unique constraint explicitly.\nCurrently, InnoDB doesn't support long unique constraints.So the 2nd goal of this project is to implement this feature in InnoDB.",
                    "projectCode": "https://sites.google.com/site/shubhamgsoc2016/"
                }
            ],
            "techStack": [
                "mysql",
                "mariadb",
                "c",
                "perl"
            ]
        },
        {
            "title": "Matrix.org",
            "orgLink": "https://matrix.org",
            "projects": [
                {
                    "title": "A plugin system for vector-web, with listing and configuration support.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5137529284067328/",
                    "content": "This proposal aims to develop a flexible plugin system for vector-web along with productivity enhancing plugins based on the same system.",
                    "projectCode": "http://www.aviraldg.com/p/gsoc-2016-wrapup/"
                },
                {
                    "title": "Bark: Microblogging in Matrix",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4516500366950400/",
                    "content": "My project is to implement a complete micro blogging system on top of Matrix. With the available infrastructure, I can build a web client for Matrix designed specifically for this.",
                    "projectCode": "https://half-shot.uk/gsoc16_evaulation"
                }
            ],
            "techStack": [
                "react",
                "android",
                "ios",
                "golang",
                "python"
            ]
        },
        {
            "title": "MBDyn, Department of Aerospace Science and Technology at Politecnico di Milano",
            "orgLink": "http://www.mbdyn.org/",
            "projects": [
                {
                    "title": "Cycloidal rotor module improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6614970385039360/",
                    "content": "The cyclocopter module currently available in MBDyn models the inflow of a cycloidal rotor. It is however limited to 2D aerodynamics models; moreover, the implementation of the double multiple streamtube model is not yet stable. Calculate the inflow velocity vectors over the cyclocopter rotor (at each azimuth location) using the Double Multiple Stream Tube Method (Combination of Blade element theory and Momentum theory).  Which will basically consider/capture the effect of induced velocity generated by upper half blades on the lower half blades.",
                    "projectCode": "https://drive.google.com/open?id=0B9x_nh0D_HhzMVViWk03bi0tZms"
                },
                {
                    "title": "FMI model exchange and co-simulation standard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4876583177289728/",
                    "content": "The Functional Mockup Interface (FMI) is a tool independent standard for the exchange of dynamic\nmodels and for co-simulation. The main objective of this project is to create an interface for model exchange and perform co-simulation.",
                    "projectCode": "https://github.com/devyeshtandon/moduleFMU/commits/master"
                },
                {
                    "title": "Step Size Control",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5919116963610624/",
                    "content": "Implementation of an error estimator and automatic step size control.",
                    "projectCode": "https://gist.github.com/AnkitAggarwalPEC/7f5cd8b566c935e4c312083daa0ac1bf"
                }
            ],
            "techStack": [
                "c++"
            ]
        },
        {
            "title": "McGill Space Institute",
            "orgLink": "http://msi.mcgill.ca",
            "projects": [
                {
                    "title": "Coders of Habitability",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5578260574371840/",
                    "content": "To code up a Python open source data reduction pipeline for space-based infrared observations. The goal of this project is to reduce images from the Spitzer Space Telescope into ultra-high precision time-resolved photometry suitable for characterizing the atmospheres of transiting extrasolar planets. The code written will be highly modular so that it can be adapted for the James Webb Space Telescope (which is capable of measuring the temperature of temperate terrestrial planets), due to launch in 2018. This project is a contribution to establishing the habitability of nearby rocky exoplanets.",
                    "projectCode": "https://docs.google.com/document/d/1A_k3HauPRCvzfQME1XpiDP7tZpY_ReYrlFzRY5r2gL4/edit?usp=sharing"
                },
                {
                    "title": "Lightcurve modelling with Icarus",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4818299128905728/",
                    "content": "Icarus is an open source tool used for light curve synthesis. The aim of the project is to add more functionalities to Icarus.",
                    "projectCode": "https://github.com/akshayah3/XRbinary"
                },
                {
                    "title": "Open-Source Coding of Models of Microbial S-isotope Fractionation: Exploring Transdisciplinary Scientific Collaboration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4634261122449408/",
                    "content": "Transparency in conceptualizing, creating, and circulating a model is respected within the scientific community; however, open sharing of these has yet to rise as a commonplace practice. Distribution of models in the form of open-source modules is needed to initiate freer discourse in the scientific world, where the development of interdisciplinary fields has served to the end of establishing specificity of focus instead of fostering a more holistic and collaborative approach to investigation.The McGill Space Institute (MSI) is an organization located at the crossroads of astronomy, biology, and earth sciences, embodying an archetype characterized by transparency, sharing, and collaboration: facets reflected in open-source culture. By developing three pieces of code for a model of an important microbial metabolism, dissimilatory sulfate reduction, we can meet the interests of MSI researchers from all walks. In making a single core model available to these three sub-groups of workers in formats that are compatible with their existing working methods and languages of choice, it is possible to set a precedent in the encouragement of transdisciplinary collaboration in science.",
                    "projectCode": "http://suigeneris.shinyapps.io/app_test/"
                }
            ],
            "techStack": [
                "python",
                "sql",
                "databases",
                "big data"
            ]
        },
        {
            "title": "MetaBrainz Foundation",
            "orgLink": "https://metabrainz.org/",
            "projects": [
                {
                    "title": "A Job Running Client for AcousticBrainz",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6267449280299008/",
                    "content": "Allowing users to run jobs on their own machines and submit the result.",
                    "projectCode": "https://community.metabrainz.org/t/my-gsoc-experience-with-acousticbrainz/115309"
                },
                {
                    "title": "Gamification of submission system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6379262042963968/",
                    "content": "I propose to implement one of the supplied ideas and create a gamification system that will encourage users to contribute content to the project and keep coming back. This will use achievements and badges that can be shown off as accolades of achievement and allow users to build a reputation among the community.",
                    "projectCode": "https://blog.musicbrainz.org/2016/08/21/bookbrainz-gsoc-gamification-system/"
                },
                {
                    "title": "ListenBrainz: A submission API compatible with Last.fm scrobblers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6382388510720000/",
                    "content": "A submission API compatible with Last.fm scrobblers\nRight now ListenBrainz has its own API documented at https://listenbrainz.readthedocs.org/en/latest/. The idea is to create a new web service, layered on top of that one which spoke the Last.fm API, so it could be used as a proxy for existing Last.fm clients.",
                    "projectCode": "https://blog.musicbrainz.org/2016/08/23/gsoc-16-listenbrainz-fun/"
                },
                {
                    "title": "Show tag search results in Picard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5788515866509312/",
                    "content": "Currently Picard relies on web browser for searching tags manually. With this project, I aim to accomplish these two tasks:",
                    "projectCode": "https://blog.musicbrainz.org/2016/08/22/summer-of-code-16-with-picard/"
                }
            ],
            "techStack": [
                "python",
                "perl",
                "postgresql",
                "javascript"
            ]
        },
        {
            "title": "Mifos Initiative",
            "orgLink": "http://mifos.org",
            "projects": [
                {
                    "title": "Android Field Operations App Version 3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6242235406352384/",
                    "content": "The Mifos Android Client is currently in version 2. Recently, significant new enhancements\nincluding refactoring, implementation of material design, offline, surveys, and new functionalities\nhave been implemented taking it from Version 1 to Version 2. Now the app is still under\ndevelopment and this project aims at releasing the version 3. This will add exciting new features\nand significant enhancements.",
                    "projectCode": "https://github.com/openMF/android-client/commits/master?author=therajanmaurya"
                },
                {
                    "title": "AngularJS Community App Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6213615354904576/",
                    "content": "The AngularJS Community App is the standard application on the Mifos X platform that provides all the core functionality for the most common methods of financial inclusion, products and services. View the scope and usage of the project it need to be very scalable and modular to ease the maintenance, customisation and even the performance. However another important point of this project is the UI component consistency for the Community App to be more user friendly and customisable. During this Summer of Code Program I will be ensuring the following  point to be implemented in the next version of Mifos X platform.(1) Update the AngularJS version to 1.5.x \n(2) Performance improvements by introducing on demand loading \n(3) Implement a new skin for the app \n(4) Migrate the stylesheets to  Sass \n(5) Upgrade to latest version of  http://angular­ui.github.io/bootstrap/ \n(6) Upgrade all plugins to versions compatible with Angular 1.5.x",
                    "projectCode": "https://gsoc-2016-mifosx-by-kamdjouduplex.github.io/"
                },
                {
                    "title": "Browser-Based Offline Access",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5085384086126592/",
                    "content": "Add offline support in community-app so that we can have same application working on all browsers with offline support without the need of desktop app. Adding offline support by using HTML5 Offline features.",
                    "projectCode": "https://docs.google.com/document/d/1q8C163gFmhLYTPZ95MgtxSb8sW3TYLY9kRemmrqCeb4/edit?usp=sharing"
                },
                {
                    "title": "Mifos Credit bureau Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4909757504684032/",
                    "content": "Currently, there is no feature for reporting credit history in Mifos. This feature is optional and may be incorporated based on the requirements of the client organization. This module will give ability to clients to check the credit history of the loan applicant and consequently mitigate the risk to bad debt.",
                    "projectCode": "https://nikpawar89.github.io/"
                },
                {
                    "title": "Mobile Money Integration in West and Central Africa.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5699866936213504/",
                    "content": "This project involves building a standalone application for the Mifos platform. This application will enable and allow mobile money transactions such as withdrawing money, saving money to be carried out with the Mifos(fineract) platform. The Mifos X APIs and the customer self-service APIs will be leveraged to accomplish this project.",
                    "projectCode": "https://gist.github.com/DanCarl857/e72ea96ac12726709cce02953b6986d2"
                },
                {
                    "title": "Self - Service | Web/Hybrid App Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6720901726863360/",
                    "content": "The aim of this project is to enable clients  to interact with their own data and transact in a self-service manner.It would allow the users to view their  data related to a loan, transfers, other transactions and to authenticate themselves to view and edit their details.",
                    "projectCode": "http://ad-os.github.io/blog/gsoc-report"
                }
            ],
            "techStack": [
                "java",
                "javascript",
                "angularjs",
                "android",
                "mysql"
            ]
        },
        {
            "title": "MIT Media Lab",
            "orgLink": "http://appinventor.mit.edu",
            "projects": [
                {
                    "title": "Component Enhancement and Runtime Instantiation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6298689261797376/",
                    "content": "The Proposal focuses on the improvement of App Inventor in the following aspects: Component Enhancements and Runtime Instantiation. \nComponent Enhancement mainly targets the improvement in the features of components (ListView) so that the user can add more forms of information into the component. The Proposal focuses on the improvement of Listview so that after the final enhancements, the user can add Images and Text in the order they wish. \nRuntime Instantiation of Components enables the user to instantiate components by just using the blocks. This in turn gives the user, the ability to add components at runtime and instantiate them when necessary. This feature can boost the memory management in App inventor by assigning memory when needed. \nThe proposal also marks the enhancement of file access. The app inventor currently doesn't support the access of External Storage in general. The proposal focuses on adding this feature so that many apps such as file managers can be made. Now, app inventor need not call an intent to access a file.\nFinally the proposal focuses on adding animation properties to the components so that the user is able to give a \"Living\" feel to their application.",
                    "projectCode": "https://workreportblog.wordpress.com"
                },
                {
                    "title": "IoT: Raspberry Pi Integration with MIT App Inventor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4758962813534208/",
                    "content": "Mobile Applications and smart devices are becoming an ever more important and ubiquitous part of our everyday lives. Mobile phones represented the first wave of smaller personal computers. And now, as the price of electronics and processing power continues to fall, there is an intersection between sensors and other electromechanical devices and computers that live on the edge of the Internet: close to the source of the data, processing the data locally and sending just what is required to other computers to consume. \n        The vast growing applications of  machine-to-machine technology, in  general the Internet of Things (IoT), is increasing and changing the future of computing as well as lifestyle of the modern tech driven civilization. The MIT App Inventor along with Raspberry Pi can provide additional functionalities to the developers to build applications to the emerging market of IoT. The Raspberry Pi component in MIT App Inventor can benefit the current and future MIT App Inventor community to exercise  their existing knowledge and skills to contribute to the emerging areas of IoT.",
                    "projectCode": "https://docs.google.com/document/d/1jfNO_d8im8NI_RrlsidU1p2KWQw2GjLPsIPH7aERujw/edit?usp=sharing"
                },
                {
                    "title": "Mit App Inventor Android Research Tasks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6232237527793664/",
                    "content": "The main goal of the project is to investigate how Google Cardboard can be used and integrated with MIT App Inventor, then -  create some predefined components (use-cases). In addition to research, activities will also include improving Android components - ListView and Menu",
                    "projectCode": "https://drive.google.com/drive/folders/0B5JjJsCVVj5fQmRLR0dTZXRXb2c"
                },
                {
                    "title": "Proposed Summer Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5710923524210688/",
                    "content": "The Component Development Kit as of now supports only Non UI components and lacks multiple language support. This proposal aims at upgrading the Component Development Kit to the next level. Enabling multiple language support as well as visible UI external components.\nAnother ambitious feature this proposal offers to implement is support Background processes. Enabling more flexibility and widening the range of Apps made with App Inventor. \nSome minor tweaks largely requested by the user community has also been planned to be implemented during this summer.\nThe Projects will be selected or done as per the priority of community.",
                    "projectCode": "https://ai2gsoc16.wordpress.com/gsocreport/"
                },
                {
                    "title": "Searching Blocks in the Blocks Editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5371245432406016/",
                    "content": "When working on bigger projects, it can be rather difficult to find blocks. A way of searching and focusing on certain blocks would be very useful.",
                    "projectCode": "http://abhijit-suresh.herokuapp.com"
                }
            ],
            "techStack": [
                "java",
                "html/javascript",
                "android"
            ]
        },
        {
            "title": "Mixxx DJ Software",
            "orgLink": "http://www.mixxx.org/",
            "projects": [
                {
                    "title": "Key mapping GUI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6306208273137664/",
                    "content": "The goal of this project is to make it as easy as possible for the users of Mixxx to customize the\nkeyboard mapping to their taste, without having to modify a *.cfg file and having to restart Mixxx.\nIn order to achieve that, the idea is to make a GUI for the keyboard mapping. There are now two\nmain controller types: MIDI and HID. This project is about developing the third one: keyboard.The keyboard controller will be always visible in preferences -> controllers. In contrast to the HID- and the MIDI controllers, which both have four tabs (Controller Setup, Input Mappings, Output Mappings and Scripts), the keyboard controller will just have two tabs: Controller Setup and Key Mapping. The Controller Setup will be the same as for the HID controllers, but the Key mapping tab will consist of a table with three columns:Assigning key combinations will be as easy as clicking the key (combination) cell and pressing the desired key (combination). If the given combination is already chosen for another action, both actions will be disabled and highlighted red, indicating an error.",
                    "projectCode": "https://gsoc-mixxx-keymappinggui.blogspot.nl/2016/08/project-conclusion.html"
                },
                {
                    "title": "Library Layout Redesign",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6095341350813696/",
                    "content": "This proposal consist of the implementation of of a library layout redesign with tabs for special purpose. The Qt Treeview will be changed by a vertical layout of button allowing more space in many views. Many things are inspired in Clementine player and others are inspired in the library layout redesign discussion thread. The layout is designed taking in account the controllers.",
                    "projectCode": "https://github.com/mixxxdj/mixxx/pull/991"
                }
            ],
            "techStack": [
                "c++11",
                "c++",
                "qt",
                "audio",
                "opengl"
            ]
        },
        {
            "title": "mlpack: a scalable C++ machine learning library",
            "orgLink": "http://www.mlpack.org/",
            "projects": [
                {
                    "title": "Approximate Nearest Neighbor Search",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4794796530991104/",
                    "content": "Mlpack provides an extensible, flexible exact nearest neighbor search implementation, with the ability to do dual-tree k-NN search. However, there is currently no support for approximate nearest neighbor search, despite its popularity. The aim of this project is the implementation of approximate K-NN search and then, work with the benchmarking system in order to produce rigorous comparisons between mlpack's approximate k-NN search implementation and other libraries, such as FLANN, ANN, or LSHKIT.\nFollow the progress of the project on: http://mlpack.org/gsocblog/author/marcos-pividori.html",
                    "projectCode": "http://mlpack.org/gsocblog/approximate-nearest-neighbor-search-conclusion.html"
                },
                {
                    "title": "Approximate Nearest Neighbor Search: Implementation of Multiprobe LSH and LSH Tuning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6145746013257728/",
                    "content": "Approximate Nearest Neighbor Search solutions become appealing in problems where dimensionality increases. Locality Sensitive Hashing is a popular algorithm for this task, but has important drawbacks: it requires a large amount of memory, and the number of parameters makes it less appealing to people unfamiliar with the inner workings of the algorithm.To reduce memory inefficiency,  Multi-probe LSH (MPLSH) better utilises the memory used by LSH. MPLSH was shown to perform better with regards to both memory and execution time. Also, a model of LSH's performance has been developed, that allows users to easily explore the parameter space by using a small sample of the dataset.As part of my GSoC project, I am proposing the implementation of these two algorithms. The core LSH algorithm is already in mlpack, and I believe my proposed additions will",
                    "projectCode": "http://mlpack.org/gsocblog/summary-of-lsh-changes-for-gsoc-2016.html"
                },
                {
                    "title": "Dataset and Experimentation Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6043722554802176/",
                    "content": "This GSoC project aims to develop a tool for managing dataset and experimenting the data. This project is important because most of the time used during solving any machine learning problem takes place in data manipulation process. The better data guarantees to result in the better result. However, real-world data are not in same format and tend to be noisy with mistakes, outliers and missing variables. This project aims to provide user-friendly and easy-to-use command line application by having functionalities that monitor, convert wrongly labeled features, and reduce the noisy variables and etc. It will be followed by clear documentations to promote other users to utilize.",
                    "projectCode": "http://mlpack.org/gsocblog/dataset-and-experimentation-tools-summary.html"
                },
                {
                    "title": "Neuroevolution Algorithms Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4758591835734016/",
                    "content": "Neuroevolution algorithms search optimal solutions by evolution rather than learning, which enables them to deal with large complex problems.In this project, we are going to implement neuroevolution algorithms in a unified framework. Specifically, the algorithms we want to implement includes CNE, NEAT, HyperNEAT, etc.Our goals include:",
                    "projectCode": "http://mlpack.org/gsocblog/summary-of-neuroevolution-algorithms-implementation.html"
                },
                {
                    "title": "R+ trees, Hilbert R trees, vantage point trees, random projection trees, UB trees implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5163031189258240/",
                    "content": "Many methods of the mlpack machine learning library (such as nearest neighbor search, range search and others) are based on dual-tree algorithms which deal with data organized into space trees in order to reduce the number of queries. All these methods are designed in a tree-independent manner. The main goal of this project is to extend the mlpack's list of tree types by implementing R+ trees, Hilbert R trees, vantage point trees, random projection trees and UB trees for the purpose of using them in mlpack's dual-tree algorithms.",
                    "projectCode": "http://mlpack.org/gsocblog/implementation-of-tree-types-summary.html"
                },
                {
                    "title": "We need to go deeper - GoogLeNet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5694146576646144/",
                    "content": "To implement the components of the GoogLeNet architecture (the inception layer, global average pooling, and other pieces), and then build GoogLeNet on a sample of ImageNet data.  The pieces of this architecture will be usable for other neural network applications.",
                    "projectCode": "http://mlpack.org/gsocblog/we-need-to-go-deeper-googlenet-project-summary.html"
                }
            ],
            "techStack": [
                "c++"
            ]
        },
        {
            "title": "Mobile Robot Programming Toolkit (MRPT)",
            "orgLink": "http://www.mrpt.org/",
            "projects": [
                {
                    "title": "Design and developement of a full graph-based SLAM strategy in mrpt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6025600208732160/",
                    "content": "The proposal at hand describes the working plan for developing a graph-based SLAM algorithm using the mrpt toolkit in the following summer. The suggested strategy builds upon the ideas developed by (Olson, 2009) for the data association and robust loop closing parts, while using already implemented schemes (mrpt version of Levenberg Marquardt, iSAM solver) for dealing with the optimization part. The result by the end of summer should be a fully functional, robust and usuable graph-based SLAM algorithm ready to be used by researchers and roboticists. We provide an overal timeline, with intermediate milestones to make sure that we meet the goals of the project. The proposal begins with an introduction to the graph-based formulation and lists already implemented and successful graphSLAM strategies. The following two sections (implementation details, timeline) describe the graphSLAM algorithm that we suggest. The final section provides with general information about the author and his background in simultaneous localization and mapping and open-source programming projects",
                    "projectCode": "https://github.com/MRPT/GSoC2016-discussions/issues/2"
                },
                {
                    "title": "PnP Algorithms toolkit for MRPT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6116359041712128/",
                    "content": "The objective of this project is to develop a novel closed form Perspective n Point (PnP) pose\nestimation algorithm for a monocular camera.  A variety of techniques have been developed to\nestimate the pose using a monocular camera. However, the algorithms developed do not meet the\nsimultaneous requirement of computation time, precision and efficiency. The proposed algorithm,\nLinear Least Squares (LLS-PnP) would minimize the  cost function (non-linear error norm)\nwhich can be explicitly expressed as a quadratic function of the rotation matrix. The position is eliminated using least squares formulation. This leads to the possibility to solve the estimation problem in a closed form w.r.t. the rotation matrix. The proposed algorithm will break new grounds in computer vision and can be extended for pose estimation using Stereo vision. The final product (toolkit) will comprise of the new algorithm and the state-of-the-art PnP algorithms, which will provide the end user the choice to choose any given algorithm as well as to enable performance comparison between the various algorithms.",
                    "projectCode": "https://dl.dropboxusercontent.com/s/nm95samwk9f4fu2/pnp_perf_comp.html"
                },
                {
                    "title": "ROS packages for versatile RBPF-based SLAM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5032051866599424/",
                    "content": "Mobile Robot Programming Toolkit (MRPT) implements a versatile Rao-Blackwellized Particle Filter (RBPF) for practical robotics applications. At present, there are no Rao-Blackwellized Particle Filter ROS packages with such broad range of features. The existing slam_gmapping ROS package, which is based on gmapping from OpenSLAM, uses only grid-based maps from laser data. The implementation from the MRPT library can work simultaneously with multiple instances of grid-based maps, point maps, beacon maps and combinations of them. Moreover, MRPT provides several types of Particle Filters such as PF with Standard and Optimal [Grisetti et al., 2007] Proposals, as well as an Approximate Optimal Sampling [Blanco et al., 2008a]. Thus, existing slam_gmapping package features only a subset of this functionality and robotics community will benefit greatly from being able to use implementation offered by MRPT library. Therefore, the goal of this project is to provide MRPT-powered ROS packages for Rao-Blackwellized Particle Filter.",
                    "projectCode": "https://github.com/MRPT/GSoC2016-discussions/issues/3"
                }
            ],
            "techStack": [
                "c++",
                "ros",
                "opencv",
                "cmake",
                "qt"
            ]
        },
        {
            "title": "ModSecurity",
            "orgLink": "http://www.modsecurity.org",
            "projects": [
                {
                    "title": "ModSecurity Connector for Apache",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5421656939954176/",
                    "content": "This connector will create an interface between the Apache Web Server to the libModSecurity. By creating this connector, the target application will be able to apply ModSecurity inspections and actions on Apache Web Server.",
                    "projectCode": "http://tahirramzan.github.io/ModSecurity-apache/"
                },
                {
                    "title": "ModSecurity Connector for Node.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5866718631034880/",
                    "content": "libModSecurity (aka ModSecurity v3) is a major rewrite of standalone ModSecurity (v2.x) which have high dependencies on 3rd party project including Apache. Now the project is splitted into two components namely connectors and core. Where the core is underlying library and connectors are the consumer of this library. This way ModSecurity cores becomes completely independent of underlying web server. In this project we will be extending the support of ModSecurity to Node.js by creating a ModSecurity connector for Node.js. This will provide ModSecurity support to a large community of Node.js developers as there are not many waf available in Node.js.",
                    "projectCode": "https://m2n.me/gsoc/"
                },
                {
                    "title": "ModSecurityv3 IDS connector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6206390951477248/",
                    "content": "HTTP checks are mostly done via regex in IDS like Snort. This limits the flexibility to write custom rules to suit one’s needs. This proposal focuses on making libmodsecurity work for http checks given in snort by replacing them with rules in libmodsecurity. Comparison of speed of parsing in both the cases will also be tested.",
                    "projectCode": "https://akoul.github.io/"
                }
            ],
            "techStack": [
                "waf",
                "web application firewall"
            ]
        },
        {
            "title": "Moodle",
            "orgLink": "https://moodle.org",
            "projects": [
                {
                    "title": "Add support to end-to-end testing in the Mobile app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5876476796731392/",
                    "content": "The main objective of this particular GSoC project is add more tests to the app( MOBILE-1179) and document the set-up process in the Moodle developers wiki. The basements for this project are done and have to complete only the remaining part.In this project proposal I have come up with more the proof of how I configured with my compute, how I understood about the requirements of existing project and more test cases , and how I configured Protractor for my computer with screenshots and steps.",
                    "projectCode": "http://blog.supun.me/2016/08/19/gsoc-2016-final-protractor-test-implementation-documentation-moodle-mobile-app/"
                },
                {
                    "title": "Adding search to more moodle components",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6322447678701568/",
                    "content": "The project aims to extend the scope of Moodle's GlobalSearch to more moodle components. The GlobalSearch feature enables the user to search faster and better with the help of an external dedicated search server. Since GlobalSearch is pluggable, the user organisations have the liberty to use the search platform of their choice. The default search server is Apache Solr.Search platforms like Apache Solr and ElasticSearch index the data entities to be searched in a NoSQL schema format and provide much higher performance while performing search queries as compared to querying database when it comes to scalability. They store the fields of an indexed document using Trie data structures in accordance with some key attributes configured in their schema files.The components which are to be covered are:",
                    "projectCode": "https://tracker.moodle.org/browse/MDL-55538"
                },
                {
                    "title": "Image Resize/Crop/Rotate Proposal.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5743497629925376/",
                    "content": "The following is my proposal to the “Ability to crop/resize/rotate an image in atto” project for GSOC. This proposal comes with an already highly tested code for the atto image resize, in my github repo. Although it is built on top of an already existing atto-image plugin, this can be changed in the future, if desired. I’ll begin my proposal with what I know works for sure, image resizing.",
                    "projectCode": "https://tracker.moodle.org/browse/MDL-44239"
                },
                {
                    "title": "tool_pluginkenobi: Your guide to plugin creation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5191232481394688/",
                    "content": "To make sharing code among users easier, Moodle has created the Moodle plugins directory, where users can download and install a wide variety of plugins. To help maintaining a large number of plugins they have been split into many different types, and each category imposes its own set of rules on the plugin.The project’s aim is to make developing plugins a much easier task. Based on the guides and specifications found in the Moodle documentation and on the user’s input the tool will generate skeleton code that the developer can build on.",
                    "projectCode": "https://github.com/mudrd8mz/moodle-tool_pluginskel/commits/master?author=alexandru-elisei"
                }
            ],
            "techStack": [
                "php",
                "jquery",
                "mysql",
                "postgresql",
                "javascript"
            ]
        },
        {
            "title": "MovingBlocks",
            "orgLink": "http://terasology.org/",
            "projects": [
                {
                    "title": "Application for City Generation and dynamic Simulation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6565433037553664/",
                    "content": "A conceptual framework for a population based city simulation is developed in this proposal. Concrete implementation approaches for the steps involved, city spot searching, population growth, building spot selection and road generation were devised based on own ideas and literature. The approach to solve those task is a conjuction between agent based reasoning and stochastic methods as well as growth models. In the case of time left after finishing those goals, need based resource usage and production are talked about until the stage of a market development.\nBriefly, possible future developments are discussed.",
                    "projectCode": "http://forum.terasology.org/threads/gsoc-2016-city-simulation-project.1587/"
                },
                {
                    "title": "DAG-based Rendering Pipelines for Terasology",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5464468368654336/",
                    "content": "DAG (Directed Acyclic Graph) pipelines for Terasology, is an extensive refactor of the current rendering engine of Terasology. While refactors are primarily considered to make the implemented code much cleaner and efficient, the proposed project includes enabling rendering engine to be able to support many different features that are not easily supported by the current implementation. Renderer extensibility, VR headsets, multiple cameras with different effects, minimizing state changes in OpenGL and reducing render time (by checking possible alternative  DAG configuration) are features that will become available through this project.",
                    "projectCode": "http://tdgunes.org/2016/08/23/gsoc2016/"
                },
                {
                    "title": "Standalone NUI extraction and visual NUI editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6688294335152128/",
                    "content": "Currently, Terasology uses its own NUI (New User Interface) framework to render in-game UI elements. This solution works great for the game’s purposes and has the potential to stand out as a separate library, used in MovingBlocks’ open-source adoptee Destination Sol and various other game projects. The proposed project aims to extract the framework into a standalone library and create a visual editor application for NUI interface definition files to facilitate developer and modder interest.",
                    "projectCode": "https://rzats.github.io/gsoc/2016-final-report"
                }
            ],
            "techStack": [
                "java",
                "lwjgl",
                "opengl",
                "blender",
                "gradle"
            ]
        },
        {
            "title": "Mozilla",
            "orgLink": "http://www.mozilla.org/",
            "projects": [
                {
                    "title": "Download app assets at runtime",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5321360863657984/",
                    "content": "Firefox for Android is one of the most widely used browsers. The team is currently involved in reducing the size of the Android Package - APK. As a first step of this ongoing effort the fonts are excluded from being packaged along with the APK. The scope of reducing the size of the APK does not stop there. There are various opportunities and scopes for further reducing the size of APK such as excluding hyphenation dictionaries, translation and so on from being packaged. The  task is to download the excluded assets from the server. This initiative can effectively reduce the size of the APK File.I propose to implement features that enables the browser to download the assets like hyphenation dictionaries at the runtime.I also propose to implement a helper class which can be used to smartly schedule the downloads based on the conditions and smartly reschedule the failed downloads and exclude other assets like localization files.",
                    "projectCode": "https://krishnakannan.github.io/GSOC/16/Report.html"
                },
                {
                    "title": "File Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5298795642355712/",
                    "content": "In this project, File API and related functionalities will be completely implemented in the Servo browser engine. With these features landed, the end users can upload files through form submission and interact with the local file content directly in browser; the developer will be endowed the ability to read local file content programmatically in either sync or async way, create Blob URL and use them in a very flexible way. In addition, a dialog UI will be integrated to support file picking.For more information, see the meta-tracker of this project.",
                    "projectCode": "https://github.com/servo/servo/commits/master?author=izgzhen"
                },
                {
                    "title": "Implement RFC7512 PKCS#11 URI support and system integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6677041252401152/",
                    "content": "Part - 1 : It is desirable for applications or libraries that work with PKCS #11  tokens to accept a common identifier that consumers could use to identify an existing PKCS #11 storage object in a PKCS #11 token, an existing token itself, a slot, or an existing Cryptoki library.These objects can be uniquely identifiable via the PKCS #11 URI schemePart - 2 : Any token present in the system's p11-kit configuration should be visible to NSS applications as intended.Currently, applications using NSS are unable to do so. The NSS package must also be able to load the PKCS 11 tokens by default as other packages like GnuTLS and OpenSSL(with the PKCS #11 engine) do.",
                    "projectCode": "https://docs.google.com/document/d/1RoM6JcmxU4TQKDeQsYLOkjHRIYqldUeh26a4ac6_yEo/edit?usp=sharing"
                },
                {
                    "title": "Implementing Service Worker Infrastructure in Servo Browser Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5554852197302272/",
                    "content": "Servo has support for Web Workers, and the new Fetch Api whose development is in progress is another new standard, that aims to replace XMLHttpRequest (XHR), and provides a cleaner api for anything involving requests and responses.The Fetch api spec also has a subsection which details on handling fetch calls within a service worker context. Spec\nService Workers are the new standard, for modern web apps, which aims to bring native app like experience to browser based apps, by providing a programmable api, for caching certain paths of pages, ,manipulating routing within an application,intercepting network requests according to user logic.Servo has a partial implementation of Fetch api, but the Service Worker api’s are currently missing and if implemented, Servo will be able to intercept network calls made from within the Service Worker’s context, the “handle_fetch” subsection of the Fetch Spec, is to be implemented. SpecMy project is to have a partial implementation of the new Service Worker Api and its helper interfaces, in Servo. The project is focused on working on parts of the Service Worker Specification which revolves around intercepting network requests.",
                    "projectCode": "https://github.com/creativcoder/gsoc16"
                },
                {
                    "title": "Improving and expanding the JavaScript XMPP Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5394099624476672/",
                    "content": "The aim of this project is to replace libpurple's XMPP implementation with JavaScript implementation of XMPP protocol after adding missing features to JavaScript implementation",
                    "projectCode": "https://wiki.mozilla.org/User:Abdelrhman/gsoc16/summary"
                },
                {
                    "title": "Mozilla Calendar – Event in a Tab",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5489070478196736/",
                    "content": "Currently, events and tasks are created and edited in a dialog window. This project will add the option to create and edit them in a tab instead, providing more room and flexibility for the UI design. A supplemental goal is to explore implementing this feature in HTML/CSS/JavaScript rather than XUL. By using a responsive design, an HTML-based implementation could fully replace the current XUL-based event dialog. The UI could change depending on the width of the viewport, providing either a wider (tab) view or a narrower (dialog window) view.",
                    "projectCode": "https://bugzilla.mozilla.org/show_bug.cgi?id=1272540#c2"
                },
                {
                    "title": "Mozilla Investigator(MIG): Auditd integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5897486971437056/",
                    "content": "Mozilla Investigator(MIG) is a platform that provides distributed and real time digital forensics at the speed of the cloud i.e. obtaining forensic information from large numbers of systems in parallel. This project aims to implement a Linux Audit module for MIG which will provide support for syscall monitoring via the Audit daemon. This will enhance the capabilities of MIG to aggregate, mark, alert on related syscall events and store them in logs.",
                    "projectCode": "https://github.com/arunk-s/gsoc16"
                },
                {
                    "title": "Prevent Failures due to Update Races",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5120863737217024/",
                    "content": "Balrog is the new age update server used by Mozilla to serve updates to Firefox. This project aims to address a situation in Balrog where multiple locale updates caused a race condition, leading to unnecessary retries by submitter jobs. This project proposes to resolve this situation by using an algorithm similar to a three-way merge algorithm, but for nested JSON data.",
                    "projectCode": "https://gist.github.com/nurav/af89f9edbb3d484d6e542a5bf1f255cf"
                },
                {
                    "title": "Proposal of Redesign SETA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6052020431618048/",
                    "content": "We have tons of testing jobs for a push but we don't want to run each of them, as they are time consuming and requiring hardware resources. The SETA (Search for Extraneous Test Automation) is a tool to help us find out which test job is necessary for detecting the failures. To make it more maintainable and more reliable, we need to re-write SETA and we may want SETA to support Taskcluster as well. Furthermore, we want Taskcluster can use SETA to schedule job and add document for SETA.",
                    "projectCode": "https://mikelingblog.wordpress.com/2016/08/12/summary-of-seta-rewrite/"
                },
                {
                    "title": "Schedule TaskCluster Jobs in Treeherder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5418701734019072/",
                    "content": "Over the last ten years, Mozilla has been using Buildbot as its primary continuous integration tool in order to schedule builds and tests for every push that is sent to Treeherder for evaluation. As Mozilla is slowly moving towards using TaskCluster as its primary continuous integration system, an important step would be make Treeherder, the primary UI used for handling builds and tests, compatible with TaskCluster. The current Treeherder interface allows us to schedule buildbot jobs. This proposal aims to integrate Treeherder's job scheduling user interface with TaskCluster jobs. While doing this, it hopes to improve the overall integration of Treeherder with TaskCluster.",
                    "projectCode": "http://martiansideofthemoon.github.io/2016/07/19/gsoc-code-review.html"
                },
                {
                    "title": "Thunderbird - Implement mbox -> maildir converter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6359299840278528/",
                    "content": "Currently Thunderbird uses mbox as primary storage format for mails (locally). All the mails in a folder are stored in the same file with the same name as the folder and no extension. The messages are separated from each other by a \"From - \n\" line.  The maildir format is also supported, but there is no converter for it yet. The goal is to implement a component to migrate a store from the mbox format to maildir format. \nIn order to achieve the goal a new store should be created and all the messages from all the folders of the old store should be moved to respective folders of the new store in maildir format. The folder hierarchy of the old store needs to be maintained in the new store. The message copying should be carried out in a worker using OS.File to prevent other tasks from getting locked up for long.",
                    "projectCode": "https://wiki.mozilla.org/User:Anindyapandey"
                },
                {
                    "title": "Two Projects to Make A-Frame More Useful, Accessible, and Exciting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6257096530067456/",
                    "content": "In a matter of weeks, HTC and Oculus will begin shipping the first generation of VR to tens of thousands of consumers. While VR content is easy to consume, it is hard to produce. A-Frame, with its HTML-like syntax, has the potential to enable far greater participation in this new medium; but for this to happen, more documentation needs to be created, tutorials made available, functionality extended, and showcases created. I propose to help meet these needs with two projects: (1) producing a component to wrap d3.js, and (2) developing support for 3D panoramas.",
                    "projectCode": "https://docs.google.com/document/d/1J1y3m8PP19AVeJn9ShXkcWELXa-l0JIEN3OJCTdvntw/edit?usp=sharing"
                },
                {
                    "title": "Web-based GDB Frontend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5007236082434048/",
                    "content": "In this project the goal is to provide a GUI for GDB in the browser so that other developers can use it to easily and intuitively debug projects running in a cloud environment",
                    "projectCode": "https://gist.github.com/baygeldin/10653d3268e7d2f63e22818b2a3f14d3"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "javascript",
                "html",
                "rust"
            ]
        },
        {
            "title": "MuseScore",
            "orgLink": "https://musescore.org",
            "projects": [
                {
                    "title": "Improving playback in MuseScore",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4818557363814400/",
                    "content": "I want to improve the playback capabilities of the music notation software MuseScore. MuseScore ships with two synthesizers Fluidsynth (using the SF format) and Zerberus (using the SFZ Format). I want to improve both of them. The Fluidsynth in MuseScore got forked some time ago - all fixes and improvements that have gone into upstream Fluidsynth which can help MuseScore shall be incorporated. Furthermore legato playback shall be added to Fluidsynth (preferable via Midi CC68). MuseScore's midi rendering will be extended with single note/chord (de)crescendo via Midi CC11.\nZerberus is still in its infancy. But the SFZ format grants a lot more flexibility and open design than the traditional SF format. So having a good SFZ synthesizer is the key to better sound in the future. I will focus on adding looping support and ADSR envelopes but as much opcodes as possible shall be incorporated!",
                    "projectCode": "https://musescore.org/en/user/527826/blog/2016/08/22/gsoc-2016-workproduct-playback"
                },
                {
                    "title": "Semi-realtime MIDI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4677819875459072/",
                    "content": "This project would implement a new method of entering notes into MuseScore via a computer or MIDI keyboard that is more natural to musicians than the existing “step-time” method. The new method basically allows the user to play the piece into to the computer as though they were giving a live performance, but steps are taken to ensure the accuracy of the resulting notation. This would make the process of entering notes significantly faster.",
                    "projectCode": "https://musescore.org/en/user/57401/blog/2016/08/23/gsoc-2016-work-product-semi-realtime-midi"
                },
                {
                    "title": "voice to part tool and extended implode/explode tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4597633641349120/",
                    "content": "At the moment MuseScore has poor ability to handle multiple voices. For example it’s actually not possible to create two excerpts with only one voice from a instrument which has two voices in one staff. There is also not a direct way to explode multiple voices in one stave to multiple staves containing one single voice. The project’s aim is to implement a better handling of multiple voices in the excerpt generation and an improvement to the Implode and Explode tools, so for example they’ll be able to deal with different rhythms.",
                    "projectCode": "https://musescore.org/en/user/124871/blog/2016/08/17/gsoc-work-product"
                }
            ],
            "techStack": [
                "qt",
                "c/c++",
                "qml"
            ]
        },
        {
            "title": "National Resource for Network Biology (NRNB)",
            "orgLink": "http://www.nrnb.org/gsoc.html",
            "projects": [
                {
                    "title": "Cytoscape command line scripting enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4870044894887936/",
                    "content": "Cytoscape is a general purpose, open source software platform for complex network data integration, analysis and visualization.  Cytoscape’s core implements generic network integration and visualization capabilities through its core apps and can be extended to suite specific use-cases by developing Cystoscape apps using its extensible plugin architecture.While Cytoscape’s graphical user interface is very useful for interactive network data integration and visualization, it may not be the best choice for workflows with hundreds if not thousands of network data files. Cytoscape includes the commandTool app to provide a command-line interface to Cytoscape using the Commands API. Cytoscape apps can register commands using annotations, and these commands will then be available in commandTool. Users can execute commands (eg importing networks from file or importing tables) using Command Line Dialog and can see the result in the Reply Log. The commandTool can also execute scripts (each line is  a set of commands) and provide help about command classes and namespaces using the Command API.",
                    "projectCode": "https://github.com/ashishtiwarigsoc/command-dialog/commits/develop"
                },
                {
                    "title": "Enhance vignettes and plugin use for R package RCy3 for network manipulation using Cytoscape",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6574250336976896/",
                    "content": "Many scientists use networks to visualize complex relationships among species, people, cities, genes, proteins or other subjects. Cytoscape is open-source software that is popular (6350 citations as of March 22nd 2016) for the visualization of networks. As scientists work with increasing amounts of data and the expectation of reproducible computational analyses increases, many users of network visualization programs are turning to scripted analyses instead of using a graphical user interface (GUI). \nCytoscape has an application programming interface (API) that uses the Representational State Transfer (REST) to send information between Cytoscape and different programs. The package RCy3  allows users to connect R to Cytoscape allowing them to script their visualizations. There are two ways the package would be enhanced: 1) by enabling the use of Cytoscape plugins programmatically through their API, and  2) by creating robust walkthroughs of the code necessary to use RCy3 and other packages for reproducible network visualizations. The walkthroughs would include approaches relevant to many Cytoscape users and incorporate the programmatic use of plugins with developed function.",
                    "projectCode": "https://github.com/jooolia/gsoc_Rcy3_vignettes/blob/master/blog_post_drafts/final_work_submission.md"
                },
                {
                    "title": "Extending Cytoscape.js: Addition of Clustering Algorithms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5141143767482368/",
                    "content": "Cytoscape.js is a graph theory and networks library focused on providing built-in, rich and performant graph models for analysis and data visualization. This project aims at expanding Cytoscape.js’s data analysis functionalities by offering several of the most commonly used clustering algorithms, including the k-means, hierarchical, affinity propagation, Markov cluster algorithms and more, via extensions that can be easily incorporated into the default library. Such extensions, written in a user friendly and accessible manner, will help expand the usage of Cytoscape.js, as clustering algorithms are applicable in a wide variety of fields, from bioinformatics to machine learning, data science, etc.",
                    "projectCode": "https://gist.github.com/zoexi/ec20705f6669882039b1ef8b05aaa4c1"
                },
                {
                    "title": "GSoC: JSBML Validation System",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5619423540936704/",
                    "content": "The JSBML library is a powerful Java library that gives the use a easy possibility to read, write and manipulate SBML files with Java. Because there are many different levels and versions of SBML and much more software which is using it, it is often needed to secure the quality of the interchanged data. SBML provides a well maintained specification for SBML files and even a online validator to approve your own documents. JSBML actually is using this online validator for his validation process. But that means JSBML software, which want to check their created or loaded files, need internet connection to do the test.\nThis project is about implementing a completely new validation system to JSBML, written in pure Java. The main focus here lays on a easy usability and good modularity to support future levels and versions of SBML too.",
                    "projectCode": "https://github.com/sbmlteam/jsbml/commits?author=anfark"
                },
                {
                    "title": "Import graphs in multiple formats and Cytoscape files into GraphSpace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5313526843310080/",
                    "content": "GraphSpace is a tool for storing, sharing, and visualising graphs in order to help\ncollaborative research. Users can upload graphs and share it with other collaborators. Most\nof its users work in computational biology. One may represent biological interactions through\nthe use of nodes and edges. For example, a node may be thought of as a protein. If there\nexists an edge between two nodes in the graph, this may indicate that the two\nproteins interact.Currently GraphSpace can import JSON and .cyjs (Cytsocape JSON) files.\nIt has a REST API to allow automatic uploads of multiple files in these formats.\nThe overall goal of this project is to expand the user communities for GraphSpace by\nextending its import and export capabilities.The first part of this project will focus on adding\nimport (and export) functionality for various graph file formats like GraphML, GPML, BioPAX\nto allow a much wider set of graphs to be imported into GraphSpace. The second part of this\nproject will deal with enhancing the Cytoscape JSON parser such that it can store the\nvarious properties of the layout like x, y coordinates, color, shape, etc. The third part of this\nproject will be to add a PDF exporter.",
                    "projectCode": "https://gist.github.com/MridulS/8b062bc067c323fb3ca18d85c648c690"
                },
                {
                    "title": "Improving Web Based SBGN Editor SBGNViz.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5746664899870720/",
                    "content": "SBGNViz.js is an open source web application based on Cytoscape.js to visualize the pathway models represented by SBGN Process Description Notation . Its current version can visualize SBGN-PD maps and it is getting equipped with editor features. In this project, I propose to develop several key extensions to  the editing capabilities of SBGNViz.js. Contributions that I propose to make are mentioned in a detailed way in the problem description section of my proposal.",
                    "projectCode": "https://docs.google.com/document/d/1BLOgtJ7nppEJuQ5PAxrdRXnXDWXqLeL_IMTcl5L0BHA/edit?usp=sharing"
                },
                {
                    "title": "Interconversion between the systems biology modeling formats SBML and BioPAX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6492203308285952/",
                    "content": "In the systems biology field, there exists many different standards, with each standard serving for a different purpose. BioPax is a standard used for the representation of biological pathways. This standard has been traditionally used to describe structural and basic qualitative behavioral aspects of a biological design. While BioPax represents qualitative models, there are standards that describe quantitative models, namely the Systems Biology Markup Language (SBML). SBML is a standard for the representation of mathematical models of biological systems. SBML is built around core constructs that describe quantitative processes such as reactions. However, there are package extensions that allow for additional features. The Qualitative Models (qual) extension specifically allows SBML to describe qualitative models, which makes interconversion between both formats possible.",
                    "projectCode": "http://www.async.ece.utah.edu/~tramyn/gsoc/"
                },
                {
                    "title": "Interconvertible Layout program for CellDesigner",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4703966562615296/",
                    "content": "CellDesigner is a modeling/simulating software capable of visualizing, modeling, and simulating gene­regulatory and biochemical networks. The key characteristics of CellDesigner are the solidly defined and comprehensive graphical representation of network models and systems biology markup language(SBML) as a model­ describing basis. However, these two characteristics contradict each other. SBML has a standardized definition for layout of network diagram. Before this was standardized, CellDesigner has created its own which is stored in its own way. In the past GSoC project, CellDesigner plug­in that enables to export SBML Layout. To further expand from this software, I will implement a standalone software that converts CellDesigner annotation to SBML Layout and vice versa. It will allow the user to convert CellDesigner annotation into SBML format without CellDesigner. Also the same layout will be held in CellDesigner even when a model is created with another software (i.e. SBML model with Layout). From above, implementing this software will provide interconvertibility between CellDesigner and SBML Layout and remove redundancy for users.",
                    "projectCode": "https://docs.google.com/document/d/13cFXIG7pEFwkkVOzOlAC1unbrkXU4XA7SCbtzkDsfhA/edit?usp=sharing"
                },
                {
                    "title": "Java support for Deviser, a code generation system for SBML libraries",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5499817291677696/",
                    "content": "Since SBML Level 3 is being developed as a modular format with optional SBML Level 3 packages are available to extend the focus of the core SBML representation. Deviser is a new code generation system developed to facilitate the development of SBML L3 packages by helping to automate  the generation of specifications, UML diagrams and library code. The code generator currently targets libSBML only. The goal is to extend Deviser's code generator to produce Java code that can be integrated into JSBML, the pure Java API library for SBML. This will allow Deviser to target both libSBML and JSBML. By contributing to Deviser and also being an active spectator, I hope to develop the skills I already have  and  also incorporate some new ones.",
                    "projectCode": "http://hgrabski.blogspot.am/2016/08/the-end.html"
                },
                {
                    "title": "Multithread Centiscape (#55)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6523918420541440/",
                    "content": "CentiScaPe is a Cytoscape application used to calculate a number of different node centralities in a network. All of the centrality calculating algorithms are currently implemented in a single thread, while most of them would be suitable for parallelization, which would considerably increase their speed, thus consistently improving the performance of the CentiScaPe.\nMain goal of this project is to parallelize and optimize the All-Pairs-Shortest-Path problem solver upon which most of the centralities rely. Two methods are considered: all-pairs Dijsktra's algorithm, and Floyd-Warshall algorithm, with their strengths and weaknesses compared. Apart from the parallelization, some other optimizations are described.",
                    "projectCode": "https://github.com/ibestvina/multithread-centiscape/commits/master?author=ibestvina"
                },
                {
                    "title": "Principal Coordinate Analysis and t-Distributed Stochastic Neighbor Embedding in clusterMaker2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6408186768654336/",
                    "content": "Implement two algorithms which have the ability to do dimensional reduction in cluster Network. Principal Coordinate Analysis and t-Distributed Stochastic Neighbor Embedding in clusterMaker2 which runs on Cytoscape software platform.",
                    "projectCode": "https://supunarunoda.github.io/"
                },
                {
                    "title": "SBGN-ML and SBML to Escher Converter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6218743277420544/",
                    "content": "Escher is quickly growing in popularity. As Escher currently uses JSON as its data and layout\nrepresentation format, and most of the community powered systems biology applications use SBML\nand SBGN-ML for representation of networks in biology, it is necessary to have seamless conversion\nbetween these two. Right now, Escher's JSON formatted data can be converted to these standards\nusing EscherConverter, but the reverse is not possible. Because of this layout has to be manually\ndefined by someone as you cannot import it from some other format. This project aims at filling that gap by providing a tool that can convert SBML (Layout Extension) and SBGN-ML to Escher compatible JSON.",
                    "projectCode": "https://github.com/SBRG/EscherConverter/commits/master?author=devkhan"
                },
                {
                    "title": "The Online Resource for Interface Based Interaction Networks (TOR-IBIN) Web Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5870068437090304/",
                    "content": "TOR-IBIN will be an online resource for gathering and storing published interface-based protein-protein interactions (PPI). TOR-IBIN aims to make these networks available in a central repository with a unified format. The web interface will have a comprehensive search functions and provide options to download the integrated data in standard formats. The interface will also have a visualization module to visualize PPI data as a network, annotated with features of the predicted PPIs using the Cytoscape.js network visualization library.",
                    "projectCode": "https://drive.google.com/open?id=1hrBy2_eCS7JGOI7vj2w_2dD9zYrFnpCgnH13bxsKuEM"
                },
                {
                    "title": "Tutorials for Cytoscape.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5906695918190592/",
                    "content": "Tutorials serve as an invaluable way to familiarize oneself with new software. Cytoscape.js currently provides demos but lacks tutorials to tie together many ideas into a fully realized implementation. This project entails writing comprehensive but easy-to-understand tutorials which demonstrate the power of Cytoscape.js, both to those new to the project and to those wishing to tackle more ambitious projects with Cytoscape.js. I envision a set of tutorials moving from a level just beyond the demos, to a tutorial that details the creation of both mobile and web apps. \nBased on the current demos, I feel that there are enough examples of possible Cytoscape.js based webapps but each needs more documentation. There is very little guidance provided to new users as to why each demo works the way it does. To use a car metaphor, it seems like the demos are oriented more for going from 60 - 100 mph than 0-60. \nAs mentioned in the provided description, each demo exhibits a single concept rather than tying them all together. Tutorials will tie together the disparate demos into more powerful (while still easy to understand) examples of Cytoscape.js",
                    "projectCode": "https://github.com/cytoscape/cytoscape.js-tutorials/commits?author=josephst"
                },
                {
                    "title": "Visualizing genomic alterations in TCGA cancer pathways in cBioPortal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6606672508223488/",
                    "content": "The main goal of this project is to provide a new network view which is capable of visualizing curated TCGA pathways that are more attractive and more intuitive for the biologists with better analysis facilities using rich data of cBioPortal.",
                    "projectCode": "https://docs.google.com/document/d/1WlhdTuwfT8mUiEiklrkjNwFQwgDy9xJgbmGDFTbUQOg/edit?usp=sharing"
                }
            ],
            "techStack": [
                "c++",
                "java",
                "javascript",
                "php",
                "python"
            ]
        },
        {
            "title": "Netfilter project",
            "orgLink": "http://www.netfilter.org",
            "projects": [
                {
                    "title": "Increasing the adoption of nftables by finishing the iptables-translate tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4801386889871360/",
                    "content": "By completing the iptables-translate tool we can let people know the benefits of using nftables and make the adoption of nftables easier.",
                    "projectCode": "https://robgc.github.io/gsoc2016/netfilter/2016/08/22/GSOC2016.html"
                },
                {
                    "title": "Nftables proposal:  missing features and library improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6709475771678720/",
                    "content": "I'm interesting in two of the proposed tasks. I'm talk about how I would work on these and my experience with netfilter.",
                    "projectCode": "https://fark.github.io/GSoC-Work/"
                },
                {
                    "title": "Work on nftables missing features and iptables to nftables translation tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6054899938754560/",
                    "content": "I am interested in the proposed tasks 1 and 4. These tasks are related with the implementation of nftables missing features and the completion of the iptables to nftables translation tool.",
                    "projectCode": "https://gist.github.com/pablombg/6279b507ea2c57fc5398f71cc12d2674"
                }
            ],
            "techStack": [
                "firewall",
                "linux kernel",
                "networking"
            ]
        },
        {
            "title": "Nmap Security Scanner",
            "orgLink": "https://nmap.org",
            "projects": [
                {
                    "title": "Feature Creeper/Bug Wrangler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5068868057825280/",
                    "content": "During the summer I would like to work on a number of issues relating to the project's usability, performance and capabilities. I intend to improve the accountability of NSE scripts, optimize the Nsock engine on Windows and extend the existing IPv6 capabilities.",
                    "projectCode": "http://seclists.org/nmap-dev/2016/q3/225"
                },
                {
                    "title": "Feature creeping and Bug wrangling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5796034877849600/",
                    "content": "Nmap is one of the topmost security auditing tool with a big community support. To rig it with some new features and make enhancements in it I want to do a project in this summers which will aim at giving new capabilities to Nmap as well as hunt down its existing bugs. These features and bugs hunting will take up the Nmap to a next level where it will be even more powerful. This project will have many sub-projects in it with their individual deadlines and milestones, at the same time many bugs also will be corrected by me, as there can be many number of bugs I will maintain a list of bugs where they will be prioritized with the help and recommendation of mentor and community. Few of the sub-projects which are either enhancement or new feature have been mentioned in the project proposal while some of them will come on the way of this three month of coding period so depending upon their urgency, need and complexity I will take up them with an appropriate deadline assigned by mentor.",
                    "projectCode": "https://github.com/nmap/nmap/commits/master?author=tremblerz"
                },
                {
                    "title": "IPv6 OS detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5170401084702720/",
                    "content": "Refine IPv6 OS detection using different classification approaches. Experiment with the set of probes that may be important and select the best set of probes and model that give the best results.",
                    "projectCode": "https://github.com/psdh/GSoC2016NmapSub"
                },
                {
                    "title": "Mac OS X platform developer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5489373004955648/",
                    "content": "My goal is to adapt the Nmap and Zenmap OS X versions to the latest requirements, with the purpose of increasing the portability and efficiency of the code. This would include fixing deprecated codes, sign and improve softwares and installer packages, sandboxing Nmap and code a Swift version to be as natively supported as possible. Tests, documentation and bug fixing will be done afterwards to complete the summer and the project.",
                    "projectCode": "https://github.com/nmap/nmap/commits/master?author=W0naN0w"
                },
                {
                    "title": "NSE Performance Improvement and SSH Support Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5212491764203520/",
                    "content": "I am going to work on improvement of NSE brute-force performance and add\nadditional support of such protocols like ssh and rdp. Currently there are\nmore than 60 brute-forcing scripts but there is still room for improvement of\nNSE's parallelism, performance and protocol support.Main tasks:Possible mini projects:",
                    "projectCode": "https://gist.github.com/sergeykhegay/6848746f2a2b365beca260a39e6cebe9"
                }
            ],
            "techStack": [
                "c/c++",
                "lua",
                "python",
                "c",
                "c++"
            ]
        },
        {
            "title": "NumFOCUS",
            "orgLink": "http://numfocus.org/",
            "projects": [
                {
                    "title": "Categorical Axis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4586869111128064/",
                    "content": "While matplotlib 1.5 added direct support for plotting data frames, there are still a few related tasks yet to be done.  An important one is detecting when plotting categorical data (i.e. enumerations) and updating the tick labels accordingly.",
                    "projectCode": "https://github.com/matplotlib/matplotlib/pulls?utf8=%E2%9C%93&q=author%3Astory645%20"
                },
                {
                    "title": "Dynamic Topic Models - Gensim",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4938712832016384/",
                    "content": "Dynamic Topic Models are used to model the evolution of topics in a corpus, over time. The Dynamic Topic Model is part of a class of probabilistic topic models, and unlike the previous models developed, takes into account time-series data. The idea behind this project proposal is to implement Dynamic Topic Models while taking care of Gensim's philosophy of being memory-independent and robust.",
                    "projectCode": "https://topicmodel2016.wordpress.com/2016/08/21/gsoc-final-submission/"
                },
                {
                    "title": "Improving the state of Optim.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4535208976056320/",
                    "content": "The purpose of this GSoC project is to work on a variety of loose ends in, and general improvements to, the optimization package Optim.jl. Optim.jl is written entirely in the Julia Language, and organized under the JuliaOpt organization. Improvements are in the form of a unified documentation effort, performance tests, improved algorithms, unit tests, and general bug fixing. At the end of GSoC Optim.jl should be a relatively well-polished, documented, and tested package for optimization in Julia.",
                    "projectCode": "http://pkofod.github.io/2016/08/31/gsocfinal/"
                },
                {
                    "title": "Manage workflow for Software/Data Carpentry instructor training",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5514874910146560/",
                    "content": "Software Carpentry (SWC) has a workflow for Instructor Trainings. Currently, it uses Etherpads and Google Docs spreadsheets, which slows down SWC Admins and Trainers whose time is already precious. The goal is to extend AMY (Django-base web application for SWC Admins) to manage the process of training people to be instructors, to avoid manual data copying and synchronization and make the entire process smoother.",
                    "projectCode": "http://chrismedrela.github.io/end-of-gsoc"
                },
                {
                    "title": "Presolve Routines for LP and SDP within Convex.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5278266772422656/",
                    "content": "Pre-solving is the process of detecting redundancies in an optimization problem and removing them so that the problems that are fed to solvers are properly formulated. The reduced optimization problem is now solved by the solver. This has the two-fold benefit of speeding up the optimization process, and higher accuracy in solutions. Since smaller problems are fed to the solver (eg. SCS), the bottleneck call to the solver has now become significantly faster.Ideally, we would want to remove the types of redundancy which lead to reduction in total solution time. But this isn't always possible. There is also a trade-off between time spent in the pre-solve procedure and the amount of redundancy detected by our procedure.  We take the approach mentioned in the paper by Andersen.Motto - Find simple forms of redundancies and find them quick.",
                    "projectCode": "https://github.com/JuliaOpt/MathProgBase.jl/pull/116"
                },
                {
                    "title": "Result-aggregation server for the installation-test scripts",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6539065964888064/",
                    "content": "Software Carpentry has been teaching researchers in science, engineering, medicine, and related disciplines the computing skills they need to get more done in less time and with less pain. Several workshops are held in which students are required to setup their system by installing necessary packages.Currently software carpentry provides the installation-test scripts so that, students can check whether they've successfully installed all software required during the workshop. But the results generated by the scripts are not collected anywhere.In this project a server is to be written for storing results of installation-testing scripts, and also enhancing the testing scripts by adding an option for users to collect results and send them to the server. It will help in figuring out what all problems students usually face in installations ,and also the packages which need to be deprecated in future.",
                    "projectCode": "https://github.com/prerit2010/Result-aggregation-server/commits/master?author=prerit2010"
                },
                {
                    "title": "Upgrade to datapackage.json standard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4850216104624128/",
                    "content": "One of the ways the Retriever makes it easy to add new datasets is by allowing datasets to be added using simple plain text descriptions of the data that are then parsed into Python. There is an emerging standard for this kind of metadata called datapackage.json.This project would upgrade the EcoData Retriever to use the datapackage.json standard.Additionally, I propose to add Python3 support as well as I find that its an easy enough issue to resolve during the 12 weeks of SoC.",
                    "projectCode": "https://goelakash.wordpress.com/2016/08/21/gsoc-blog-wrap-up/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "julia",
                "r"
            ]
        },
        {
            "title": "Open Bioinformatics Foundation",
            "orgLink": "http://www.open-bio.org/",
            "projects": [
                {
                    "title": "Automated tool wrapper/converter for CWL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5549054796759040/",
                    "content": "The project is aimed to generate CWL tool descriptions from Python tools which use argparse.",
                    "projectCode": "https://anton-khodak.github.io/argparse2cwl-blog/2016/08/11/gsoc-summary.html"
                },
                {
                    "title": "Bionode workflow engine for streamed data analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5735739308376064/",
                    "content": "The streams based workflow engine will organize tasks into streams, allow parallelization of this streams, and work locally as well as integrated into common external HPC services. As well dat can be integrated to store intermediate and final data. This provides a framework for efficient, reproducible, and understandable bioinformatics pipelines.",
                    "projectCode": "https://github.com/bionode/gsoc16"
                },
                {
                    "title": "GeneNetwork Genome Browser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5187735035838464/",
                    "content": "Modify GeneNetwork to embed the BioDalliance genome browser in it. BioDalliance (henceforth\nBD) would be integrated into GeneNetwork (henceforth GN); not only should it be possible to\nview data from GN using BD, but the BD interface should be extended to allow on­the­fly\nfetching of data from the server as the user works with the browser, as well as add functionality\nfor visualizing various types of data, such as quantitative trait loci and underlying genotypes.The goal would be to have the browser embedded in GeneNetwork, and sufficiently and\nseamlessly integrated with the backend, so that the browser would be a valuable and useful tool\nin the GeneNetwork environment.",
                    "projectCode": "https://chfi.se/posts/2016-08-22-gsoc-final.html"
                },
                {
                    "title": "Improve the prediction for RiPP clusters",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6289112021598208/",
                    "content": "Ribosomally synthesised and post-translationally modified peptides (RiPPs) are a class of secondary metabolites that share a common biosynthetic origin - a precursor gene, encoded on the genome of a microorganism. It is translated to a peptide by the ribosome, and then further modified to give the active final product. RiPPs can be divided in more than 20 sub-classes and have a wide range of biological functions:  among others, they can work as antibiotics, nutritional additives or food preservatives. Thus, the use of RiPPs as drugs is increasing and several RiPP derivatives are already in advanced phases of clinical trials.\nIn this project, prediction modules for a number of RiPP clusters will be developed. Working together with the mentors, who can provide technical and scientific advice, antiSMASH plug-ins will be created to allow researchers to identify the RiPP precursor gene, identify the cleavage sites of the core peptide and predict further modifications to its sctructure. With these plug-ins, we hope to accelerate all the research involving RiPPs and consequently, shorten the time “between the bench and the bed” for possible new drugs.",
                    "projectCode": "https://bitbucket.org/antismash/antismash/pull-requests/23/gsoc-2016-specific-modules-lassopeptides/commits"
                },
                {
                    "title": "OpenSNP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4851164755525632/",
                    "content": "We all know that nowadays a website needs a responsive layout, by the fact that there are a lot of different devices sizes, like smartphones, tablets and desktops. In addition to this, the project organization is another important thing: letting the code more readable and easier to maintain helps the developer to modify the code when something goes wrong. Another important thing that we can't ignore is the website performance, this one depends of the website weight, but, why performance is important? Because nowadays people wants instant information, since they have a hurry life. This project has as main goal to give these three important things to the OpenSNP website.",
                    "projectCode": "http://mateusjabour.github.io/gsoc-code-submission"
                },
                {
                    "title": "openSNP: Extending Quantified-Self Support in openSNP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5303768677613568/",
                    "content": "Over 100,000 people have already been genotype through DTC genetic testing however, these data live in siloes, often inaccessible to the public. {Bastian Greshake, Philipp E. Bayer, Helge Rausch, Julia Reda, openSNP: A Crowdsourced Web Resource for Personal Genomics, 2014}. openSNP seeks to solve this problem by allowing users to upload their results, where they'll be freely-available for all.In addition to these genetic data, openSNP's broader goal relates to all types of quantified-self (QS) information as this is of interest to genetic researchers.So far, openSNP allows people to link their Fitbit accounts, thereby donating their activity, sleep, and weight data to the public domain. By now, there are many more tracking devices (HTDs) around, and many of them offer their APIs. By exploiting these services, openSNP can dramatically increase the amount of QS data available in the public domain, providing a means for academic researchers and scientists to find new associations. These associations are easier to find in openSNP than similar services since a user's genetic test results, their tagged phenotypes, and HTD data are all linked to a single person.",
                    "projectCode": "https://SXibolet.2pitau.org/gsoc.html"
                },
                {
                    "title": "openSNP: Linking Phenotypes to SNPs in openSNP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6590368275496960/",
                    "content": "A crucial component of the openSNP infrastructure is to make the available data\nmore accessible to the general users and scientists alike. Currently, the portal\nhas independent listing of user Phenotypes and parsed SNPs. Each SNPs\nentry have an additional information section where data from other credible\nsources (PLoS, Mendeley, Genome.gov) is made available. There is, however, no\ndirect or inferred relationship available between the SNPs and the\ncorresponding Phenotypes (as reported). This project proposes to bridge the\nconnectivity between existing Phenotypes and genetic variants with the help of\nalready mined data and implementing additional services as necessary.",
                    "projectCode": "https://vivekiitkgp.github.io/programming/gsoc-16-wrap-up.html"
                }
            ],
            "techStack": [
                "perl",
                "python",
                "ruby",
                "java",
                "haskell"
            ]
        },
        {
            "title": "Open Chemistry",
            "orgLink": "http://openchemistry.org/",
            "projects": [
                {
                    "title": "Avogadro-2: Integration of cclib data parser using Chemical JSON",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6523710383063040/",
                    "content": "This project proposes to integrate the cclib data parsing library with Avogadro-2 using the Chemical JSON format. Chemical JSON is a standard JSON format being developed by the OpenChemistry group across different applications. \nWith integration of cclib, Avogadro-2 will acquire the ability to efficiently parse various types of output files and render any one of the 45 data points (wherever feasible) which cclib can extract. The project aims to extend the Chemical JSON format with the different data points that cclib can parse, and have cclib pass this extended Chemical JSON to Avogadro-2 via a simple command call. To display the information being provided by the Chemical JSON, the functionality to read and render specific data points will have to be implemented in Avogadro-2. \nThis abstraction of restricting the data exchange to Chemical JSON greatly limits the dependency of Avogadro-2 on cclib. In the future, this interface can be extended by another data parsing library to provide information in a standard format (i.e. Chemical JSON); building upon the powerful plugin architecture on which Avogadro-2 is designed upon.",
                    "projectCode": "https://schamnad.github.io/blog/2016/08/21/gsoc-2016-summary"
                },
                {
                    "title": "Materials Science Advances in Avogadro 2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5746821397741568/",
                    "content": "As a Ph. D. student in a computational chemistry research group involving crystallography, I’m very familiar with many of the features and functions that crystallography groups need from a molecular editor. Although Avogadro 2 has some basic unit cell building and visualizing, it is missing a lot of key functions that crystallographers use in Avogadro 1. Identifying the spacegroup of a crystal, converting a crystal to a conventional or primitive cell, symmetrizing a crystal, and filling a unit cell are all important features that crystallographers need when working with crystals. Thus, while being careful to avoid licensing issues with external libraries, my primary goal is to advance the materials applications in Avogadro 2 by first incorporating these features that were present in Avogadro 1 and then eventually incorporating new features that can be useful for crystallographers.",
                    "projectCode": "http://avogadro2crystals.blogspot.com/2016/08/gsoc-summary.html"
                }
            ],
            "techStack": [
                "c++",
                "opengl",
                "python",
                "javascript",
                "webgl"
            ]
        },
        {
            "title": "Open Detection",
            "orgLink": "http://opendetection.com",
            "projects": [
                {
                    "title": "CNN based object localization and recognition for openDetection library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6210728331575296/",
                    "content": "The proposal mainly focuses on Convolutional Neural Network based  object detection module to be integrated with the openDetection library. The library that will be used for this is caffe. The targets that will be accomplished are:1) Re-designing the library for CPU and GPU compilation modes. 2) Implement a way to invoke Caffe open source library from the OpenDetection module with a user-friendly code based way ( this will include a tinge of GUI support for instant access). 3) Implement open source guidance and codes for state-of-the art object localization problems(hypothesis generation) specifically based on selective-search and convolutional neural network (CNN) approaches. 4) Adding a ground-truth annotation tool to the module with a graphical-user-interface support. Implementing short, but effective modules like mixed-pooling, recurrent networks to the Convolutional Neural Networks Training dependent on the invoked caffe library.  5) Adding context based learning CNNs. 6) Adding user-interface to train and test CNN based classifiers and object detectors. 7)Adding documentation for the above",
                    "projectCode": "http://opendetection.com/gsoc2016_blog_abhishek.html"
                },
                {
                    "title": "Framework design and library maintenance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6392816422879232/",
                    "content": "The main goal of this project is to reshape the current library in such a way that it becomes easily expandable, usable and able to achieve high performance for the implemented state of the art algorithms. It is also very important to provide the library with the ability to be built cross platform among standard operating systems. After this objective, it would be good to integrate some existing state of the art algorithms. The last step consists in writing a clear documentation along with some more examples for the new library.",
                    "projectCode": "http://opendetection.com/gsoc2016_blog_giacomo.html"
                }
            ],
            "techStack": [
                "c/c++",
                "cmake",
                "opencv",
                "pcl",
                "caffe"
            ]
        },
        {
            "title": "Open Ephys",
            "orgLink": "http://www.open-ephys.org",
            "projects": [
                {
                    "title": "Module to control LED driver for Optogenetic Stimulation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5589087918489600/",
                    "content": "Many users of Open Ephys are using optogenetic tools to manipulate activity in genetically defined neural circuits, but there is currently no way to control these tools from the Open Ephys GUI. Cyclops is a high-precision LED driver designed for precise optogenetic stimulation. Setting up a controlled closed-loop experiments, where neurons can be stimulated based on real-time acquired neural data, would be greatly simplified if a plugin to communicate with Cyclops is built into the GUI.A typical scenario would be to upload or stream waveforms to Cyclops and trigger their deployment (or transformations) based on events detected in GUI. An open communication protocol needs to be defined for this and also special programable processors that can generate feedback signals and control Cyclops (via the protocol).\nAfter configuring the processors in the pipeline, the GUI would program Cyclops and the experiment can be launched.In addition to this, a more powerful and upgraded Cyclops that uses a Teensy board will be released. Cyclops and Open Ephys would still support the Arduino version though.",
                    "projectCode": "https://gist.github.com/arrow-/08910c0da6d3eddaf2ad581c4a72d786"
                },
                {
                    "title": "Plugin generation GUI with visual interface designer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6021131295260672/",
                    "content": "Many scientists around the world use Open Ephys software for acquiring data during neuroscience experiments. The Open Ephys GUI was designed around a modular plugin architecture, which allows users to create their own plugins to handle specific use cases which are not included in the main application. However, most neuroscientsts do not have the C++ programming skills needed to write plugins from scratch. Having a simple GUI that can auto-generate a code template would lower the barrier to creating new plugins and encourage more scientists to make their own contributions to Open Ephys.",
                    "projectCode": "https://gist.github.com/sept-en/3d61117718bf436725802bbd51c411b6"
                }
            ],
            "techStack": [
                "c++",
                "juce"
            ]
        },
        {
            "title": "Open Genome Informatics",
            "orgLink": "http://gmod.org/wiki/GSoC",
            "projects": [
                {
                    "title": "Biological Graph Visualizations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5902985066446848/",
                    "content": "The proposed project deals with the development of two Drupal modules,  for storage and visualizations of Complex Biological Graph. Both the proposed modules will be able to integrate along with Tripal and can be used by the Scientific community for the construction of genetic website, publish genomic data. The primary aim of the project is to optimize querying by using a Graph Database and also generate a good User Interface.",
                    "projectCode": "http://samyadeep.weebly.com/"
                },
                {
                    "title": "Interactive visualisation framework for genome mutations in gene and protein networks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6640774816989184/",
                    "content": "I have wrote a set of thoughts expanding the original proposal \"Interactive visualisation framework for genome mutations in gene and protein networks\" to express my current understanding of the topic, my views and propositions.The ideas expressed in the proposal are related to the general planning of the project as well to implementation of visualization engine specifically. Among others I propose use of \"user defined layouts\", clusterization, refer to pathway visualization in KEGG and mention alternative to graph-based visualization tools.I hope to get feedback on this draft to know whether my current idea of this project is on track or whether I am thinking of something other than the author had in mind. I will appreciate any feedback.",
                    "projectCode": "https://gist.github.com/krassowski/2dd02c4d7473251089521d810fe9d9ec"
                },
                {
                    "title": "Lightweight chat plugin for the JBrowse genome browser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6486825203924992/",
                    "content": "This project will deliver a lightweight socializing plugin for JBrowse using OAuth2 and the Faye pub/sub framework. Users will be able to chat, share their session and comment on each other with the identity they build using OAuth2. Users will be able to control the visibility of their avatar as well as their activities. This document also contains personal details about me, why I chose this project and why I think I deserve to be selected to do this project.",
                    "projectCode": "http://pubudusoc16.blogspot.com/2016/08/project-wrapup.html"
                },
                {
                    "title": "Using Go-Docker to enhance Galaxy functionalities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5045382371344384/",
                    "content": "Go-Docker is a cluster management tool using Docker as execution/isolation system. It can be seen like Sun Grid Engine/Torque/… Using Bioinformatics dedicated Docker hub as BioShaDock, It allows life scientists to use powerful tools in a easy and secure way while finely managing infrastructures resources. It integrates with container management tools (Docker Swarm, Mesos, ...) to dispatch of the commands on the remote nodes. Galaxy is a user-friendly web platform originally dedicated to life sciences data analysis. If Galaxy provides amazing functionalities to enhance transparency, accessibility and reproducibility of data analysis related processes, there is still opportunities to provide more reproducibility and flexibility in the manner of using this web platform.This project idea is to integrate the Go-Docker system with Galaxy. Integration is to be done in two ways. First, to develop a “Go-Docker Galaxy tool” which will allow the possibility to create / use new on demand “tools” in a Galaxy instance without being an admin and without going to the system black matter. Second, to develop a “Go-Docker executor/runner” which can be used as any other scheduler (i.e. SGE, Torque …).",
                    "projectCode": "https://github.com/varunshankar/galaxy-godocker"
                },
                {
                    "title": "Visualisation for BLAST results",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5151519871598592/",
                    "content": "Build a Standalone library / tool to visualise the BLAST results. This tool will be build on Ruby as command line tool.",
                    "projectCode": "http://www.hiten.io/blog/articles/gsoc-16/"
                },
                {
                    "title": "Work with the Dockstore Team and the GA4GH to Enable Cross Docker Repository Sharing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5543076202283008/",
                    "content": "With the development of software container technology, developers can manage and deploy their software effectively. The software can start up and run on the container more and more quickly. The Dockstore is a platform for users to share tools encapsulated in Docker. Furthermore, in order to share tools as seamlessly as possible, GA4GH create a set of APIs for the biology scientists. In this project, I would like to make the Dockstore support these APIs. In this way, people can create their tools based on the APIs so that their tools can be work with others’ tools seamlessly. It will absolutely help the cooperation between scientists due to they can create their tools based on or cooperate with others’ more easily. Our project has three main goals. The first is to communicate with GA4GH community so as to decide the APIs standard and their implementations. Then, I need to implement and test these APIs with java so that the Dockstore can support the APIs. The last goal is realize cross indexing of tools across all sites that support the standard. When finish cross indexing, Dockstore can search all the tools from all websites which support the standard.",
                    "projectCode": "https://docs.google.com/document/d/1suJVO5VGXn3sFI3Rk88uU4vbLJHH5ZpTxUSzZDcfO8M/edit?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "java",
                "html/javascript",
                "nodejs",
                "gwt"
            ]
        },
        {
            "title": "Open Source Robotics Foundation",
            "orgLink": "http://www.osrfoundation.org",
            "projects": [
                {
                    "title": "Extend communication outside the LAN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6532774106234880/",
                    "content": "This project will modify the core library to be able to communicate nodes located in different LANs. This will require to pass in an additional argument to a node with the endpoint of another node in a separate LAN. This node will act as a proxy and will forward all the discovery information. We will add support for whitelists (discard information unless it is originated by a specific set of nodes) and blacklists (only discard traffic coming from a set of nodes).",
                    "projectCode": "https://bitbucket.org/ignitionrobotics/ign-transport/commits/all?search=user(nadya)"
                },
                {
                    "title": "Extend communication outside the LAN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6433512848621568/",
                    "content": "Right now, all the messages sent and received stayed on the same LAN. The goal of the project is to extend this functionality and allow other discovery components in different LANs to exchange information as if they would be on the same LAN.",
                    "projectCode": "https://bitbucket.org/ignitionrobotics/ign-transport/commits/all?search=user(Amitoj)"
                },
                {
                    "title": "integrating gazebojs with gzweb into gazebow.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4899072699793408/",
                    "content": "this project aims to integrate two existing simulation tools, gzweb and gazebojs into a new tool called gazebow, the project involves replacing the bridge which connects gzserver with the gui, tests, docs, adding features while trying to increase the performance.",
                    "projectCode": "http://mohmmadayman.tumblr.com/post/149309880411/gazebow-a-gsoc-experience"
                },
                {
                    "title": "Project Proposal for \"Graphical interface for inserting plugins during simulation\" Causevic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4677561640550400/",
                    "content": "In order to add a new plugin Gazebo programmers must change the .world file and restart Gazebo each time [15]. Furthermore modifying source code, changing plugin parameters or attaching plugins to new models has the same effect. Since this is a rather tedious and time-consuming process and users are thereby distracted, they can not fulfill all tasks in one run. A new idea favoring an easy-to-use GUI and a simple plugin implementation concept should eliminate this procedure. Coupled with a number of additional innovative features this could lead to a behaviour that end-users easily view attached plugins on specific models, interact lightning-fast with various plugin types, e.g. GUI, visual and world plugins or modify plugin source code at runtime.",
                    "projectCode": "https://alminc91blog.wordpress.com/2016/08/20/first-blog-post/"
                },
                {
                    "title": "Reactive and Adaptive Path Planning Using Sensor Feedback and Operator Input",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4547228978905088/",
                    "content": "ROS path planners such as MoveIt! and Descartes are good at finding feasible robot paths that avoid obstacles and optimize motion. In some applications, adjustments to nominal paths must be made based on sensor feedback or operator input. The issues were raised at ROSCON 2015 . The specific application driving this need is robotic assembly using end-effector force feedback, where parts such as computer board components need placement in holes or sockets with tight clearances, and the object locations may vary considerably with a need to locate them using vision systems. Achieving reactive and adaptive path planning may require extensions to several parts of ROS and ROS-Industrial, including the MoveIt! or Descartes path planners, the ROS control layer, or the Simple Message protocol to hardware robot controllers. Development can take place without actual force sensors or cameras, using simulated sources of the high-level outputs of these sensors in terms of small adjustments that affect the trajectories. The key software objective is to put in place a method to adjust trajectories after they have been nominally planned, rather than focusing on sensor processing.",
                    "projectCode": "http://wkentaro.com/projects/gsoc-2016/"
                },
                {
                    "title": "ROS Interface for Impedance/Force Control",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6194767964667904/",
                    "content": "This proposal discusses a method to build a ROS interface that enable cartesian impedance control for accomplishing autonomous tasks that require force control.",
                    "projectCode": "https://docs.google.com/document/d/140NK1d3ZoY3MhfOzP2rE5i02hJJ4P0HuBD21fE9kBxI/edit?usp=sharing"
                },
                {
                    "title": "Visualizing Joint Solutions in Descartes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6745622753312768/",
                    "content": "The proposed worktries is to visualize the kinematic joint solutions for the trajectories provided by\nDescartes. As the trajectories consist of several points, the joint solutions can be visualized\nfor all the points in the trajectory or a particular point in the trajectory. The work also\nincludes visualizing the workspace of the robot in terms of joints by which the user does not\nhave to rely on intuition for assignment of 6DOF poses.",
                    "projectCode": "http://wiki.ros.org/reuleaux"
                }
            ],
            "techStack": [
                "ros",
                "gazebo"
            ]
        },
        {
            "title": "OpenAstronomy",
            "orgLink": "http://openastronomy.org/",
            "projects": [
                {
                    "title": "Astropy: Bridge sherpa and astropy fitting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6728735747211264/",
                    "content": "Both astropy and Sherpa (https://github.com/sherpa/sherpa/) provide modeling and fitting capabilities; however, Sherpa’s features are way more advanced providing far more build-in models, a larger choice of optimizers and a real variety of fit statistics. Whereas Astropy's functional state-based interface is much more user friendly. Astropy is also more widely used. The main goal is the bring Sherpa’s optimizers and fit statistic functions to astropy. A more hopeful goal is to develop a bridge between both packages such that a user can use a astropy models completely interchangeably with Sherpa models and fitters. This will give astropy users access to fitting capabilities that required many years of developer time and that are unfeasible redevelop from scratch.Goals:",
                    "projectCode": "http://myopensauceadventure.blogspot.co.uk/2016/08/dessert.html"
                },
                {
                    "title": "Image processing and source detection in Gammapy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6097787066253312/",
                    "content": "Gammapy is a Python package for professional gamma-ray astronomers to analyse data from space-based gamma-ray telescopes (like Fermi-LAT) as well as ground-based gamma-ray telescopes (such as HESS or CTA). It is a very young project, so there’s a lot to do. The project I will be working on consists of gammapy.image, gammapy.detect (using gammapy.image as a building block) and making small modules and improvements such as source extraction or cluster detection tools. Working on the tests and documentation will be a significant part of my project, making both new and existing code documented and increasing coverage.",
                    "projectCode": "https://github.com/search?p=1&q=author%3AOlgaVorokh+created%3A%222016-02-10+..+2016-08-23%22&ref=searchresults&type=Issues&utf8=%E2%9C%93"
                },
                {
                    "title": "Implement PSF photometry for fitting several overlapping objects at once",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6262816889634816/",
                    "content": "Aperture photometry assumes that the background varies in a linear fashion in the aperture’s vicinity. However, in a dense star cluster the background is usually nonlinear. Therefore, one may use point spread function (PSF) photometry in order to meaningfully measure the brightnesses of the sources. In the latter approach, a single model is fitted to each object allowing one to determine, with subpixel precision, their position, amplitude, and width.However, this becomes a non straightforward task when considering fitting multiple overlapping objects. To do so, one can not “just fit a model with hundreds parameters”. In fact, there exist several problems with this “brute force” approach, and the most critical one might be that the parameter space will have many dimensions (as many as the number of parameters, precisely), which almost certainly will make optimization algorithms to diverge or to get stuck in a local minima.Hence, my primary task is to work on developing an algorithm to localize, fit, and perform photometry of several overlapping objects (e.g. a dense star cluster, globular clusters, etc) simultaneously.",
                    "projectCode": "http://mirca.github.io/gsoc-astropy-final/"
                },
                {
                    "title": "Implementing AIA response function in Sunpy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5602520831361024/",
                    "content": "Solar physics uses the CHIANTI atomic physics database to obtain properties about various elements and ionisation states. By using observed elemental abundances and these ionization states, one can use CHIANTI to obtain synthetic spectra of solar plasma from various features, which inform a response function used by the observational instruments themselves. This response function is vital to understanding observations. The Atmospheric Imaging Assembly (AIA) is a multi-wavelength imager on the Solar Dynamics Observatory that specifically looks at the solar corona to understand magnetic processes.  This project aims to use SunPy to infer plasma properties like temperature and density by developing the routines necessary to calculate two response functions for the AIA using Python and ChiantiPy. They are wavelength response functions that calculate the amount of flux per wavelength as measured by AIA, and temperature response functions that calculate the sensitivity of light from the plasma per temperature as measured by AIA.",
                    "projectCode": "https://github.com/sunpy/sunpy/pull/1837"
                },
                {
                    "title": "Improvements to the SunPy Database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5092662445080576/",
                    "content": "The SunPy database module enables users to manage files on a disk, or a network hosted database. Users can find files by using physical parameters such as wavelength, time etc. or by using attributes such as instrument name. Queries can also be combined to form complex queries.The first part of the project would involve making several modifications to the database module used by SunPy to integrate the Fido interface with the database which will enable users to use only the Fido to make queries, instead of making separate queries for separate clients like VSO, LightCurve etc.The second part involves improving the caching mechanism to enable query result based caching instead of the current query based  caching.",
                    "projectCode": "https://github.com/Punyaslok/sunpy/pull/1"
                },
                {
                    "title": "Real Time Data Access and Visualisation tools.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6658051994025984/",
                    "content": "Developing viz tools for SunPy.",
                    "projectCode": "https://github.com/sudk1896/sunpy/pull/1"
                },
                {
                    "title": "Scheduling capabilities for Astroplan",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4806240471351296/",
                    "content": "The project aims to build upon the Astropy-affiliated package Astroplan to provide scheduling functionality for individual observations and higher-demand observatories. The individual observation scheduling will make use of the observability functions already implemented in Astroplan to take targets and constraints as inputs and return a nearly optimised observing schedule. Scheduling for a high-demand observatory will take multiple proposals, each containing targets and constraints, with varying priority and find a schedule that best satisfies the proposals.",
                    "projectCode": "http://kvyhastroplan.blogspot.com/2016/08/cleaning-up-and-documenting.html"
                }
            ],
            "techStack": [
                "python",
                "julia",
                "c",
                "numpy"
            ]
        },
        {
            "title": "OpenCV",
            "orgLink": "https://github.com/itseez/opencv/wiki",
            "projects": [
                {
                    "title": "A Modern Deep Learning module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5965288667348992/",
                    "content": "Nowadays, deep learning is the hip topic inside the computer vision community. Many authors have\ndemonstrated that using deep neural networks in tasks such as object recognition, image segmentation, among others have outperformed traditional methods. However, this is just the tip of the iceberg from this point forward thanks to the recent rise of parallel computation using GPU and novel software architectures devoted to GPU/parallel-computing.",
                    "projectCode": "https://github.com/tiny-dnn/tiny-dnn/commits/master?author=edgarriba"
                },
                {
                    "title": "Convolutional Neural Networks for Visual Tracking",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4729515444011008/",
                    "content": "Deep Learning (DL) and especially Convolutional Neural Network (CNN) has drawn a lot of attention in last few years. At present day CNN has been successfully applied in various fields of Computer Vision, for example: image classification [1, 2, 3], semantic segmentation [4], object detection [5], human pose estimation [6], etc. \nAlso some of the recent researches have tried to apply discriminating power of CNN for visual tracking purposes: [7, 8, 9, 10, 11]. Almost all of them outperform state-of-art tracking algorithms (like TLD [12], KCF [13]) in terms of accuracy, but lose in terms of speed.\nOne of the most recent successful trackers based on CNN are MDNet and GOTURN. Though MDNet has been evaluated as a top – accuracy tracker (1-st place on VOT2015), it suffers from low performance (~1 FPS) due to CNN online learning. While GOTURN can run on around 100 FPS maintaining high accuracy and robustness (close to MDNet). Good speed/accuracy tradeoff makes GOTURN one of the most promising next-generation trackers. So this proposal aims to implement GOTURN tracker in OpenCV library.",
                    "projectCode": "https://gist.github.com/Auron-X/a8258a53bcb360c8f6eb07821e825bad"
                },
                {
                    "title": "Deep Learning with Quantization for Semantic Saliency Detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4623962327744512/",
                    "content": "Semantic saliency detection be implemented based on CNN module. Quantization method described in Pete's blog for quantization will be added into project tiny-cnn together with deconvolutional functions. This project will be the dependency of OpenCV afterwards. There is also an IOS APP demo for such tiny deep learning structure.",
                    "projectCode": "https://github.com/tiny-dnn/tiny-dnn/commits?author=Wangyida"
                },
                {
                    "title": "Dynamic structured light in openCV",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5949422521286656/",
                    "content": "GSoc 2015 brought structured light to OpenCV and I would love to extend the module this year. Among all the available algorithms, phase-shifting profilometry (PSP) is one of the most popular and I believe OpenCV would benefit from its implementation. Unfortunately, PSP does not perform well on dynamic scenes since it belongs to time-multiplexing methods. Indeed, successive patterns are not deformed in the same way which leads to reconstruction errors. To reduce reconstruction errors due to motion, scientists had the idea to combine PSP with Fourier transform profilometry (FTP), a one-shot method that uses the same patterns. My goal for GSoC 2016 is to add PSP, FTP and Fourier assisted phase-shifting profilometry (FAPS) to OpenCV.  Spatial phase unwrapping, which is essential to PSP, FTP and FAPS, will be coded as an independent module due to its broad number of applications. Finally, as a proof of concept of scene understanding from structured light, an automatic piecewise-planar surfaces detection will be tested on the results provided by Fourier transform profilometry.",
                    "projectCode": "https://gist.github.com/AmbroiseMoreau/95403f41dfcdf77dccb9fabefb264909"
                },
                {
                    "title": "Efficient dense optical flow",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4797975343661056/",
                    "content": "A very fast (up to 600Hz on 1 CPU core, excluding preprocessing) dense optical flow algorithm that outperforms the Farneback flow in terms of quality has recently been proposed. I believe that its implementation in OpenCV could be benficial.",
                    "projectCode": "https://github.com/opencv/opencv_contrib/commits/master?author=sbokov"
                },
                {
                    "title": "Extending the text module with deep Word-spotting CNN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6166337697087488/",
                    "content": "This is a proposal for extending and improving the OpenCV text module. In brief I propose implementing word-level classification with deep CNN for text recognition, as this strategy has proven superior to character level. I propose to implement an optional subset for training models introducing external dependencies and versatile, optionally light weight, feed-forward recogniser that can be used wherever OpenCV is deployable.",
                    "projectCode": "https://github.com/opencv/opencv_contrib/pull/761"
                },
                {
                    "title": "Improvement of the dense optical flow algorithm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6251299129524224/",
                    "content": "I was interested in the improvement of the current dense optical flow algorithm.\nMy proposal is to implement parallel algorithm as the alternative to the current Farneback’s algorithm.",
                    "projectCode": "https://github.com/VladX/opencv_contrib/commits/optflow?author=VladX"
                },
                {
                    "title": "Multi-language OpenCV Tutorials in Python, C++ and Java",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6414610965987328/",
                    "content": "OpenCV is an open source image processing library extensively used in C++, Python, Java and more than 15 other languages.\nWith the big variety of supported languages appears the difficulty to find a tutorial in an appropriate language and to write one without duplicating effort or maintenance. In this project we will add the possibility to write multi-language tutorials that a user can later dynamically change to its preferred language if available. We will also unify some existing tutorials and provide an infrastructure for checking the validity of the code used in tutorials. In the end, tutorials will be easier to write, well split between code and meta-data, and most importantly, more valid and language friendly for the user.",
                    "projectCode": "https://docs.google.com/document/d/1FFpt3kuaN1t1zcKeiHmaKoD9gg09CYviG3bMGCGXP9c/edit?usp=sharing"
                },
                {
                    "title": "New camera model and parallel processing for stitching pipeline",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5112624647766016/",
                    "content": "Stitching pipeline is a well established code in OpenCV. It provides good results for creating panoramas from camera captured images. Main limitation of stitching pipeline is it expected camera model (perspective transformation). Although this model is fine for many applications working with camera captured images, there are applications which aren't covered by current stitching pipeline.Due to physical constraints it is possible for some applications to expect much simpler transform with less degrees of freedom. Those are situations when input data are not subject to perspective transform. The transformation can be much simpler, such as affine tranformation. Datasets considered here includes images captured by special hardware such as book scanners, maps from laser scanning, preprocessed images.",
                    "projectCode": "https://github.com/opencv/opencv/pull/6933"
                },
                {
                    "title": "OpenCV dnn module enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6219114255220736/",
                    "content": "My previous GSoC project resulted in OpenCV DNN module. It was the first step towards deep neural network support in OpenCV. However, neural networks world is developing rapidly, so dnn module should satisfy the requirements of the society.\nThere are many enhancement ideas. I believe that their implementations are needed to the module or at least they will be definitely beneficial for it.",
                    "projectCode": "https://docs.google.com/document/d/1GO-9NIjA_LqOln72eScipvl9Isl6NvavZXc-C-uWh9w/edit?usp=sharing"
                },
                {
                    "title": "Update OpenCV file storage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5855415350853632/",
                    "content": "OpenCV FileStorage is very convenient while using C++. I'll update it and also add more features.Aim is to add base64 support, JSON support and other features for FileStorage.",
                    "projectCode": "https://wiryls.gitbooks.io/gsoc-2016-update-opencv-filestorage/content/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "machine learning",
                "computer vision"
            ]
        },
        {
            "title": "OpenKeychain (OpenPGP for Android)",
            "orgLink": "https://www.openkeychain.org/",
            "projects": [
                {
                    "title": "Move from Passwords to App Lock Mechanism",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5910458309541888/",
                    "content": "Migration to an App Lock Mechanism consists of 4 main tasks,\n1) Moving to usage of a single master password for all keys\n2) Adding encryption of the entire database used for key storage\n3) Allowing a separate password for some keys (Optional) \n4) Adding an applock mechanism as added securityImplementation of the above tasks gives added security to users, and also allows simplifying of the current codebase. Modifications to the existing database, adding of new user interfaces as well as refactoring of the codebase will be required in this task.A breakdown of the tasks involved along with proposed implementations for selected areas can be found in the full proposal.",
                    "projectCode": "https://gist.github.com/AlexFJW/0ddf4a10e7030ac991f8fb93af3decff"
                },
                {
                    "title": "Proposal for GSoC 2016 - Andrea Torlaschi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4985441539325952/",
                    "content": "I'm Andrea Torlaschi from Italy.\nI've a Bachelor's degree and now i'm studying for a master's degree in \"Computer Science and Multimedia\" at the University of Pavia.\nOn GitHub i’m “runnerway”.I would like to spend this summer by coding for OpenKeychain project as a GSoC work.\nSince the first day when the list of the organizations participating to GSoC16 was published i started working on OpenKeychain.\nSome of my PRs are already merged and during these weeks i’ve explored a large part of the codebase.\nI’m familiar with the code of the UI and with that of the internal operations too, like you can see in those commits.As written in the complete proposal, i've an idea for a possible GSoC project (or as an preparatory work). But this is not a constraint. Working on other tasks would be equally great. In particular the first four projects listed on your page are pretty interesting. Also \"Detached Signatures\" would be good but i understand that maybe it's a bit too small for a complete GSoC. Maybe it can be good for the bonding period.All the other details are present in the complete proposal. Thank you.I hope to spend the summer on OpenKeychain with a GSoC 2016 project :)",
                    "projectCode": "https://gist.github.com/runnerway/137397da447fb796764bac37b57d835b"
                }
            ],
            "techStack": [
                "android",
                "openpgp"
            ]
        },
        {
            "title": "OpenMRS",
            "orgLink": "http://openmrs.org/",
            "projects": [
                {
                    "title": "Atlas 3.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4542047637733376/",
                    "content": "Rewrite the OpenMRS Atlas server backend as a Node.js app presenting a simple RESTful API and Authenticate it against the OpenMRS ID.",
                    "projectCode": "https://shekharreddykmit.wordpress.com/2016/08/23/gsoc-2016-final-report/"
                },
                {
                    "title": "Cohort Module Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5628983332831232/",
                    "content": "The cohort module is quintessential for providing an integrated, user-friendly and customizable monitoring tool for Households (generalized as cohorts) in a Medical Informatics System.Currently, the cohort module provides significantly limited functionality for displaying, managing, editing and keeping track of cohorts.The primary objective of this project is to extend this module to provide enhanced functionality and extended support for Cohort Forms, In-depth Cohort Search Mechanism, Detailed Data Display and an Expressive and Navigable UI.",
                    "projectCode": "https://github.com/OpenSRP/openmrs-module-cohort/commits/master?author=bholagabbar"
                },
                {
                    "title": "DHISReport DHIS2 WebAPI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6130525722902528/",
                    "content": "Automating the process of creating report definition XML by importing it from the DHIS2 implementation.",
                    "projectCode": "https://github.com/openmrs/openmrs-module-dhisreport/commits/master?author=puevigreven"
                },
                {
                    "title": "FHIR Swagger Document generator and enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5528550086017024/",
                    "content": "FHIR standard rapidly gets popular among community. Swagger is one of most popular API documentation language. Objective of project is to integrate swagger document generator and improve module to meet recent changes of FHIR Specification. The FHIR module is now part of the platform. Part of the swagger integration, the required UIs needs to be built on top of new UI framework as legacy UI now has been depreciated.",
                    "projectCode": "https://rasanjanacreations.wordpress.com/2016/08/20/completion-last-update-of-gsoc-openmrs/"
                },
                {
                    "title": "OpenMRS Android Client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5829866469457920/",
                    "content": "This proposal aims to completely overhaul the design of the OpenMRS Android client and add powerful offline form syncing capabilities and notification support for better field usage in real life deployments.",
                    "projectCode": "https://github.com/openmrs/openmrs-contrib-android-client/blob/master/GSoC_2016.md\n"
                },
                {
                    "title": "Overhaul the User Management dashboard for ID Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4521878471311360/",
                    "content": "ID Dashboard is the glue that holds the community together. Currently we have to straddle two systems if users have issues registering, Atlassian Crowd (OpenLDAP) and Formage (MongoDB). We aim with this project to eliminate both and combine the solutions so we can see at a glance when users are in MongoDB, OpenLDAP or in both. This is one of those projects which benefits the people who make sure the community runs smoothly.",
                    "projectCode": "http://dmytro-trifonov.blogspot.com/2016/08/gsoc-2016-results.html"
                },
                {
                    "title": "OWA App Store",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4774335306792960/",
                    "content": "As OpenMRS has chosen Bintray as its distribution platform,there is a need to develop a website where one can download OWA's and OMOD's using the rest api provided by Bintray.",
                    "projectCode": "https://reevolter.wordpress.com/2016/08/23/summary-of-the-work-done-for-openmrs-app-store-project-gsoc-2016/"
                },
                {
                    "title": "Radiology Reporting Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5562394428309504/",
                    "content": "The OpenMRS radiology module adds features of a Radiology information System to OpenMRS. Currently the OpenMRS radiology reporting module has a poor support for building reports. In this project I will create a module that enhances the reporting capabilities of the radiology module.",
                    "projectCode": "https://ivange94blog.wordpress.com/2016/08/20/gsoc-2016-final-evaluation/"
                },
                {
                    "title": "Upgrade Data Collection support for Human Genetics Care",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6429668584456192/",
                    "content": "The Human Genetics Clinic of the faculty of Medicine, University of Colombo plays a valuable role in caring for patients.\nCurrently, contributors have finalized requirements for collecting data from patients, and developed appropriate forms to do so. However, the forms would benefit from being upgraded to be more user friendly, and become comparable to the functionality seen on the 'collect vitals' form.",
                    "projectCode": "https://github.com/surangak/HguSriLanka"
                }
            ],
            "techStack": [
                "java",
                "groovy",
                "html5",
                "xml",
                "hibernate"
            ]
        },
        {
            "title": "OpenStreetMap",
            "orgLink": "http://www.openstreetmap.org/",
            "projects": [
                {
                    "title": "Improved Shaders for OSM2World",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6223715507372032/",
                    "content": "OSM2World provides an excellent tool for converting OSM data to 3D models. It however lacks in visual fidelity, which can make it off-putting to use by itself, and more difficult to coordinate it with and external rendering program such as POVRay. This proposal suggests several modern OpenGL shaders to improve the visual fidelity of OSM2World.",
                    "projectCode": "https://github.com/tordanik/OSM2World/pull/112"
                },
                {
                    "title": "Public Transport Assistant Plugin for JOSM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4703186757615616/",
                    "content": "With the existing implementation, mapping and editing public transportation routes is a labor-intensive task, which demotivates mappers. The correctness of the resulting routes is not ensured. Furthermore, many of the already mapped routes are in need for validation and correction. The proposed GSoC project will provide the functionality for a more convenient editing of public transport routes either by creating new ways between stops with a routing algorithm or by replicating them from existing public transport routes. Furthermore, it will elaborate criteria of route correctness and validate the existing routes against those criteria. There are Python scripts written by Polyglot to find ways that belong to a route described by its stops and to compare a given route to an already existing route. However, their installation requires additional steps, so for a better usability an extended version of this functionality needs to be implemented as part of the JOSM public transport plugin.",
                    "projectCode": "https://drive.google.com/open?id=1gecpTGhSYQi70MseyScgVDfwn5h_yYpyoFmTx5gBSNE"
                },
                {
                    "title": "Reorganizing JOSM core",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5207898028244992/",
                    "content": "I propose to restructure the JOSM core classes to be more flexible. This also allows us to separate different components of JOSM and change the MapView to really use the MVC pattern.A new bug reporting system should make finding bugs easier - both in development and bugs that are send in from users.",
                    "projectCode": "http://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2016/AcceptedProjects/JOSM_core"
                },
                {
                    "title": "Visual Lane Editor for iD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6418365304274944/",
                    "content": "This proposal seeks to add a visual lane editor to iD. This lane editor must fit in 350px wide side pane of the editor and should be similar to the restrictions editor in terms of functionality and UI. The lane editor should be context sensitive and should automatically get invoked whenever a user selects a highway. It should also provide a simple and intuitive way to add or remove lanes, adjust the type of lanes (eg. forward/ reverse, turn left, right and common conditional lanes like ‘bus’ or ‘HOV’.  It should also be able to interpret the existing OSM data for the lane and must conform to the guidelines established by OSM.",
                    "projectCode": "https://www.openstreetmap.org/user/kepta/diary/39327"
                }
            ],
            "techStack": [
                "postgis",
                "java",
                "ruby",
                "javascript",
                "opengl"
            ]
        },
        {
            "title": "openSUSE",
            "orgLink": "https://www.opensuse.org/",
            "projects": [
                {
                    "title": "Alternatives YaST Module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5619722846470144/",
                    "content": "Most of the GNU/Linux distributions have a GUI for managing update-alternatives. In this proposal, I suggest to develop an Alternatives YaST Module to make easier the system configuration and enhance the user experience.",
                    "projectCode": "https://gist.github.com/jyeray/21893727ce176357e1f01d9067a223b6"
                },
                {
                    "title": "Enhance visitor experience of OSEM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4765780805681152/",
                    "content": "The schedule of Events in OSEM would be the main part of the project. The admin interface to build the schedule page is a simple javascript which does not look very nice, is not integrated in the page, is not mobile friendly and has other issues. Also it would be good to have a schedule proposal page so that administrators can iterate before deciding which version of a schedule to  publish (openSUSE/osem#18). Allowing an individual user to build their own schedule for the conference is another feature that would improve user experience (openSUSE/osem#587).Getting feedback from different types of users (organizers, speakers, visitors) who have participated in the conference is a desirable feature for this project (openSUSE/osem#549).The splash page can also be improved. In its program section only the tracks and a links to the schedule are shown. Some events could be shown (openSUSE/osem#400), for example the ones that are taking place now, although other alternatives could be considered.",
                    "projectCode": "https://github.com/openSUSE/osem/commits?author=Ana06"
                },
                {
                    "title": "Implementing Ticket payment feature for OSEM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5020625911414784/",
                    "content": "OSEM is an event management app tailored to Free Software Conferences. OSEM already has a feature to sell conference tickets to its attendees. At the moment the user has to buy the ticket online and pay on arrival at the conference. OSEM currently lacks the ability for a user to pay for its tickets as per their convenience. In this project, we aim to fill this gap in functionality by adding online ticket payment feature. This will improve user experience by making the ticket purchase workflow smoother.",
                    "projectCode": "https://rishabhstr.wordpress.com/2016/08/14/gsoc-16-last-week/"
                },
                {
                    "title": "Improve One-Click Installer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6418157266796544/",
                    "content": "This project aims to create a version of the QT based one-click installer with much improved user interface which is easier to use, gives more information and looks nicer than the current version.",
                    "projectCode": "https://github.com/openSUSE/one-click-installer/commits/master?author=shalomRachapudi"
                },
                {
                    "title": "Improve the UI of Portus",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6422685504503808/",
                    "content": "Currently, Portus has a Bootstrap based user interface. But still has some responsivity issues , specially on small screens. So, one of the focuses of this project is to ensure that users have a good experiences when using Portus in all devices.Furthermore, Portus also need some improvements, both in performance as well new features. Within these needs we have the creation of new filters, search improvements and serve assets only when used.",
                    "projectCode": "https://github.com/SUSE/Portus/commits/master?author=msfernandes"
                },
                {
                    "title": "Port Jangouts from AngularJS 1.4",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5714469825019904/",
                    "content": "Nobody knows when Angular2 is going to be released but it will be early, and all AngularJS 1.X projects should be migrated to the new version. With this proposal I will migrate the actual code of Jangouts from Angular 1.4 to Angular 2.The new version of Angular is really different from the previous version. Migrating Jangouts to the new version is necessary but this implies a lot of work. First migrate from ECMAScript 5 to TypeScript and, at the same time, update the code to the new version of Angular 2.On the other hand, during the transition a testsuite will be added.",
                    "projectCode": "http://thingsofgeek.com/gsoc2016/"
                }
            ],
            "techStack": [
                "ruby on rails",
                "angularjs",
                "docker",
                "linux",
                "ruby"
            ]
        },
        {
            "title": "Oppia Foundation",
            "orgLink": "https://github.com/oppia/oppia",
            "projects": [
                {
                    "title": "Creator Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5937639278510080/",
                    "content": "Proposal for \"Creator Dashboard\" project",
                    "projectCode": "http://526avijitgupta.github.io/google-summer-of-code-16-with-oppia/"
                }
            ],
            "techStack": [
                "javascript",
                "app engine",
                "python",
                "css",
                "angularjs"
            ]
        },
        {
            "title": "Orange – Data Mining Fruitful & Fun",
            "orgLink": "http://orange.biolab.si",
            "projects": [
                {
                    "title": "Orange Add-on: Educational Series",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5916179205980160/",
                    "content": "Our idea is to implement several educational widgets which will be connected in Orange add-on. This widgets will be used for a demonstration of several key data mining and machine learning procedures in a classroom. The widgets will be useful for beginners to understand the inner working of key algorithms in the data mining and for teachers to be able to visually explain various methods.",
                    "projectCode": "https://github.com/biolab/orange3/wiki/GSoC-Contributions#orange-add-on-educational-series"
                },
                {
                    "title": "Orange.data.Table to pandas migration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6447812673798144/",
                    "content": "This project is concerned with migrating Orange.data.Table to pandas. This follows the current trend of the programming community of using pandas as the underlying data manipulation API for statistics and machine learning in Python. It is an API modernization and partial redesign and pays off a lot of technical debt to enable easier extensibility, more flexibility, and less maintenance.",
                    "projectCode": "https://github.com/biolab/orange3/wiki/GSoC-Contributions#porting-table-to-pandas-dataframe"
                },
                {
                    "title": "Recommender Systems (Add-on)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6696085942697984/",
                    "content": "Recommender systems are a crucial component in competitive retail services such Amazon, Netflix or Google. This success is partly due to Collaborative filtering (CF) approaches, which use known user ratings of items to predict user preferences in item selection. Here, an efficient implementation of an add-on for Orange3 is proposed in order to include support for scalable collaborative filtering solutions applied in large recommender systems.",
                    "projectCode": "https://github.com/biolab/orange3-recommendation/commits?author=salvacarrion"
                },
                {
                    "title": "Rule induction (CN2)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5366303401443328/",
                    "content": "Rule induction from examples is recognised as a fundamental component of many machine learning systems. We propose to implement supervised rule induction algorithms and rule-based classification methods, established on a more general framework of replaceable individual components that can be fine-tuned to specific needs. For this purpose, the separate-and-conquer (also covering) strategy will be purposed.The addition to the Orange software suite should benefit both novice and expert users looking to advance their knowledge in a particular area of study through a better understanding of given predictions and underlying argumentation.",
                    "projectCode": "https://github.com/biolab/orange3/wiki/GSoC-Contributions#rule-induction-cn2"
                },
                {
                    "title": "Text Mining Add On",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5166875453423616/",
                    "content": "Extend existing add-on by adding/improving widgets.",
                    "projectCode": "https://github.com/biolab/orange3/wiki/GSoC-Contributions#orange-add-on-text-mining"
                }
            ],
            "techStack": [
                "python",
                "cython",
                "qt",
                "machine learning"
            ]
        },
        {
            "title": "OSGeo - The Open Source Geospatial Foundation",
            "orgLink": "http://osgeo.org",
            "projects": [
                {
                    "title": "A complete photogrammetric OSSIM tool for automatic DSMs generation using multi-view optical and SAR images",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4999444474888192/",
                    "content": "My project proposal concerns the improvement and the implementation of new functionalities for the OSSIM plug-in that I developed in the last two years in the framework of the 2014 and 2015 GSoC programs.I was thinking, first of all, to finalize and consolidate all the work done so far, specifically, to:The main aim would then be to implement a processing tool able to merge various DSMs resulting from different pairs or triplets, acquired with different sensors or in different period in times. This is particular useful for SAR images for which usually you've got a stack of images over the same area.In particular, the idea is to create a new function able to generate a mask for exploiting only the best areas in the DSMs merging phase. Specifically, in SAR images lay-over and fore-shortening areas would be automatically detected in the input images; a mask can hence be generated and applied to the corresponding DSM in order to cross out those pixels not \"good\" and replace them with pixels more reliable coming from other DSMs.",
                    "projectCode": "https://github.com/martidi/opencv_dsm/tree/imageStack"
                },
                {
                    "title": "Add tests and educational games support to gvSIG Educa.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4670449980014592/",
                    "content": "The main idea behind this project is to develop addons which allows to create/play tests and educational games. Also generate documentation specially oriented to users without any programming knowledge.The code will be mainly developed in Jython, an implementation of the Python programming language written in Java, through the scripting module of the gvSIG desktop 2.x branch.The developed tools will be used in geography and maps learning.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2016-August/003521.html"
                },
                {
                    "title": "Android istSOS client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4529712491659264/",
                    "content": "Firstly, the aim of the project is to develop an Android App for the istSOS project. In order to achieve that objective, a main goal will be to develop an easy-to-use library in Java based on the istSOS, suitable for Android development. This way, developers can create and customize their own apps depending on the needs of their projects. As it is essential for users to access in real time current and historic sensor data the application will show sensors location, metadata, observed properties, data visualization trough plots and infographics, alerts and notifications, features provided by the application's main core functionality.",
                    "projectCode": "https://masterflorin.github.io/gsoc16-istsos/"
                },
                {
                    "title": "Bringing pyModis to the web through ZOO-Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5493393094344704/",
                    "content": "The pyModis project has been developed and used to work with MODIS data, it provides wxPython user interfaces which are able to download and process data using pyModis scripts. pyModis depends on a desktop graphical user interface which does not make it directly usable from a web application. The idea of this GSoC proposal is to bring pyModis to the web by publishing Python Web Processing Services using the ZOO-Project technology accessible through a minimal web application.\nAn idea which can be implemented for the future, based on this initial work, include the creation of new services by combining pyModis, GRASS, OTB and SAGA-GIS services.",
                    "projectCode": "http://www.geo-nred.nu.ac.th/zoo-pymodis"
                },
                {
                    "title": "Complete basic cartography suite in GRASS GIS wxGUI Map Display",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5062270988058624/",
                    "content": "Currently a GRASS GIS user is forced to use Cartographic Composer or use another software (e.g. QGIS) to create hard copy map outputs with all features. The aim of this project is to develop complete basic cartography suite for the wxGUI Map Display so it could serve for most of the science publications. The goal is not to substitute QGIS Cart Comp or similar, it's just about completing all features so the cartography scripting abilities of GRASS GIS and its potential can be fully used.GRASS GIS contains some modules which would be good to implement into cartography suite for wxGUI Map Display. There are d.barscale, d.graph, d.histogram, d.legend and many other d.* commands to use. There are bugs in some of them and it needs to be fixed(options for map window size). Then there are some modules which need to be enhanced. Legend background is currently transparent -> add an options for opacity, border and corner settings. It's possible to set number of breaks/ticks for legend but values are not rounded -> add an option for manual brakes/ticks, add an option for automatic breaks/ticks (every ten, hundred)",
                    "projectCode": "https://github.com/lazaa32/SoC16/commits"
                },
                {
                    "title": "Development of a model for woody debris flooding hazard in gvSIG",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4549839245279232/",
                    "content": "In forested mountain landscapes wood can significantly increment the total flow volume during a flooding event. The presence of large wood on river sides has positive effects on hydrogeomorphological diversity of habitats and represents a source of organic nutrients in the water. Therefore a compromise should be reached in the management of vegetation (within river corridors and on connected unstable slopes) aiming to reduce flood hazard while preserving its function of large wood supply for river ecosystems.\nThe idea of the project is to develop in gvSIG a model for the evaluation of the hazard derived from large wood transportation during flooding events. The simplified GIS model should consider:",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2016-August/003508.html"
                },
                {
                    "title": "Flow Algorithms for pgRouting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6192757919973376/",
                    "content": "This project aims to add functionality in order to solve the maximum flow problem in pgRouting.A flow network is a directed graph where each edge has a capacity and a flow. The flow through an edge must not exceed the capacity of the edge. Additionally, the incoming and outgoing flow of a node must be equal except the for source which only has outgoing flow, and the destination(sink) which only has incoming flow.Maximum flow algorithms route one possible maximum flow through the graph and have several other applications in network routing, delivery & transportation, circulation and more.",
                    "projectCode": "https://github.com/pgRouting/pgrouting/wiki/GSoC-2016-Flow"
                },
                {
                    "title": "Implementation of a framework which supports addition of contraction techniques for pgRouting.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5261601225572352/",
                    "content": "Contraction is a technique used to speed up shortest-path computation by first creating contracted versions of the network. There are different ways of contracting a network. I am proposing a framework which supports the addition of new contraction techniques, and two contraction algorithms: dead end contraction and linear contraction.\nInstallation of the framework together with the dead end contraction and also the implementation of linear contraction which will be used to refine the framework is intended to be completed during the GSoC.",
                    "projectCode": "https://github.com/pgRouting/pgrouting/wiki/GSoC-2016-Contraction"
                },
                {
                    "title": "Implementing WPS for Geopaparazzi field data collection tool using ZOO-Project: Simplifying integration of field data and GIS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4763907394633728/",
                    "content": "JGrasstools is a library which contains a variety of geoprocessing functionalities. It has been used for many GIS framework to provide a comprehensive Java solution for GIS packages for data access, editing, visualization and analysis. On the other hand Geopaparazzi is a standalone mobile app for field data collection. It enables user to collect georeferenced field data. Idea of this proposal is to enable the JGrasstools library to serve as geoprocessing engine using the WPS standard implemented in the ZOO-Project (http://zoo-project.org/). The main task in this proposal would the preparation and conversion of field data from geopaparazzi projects to Web-GIS platform enabling data analysis and sharing. The project will demonstrate and document the methods to deploy WPS using JGrasstools as the geoprocessing engine. As a future possibility, the project would facilitate Web-GIS platform with rich set functionality especially in hydrology and water management needs.  The results of this project will be useful for deploying Web application for Monitoring and Evaluation (M&E) needs.",
                    "projectCode": "https://github.com/niroshansb/GSoC2016/wiki"
                },
                {
                    "title": "Introduce Triangulated Surface, Polyhedral Surface and Triangle API in the OGRGeometry core and implement their support in OGR drivers for GDAL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6202171414544384/",
                    "content": "The current OGR core doesn't include three geometries according to OGC standards - Triangular Irregular Networks, Polyhedral Surfaces and Triangles. The proposal addresses the addition of  the same in OGR core as well as the introduction of support in existing OGR drivers for these geometries.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2016-August/003506.html"
                },
                {
                    "title": "istSOS Web API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6449630787141632/",
                    "content": "Implementation of an easy to use framework that will offer to the final user the ability of building feature-rich web widget that will be easily embeddable into existing web sites. Developers used to implement everything from scratch, but with istSOS Web API, development would be more efficient and simplified.",
                    "projectCode": "https://webpractice-lukag.github.io/istSOS-Web-API/"
                },
                {
                    "title": "NASA Web World Wind - Multidimensional Visualization Tool for Environmental Variables",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5667947544576000/",
                    "content": "The idea behind this project is to create an application using Nasa Web World Wind to show metadata about environmental variables in more than three dimensions. \nThe model I'd like to implement to present 3D data is a Voxel model. Each voxel has three dimensions, that will be possible to customize with the interested metadata, but also more information can be shown thanks to Web World Wind capabilities. Coloring each Voxel might present another metadata and additionally creating an animation in time gives the opportunity to introduce a further variable. \n Users will be able to interact with the visualization, customizing the metadata on the Voxel and filtering data according to specific settings. \n As input data, I'm considering telecommunication data from \"Telecom Italia Big Data Challenge 2015\". \nMy idea is to create first the visualization environment and further import the data in a database to allow users to query the database for particular data. \nMoreover, depending on the time also would be interesting to allow users to import their own data set in a specific format to share the view on a specific globe with other people.",
                    "projectCode": "https://github.com/GabrielePrestifilippo/MuViAS"
                },
                {
                    "title": "OGC protocols support within OL3-Google-Maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4915736099160064/",
                    "content": "This library allows users to add Google Maps layers to an OpenLayers v3 map. To do this, the library replicates the OpenLayers objects to the Google Maps map using the Google Maps API. This makes it very easy for users to use a Google Maps basemap while still working with the OL3 syntax.The objectives for this summer is to integrate major features to the library such as support for WMS and TMS layers while integrating a few tools that will make future contributions to the library easier for everyone.",
                    "projectCode": "http://lists.osgeo.org/pipermail/soc/2016-August/003479.html"
                },
                {
                    "title": "One bus Away Quick start",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6519999531319296/",
                    "content": "Develop a quick start version to the Transit Time application. Currently the set up of transtime is very complex with little available documentation this creates the first barrier to entry preventing adoption and lowering ease of use, my goal is to create a QuickStart version of the TransitTime application similar to the current OneBusAway's Quickstart along with automating historical updating to allow better predictions of of route possible using kalman filters",
                    "projectCode": "https://groups.google.com/forum/#!topic/onebusaway-developers/8oj_NZmH1vg"
                },
                {
                    "title": "OSGeo GDAL DWG support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4638615413981184/",
                    "content": "The objective is to extend GDAL/OGR supported formats with DWG, allowing to read geometries from it. It is going to be reached by writing a new DWG driver, without any third-party dependencies.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2016-August/003499.html"
                },
                {
                    "title": "PyQt implementation of GUI forms generated automatically from XML",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5131196623224832/",
                    "content": "GUI forms (module dialogs) are now automatically generated from XML into wxPython. My idea is to create code that is generating the same code into more powerful Qt. It is possible also to include calling wxPython  modules from the PyQt core.",
                    "projectCode": "https://github.com/pesekon2/GRASS-Qt-based-GUI/commits/"
                },
                {
                    "title": "QGIS Styles, Symbols, and SVG Markers Sharing Repository",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5981954214199296/",
                    "content": "This project will focus on making styles (.qml), symbols definition (.xml), and SVG markers sharing possible through web services that later can be accessed and used in QGIS. The work includes:",
                    "projectCode": "http://www.akbargumbira.com/slide_gsoc2016/"
                },
                {
                    "title": "VistSOS: the istSOS Data Visualization Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6347788522618880/",
                    "content": "In order to extent the available characteristic offered by the istSOS server, I propose the use of an open source Javascript library for the implementation of VistSOS: the istSOS Data Visualization Framework. The proposed solution shall allow users of the istSOS ecosystem to configure, customize and include a wide set of chart, bar, grid and map visualization types in their websites. The framework will offer complete support for the connection of the visualization widgets with multiple data-exchange formats like CSV, TSV and JSON. Considering the real-time nature of the data sources the framework will support the generation of real-time visualization widgets specially crafted to improve the readiness to display data of this kind. The framework shall be implemented with robustness, reliability and customization as its core development principles. Recommended practices for software development like Version Control Systems use and continous testing will be followed.",
                    "projectCode": "https://felipe07.github.io/VistSOS-1/"
                },
                {
                    "title": "Web-based administration & process management for PyWPS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5340035113025536/",
                    "content": "PyWPS is an implementation of OGC WPS standard on the server side, written in Python programming language. Since it's perfectly designed for programs and machines, humans need a user-friendly tool to view and control all processes.PyWPS now works in the way, that you can send HTTP requests with an XML file as an input and you will get an output with an XML file or data immediately or after some time. The problem is, people cannot control and manage them.The project idea aims to create a web application, where users and administrators control and manage all processes. I will use existing Flask application to extend functions and interface to be easily usable for people. The interface, with modern web development approach and use of multiprocessing Python library, is going to allow people add, pause, remove, view progress.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2016-August/003523.html"
                },
                {
                    "title": "WEBGRASS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5386472567865344/",
                    "content": "This idea will focus on the development of web based GUI for the Grass “WebGrass” where people can use Grass modules through a web browser without actually installing GRASS. GRASS will be running on a server. The user interface will be built using wt web toolkit. Wt provides C++ API for developing web widgets. Wt is a page based framework. This means the web application written in Wt has are close to be alike desktop application. Wt’s Singal slot mechanism inspired from Qt allows to connect events from Wt widget to javascript calls. Also this can be the first step in making a Enterprise wide FOSS4G tool where GRASS is running on the server and user can use it with any client, processing being done on the server. In future, a cloud based application deployment can be done.",
                    "projectCode": "https://trac.osgeo.org/grass/wiki/GSoC/2016/WebGrass"
                }
            ],
            "techStack": [
                "python",
                "sql",
                "c",
                "ogc standards",
                "c++"
            ]
        },
        {
            "title": "OSU Open Source Lab",
            "orgLink": "http://osuosl.org",
            "projects": [
                {
                    "title": "Ruby Port of Pymesync",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5167500102729728/",
                    "content": "TimeSync is the OSU Open Source Lab's time tracking system; a project that allows users to track their time spent on various projects and activities irrespective of the programming language and tools used by the project.\nThe goal of this project will be to create ruby port of Pymesync ( a python module to interface with the TimeSync API ) which ultimately would serve as a Ruby Gem with the same functionality as that of pymesync. I will also create a ruby application from scratch using the Sinatra Framework that will use this ruby gem for serving the data. This ruby application application will have several features that provide visualizations for the user.",
                    "projectCode": "https://drive.google.com/drive/folders/0B8jYWzvMJRTrWTU1ejZ4RTRXY2M"
                }
            ],
            "techStack": [
                "python",
                "rest",
                "javascript",
                "ruby"
            ]
        },
        {
            "title": "OWASP Foundation",
            "orgLink": "https://www.owasp.org",
            "projects": [
                {
                    "title": "Educational Plugin for Seraphimdroid",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6495064293376000/",
                    "content": "Educating an amateur or an avid Android user with the threats they can face on their Droid and protecting it by building a Knowledge Base for Seraphimdroid providing User with Articles based on Security and Threat Detection.",
                    "projectCode": "https://drive.google.com/drive/folders/0B-lUWKmJuey_Ql9kbjZNTUoyMk0?usp=sharing"
                },
                {
                    "title": "Extending language support and adding OWASP Top 10 challenges to Container Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5679285452931072/",
                    "content": "The project will implement the following features:Extended language support for container Engine: The current version of container engine can handle only PHP based challenges. With this project the container engine will be extending support to add challenges based on:OWASP Top 10 challenges on other platforms: After adding the support for Node.js and Ruby on Rails, new challenges will be added to container engine which covers OWASP top 10 attacks on both scripting languages along with PHP.Extending the ability to upload custom containers: The ability to upload custom containers to hackademic by challenge authors will be introduced to hackademic so that authors can have a flexible solution to create awesome challenges.",
                    "projectCode": "https://github.com/a0xnirudh/hackademic/commits/a0xnirudh/docker?author=a0xnirudh"
                },
                {
                    "title": "Machine Learning Trend Monitoring Analysis Engine for AppSensor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5197510381404160/",
                    "content": "Over the recent years, machine learning algorithms have been playing an important role in searching for patterns in data and developing innovative ways to utilize the information to solve many types of problems in the world. AppSensor project defines a conceptual framework that provides a backbone to implementing application intrusion detection and automated response. At the moment, it only supports a basic policy driven analysis and this project aims to implement a machine learning based analysis engine to make AppSensor more robust and be able to analyze a wider variety of problems/events.",
                    "projectCode": "https://timothy22000.github.io/event/gsoc-work-report.html"
                },
                {
                    "title": "OWASP OWTF - Health Monitor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4891314378244096/",
                    "content": "OWASP OWTF is a great tool which automates the manual and non-creative work of penetration testing. It combines all required  tools and features but lacks the monitor module which can constantly check its status and its effects on the system.This project will implement monitoring module, which will be constantly reviewing system resources and  OWTF status. Health monitor will be completely detached from OWTF and will interact using the ReST API. It will ensure a method to overcome the situation and the alert to the user when threshold value is reached. It will take necessary decisions based on the configurations set by the user/default.The module will have a console and web UI to monitor and configure the module.",
                    "projectCode": "https://docs.google.com/document/d/1UFQITQHzSWze5FdXxhfengckfDP1ZeOBdx0gGHdhbMY"
                },
                {
                    "title": "OWASP ZSC - Shellcode for Windows and Code Obfuscation Modules",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5969824152813568/",
                    "content": "OWASP ZSC tool currently does not support generation of Shellcodes for Windows and it also has only few obfuscation modules. The two primary goals of this project are: 1)  Develop Shellcode for Windows 2) Add new code obfuscation modules for different languages like python, javascript, ruby, etc.",
                    "projectCode": "http://pratikpatelp.blogspot.in/2016/08/gsoc-work-submission.html"
                }
            ],
            "techStack": [
                "python",
                "php",
                "javascript",
                "java",
                "html"
            ]
        },
        {
            "title": "ownCloud",
            "orgLink": "https://owncloud.org",
            "projects": [
                {
                    "title": "ownCloud App for metadata extraction from Images and Introducing Photo Calendar in Gallery",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5700479237488640/",
                    "content": "Project Idea: Create an ownCloud app which provides CRUD access to the metadata stored in images.Images can contain extra information embedded in the header (#550). The goal is to extract that information at upload time and to store it in the database so that it can be used later. The aim of this project is to use the extracted information for implementing Sorting by different attributes(such as date taken, color, size, person) and also for creating multiple views in Gallery. The different views that I have thought of are:",
                    "projectCode": "https://github.com/interfasys/mediametadata"
                },
                {
                    "title": "ownCloud Demo Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5532391397392384/",
                    "content": "Improve ownCloud Community services for performance, security and monitoring for development purposes. This includes a move to a Kubernetes based container system using one container per user for an optimal and privacy aware demo experience.",
                    "projectCode": "https://s.stp-ip.net/GSoC16"
                }
            ],
            "techStack": [
                "javascript",
                "php",
                "css",
                "html",
                "sql"
            ]
        },
        {
            "title": "P2PSP.org",
            "orgLink": "http://www.p2psp.org/",
            "projects": [
                {
                    "title": "GoPro Broadcasting Using P2PSP On Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5614166500966400/",
                    "content": "The currently available official GoPro app does not allow the user to broadcast the live stream, except via the Periscope app. In my project, I propose to create an Android App that allows the user to broadcast the live stream on the Internet (YouTube/P2PSP).",
                    "projectCode": "https://github.com/sravan953/gopro"
                },
                {
                    "title": "Implementation of Endpoint Masquerading Set of Rules",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6040972701990912/",
                    "content": "Peer-to-peer protocols allow for powerful utilization of network infrastructure without the cost of a system of servers. P2PSP strives to deliver high quality streaming from a central source by taking advantage of mutual data sharing among peers tuned in to the same stream. NAT (network address translation) routers and some security-motivated features found in them create problems for effective communication in a p2p protocol. This project aims to solve the problem of communication among two or more peers found behind the same NAT router (in other words the same private router)",
                    "projectCode": "https://github.com/kshi219/core/wiki"
                }
            ],
            "techStack": [
                "python",
                "c++",
                "webrtc",
                "android",
                "ios"
            ]
        },
        {
            "title": "Peragro",
            "orgLink": "http://www.peragro.org/",
            "projects": [],
            "techStack": [
                "python",
                "blender",
                "javascript",
                "celery",
                "django"
            ]
        },
        {
            "title": "Performance Co-Pilot",
            "orgLink": "http://pcp.io",
            "projects": [
                {
                    "title": "Implementation of the PCP instrumentation API in golang",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5093214348378112/",
                    "content": "I propose the implementation of an idiomatic golang package that will allow applications written in golang to instrument performance simply by making the appropriate function calls exported by the package. The package’s implementation is to be based on both libpcp_mmv and parfait, and although built initially for PCP, it will be extensible with appropriate interfaces, so someone else can implement the said interfaces to implement instrumentation for another platform.",
                    "projectCode": "https://medium.com/@suyash93/google-summer-of-code-2016-179a6df46d53"
                },
                {
                    "title": "PCP versions of console tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6329777845698560/",
                    "content": "Performance Co-Pilot is a framework which provides measurement for system performance and analysis. There are also several widely used simple tools for monitoring system information. These tools do not consider the historical data and thus fail to analyze such information. Also these tools monitor only for the local processes which restricts them from using on remote servers. Performance Co-Pilot provides rich APIs to access historical information about local as well as remote processes. The project proposes to build the PCP Clients for reading archive as well as remote processes data using PCP APIs to make some of the popular monitoring commands such as htop, pidstat, mpstat and nfstat. The proposal also discusses the solution and its implementation along with the time line.",
                    "projectCode": "https://sitaramshelke.me/gsoc16/"
                }
            ],
            "techStack": [
                "golang",
                "ruby",
                "java",
                "linux kernel",
                "javascript"
            ]
        },
        {
            "title": "Physical Web Project",
            "orgLink": "http://physical-web-project.github.io/",
            "projects": [
                {
                    "title": "Bring Your Own Pois +  Android Controller Upgrade",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5694641034756096/",
                    "content": "Liquid Galaxy needs a bluetooth scanner which will interact with Physical Web (PW) Beacon. Once the scanner has found this PW  beacon it will interact with the Liquid Galaxy (LG) to make it know there is someone who wants to deploy its POIs, so the LG will wait for confirmation. This LG App will have an  easy interface that will have a connect button, a confirmation one (for security reason). Another button will be added for a restoration of the previous POIs after a visit.Once the action is confirmed the POIs will be deployed in the LG and the user will be able to see them in the screens.In order to build the user POIs set, I will develop an Android App where the user can define its own POIs. This information will be stored in the user Google Drive account and the URL will be the one the PW beacon will advertise.So when the scanner detects the PW beacon and confirms the action, the system will connect to this URL and will download the POIs stored in it.To sum up, this project will have 2 Android Apps: one to be running on LG (connection, interaction and restoration of user POIS) and another one for the visitor mobile (config and customization of own POIS and PW Beacon).",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/Liquid-Galaxy-POIs-Controller/blob/master/GSOC16.md"
                },
                {
                    "title": "IBRI - Interactive Beacon Rescue Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6184460043157504/",
                    "content": "This project is proposing of a civil security solution using physical web as main technology and drones (uav) to find missing people. The way to find them is by using multiple unattended aerial vehicles (as known as drone). The main idea from this project is to find a missing person scanning an area with one or more drones who will be receiving the physical web beacon Bluetooth signal to determinate the gps position from it in case of emergency.",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/IBRI/blob/master/GSOC16.md"
                },
                {
                    "title": "Smart Coffee Machine with proximity pairing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4574579330646016/",
                    "content": "This project aims to demonstrate the new capabilities of the Bluetooth Web API and Physical Web to easily connect and configure a smart device, using Bluetooth Low Energy and a smartphone, with no need to download and install a specific Android/iOS application before.The scenario will bring forward benefits both for the end users and smart devices manufacturers :",
                    "projectCode": "https://github.com/alexisduque/pw-coffee-machine"
                }
            ],
            "techStack": [
                "internet of things",
                "beacons",
                "python",
                "arduino"
            ]
        },
        {
            "title": "PLASMA-UMass",
            "orgLink": "http://plasma.cs.umass.edu",
            "projects": [
                {
                    "title": "[Browsix] Init system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5164267334533120/",
                    "content": "Most of the modern web applications require a remote server hosting microservices.\nBrowsix lets the developer, among all the other things, get rid of that 'heavy' dependency, by executing needed processes in the client's browser instead!I propose to help Browsix in reaching that goal by developing a fast and concurrent init system with a focus on dependency-handling. It will allow an easy setup of the environment needed for service to execute properly.\nOne of important design choices would be providing a familiar interface for the user and so the service specification will be done using Systemd unit-files. The init system developed is also going to be fully capable of booting a system natively.",
                    "projectCode": "https://gist.github.com/rvolosatovs/ebb776d43b9d7b0bfb1c4aac2ac3bf21"
                }
            ],
            "techStack": [
                "javascript",
                "c/c++",
                "scala",
                "go"
            ]
        },
        {
            "title": "Plone Foundation",
            "orgLink": "https://plone.org/",
            "projects": [
                {
                    "title": "eBook Content Export",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6028139876581376/",
                    "content": "ftw.book add-on is aimed to help users to manage their content as a form of \"Book\", and provide a way for users to get a hard-copy of documents.The project idea aims at:The expected result should be an add-on fit to Plone 5,with more classes and extended functionality.",
                    "projectCode": "http://jensenjiang.github.io/2016/08/20/GSoC-2016-product/"
                },
                {
                    "title": "Improving collective.easyforms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4578599420035072/",
                    "content": "Plone have a great history with online forms. PFG works really well for creating online forms and editing them through the web. PFG is based mainly on archetype content type. So the project mainly focuses on improving the collective.easyforms (forms for plone with dexterity content types) to make it compatible to work for Plone 5 and provide full test coverage and improve the tests. Also the feature to convert the content type of forms from archetype to dexterity.",
                    "projectCode": "http://googlingsummer.blogspot.in/2016/08/summarizing-summer.html"
                },
                {
                    "title": "New Theme Pack",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5233951836733440/",
                    "content": "Plone is the premier Python-based CMS which is widely used by Universities, Corporations, Agencies and also for personal projects. Hence its themes need to keep up with the design trends in web world.\nThe project requires the participant to complete and deliver at least 6 zip files that contain working single-page HTML mock-ups that demonstrate the core Plone features( with a support for portlets, navigation bar, logo, etc) by the end of GSOC 2016.",
                    "projectCode": "https://medium.com/@vicode_in/gsoc16-9ecbf5dac3c6#.nraospr9g"
                }
            ],
            "techStack": [
                "python",
                "zope",
                "javascript",
                "rest",
                "nosql"
            ]
        },
        {
            "title": "Portland State University",
            "orgLink": "http://wiki.cs.pdx.edu/summer",
            "projects": [
                {
                    "title": "Amazon Echo Recipe Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4717969498177536/",
                    "content": "As someone who loves to cook, I wish that the Amazon Echo could provide recipes while cooking so this summer I'll be working to integrate an open source recipe database to create a new Amazon Echo skill. This new skill would allow a user to search for a desired recipe and then hear each ingredient, quantity, and step through the Echo.",
                    "projectCode": "https://github.com/hpedskis/google-summer-of-code"
                },
                {
                    "title": "Displaying SUBSURFACE features in the virtual world using NASA's WorldWind",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6246763644059648/",
                    "content": "Virtual worlds like Google Earth or NASA WorldWind do not show subsurface features with negative elevation. This projects aims to be a proof-of-concept for how such a system would use opacity and translucency rendered in a virtual world to accommodate negatively elevated features.\nNASA WorldWind is an open source Java project and is the perfect candidate for this project.\nSpecifically one or two data sets of different scales and regional extents that have negative elevation values will be taken and plotted in the subsurface. The algorithm will continuously modify the opacity of the surface in order to distinguish these features clearly.",
                    "projectCode": "http://devansh-psu-2016.blogspot.in/"
                },
                {
                    "title": "GIFScript: A tool for scripting technical GIF animations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5855207313375232/",
                    "content": "Graphical animations are powerful tools for delivering ideas to an audience quickly and effectively. Very simple animations can often efficiently communicate abstract ideas, especially in technical fields. However, with many of the currently available tools, designing even simple animations can involve heavy design loads which technically inclined creators are not always eager to carry. This project aims to solve this issue by providing simple tools to create expressive GIFs by writing small scripts. The scripting language provides means to describe technical animations by typing code, instead of relying on click-and-drag interfaces of most design programs, which is in fact more practical when the animation we intend to create involves objects describable mathematically or programmatically.\nThe core tool will thus be a small program which takes a script written by the user and outputs the GIF animation described in the script.",
                    "projectCode": "https://github.com/abyardim/GIFScript/releases/tag/v1.0.0"
                },
                {
                    "title": "Python Interface for VLFeat Library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5655793323999232/",
                    "content": "VLFeat Library implements popular computer vision algorithms specialising in image understanding and local features extraction and matching. \nAlgorithms include Fisher Vector, VLAD, SIFT, MSER, k-means, hierarchical k-means, agglomerative information bottleneck, SLIC superpixels, quick shift superpixels, large scale SVM training, and many others. \nIt is written in C, with interface in MATLAB.\nThough there exists Pyvlfeat, it does not contain all the functions. That’s why, I decided to improve it as a GSOC project under Portland State University.\nA Python Interface will make this robust library accessible to the open source computer vision community as a replacement to proprietary tools like MATLAB.The Matlab version of VLFeat is open source. The project is well documented too. So It’ll help me to develop at much faster pace.",
                    "projectCode": "https://gsoc2016.wordpress.com/2016/08/19/cythonpython-wrapper-for-vlfeat-library-cyvlfeat-project-status/"
                },
                {
                    "title": "ruby_curry : A compiler implementation for Curry built in Ruby",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5218342314967040/",
                    "content": "Curry is a functional logic programming language that combines the most appealing features of the functional and logic programming paradigms. There are various implementations for Curry such as PAKCS, mcc and KiCS2 which differ in the target language used for object code generation. In this project, we propose to develop a compiler of Curry in which Ruby is the target language. Ruby is not efficient but simplifies the compiler for its high-level features including dynamic typing and reflection.  The end-product of this project will be an ideal tool that can be used by students and researchers to understand compilation techniques for functional logic programming languages, and to experiment with and prototype specific aspects of the language and the compiler, in particular parallelism, security, optimizations and language extensions.",
                    "projectCode": "https://github.com/karthiksenthil/ruby_curry/commits/master?author=karthiksenthil"
                },
                {
                    "title": "Variable Segment Length Bitmap Compression",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6165966719287296/",
                    "content": "Last summer under Google Summer of Code, I coded the commonly used WAH (Word-Aligned Hybrid) compression algorithm in C under the direction of David Chiu.This summer, I will be coding a different compression algorithm with significant promise. Unlike WAH which has a constant compression length, VAL (Variable-Aligned Length) compression varies depending on the column being compressed. By allowing different compression lengths, VAL can anticipate noisier columns and can compress them more efficiently than WAH can.VAL currently only exists coded in Java and can be optimized if extended into C. Then, if run in parallel, VAL would yield even greater benefits. Over the course of the summer, I intend to implement VAL in C and allow for parallelized compression and querying as well to demonstrate the benefits of VAL.",
                    "projectCode": "https://github.com/aingerson/GSoC_2016_Compressor"
                }
            ],
            "techStack": [
                "open hardware",
                "language-agnostic"
            ]
        },
        {
            "title": "PRISM Model Checker",
            "orgLink": "http://www.prismmodelchecker.org",
            "projects": [
                {
                    "title": "Enhanced Graph Plotting and General GUI Improvements in Prism",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6333495408328704/",
                    "content": "Prism is a tool for probabilistic model checking. It is categorized as a formal verification system tool for the modelling and analysis of systems that exhibit probabilistic behavior.  Prism allows its users to plot the results of its various experiments graphically, but currently only a small range of graphs is supported. This proposal addresses the extension of the graphing capabilities of Prism by adding the support of many new 2D and 3D plots. This feature would enable the users of Prism to easily grasp and compare the results of the experiments run on this tool without having to go through the text output results. This project also addresses the enhancement of the general GUI of Prism. This would focus on making this tool more flexible and usable.",
                    "projectCode": "https://github.com/musaeed/Prism-gsoc16"
                },
                {
                    "title": "Enhanced Strategy Functionality for PRISM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6584081248681984/",
                    "content": "Prism is a probabilistic model checker, by which, the users can model and analyse real time systems. Prism provides its own modelling language. A user can model a system using this language, see a graphical representation of the model and check the behaviour of the model against the optimal strategy (adversary).The aim of the project is to enhance the support for strategies, which will enable more flexible/complex types of strategies/checks which are currently not supported. It will also allow the users to visualize the behaviour of the optimal adversary in a more user-friendly way, and to modify it and re-check with the model. And it will enhance the support for the features like exporting, importing and re-verification of strategies, which are already available in the tool, but not with full functionality.",
                    "projectCode": "https://drive.google.com/drive/folders/0B8ts40Bwpf-xR1d4SnE5WlZRT2s?usp=sharing"
                },
                {
                    "title": "Exact Solution Methods",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4690412182700032/",
                    "content": "Nowadays, most floating point computations are performed in double precision – with a mantissa of 53 bits. Nevertheless, depending on the application we are using, it is preferable more precision, such as double extended – 64 bits – quadruple extended – 113 bits – or even more. The main goal of this project is to research how we can achieve such arbitrary precision on PRISM – by this, we mean the user should be able to choose the precision of each calculation – in order to provide a close approximation of exact solutions.",
                    "projectCode": "https://gist.github.com/nicodelpiano/ffa503f8f1e4919c227b99a17df769f5"
                },
                {
                    "title": "Extended support for mean-payoff properties",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6728420738203648/",
                    "content": "In this project the multi-objective mean-payoff properties in Markov\ndecision process are to be added into Prism, which is a probabilistic model\nchecker. In this project the following things are done to Prism:• Multi-objective mean-payoff properties support in Markov\ndecision process is extended, namely the algorithm defined in [1] is\nplanned to be added. This should be based on the already existing MultiGain.• A conversion algorithm for f LT L (GU ) formulae to a MOMP, defined\nin [2].• The (already existing) Rabinizer for converting LTL to DTGRA, be-\ncause it heavily intersects with the conversion algorithm for f LT L (GU ) .[1] Chatterjee, Krishnendu, Zuzana Komarkova, and Jan Kretinsky. ”Uni-\nfying two views on multiple mean-payoff objectives in Markov deci-\nsion processes.” Logic in Computer Science (LICS), 2015 30th Annual\nACM/IEEE Symposium on. IEEE, 2015.[2] Forejt, V., J. Krcl, and J. Kretnsk. ”Controller synthesis for MDPS\nand frequency LTL GU (2015).” CoRR, abs/1509.04116.",
                    "projectCode": "https://drive.google.com/open?id=0ByeJC_CdRFx7Z05pVnJkTmVucFk"
                },
                {
                    "title": "Refactoring and optimizing model construction for the explicit engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4765522570772480/",
                    "content": "During the project the current model construction will be analysed in regard to performance(i.e. reachability of multiple initial states, scalability and comprehensiveness(adding support for other types of models, i.e. PTAs). Depending on the analysis, it is decided which changes in the current approach enhance the functionality/ performance/ scalability and together with the supervisor a feature list can be defined. Then the implementation of the features is conducted and additionally efficient transformation to a sparse model and full import/export of the explicit model is implemented.",
                    "projectCode": "https://drive.google.com/open?id=0B91EaefKJ46uelpGbzhGZ25KRlE"
                }
            ],
            "techStack": [
                "java",
                "c++"
            ]
        },
        {
            "title": "Public Lab",
            "orgLink": "https://publiclab.org",
            "projects": [
                {
                    "title": "Advanced Searching and Sorting Tool for publiclab.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5360925297082368/",
                    "content": "Develop a service(set of classes within the project) for searching and sorting to output advanced nested results by prioritising tags and power tags which fulfils the general search requirement of the users and detailed analysed searching of admins and directors in the system.",
                    "projectCode": "https://publiclab.org/notes/Ujitha/08-22-2016/gsoc-2016-final-work-product-of-advanced-searching-and-sorting-tool-for-publiclab-org"
                },
                {
                    "title": "Browser-based Arduino sensor data transfer using WebRTC and headphone jack",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6570406072811520/",
                    "content": "Many open data projects rely on volunteers spending time to gather data, e.g. from remotely placed sensor nodes that capture environmental parameters. Generally, the more data the better conclusions can be drawn. However, many projects suffer from having not enough volunteers and therefore collected data. This projects goal is to dramatically reduce the barrier for non-technical people to become volunteers. To achieve this goal, a serial communication via headphone socket will be established. With WebRTC the signals can be captured in a browser, making installation of addtional software unnecessary.",
                    "projectCode": "https://publiclab.org/notes/rmeister/08-23-2016/gsoc-2016-final-work-product-of-browser-based-arduino-sensor-data-transfer-using-the-headphone-jack"
                },
                {
                    "title": "Expanded Q & A System for Publiclab.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6257590988177408/",
                    "content": "For a community driven website like Publiclab.org that deals with a large number of questions there should be a proper way so that Users can ask questions as well as get answer to them, at the same time reducing redundancy and searching quickly any thoughts they have in mind. Expanded Q & A System for Publiclab.org creates a Q & A forum where Users can effectively raise their queries and get them answered while getting a rich User Experience.",
                    "projectCode": "https://publiclab.org/notes/ananyo2012/08-20-2016/gsoc-2016-final-work-product-of-expanded-q-a-system-for-publiclab-org"
                },
                {
                    "title": "Internationalization of Publiclab.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6028296374452224/",
                    "content": "Internationalization is the process of planning and implementing products and services so that they\ncan easily be adapted to specific local languages and cultures, a process called localization.\nInternationalization of Publiclab.org will help different communities around the world facing\nenvironmental justice issues to easily work and contribute in the supported language of their\nchoice and make the website universally accessible and useful.",
                    "projectCode": "https://publiclab.org/notes/jiteshxyz/08-22-2016/gsoc-2016-outcome-internationalization-of-publiclab-org"
                },
                {
                    "title": "Rich Profile tags and improving the performance of Publiclab.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6464147776602112/",
                    "content": "Implementation of various tags in profile page which improves community interaction in PublicLab.org organization and also improving the response time of profile page.Profile tags are a creative tool that lets PublicLab.org users add tags to their profile which highlights the things that describe them. Main focus of this project is to add various profile tags such as location data, role, tools, skills to user profiles which improves user base community side interaction. Improving the current Barnstar implementation by providing a new layout in profile page. In the current system, comments are displayed with image icon and description which will be refactored based on the role user possess such as admin, moderator, organizer. On the other hand as huge amount of data is rendered in the front end of the application, response time is another important factor project will focus on. I will be using agile software development method which includes iterative and incremental approachMy work can be found here: https://github.com/publiclab/plots2/commits/master?author=lalithr95",
                    "projectCode": "https://github.com/publiclab/plots2/commits/master?author=lalithr95"
                }
            ],
            "techStack": [
                "javascript",
                "ruby on rails",
                "leaflet",
                "webrtc"
            ]
        },
        {
            "title": "Python Software Foundation",
            "orgLink": "https://www.python.org/",
            "projects": [
                {
                    "title": "[scikit-learn] Addition of various enhancements to the tree module by completing stalled pull requests.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5412671599935488/",
                    "content": "Scikit-learn (as of this writing, 3/17/2015) currently has 435 opened\npull requests and 699 issues. This project is an attempt to take some of\nthe stalled work in the review pipeline in the theme of the tree\nmodule and complete them to merging quality.\nFor the full proposal, see the scikit-learn Github Wiki.",
                    "projectCode": "http://nelsonliu.me/gsoc_2016/"
                },
                {
                    "title": "A Core Datamodel for PySAL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6495090331615232/",
                    "content": "The way PySAL users interact with geographic data is directly tied to manipulating unlabeled Numpy arrays. With Pandas readily available for most users, this is tedious fait accompli for users, since the core data model for PySAL's API was designed before Pandas existed. While newer projects have attempted to extend Pandas for geographic data, those packages have difficult-to-install dependencies that make them inaccessible for many end users, and make design decisions which the author thinks are somewhat suboptimal for PySAL's use case. Therefore, I propose to specify and implement a tabular spatial data model in Python leveraging Pandas dataframes directly, rather than through subclassing. This follows in the spatialite idea that spatial data is first data, then spatial. Thus, tooling must focus on enabling spatial operations directly on Pandas dataframes by exploiting column dtype information and dispatching appropriately, instead of a subclassing approach. In the end, this project would result in a simpler data model for PySAL.",
                    "projectCode": "http://nbviewer.jupyter.org/gist/ljwolf/b960c198742eb26c335d9e32bdc7b76c?flush_cache=true"
                },
                {
                    "title": "A VTK-based UI for DIPY",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5824551178993664/",
                    "content": "The broad idea is to develop widgets from scratch over the existing DIPY elements, which allow interaction with these elements. These futuristic widgets will be built on VTK directly without using external libraries like Qt or GTK. The idea is to enhance the user experience in a unique way - by bringing interactions closer to the elements themselves.",
                    "projectCode": "http://ranveeraggarwal.com/blog/gsoc-2016-summary"
                },
                {
                    "title": "Base Class and Increased Efficiency for Equation of Motion Generators",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6660737019674624/",
                    "content": "For the project I propose working on creating a base class for the equations of motion generators in the physics module of the sympy library and add a Newton-Euler equation of motion generator. The benefits of creating a base class for equations of motion generators would include ease of adding additional equations of motion generators and making the code more compact and so speed enhancements and bug fixes will affect all generators simultaneously rather than having to be implemented on a per generator basis. In addition to this work I would also be working on increasing the speed/efficiency of the existing python code for the equations of motion generators since I will already be digging into their base functionality.",
                    "projectCode": "http://jbm950.github.io/GSoC-Final-Submission.html"
                },
                {
                    "title": "coala: Automatic settings guessing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5183871444320256/",
                    "content": "In this project, I propose to create an automated settings guessing feature based on the available samples for coala, a static code-analysis tool. Currently, the user has to manually specify their formatting / standards. With this proposal, this will be completely automated, intelligently guessing the best settings for the project.As a second part to this project, I intend to integrate this with coala-quickstart, a user-friendly program that helps new users setup the configuration file through simple questions. I also aim to create a feature where default preset standards are packaged for the user to simply choose from quickly without much effort.As a third optional part to this project, depending on time constraints and availability, I plan to collaborate on a web feature where a user may enter their repository address and coala automatically commits the coafile to their repository after guessing the best settings.",
                    "projectCode": "http://hypothesist.github.io/2016/08/15/gsoc-final-post.html"
                },
                {
                    "title": "coala: coala-html and coala website",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5914162450399232/",
                    "content": "coala-html is a console application used to display results from coala-json as an interactive web page. Prototype is available at Github.coala website a main website for coala with coala demo integrated. It’d be written from scratch with improved UI and features.Proposed features are:",
                    "projectCode": "https://tushar-rishav.github.io/blog/2016/08/18/GSoC-16-final-report/"
                },
                {
                    "title": "coala: Decentralizing Bears",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5485352915566592/",
                    "content": "The aim of this project is to create a lot of packages, so that it will be way easier to maintain bears, and to update them with awesome features. This will also include easier debugging as we will only have to focus on one bear at a time.",
                    "projectCode": "https://gsoccoala.wordpress.com/2016/08/13/it-has-come-to-an-end/"
                },
                {
                    "title": "coala: Documentation Extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5662982293946368/",
                    "content": "The aim of the project is to develop a language independent analyzing routine that will find all documentation strings in a file, parse them into specific groups and checks them against a specified documentation style given by the user. The functionality can be extended to providing a patch that re-formats the documentation correctly and checks for grammatical errors and performs other aesthetical fixes.",
                    "projectCode": "http://sanketdg.github.io/gsoc-final-report"
                },
                {
                    "title": "coala: Extend linter integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5563734458105856/",
                    "content": "The aim of the project is to ease the process of creating a new Lint Bear, addressing the issue of linting files having embedded source code and provide command line interface improvements to existing coala application.http://mr-karan.github.io/2016/08/13/coala-GSoC-2016-Summary.html",
                    "projectCode": "http://mr-karan.github.io/coala-GSoC-2016-Summary/"
                },
                {
                    "title": "coala: Generic Spacing Correction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4694331071922176/",
                    "content": "The Aim of this Project is to create and implement an algorithm that figures\nout the right indentation  for as many programming languages as possible. The implementation must be configurable for different projects  and must address features like  indents based on keywords, Hanging Indents and creating  new lines when the length of the line is too long .",
                    "projectCode": "https://learningstuffeveryday.wordpress.com/2016/08/19/final-submission/"
                },
                {
                    "title": "coala: Integrating coala with the Eclipse IDE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5328472524193792/",
                    "content": "This project aims to implement a feature-rich code analysis plugin for the Eclipse IDE using coala. This plugin will perform the analysis by running the given code through coala and present the results to the user to take further action. The user can then view the diff or apply the patch with a single click.",
                    "projectCode": "http://sheikharaf.me/google-summer-of-code-2016-summary"
                },
                {
                    "title": "coala: Writing bears with different programming languages",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4628282527973376/",
                    "content": "coala’s modules for code analysis are called bears. Currently these modules can be written in python only. The aim of this project is to make it possible for developers to use any kind of language they want to write bears. The ultimate goal would be to make bear development as friendly and easy as possible by providing utilities to developers such that their bears will be easily packaged and distributed using pypi.",
                    "projectCode": "http://blog.redridge.me/gsoc-2016-final-report/"
                },
                {
                    "title": "Core Python: A GUI (tkinter) front end for pip",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5063140450500608/",
                    "content": "PIP is currently a command line based package manager used to install and manage software packages written in Python.  But, many users are not familiar with the command line and thus find difficulties using and accessing PIP. People who still don’t have enough exposure to command line tools(specially in case of Windows) find installing packages using PIP very cumbersome. \nTherefore, the main motivation behind this project is to make various functionalities provided by PIP accessible to Windows/LINUX/Mac based users through a tkinter based GUI interface which could be further integrated with IDLE. As a whole, it would help beginners to focus more on learning and using new Python packages rather than getting in unavoidable trouble of configuring various paths and configurations in order to install new Python Packages from PyPI.",
                    "projectCode": "https://github.com/upendra-k14/pip_gui"
                },
                {
                    "title": "Core Python: Roundup",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6714987825332224/",
                    "content": "The current Python's development process is very complicated for core developers. When an external contributor uploads a patch for a certain issue, the core developer needs to download the patch and then apply the patch and run the tests manually to make sure it works properly. Also, the core developers review the code on the forked version of Rietveld code review tool which is not being maintained. Once the patch is correct, the changes are committed manually. This is a manual and burdensome process for core developers. On 1st January 2016, Brett Cannon decided to migrate from Mercurial on hg.python.org to Git on GitHub.So, my project is about migrating to Git/Github. I will be working on creating pull requests on Github whenever a patch is submitted on the issue tracker (https://bugs.python.org) and integrating various bots to maintain linear history of commits, auto-close of issues, enforce CLA, etc. Towards the end of the GSoC period, I will work on patch-related improvements.",
                    "projectCode": "https://github.com/AnishShah/GSoC/wiki/Google-Summer-of-Code-2016---Work-Product-Submission---Python-Software-Foundation"
                },
                {
                    "title": "DIPY: Automatic Denoising and Robust Brain Extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4915072795148288/",
                    "content": "DIPY currently uses non-local means approach for denoising MR data, in which we need to estimate the noise variance of the signal which is often a bit troublesome, also it does not make the full use of the directional information in dMRI datasets. This project proposes to use a more robust and efficient method for automatically denoising diffusion MRI and structural MR datasets, using Local-PCA. Along with an accurate implementation of L-PCA and its adaptation to Rician noise, the project will also aim at optimising the implementation of L-PCA using Cython. \nAfter implementing L-PCA, a method for robust brain extraction needs to be developed. DIPY’s median OTSU based implementation is known not work so well with non-echo planar diffusion imaging (non-EPI dMRI) data. There are few possible ways to improve this, one is to generate labels and have weighted median OTSU. Another idea involves using some version of patch based segmentation using image library constructed from previously annotated images and using it as a reference for the subsequent extraction.",
                    "projectCode": "https://riddhishbgsoc2016.wordpress.com/2016/08/17/last-blog/"
                },
                {
                    "title": "DIPY: Developing a new DIPY website with interactive features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5493966740914176/",
                    "content": "DIPY is a python toolbox for analysis of diffusion magnetic resonance imaging. Its website http://nipy.org/dipy/ acts as the source of information and hosts all kinds of resources like documentation, examples and guides for getting started and using Dipy for research in diffusion magnetic resonance imaging. However, the current website is based on Sphinx and allows for only one documentation to be online (the development version). Also it lacks many essential features that are required to manage and update the website conveniently.\nThe goal of this proposal is to reconstruct the website from scratch with latest web technologies adding essential features like content management system for creating and managing articles, tutorials, news, etc., admin functionality for maintenance,  continuous generation and integration of documentation, social network integration, github integration for visualisation of development metrics, responsive frontend with modern UI elements and search engine optimization.",
                    "projectCode": "https://gist.github.com/ghoshbishakh/0183e964e162350018e04bcd599b66ea"
                },
                {
                    "title": "Implementation of a signal processing pipeline to chain signal processing and machine-learning estimators.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5645811820003328/",
                    "content": "Magneto- and Electro-Encephalography (M/EEG) are neuroimaging techniques\nthat non-invasively record human brain activity typically using\n~ 100-300 simultaneous sensors sampled at 1kHz. Because these sensors are\npositioned outside subjects' head, they capture a complex mixture of neural\nsources, and can therefore be particularly challenging to analyze.Machine learning algorithms recently proved to be extremely efficient at\ndecoding these high-dimensional signals - that is: at inferring the neural\nand cognitive mechanisms and dynamics underlying the M/EEG recordings.The aim of the present project is to interface the signal processing functions\nalready implemented in the MNE-Python MEG analysis library with the\nscikit-learn machine-learning library. Specifically, we will implement a series of\ntransformers and a dedicated pipeline with the same Application Program\nInterface (API) as scikit-learn.",
                    "projectCode": "https://asishpanda.wordpress.com/2016/08/15/gsoc-final-report/"
                },
                {
                    "title": "Implementing Intra Voxel Incoherent Motion (IVIM)  techniques in Dipy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5884491742576640/",
                    "content": "Dipy is a python library for analysis of diffusion-weighted MRI (dMRI). Diffusion patterns can reveal microscopic details about tissue architecture and is used in clinical as well as neuroscience research. The IVIM model describes diffusion and perfusion in the signal acquired with diffusion MRI. Recently the interest has expanded and applications have emerged throughout the body including kidneys, liver, and even the heart. Many more applications are now under investigation such as imaging for cancer (prostate, liver, kidney, pancreas, etc.) and human placenta. One of its largest uses is in brain mapping and neuroscience research such as Parkinson’s disease where it is used to study aging and structural degeneration of fibre pathways in the brain. An open source implementation of this model will help researchers and students investigate such applications and will add to Dipy’s ability as a complete diffusion imaging library.",
                    "projectCode": "https://gist.github.com/sahmed95/00ae62831078e4edc14fad3093a0a408"
                },
                {
                    "title": "Italian Mars Society (IMS) Proposal: Improving the Step Recognition Algorithm for V-ERAS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5725981142679552/",
                    "content": "Virtual ERAS (V-ERAS) forms a salient part of European Mars Analog Station (ERAS) for Italian Mars Society (IMS).The immersive VR Simulation of V-ERAS allows users to interact with a simulated Martian environment using Aldebran VSS Motivity, Oculus Rift and Microsoft Kinect.\nMotivity is a passive omnidirectional treadmill, so users’ steps are not in real dimensions. Therefore, the configuration needs to include an accurate and robust algorithm for estimating users’ steps, to be reproduced in the V-ERAS.In the V-ERAS station simulation, the data used for the Step Recognition Algorithm with the Microsoft Kinect are the skeletal joints. They are recognized by means of the Skeletal Tracking implemented in Microsoft Kinect SDK (1.8).However, there are two main issues with the current settings, and the goal of my project is to rectify and overcome them:",
                    "projectCode": "https://karansaxena.blogspot.in/2016/08/gsoc-2016-submission.html"
                },
                {
                    "title": "ITALIAN MARS SOCIETY: IMPLEMENTATION OF AN INTERACTIVE HEADS UP DISPLAY FOR OCULUS RIFT FOR THE V-ERAS SIMULATION ENVIRONMENT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4793217056768000/",
                    "content": "The project aims to develop an interactive Heads up Display (HUD) on the OCULUS RIFT for the V-ERAS Simulation. Once the interactive semi-transparent interface is implemented on the existing V-ERAS simulation environment it should display data from the Habitat Monitoring Client. The Habitat Monitoring Client GUI is already in place. It can interface with any general Tango Device Server. A portion of the project will aim at making the HUD highly interactive and recognize touchless hand and body gestures through Leap Motion Controller.",
                    "projectCode": "https://aakash26.github.io/GSoC16/"
                },
                {
                    "title": "Italian Mars Society:Integration of Unity Game scene with the existing pyKinect and emulate a moving skeleton based of the movements tracked by the Kinect sensors.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6729287650508800/",
                    "content": "The aim of this project will be to provide a replacement of the existing\nblender based simulations with the unity game engine.",
                    "projectCode": "http://shrigsoc.blogspot.com/2016/08/conclusion.html"
                },
                {
                    "title": "Kivy: Plyer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5039570877939712/",
                    "content": "The goal of the project will be to provide stable and platform independent APIs to the users for accessing features of their desktop and mobile devices.  The supported APIs will be for the following platforms: Windows, Linux, OSX, Android and iOS.",
                    "projectCode": "https://docs.google.com/document/d/1Bqqf7mdxUvAOr7u8ioPHAGWHJ4Mqdy4i7YqiLMYPfoQ/edit?usp=sharing"
                },
                {
                    "title": "Kivy: Tiled Integration with KivEnt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6283958060843008/",
                    "content": "Tiled is a general-purpose tile map editor. It supports various tile shapes like square, hexagonal, isometric square. Tiled support in KivEnt will be a very useful tool, given that Tiled is already a very famous and feature-rich platform for creating game worlds and maps. A game developer would appreciate getting to use Tiled to create worlds with kivy than some custom platform in-built into KivEnt. This will also make it easier (at least the map part) for people to port their existing games to KivEnt, from other platforms which use Tiled.The aim of this project is to create a fully-functional Tiled module which supports almost all features which Tiled currently supports, i.e. various types of tile shapes, tile animations, multiple layers, shape definitions in tiles, custom data etc. The project will also require a TMX file format loader/parser.",
                    "projectCode": "http://udiboy1209.github.io/2016-08-16-one-hell-of-a-summer/"
                },
                {
                    "title": "MDAnalysis: Dimension Reduction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5099774105616384/",
                    "content": "Dimension reduction of a molecular dynamics (MD) simulation is meant to provide insight into the slow underlying dynamical motions of a set of molecules. Dimension reduction algorithms are either nonlinear or linear transformations, both categories providing distinct benefits and shortcomings. Existing implementations of any dimension reduction algorithm work by decomposing either some subset of an N-by-P “observation matrix” delineating the N “observations” of a system with P coordinates or with a P-by-P correlation matrix. Functions in MDAnalysis avoid creating such a matrix as it would proscribe users from analyzing very large MD simulations on a workstation or laptop. The goal of this project will be to implement Principal Component Analysis and diffusion maps in MDAnalysis such that both methods are accessible to aforementioned users.",
                    "projectCode": "https://github.com/MDAnalysis/mdanalysis/commits/develop?author=jdetle"
                },
                {
                    "title": "MDAnalysis: Introducing capabilities for analysing umbrella sampling simulations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5338247869759488/",
                    "content": "MDAnalysis provides a python framework to allow users to analyse Molecular Dynamics (MD) simulations. Umbrella Sampling (US) is an MD technique which involves performing a series of simulations in which a ‘reaction coordinate’ – such as distance between two molecules – is restrained to different values. Simulation data can be combined, usually using the WHAM method, to produce a ‘potential of mean force’ (PMF) profile that shows the energy landscape along the chosen coordinate. Several implementations of WHAM exist, but require input files of specific formats which may differ from that obtained directly from the simulation, dependent on the simulation engine used. Additionally, it would be convenient be able to calculate the PMF alongside analysis of the trajectory such as offered by MDAnalyisis. However, MDAnalysis does not yet have tools specifically for dealing with and analysing US simulations. This project aims to introduce capabilities for loading US simulation sets, including a generalised tool for loading auxiliary data files, and performing WHAM and other basic analysis.",
                    "projectCode": "http://fiona-naughton.github.io/blog/2016/08/19/Coding-and-cats-the-end-of-GSoC"
                },
                {
                    "title": "Mercurial: Allow largefiles to be at a different location",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5467594836410368/",
                    "content": "Mercurial has an extension called Largefiles, which allows storing large files outside of the normal history to decrease needed bandwidth for clones and pulls. Large files are stored in a central location and you fetch them only when you need them. Largefiles extension supports by design storing files in the same location as the main repository hosting server. It can be workaround by configuring a web server to redirect largefiles request to some other URL, but this solution does not provide sufficient flexibility.\nThe Project goal is to allow user to specify remote server where large files are stored. Instead of downloading all files from the the main repository, client would download them from remote store, which could greatly decrease load from the main server. Remote store can live anywhere on the web e. g. in the cloud, so connection among clients and the store should be secure.",
                    "projectCode": "http://liscjugsoc.blogspot.com/2016/08/work-product-submission.html"
                },
                {
                    "title": "Mercurial: Moving Towards Python3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5932140378193920/",
                    "content": "Its about moving mercurial to work in Python3. Rather than 2to3 support, it will work on both 2 and 3.",
                    "projectCode": "https://bitbucket.org/PulkitG/hg/commits/all?search=Pulkit+goyal"
                },
                {
                    "title": "MyHDL  : RISC-V Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6654449992859648/",
                    "content": "RISC-V is an open ISA freely available for all types of use. The RISC-V ISA has been designed with small, fast, and low-power real-world implementations in mind, but without \"over-architecting\" for a particular microarchitecture style.The RISC-V being a base ISA  is carefully restricted to a minimal set of instructions sufficient to  provide a reasonable target for compilers,  assemblers,  linkers,  and  operating  systems  (with additional supervisor level operations),  and so provides a convenient ISA and software toolchain skeleton around which more customized processor ISAs can be built.\nThis project thus aims to leverage and demonstrate the advantages of myHDL and python in general in the field of CPU design by implementing a RISC-V CPU (in myHDL) and other CPU design utilities. Since RISC-V is a base ISA, having a myHDL based implementation becomes a essential and would enable a lot of Computer Architecture researchers to design and test RISC-V based derivatives using myHDL and python based utilities.",
                    "projectCode": "https://gist.github.com/meetshah1995/f7dd5fd6a400f8b9527d01529136459b"
                },
                {
                    "title": "MyHDL : GEMAC Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5712769017970688/",
                    "content": "The proposal is to design and test Gigabit Ethernet Media Access Controller (GEMAC) core in MyHDL using Python. The GEMAC is a communication core commonly used for streaming data coming from Transmitter and Receiver client interfaces to the FPGA. The purpose of the project is to create a design that can be easily used and understood by any endpoint user. This project proves the capability of MyHDL to create user friendly versions of hardware system designs. In this project we also develop a test suite to verify the functionality of the system design. This project is important because it demonstrates the use of advanced software technologies applied to hardware design.",
                    "projectCode": "https://ravijain056.wordpress.com/2016/08/23/the-coding-weeks-are-over/"
                },
                {
                    "title": "MyHDL : HDMI Source / Sink Modules + RISC-V Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5680163505307648/",
                    "content": "HDMI (High-Definition Multimedia Interface) is a proprietary audio/video interface for transferring uncompressed video data and compressed or uncompressed digital audio data from an HDMI-compliant source device to an HDMI-compliant sink device.\nThe Project deals with the creation of HDMI Source and Sink IP cores in Python Using MyHDL. These IP cores makes it easy for anyone to build a HDMI Transmitter and Receiver using FPGA. Python's power and clarity make MyHDL an ideal solution for high level modeling. The project will also serve as an useful example for the Python MyHDL project to show a non‐trivial example of an IP core.RISC-V is an open ISA freely available for all types of use. The RISC-V ISA has been designed with small, fast, and low-power real-world implementations in mind, but without \"over-architecting\" for a particular microarchitecture style.\nThe Project deals with the implementation of RISC-V processor in Python using MyHDL. The project demonstrates the advantages of MyHDL and Python in the field of CPU design.",
                    "projectCode": "https://rsrivatsan.wordpress.com/2016/08/23/what-i-did/"
                },
                {
                    "title": "MyHDL : Leros tiny processor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6349798567313408/",
                    "content": "Leros is a tiny resource optimised open source microprocessor written in VHDL. The proposal is to reimplement Leros in MyHDL so that it can be used as an intelligent controller for various peripheral devices in Rhea designs, and compare it's performance on various FPGA boards, and demonstration through implementation of a command bridge state machine.",
                    "projectCode": "http://pyleros.blogspot.in/2016/08/gsoc-final-summary-and-development.html"
                },
                {
                    "title": "MyHDL: JPEG Encoder Frontend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5901197823180800/",
                    "content": "The main goal of the proposed project is to create the frontend part of a JPEG encoder which will be implemented in MyHDL. The frontend part consists of the color-space converter, the 2D DCT, the top-level FSM, and the input buffer. Based on a reference design, the final implementation in MyHDL will provide a more modular and scalable design. Throughout the project, will be developed all the required unit tests to prove the correct functionality of each block of the frontend part of the encoder while keeping in mind not only to verify the correct behavior of the design but also to produce synthesizable VHDL/Verilog code. The ideal goal would be to create a fully working JPEG encoder by combining the frontend and the backend part of the encoder written in MyHDL and implement the converted code in a FPGA board in order to measure some metrics like resource utilization and performance.",
                    "projectCode": "https://myhdlgsoc2016.blogspot.gr/2016/08/work-product.html"
                },
                {
                    "title": "MyHDL:JPEG Encoder Backend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5337948564226048/",
                    "content": "In the above proposal we are showing the idea of implementing JPEG Encoder(backend) in python using existing MyHDL Library. A working module and its corresponding testbench is desired.",
                    "projectCode": "https://vikram9866.wordpress.com/"
                },
                {
                    "title": "pgmpy: Hamiltonian Monte Carlo and No U Turn Sampler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6358984831270912/",
                    "content": "Currently pgmpy provides two sampling classes, A class of algorithms namely Forward sampling, Rejection Sampling and Likelihood weighted sampling which are specific to Bayesian Model( BayesianModel in pgmpy) and Gibbs Sampling a Markov Chain Monte Carlo Algorithm that generates samples from both Bayesian Network and Markov models.\nSince pgmpy is looking to support continuous random variables in coming time, we need classes of inference algorithms (sampling too) that can specifically work with these continuous random variables. This proposal deals with adding two more sampling algorithms in pgmpy, namely:",
                    "projectCode": "https://github.com/pgmpy/pgmpy/commits?author=khalibartan"
                },
                {
                    "title": "pgmpy: Structure Learning from complete data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4777085159604224/",
                    "content": "I will introduce methods to pgmpy to select Bayesian models based on data sets. First, I will implement support for basic score-based and constraint-based structure learning. Second, I will add common enhancements to the score-based approach, including local score computation + memoization and tabu lists. Finally, I will implement the MMHC algorithm, which combines the score-based and the constraint-based method.I believe that structure learning is the missing feature in pgmpy at the moment.",
                    "projectCode": "http://pgmpy.chrisittner.de/2016/08/22/gsoc2016-final.html"
                },
                {
                    "title": "pgmpy: Support for Continuous Random Variables",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6047433406545920/",
                    "content": "Currently, pgmpy deals with only discrete random variables. In many situations, some variables are best modeled as taking values in some continuous space. Examples include variables such as position, velocity etc.The first part of the project creates a module to represent nodes having a continuous domain representation. These nodes would be used in hybrid networks comprising both continuous as well as discrete random variables. The two important features in this part would be -The second part of the project will deal with Gaussian distributions. Gaussians are a particularly simple subclass of distributions that make very strong assumptions, such as the exponential decay of the distribution away from its mean, and the linearity of interactions between variables. Gaussians are a surprisingly good approximation for many real world distributions.There will be support for variables comprising the most popular forms of representation in Gaussian distributions -",
                    "projectCode": "https://github.com/pgmpy/pgmpy/commits/dev?author=yashu-seth"
                },
                {
                    "title": "PyPy: Integration of Async IO, Matrix Multiplication and Unpacking Generalizations for Python 3.5 Semantics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4671001883312128/",
                    "content": "Python 3.5 has syntax features that are unavailable in the previous versions. They grant improved support for asynchronous programming (PEP 492), matrix multiplications (PEP 465) and the unpacking operator (PEP 448). The goal of this project is to implement these features in PyPy3. This way support for Python 3 code gets improved. Implementing coroutines will be the main feature of this project, as this feature offers more new methods than the other features. PEP 465 shows that Matrix multiplication is already used more often than bitwise operations in numeric libraries. Also, having coroutines with async and await syntax as well as enhanced unpacking options, the possibility that Python 3.5 syntax will be used in upcoming code rises. Therefore, an implementation of these features in PyPy3 will definitely increase compatibility to future Python 3 programs. In order to support PyPy’s Python 3 compatibility even further, other new features of Python 3.5 and 3.4 will be implemented after finishing the three PEPs if there is enough time, starting with the enum module of 3.4 and continuing with PEP 461 to allow support of the % formatting operator to bytes and bytearrays.",
                    "projectCode": "https://bitbucket.org/pypy/pypy/branch/py3.5-async"
                },
                {
                    "title": "PySAL: Integrating Poisson count models and spatial effects for spatial interaction modeling.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4784558402699264/",
                    "content": "Spatial interaction modeling involves the analysis of flows from an origin to a destination either over physical space (i.e., migration) or through abstract space (i.e., telecommunication). There is little to no software avaialble to carry out spatial interaction modeling and the analysis of flow data. This is especially true in the case of open source software and within the python ecosystem. Therefore, a comprehensive python package, which draws on existing PySAL infrastrucutre and extends it, would fill an important gap within the current set of avialable spatial analysis tools.PySAL currenty provides a rich set of tools for modeling spatial effects within a regression framework, which is typically applied to areal units. While it is possible to extend some of these models to the case of spatial interaction data, new spatial weight structures will be necessary to capture the unique spatial dependence that occurs between a data point that has both an origin and a destination. Furthermore, the existing spatial regression models are specifically designed for continuous data, whereas many spatial interaction phenomena are more properly modeled as counts (i.e., commuting).",
                    "projectCode": "https://github.com/pysal/pysal/pull/861"
                },
                {
                    "title": "scikit-learn: Adding fused types to Cython files",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6066313545908224/",
                    "content": "The current implementation of many algorithms, such as Stochastic Gradient Descent, Coordinate Descent, etc. only allow input with float64 and int64 dtypes due to the adoption of Cython fused types may result in explosion of the generated C code. However, since scikit-learn has removed Cython files from the repo and re-generate them from every build, it provides a good chance to refactor the \".pyx\" files by introducing Cython fused types. This will allow those algorithms to support float32 and int32 dtypes data, which is currently casted into float64 and int64 respectively, and therefore reduce the waste of memory space.",
                    "projectCode": "https://gist.github.com/yenchenlin/5ccf2029de32320096b79eb9de4d95c3"
                },
                {
                    "title": "ScrapingHub - Enhancing the Performance of Scrapy's Signaling API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4514654873190400/",
                    "content": "Scrapy uses a signaling mechanism, as documented here: http://doc.scrapy.org/en/latest/topics/signals.html#topics-signals to notify various entities when something of interest happens, so callbacks can be triggered accordingly and deferred calls can be processed. Signaling is also exposed via the core API of Scrapy for use in extensions/middleware. The current signaling mechanism is based on the pydispatcher library which although does serve the purpose well often tends to be slower than the actual HTML parsing and tends to bottleneck spiders(see: https://github.com/scrapy/scrapy/issues/8#issuecomment-112029296). Django, in its 1.0 release refactored the pydispatcher code which they claim resulted in a speed improvement of up to 90%, and also simplified the API for better. The task at hand is to introduce the same efficiency in Scrapy while also trying to retain as much backward API compatibility as possible and not breaking any user code.",
                    "projectCode": "https://gist.github.com/rootAvish/2799091c237dfbf0003ad27ab4593d0a"
                },
                {
                    "title": "Scrapinghub - Scrapy: Support for Spiders in other Programming Languages",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5944199035748352/",
                    "content": "Abstract: Scrapy is one of the most popular web crawling and web scraping framework. It’s written in Python and known by its good performance, simplicity, and powerful API. However, it’s only possible to write Scrapy’s Spiders using the Python Language. The goal of this project is to provide an interface that allows developers to write spiders using any programming language, using json objects to make requests, parse web contents, get data, and more.  Also, a helper library will be available for Java, JS, and R.",
                    "projectCode": "http://aronbordin.com/scrapy/scrapy-streaming-support-for-spiders-in-other-programming-languages/"
                },
                {
                    "title": "Scrapinghub Splash: Web Scraping Helpers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5056772893048832/",
                    "content": "Currently, in the Splash there is no an easy way to click a link, fill and submit a form, extract data from a webpage using Splash Scripts. I will develop a helper library with some helper classes like Element which will represent DOM Element. This class will allow to interact with DOM elements using Lua without any need of using splash#evaljs function.",
                    "projectCode": "http://blog.mmanukyan.io/gsoc/2016/08/20/gsoc-2016-6-final.html#final-submission"
                },
                {
                    "title": "Scrapinghub: Frontera Python 3 Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6100913534009344/",
                    "content": "Frontera is a distributed web crawling framework, it acts as a crawl frontier, dealing with the crawling strategy to be followed. The goal of this project is to port frontera to python 2/python 3 dual compatibility, and improving test coverage and other improvements along the way.",
                    "projectCode": "https://github.com/Preetwinder/GSoC16-FinalSubmission"
                },
                {
                    "title": "Statsmodels: Distributed Estimation and Statistical Inference for Regression",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5501662785437696/",
                    "content": "This project aims to make two additions to the statsmodels package.  The first is to introduce methods to handle distributed estimation of regularized and unregularized regression models.  The second is to introduce several methods for statistical inference on regularized models.",
                    "projectCode": "https://github.com/statsmodels/statsmodels/pull/3055"
                },
                {
                    "title": "Statsmodels: State-Space Models with Markov Switching",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5539578756726784/",
                    "content": "During the summer, I am going to implement Kim Filter, which is broadly used for regime switching state-space models evaluation, on top of existing Kalman Filter. I will also create a bunch of well-tested, ready-to-use models with regime switching, including MS-AR, MS-DFM and MS-TVP.",
                    "projectCode": "https://github.com/statsmodels/statsmodels/pull/2921/commits"
                },
                {
                    "title": "statsmodels: Vector Error Correction Model (VECM)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6152037871910912/",
                    "content": "As Lütkepohl [1] states his preface, \"[b]y now [cointegration] related models and methods have become far more important for applied econometric work than, for example, vector autoregressive moving average (VARMA) models.\" In the context of cointegrated variables especially vector error correction models (VECM) are emphasized in [1].While statsmodels supports VARMA models, it still lacks VECM (as suggested by one of the project's main contributors). The GSoC might be a good opportunity to introduce VECM-related functionality into statsmodels. This functionality includes the representation of a VECM, forecasting, estimation, and model diagnostics among other topics.[1] Lütkepohl (2005) New Introduction to Multiple Time Series Analysis",
                    "projectCode": "https://github.com/statsmodels/statsmodels/pull/3070"
                },
                {
                    "title": "Theano : Better handling of larger graphs and faster optimization phase during compilation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5483040344113152/",
                    "content": "This project aims at improvising traversal of large graphs, serialization of objects, optimizations on GPU, optimization of fast_run flag, inclusion of optimizer_excluding flag, fixing of slow optimizing phase during compilation and faster cyclic detection.",
                    "projectCode": "http://sentient07.blogspot.fr/2016/08/summary-of-pull-requests.html"
                },
                {
                    "title": "Theano: GPU optimizations and operation support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5347508356120576/",
                    "content": "Artificial Intelligence and Deep Learning nowadays are ever growing subjects. People who research AI, are experimenting with various intelligence models in order to discover a strong intelligence model which is equally capable with the unknown human model. Prototyping of such models (as large as they may be) needs to be as fast as possible, in order to examine exhaustively many novel ideas as fast as it can be done. For this we need to be able to use with ease as many resources as we have possible. As Theano is contributing to this attempt, current GPU technologies need to be supported extensively in a transient way through its framework. This can be achieved by including optimized operations from current NVidia frameworks, as well as optimizing or designing GPU code which resides in the framework’s backend. Furthermore, analysis and optimization of multi-gpu code, in addition with a consideration of a multi-node/gpu design, would prove themselves useful for this cause.",
                    "projectCode": "https://tsirif.github.io/announcements/gsoc-has-come-to-an-end/"
                },
                {
                    "title": "Tryton: Add CSV Import/Export to SAO Client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5662724059037696/",
                    "content": "The GTK client (Tryton) already has CSV Import/Export feature. This project would implement the same feature in web client (SAO) keeping the behavior similar.",
                    "projectCode": "http://codereview.tryton.org/27421002"
                }
            ],
            "techStack": [
                "python",
                "mercurial"
            ]
        },
        {
            "title": "QEMU",
            "orgLink": "http://qemu-project.org/",
            "projects": [
                {
                    "title": "AF_VSOCK packet capture in Linux and Wireshark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4789705652568064/",
                    "content": "Zero-configuration communication between the QEMU hypervisor and its guests can be achieved using the virtio-serial device. Virtio-serial has several limitations though. For example, it does not allow multiple connections to the same port. To overcome this limitations the driver virtio-vsock has been developed.The virtio-vsock driver supports the POSIX Sockets API which is more familiar to developers wanting to perform communication between processes. The Sockets API allows N:1 communication and differentiates between block and stream protocols. In addition, programs that already use sockets can easily transition to the virtio-vsock device without major changes in their code.However, the traffic sent through virtio-vsock is hidden to the outside world, as it is internally performed between the hypervisor and the driver. And to facilitate debugging  is important to be able to see this exchange of information.The goal of this project is to expose the traffic exchanged through the virtio-vsock socket interface so that programs like Wireshark can capture it. To achieve this, it would be necessary to implement a device driver that exposes the traffic and a Wireshark dissector.",
                    "projectCode": "https://github.com/GerardGarcia/gsoc16"
                },
                {
                    "title": "AMD IOMMU interrupt remapping and other improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5087715448061952/",
                    "content": "This project aims to get the current AMD IOMMU patches merged into Qemu as well as introduce interrupt remapping support to the current AMD IOMMU implementation. Interrupt remapping is a feature implemented on Intel and AMD iommus that allows interrupts from peripheral devices to be intercepted, validated and posted to the specific CPU cores based on the information stored in the in the relevant data structures programmed by System Software.",
                    "projectCode": "https://github.com/aslaq/AMD-Vi"
                },
                {
                    "title": "Implementing one more absolute coordinates device for QEMU – a serial tablet with behaviour like usb-tablet we use to get mouse integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5820230978764800/",
                    "content": "The implementing serial tablet would allow to have mouse integration for vintage operating systems. This feature is absent in other virtualisation systems, as far a I know. Emulating additional character  device with absolute coordinates – the one which was rather popular in 1990x– would allow us to use already existing drivers for old operating systems without USB support and so such device would bring mouse integration to them.",
                    "projectCode": "https://gist.github.com/avg206/1035d552c460b6daeba55f3d62ccc7b4"
                },
                {
                    "title": "MTTCG Memory Consistency",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4940413639065600/",
                    "content": "QEMU uses a single-threaded tiny code generator (TCG) which translates instructions of the guest ISA to instructions of the host ISA. These translated instructions are then executed on the host in an execution thread. For SMP guests, this single thread is scheduled to execute translated instructions of all the CPUs in a round robin manner. This is a significant performance bottleneck in utilizing all the available cores on the host machine. Multi-threaded TCG (MTTCG) project was started to solve this problem by designing and implementing a multi-threaded TCG.  In this design, multiple threads are concurrently scheduled, and each thread executes the translated instructions from one guest CPU. Various consistency issues were identified in this design and the current work aims to solve them.",
                    "projectCode": "https://gist.github.com/pranith/af6f5a203b02cee2839c2d7c50024e73"
                },
                {
                    "title": "Postcopy migration: Recovery from a broken network connection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5582796059836416/",
                    "content": "Live Migration is a process of moving a running virtual machine from one physical system to another. There are usually two ways, precopy and postcopy. Postcopy migration is used for virtual machines which have a high memory dirtying rate, (higher than the bandwidth of the network that will be used to perform migration). The disadvantage of postcopy migration is, if there is a network failure then we are left with an inconsistent vm at both the source and the destination side.\nThe aim of this project is to recover from the network failure, and complete the migration process. The project will include completing the process of sending the leftover memory pages.\nProject would start by making sure that the threads do not fail at both the source and destination end. This would be followed by re-establishing the network connection between the source and the destination. After this is done, the migration process is restarted. The vCPUs on the destination side were suspended due to page faults, so these pages are transferred first. Followed by the rest of the leftover pages on the source side.",
                    "projectCode": "https://harisphnx.github.io/"
                },
                {
                    "title": "qemu-img fuzzing and subcommand \"dd\"",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5660612814176256/",
                    "content": "This proposal aims primarily to fuzz test qemu-img from QEMU project in order to discover\nthe potential security bugs and write bug fixes for them. The second goal will be to extend\nqemu-img to support a new subcommand dd.",
                    "projectCode": "https://github.com/RandomNickname/qemu/commits/img-dd?author=randomNickname"
                }
            ],
            "techStack": [
                "c",
                "assembly",
                "kvm"
            ]
        },
        {
            "title": "R project for statistical computing",
            "orgLink": "https://www.r-project.org/",
            "projects": [
                {
                    "title": "A generic computational framework for biconvex minimization toolbox in R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6528238620770304/",
                    "content": "Estimations of a large family of statistical models can be casted as optimizing biconvex functions over given (bi)convex sets. Our goal in this project is to develop a generic computational framework for biconvex minimization via the alternating minimization algorithm, including sparse bigraphical models, sparse conditional graphical models and sparse matrix factorization. We describe the design and the implementation plan of our project, and propose a timeline for our development.",
                    "projectCode": "https://github.com/mlcoding/matfact"
                },
                {
                    "title": "Animint",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6598607364947968/",
                    "content": "Animint package in R allows animated data visualization using ggplot syntax. It is a useful tool for obtaining an intuitive understanding of patterns in multivariate data sets used extensively in data related environments. This project aims to build upon the already existing Animint package by adding new useful features all the while making it more portable and will pave the way for further development of the package.Some new features include: compatibility with the latest ggplot2 internals, allowing users to select more than one selection variable for graphs, zooming and updating axes/legends for better visualization, computing stats based on current selection and better documentation.",
                    "projectCode": "https://github.com/faizan-khan-iit/gsoc_animint/blob/gsoc_2016/README.md"
                },
                {
                    "title": "Discovr: Streamlining statistical data analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6648144712433664/",
                    "content": "The discovr package will enable a fast and efficient way to test the most common statistical analysis methods. It will therefore allow users to quickly check method specific indicators for the viability of a given method. Thereby, it will reduce the trial and error approach R user yet approach most datasets. At the same time, it will increase the use of the full spectrum of statistical methods.",
                    "projectCode": "https://github.com/Kohze/Discovr"
                },
                {
                    "title": "GAS package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4537082387103744/",
                    "content": "The GAS package for R aims to create an integrated computational environment to deal with Generalised Autoregressive Score (GAS) models. GAS models are particularly suited for univariate and multivariate time series and can be used to predict the evolution of several quantity of interest in economics and finance. Several research papers have demonstrated the superior ability of GAS models compared to alternative time series models. Most applications are in the fields of volatility modeling, systemic risk measurement, macroeconometrics, credit risk analysis and dependence modelling.\nThe GAS package will offer the possibility to practitioners and academics to estimate GAS models using their data, perform predictions and simulations and obtain a graphical representation of the results. The data available at www.gasmodel.com will also be included for comparative and education purposes. The code will be written principally in C++ for computational purposes and then linked with R using the Rcpp, RcppArmadillo and RcppGSL packages. Code parallelisation will be included using the R parallel package and the OpenMP API. The package documentation will be written using the R roxygen2 package.",
                    "projectCode": "http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2825380"
                },
                {
                    "title": "ggduo: pairs plots for multiple regression, cca, time series",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5880393806905344/",
                    "content": "The function ggpairs and ggscatmat in GGally provide generalized pairs plots for a data frame in R. All pairs of variables are displayed, with plot defaults depending on the type of variable in a matrix format. The diagonal contains univariate displays. These functions extend the classic pairs function in base R, which only handles real-valued variables, to flexibly handle different variable types, and to use the graphics package ggplot2.This is appropriate for multivariate data, because we want to see each variable vs each other. But in many problems, such as regression, or multiple time series, there are two groups of variables, e.g. response variables and explanatory variables, and we would like to see one group vs the other group. New functions are needed to accomplish this.",
                    "projectCode": "https://github.com/schloerke/gsoc-ggduo-final/blob/master/README.md"
                },
                {
                    "title": "Implementation of hyperspectral unmixing algorithms for unimixR package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4760780926877696/",
                    "content": "Hyperspectral data is often used to determine what materials are present in a scene. Materials of interest could include roadways, vegetation, and specific targets (i.e. pollutants, hazardous materials, etc.). Trivially, each pixel of a hyperspectral image could be compared to a material database to determine the type of material making up the pixel. However, many hyperspectral imaging platforms have low resolution (>5m per pixel) causing each pixel to be a mixture of several materials. The process of unmixing one of these 'mixed' pixels is called hyperspectral image unmixing or simply hyperspectral unmixing.\nThere is an R package for this purposes however, the already implemented methods N-FINDR and VCA make one crucial assumption: they assume the presence of pure spectra of all components are available somewhere in the data. Obviously, while this assumption is reasonable for some applications, other applications exist where this assumption should not be relied on. ICE algorithm does not need to have pure component spectra for the endmembers in the presented data. Vignettes are also required to provide datailed explainitaions of algorithms and examples.",
                    "projectCode": "https://github.com/AaBelov/UnmixR/commits/VCALopezBugfix?author=AaBelov"
                },
                {
                    "title": "Implementation of Recurrent Models and Examples in R for MXNet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5199297624670208/",
                    "content": "I aim to implement some important deep learning models in R for the MXNet package. The main component of the proposed work is the implementation of the Recurrent Neural Network (RNN) models and examples. In addition, I will also implement some useful examples in R, such as different image classification models and fully convolutional networks for image segmentation. At the same time, I will write sufficient tests and relevant documentations.",
                    "projectCode": "http://dmlc.ml/rstats/2016/08/19/recurrent-models-and-examples-with-mxnet-r.html"
                },
                {
                    "title": "Improving markovchain R package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6215670362537984/",
                    "content": "This project aims to extend markovchain R package functions and capabilities in order to provide statisticians a wider range of tools to perform analysis of stochastic projects related to Markov Chains (MC). Optimization (in terms of coding performance and algorithms) of existing functions pertains to the project as well.",
                    "projectCode": "https://github.com/spedygiorgio/markovchain/commits?author=cryptomanic"
                },
                {
                    "title": "Integration of Text Mining and Topic Modeling Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5321912766955520/",
                    "content": "The goal of this project is to create a user friendly API for an integrated workflow to perform typical text mining, natural language processing, and topic modelling tasks. This would include complete process of topic modelling:In the first stage, I plan to integrate a few packages as mentioned above. Future development assumes construction of a package integrating more tools in the similar fashion as caret for predictive modelling. The Google Summer of Code is planned to be just outset of a bigger project.",
                    "projectCode": "http://flowr.io/final-evaluation-approaching/"
                },
                {
                    "title": "Major Improvements to the factorAnalytics package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5197211075870720/",
                    "content": "This is a proposal to add and improve the functionality, usability, and graphics to each of the three main factor model types (fundamental, time series, statistical), by providing concise risk and performance reports and enhance the capabilities of existing functions in the factorAnalytics R package and thereby bring it close to the existing commercial portfolio optimization and risk management products.",
                    "projectCode": "https://github.com/AvinashAcharya/factorAnalytics"
                },
                {
                    "title": "Managing and visualizing movement data with PostGIS and R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4744662988357632/",
                    "content": "The project develops the integration of R and PostGIS for managing movement trajectories. The focus is on streamlining the workflow for biologists to store and process animal trajectories in PostGIS and analyze these in R, thus utilizing the strengths of both software. Therefore the main outcome is a new R package rpostgisLT, which will simplify the processing of location datasets into trajectories in PostGIS and provide full integration with the R package adehabitatlt data type ltraj.",
                    "projectCode": "https://github.com/mablab/rpostgisLT/wiki/GSoC-2016"
                },
                {
                    "title": "Markov Switching GARCH models (MSGARCH)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5960760429641728/",
                    "content": "The goal of this project is to implement a package that will give the fi\fnancial community tools to estimate, simulate, and test several MSGARCH models used in volatility (i.e., square root of conditional variance) forecasting. By relying on a hidden/latent variable, these models are able to switch among several processes for the conditional volatility and therefore, account for structural break in the volatility dynamics. MSGARCH have gained a huge interest in the \ffinancial risk management community over the recent years as they are better at forecasting volatility and provide more accurate risk measures.  The package will follow the structure of rugarch since this is one of the most used packages for volatility modeling. The core will be implemented in C++ while simple R functions will facilitate usage of the package. Currently, no R package is available to estimate these models.",
                    "projectCode": "https://github.com/keblu/MSGARCH/commits/master"
                },
                {
                    "title": "Mosaicplots in the ggplot2 framework: ggmosaic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5203008476413952/",
                    "content": "The package productplots already provides a fully functional base for creating mosaic plots based on the ggplot2 framework. I will make use of this in two ways: (1) rather than building mosaicplots from scratch, I will use the data handling provided in the productplots package and only implement the additional ggproto interface to make mosaic plots a full geom that can be used as one of the layers in a regular ggplot2 chart. (2) the existing functionality of the productplots package will give me a test basis for the first part of the project to test output from the ggmosaic package. In a first step I want to implement all of the productplots functionality in form of a geom. In a second step, I will address the way groups are handled (which are used for facetting and/or filling) to allow for functionality orthogonal to variables used in the formula call, which at the moment is not possible in productplots.",
                    "projectCode": "https://github.com/haleyjeppson/ggmosaic/commits/master?author=haleyjeppson"
                },
                {
                    "title": "NicheToolbox: from getting biodiversity data to evaluating species distribution models in a friendly GUI environment.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4687966467260416/",
                    "content": "NicheToolBox project will be an R package with a friendly Graphical User Interface (GUI) developed using shiny framework that aims to facilitate the process of building niche models and estimate the species distributions. To do the above it will incorporate functions to curate species occurrence data (clean duplicated records) and build models to estimate species niches (Bioclim, MaxEnt, Ellipsoid model) and distributions. After building a model the user will have the chance to evaluate its performance using Partial Roc, Confusion matrices and the associated metrics to it. Finally in order to make the process of niche modeling transparent, the application will have an option to download a workflow (in html, pdf and .doc) with the code that reproduces all the analysis that the user has made inside the application; this workflow can be shared with users interested to learn how to make a niche model using the R language.",
                    "projectCode": "https://luismurao.github.io/GSoC/gsoc_final_eval.html"
                },
                {
                    "title": "plot.xts for Performance and Risk",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5727217287954432/",
                    "content": "xts::plot.xts is a strong engine for statistical and financial charting. But quantmod, PerformanceAnalytics, PortfolioAnalytics, quantstrat and blotter packages are using basic R graphical functions. My work is to enhance the flexibility, efficiency and visualization ability by substituing plot.xts for basic graphical functions in those packages, and extend the existing examples using modified functions.",
                    "projectCode": "https://gist.github.com/naturalsmen/039fad3e19fa9585643a7aacd952c666"
                },
                {
                    "title": "postCP Package Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6689634364948480/",
                    "content": "Improving the postCP package, writing vignettes and tests, building a user friendly interface and ensuring that postCP passes the checks so that postCP can be restored on CRAN",
                    "projectCode": "http://malithjayaweera.blogspot.com/2016/08/postcp-change-point-detection-with-gsoc.html"
                },
                {
                    "title": "RE2 regular expressions in R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4657237855305728/",
                    "content": "R provides two types of regular expressions in base package, extended regular expressions (the default) with TRE and Perl-like regular expressions used by perl = TRUE with PCRE.PCRE includes useful features, such as named capture, but it uses a backtracking algorithm, so it is easy to take exponential time or arbitrary stack depth for certain regular expressions. Using PCRE in the service backend would have left it open to easy denial of service attacks.TRE has a polynomial time complexity but does not include named capture.stringi is a R package use the regular expression engine from the ICU library, which has an exponential time complexity. The stringi package does not support named capture yet because it is still considered as experimental in ICU.RE2 is a primarily DFA based regular expression engine from Google that is fast at matching large amounts of text with named capture. Users can build fast and scalable service backend with RE2 library.This project will create an R package interface to the RE2 library, providing the R community with the first regular expression package with both named capture and polynomial time complexity.",
                    "projectCode": "http://blog.qinwenfeng.com/post/re2r-intro/"
                },
                {
                    "title": "Regularized interval regression",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6304592157474816/",
                    "content": "R package for regression with general interval censored output data. This will be the first R package with support for (1) four types of censoring, (2) elastic net regularization, (3) a fast coordinate descent algortithm like glmnet, and (4) accelerated failure time loss functions (log-normal, log-logistic, exponential and weibull).",
                    "projectCode": "https://github.com/anujkhare/iregnet"
                },
                {
                    "title": "Rperform: performance analysis for R package code",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5010990420721664/",
                    "content": "Rperform is a tool to help package developers analyze the performance of their R package code. It returns quantitative metrics, relating to memory and run-time, across git versions and branches. It also provides a number of functions to visualize the metrics. It can be easily integrated and run with a Github repository's Travis CI builds, and allows pushing of a webpage with performance plots to the repository's gh-page.This project deals primarily with development of functionalities to allow developers to obtain potential performance impacts of a pull request (PR) without having to merge, extension of the package's existing metric measurement and visualization functions, and development of a coherent user interface for developers to interact with.",
                    "projectCode": "https://techandmortals.wordpress.com/2016/08/23/gsoc-2016-report-rperform-performance-analysis-of-r-package-code/"
                },
                {
                    "title": "Standard Error of Risk and Performance Measures for Non-Normal and Serially Correlated Asset Returns",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5770545454907392/",
                    "content": "This project is focused on implementing methods to accurately compute the accurate standard errors of risk and performance measures in PerformanceAnalytics when asset returns that are non-normally distributed and/or serially correlated..   The project will leverage existing numerical standard error methods that exist in the “nse” package, but will also implement new methods based on the influence functions for risk and performance measures.",
                    "projectCode": "https://github.com/chenx26/EstimatorStandardError/commits/master?author=chenx26"
                },
                {
                    "title": "Visualization of model hyperparameter optimization curves",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4858706986532864/",
                    "content": "The goal of this project is to provide users of the mlr package with a way to visualize what happens during the tuning process that identifies the best hyperparameters for a learner given the data. Looking at popular packages in the machine learning community such as sklearn or caret, the model evaluation visualization process either requires lots of boilerplate code or is sparsely implemented across packages. This project will rectify the situation for R users of the mlr package by implementing three new features: plotting of a single hyperparameter against a scoring function, plotting multiple hyperparameters and scoring functions, as well as support for ablation analysis. The design of the features will focus on ease of use for the end user and customization. Users can choose to leverage automatically generated plots or use the data in some other manner downstream.",
                    "projectCode": "https://github.com/mlr-org/mlr/commits?author=MasonGallo"
                },
                {
                    "title": "Visualization of powerful boundary detection tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4738371129704448/",
                    "content": "This project will add significant functionality to the BayesBD package and increase its efficiency by optimizing code in C++.",
                    "projectCode": "https://github.com/nasyring/GSOC-BayesBD/commits/master"
                }
            ],
            "techStack": [
                "r",
                "c",
                "c++",
                "fortran"
            ]
        },
        {
            "title": "radare",
            "orgLink": "http://radare.org",
            "projects": [
                {
                    "title": "Function argument detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5803719782301696/",
                    "content": "Function is considered to be the basic code construction block. However, Radare2 is not good at detecting anything beyond basic functions. Things like structures, OS specific data types, function names are mostly unrecognized by Radare2 (with exceptions). Adding support for this very feature will make Radare typical for static analysis for malware , and reverse engineering. In general it will attract more users and build concrete alternative to other commercial Software reverse engineering tools like HexRays’s IDA pro, Hopper.",
                    "projectCode": "https://www.oddcoder.com/Gsoc-the-last-commit/"
                },
                {
                    "title": "Radare Web Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4810872459362304/",
                    "content": "This project concerns the enhancement of the material design UI. With this GSoC program, I would like to complete some functionalities to make radare2 more user-friendly with a smoother  learning curve. This UI will enable users to use the radare2 framework through any devices from smartphone, tablet or PC with a modern responsive interface that can be used easily by novices or pro-users. The functionalities developed concerns search functions, the improvement of the  several tools (hexdump, disasm...) and the development of the graph module with a new library with the ability to have more representations. This project will also permit the usage of the T command of r2 binary to send and read messages through the UI. In the same way, the scripting area that allows the user to make some automation will be improved to be more friendly and authorize new usages. In resume, this work will allow to improve drastically the comfort in the use of r2.",
                    "projectCode": "https://blog.gautiercolajanni.fr/gsoc/r2/2016/08/20/conclusion-gsoc-2016-radare-webui.html"
                },
                {
                    "title": "Type Inference and C Output for radeco",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6224058836320256/",
                    "content": "The aim of this project is to advance the current implementation of radeco to output decompiled code and implement a robust type inference system.",
                    "projectCode": "https://github.com/radare/radeco-lib/commits/master"
                }
            ],
            "techStack": [
                "c",
                "rust"
            ]
        },
        {
            "title": "ReactOS",
            "orgLink": "https://reactos.org/",
            "projects": [
                {
                    "title": "ATA/ATAPI drivers AHCI Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4620043438522368/",
                    "content": "This project is a part of Google Summer of Code 2016 under the organization ReactOS. I proposed an idea of implementing storahci for windows 2003 and later port it to ReactOS (after GSoC). As per the proposal I implemented a Storport Miniport driver for windows 2003 targeting NT 5.2/6 storage stack model supporting ATA/ATAPI devices.",
                    "projectCode": "https://github.com/amaneureka/reactos/wiki/Storahci"
                },
                {
                    "title": "Improve ReactOS USB stack.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5292465397432320/",
                    "content": "The aim of this project was to have more stable USB stack in ReactOS operating system and improve it to support Plug and Play. Implementation, testing and bug-fixing of ROS's USB drivers was done under MS Windows 2003(R).During this project I have also worked on number of real world issues reported to ReactOS's bug tracking system.Before moving drivers to ReactOS, they were validated with Driver Verifier. Almost all the goals were achieved. You can find final blog post with detailed description of work and commit path below.",
                    "projectCode": "https://reactos.org/blogs/gsoc-final-report-usb-project-0"
                },
                {
                    "title": "NTFS Driver Improvements for ReactOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5534837112832000/",
                    "content": "ReactOS is an open source operating system that aims to be compatible with Windows. It specifically targets Windows Server 2003, but it still relies on the simple, limited FAT family of filesystems which are a holdover from the days of DOS. A driver capable of reading files from an NTFS volume was added to ReactOS last spring. This project improved this driver with basic read/write access and several bug fixes, which brought the project one step closer to ReactOS' goal of Windows compatibility.",
                    "projectCode": "https://reactos.org/blogs/ntfs-write-support-gsoc-work-summary-draft"
                },
                {
                    "title": "Win32 Network Driver with lwIP 1.4.1",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4839388760506368/",
                    "content": "Currently, ReactOS lacks a working, unified network stack. I will implement a unified UDP and TCP driver using lwIP 1.4.1.",
                    "projectCode": "https://reactos.org/blogs/google-soc-lwip-conclusion"
                }
            ],
            "techStack": [
                "c/c++",
                "c"
            ]
        },
        {
            "title": "Red Hen Lab",
            "orgLink": "http://redhenlab.org",
            "projects": [
                {
                    "title": "Computer Vision and Machine Leaning Applications on Artwork Images",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5326857348055040/",
                    "content": "The proposal is inspired by the idea G on RedHen's GSoC 2016 idea page. The main purpose is to develop models and code helping domain experts to research on art history. It includes five main tasks:",
                    "projectCode": "https://github.com/mfs6174/GSoC2016-RedHen"
                },
                {
                    "title": "Gesture Recognition Using Machine Learning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6465935019868160/",
                    "content": "Gesture Recognition using template matching, motion history image and machine learning. The project is basically divided into 3 phases involving segmentation, data collection and learning. Segmentation is done using fast and robust template matching. Details of template matching are mentioned in the proposal. Phase 2 will involve deciding various gestures and corresponding data collection of these gestures from the mentioned NewsScape database. Phase 2 will also involve feature extraction. Three different kinds of features will be extracted. Firstly the template features used to segment the hand and head will be used , secondly the features generated using motion history image of the segmented hand will be used and finally the relative positions of the hands and heads will be used. These 3 types of features will be stored and used for learning. Learning will involve using  2dSvd for dimensionality reduction without losing time information. Various classifiers will b used to learn the reduced data and the one the the highest accuracy will be chosen.",
                    "projectCode": "https://docs.google.com/document/d/1nS-YMBXSaEb4lT610ICkeyfcFmu7q_AJQdZlvB6WoBs/edit?usp=sharing"
                },
                {
                    "title": "Gesture recognition using multimodal deep learning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5125399222681600/",
                    "content": "Use video and text data of the speaker to recognise gesture of the speaker on TV using LSTMs.",
                    "projectCode": "https://github.com/RedHenLab/Gesture/tree/mohsin_gesture/gesture_reco_mohsin"
                },
                {
                    "title": "Gestures, Machine learning and other things",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5151727909076992/",
                    "content": "The proposal aims to identify elements of co-speech gestures in a massive data of television news. The steps will include building a flawed data-set, which can be then manually corrected for blended classic joint attention scenarios. I have two co-speech gestures in mind, which include one trivial and one complex implementation both aiming at the movement of head and gaze direction.1.“Yes/No” gesture with shaking the head horizontally or vertically.\n2.Fast bobbing head with slow closing of eyes, as a gesture of understanding.Other than identification of the above to co-speech gestures, the project aims to create a feedback mechanism for improvement of the detection of such gestures. Also it attempts to work on better algorithms for emotion/gaze direction etc. detection. Identification of such gestures would be done first by implementing on some classifiers I already know about, including the “Haar-Classifier” and the rest of the project would concentrate on building and training one’s own classifier.",
                    "projectCode": "http://soumitraagarwal.github.io/BlendedJointAttention/articles/2016-07/Coding-period(First)"
                },
                {
                    "title": "To construct Bootstrapping Human Motion Data for Gesture Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5886680833720320/",
                    "content": "The Project aims at detecting the Human gesture  with the help of classifiers.The project consists of 1) Database, has the Segmented Frames of gestures which would be compared with the incoming news video only if there is a change in the motion of the object,found out by Graph-based segmentation. 2) Annotator, which will help in finding us the type of gesture given by the object by searching over our database. In order to improve the quality of the result we use Feedback loop between the user annotations and machine analysis results with the help of ELAN.",
                    "projectCode": "https://github.com/AswinKumar1/Forced-Alignment/wiki"
                }
            ],
            "techStack": [
                "high performance computing",
                "machine learning",
                "opencv",
                "audio procesing",
                "multimodal analysis"
            ]
        },
        {
            "title": "Robocomp",
            "orgLink": "https://robocomp.github.io/website/",
            "projects": [
                {
                    "title": "A new graphical tool for deploying components",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6372975016148992/",
                    "content": "Two main reason for this to be an important idea.\n                (1) Sometimes we will have to work with component networks which contains hundreds  of      components.The current manager is not enough for managing   such a huge network system which in effect  dwarf the usefulness of the framework .\n                  (2)The possible users of the framework include people who are working  in electrical and mechanical domains of robotics also, People who  mostly use the inbuilt  components.For them it will be good to have all the functionalities under one roof.So it is necessary to have a tool which helps to launch, control and edit the components.",
                    "projectCode": "https://gist.github.com/BasilMVarghese/b66c11871bcee5cb769e4644cbcec7e2"
                },
                {
                    "title": "Automatic code generation for State Machines",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6085194759012352/",
                    "content": "When you run robocompdsl in addition to create the file example .cdsl, will create an example file where state machine will be defined. When you run again robocompdsl with the path of construction this will create the state machine in generic files.To achieve the automatic generation of state machines, robocompdsl will read a file in which the state machine is defined. So the generic files are modified, creating in them the state machines, which can be accessed from specific files.· To achieve this in C++, I will use the Qt State Machine Framework class.I must also create the state machine in Python, this is a language booming. To do this, I have to look for information on how to create the state machine in Python· Also, a file that define the state machine (valid for C ++ and Python).",
                    "projectCode": "https://ibarbech.github.io/AcGfSM_GSoC16/"
                },
                {
                    "title": "Qt5 and ROS support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6617925590974464/",
                    "content": "The project is about implementing a Qt5 and ROS support in RoboComp’s DSL",
                    "projectCode": "https://github.com/Daniel1108/website/blob/gh-pages/_posts/gsoc2016/dgallegos/2016-08-20-dgallegosWeek11.md"
                },
                {
                    "title": "RoboComp: Object detection for simulated environments",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4543387667529728/",
                    "content": "Object detection and recognition are central problems in computer vision literature and essential for a vision based library. Recent advances in Covolutional Neural Networks (CNN)s have made the detection have made the recognition problem tractable for large number of object categories that would have been very expensive with model based classification approaches. In this project I will implement state-of-art object recognition as well as object detection/localization technique for RoboComp library. The implementation will support both real images and rendered images from CAD model. The implementation will be based on CUDA library and allow user to train and test his models. Also, a caffe independent pure RoboComp based implementation for forward pass will be developed for a selected CNN. Another component based on open scene graph will designed that would allow reading of CAD models and interfacing with current RoboComp simulation framework. Selection of rich textured CAD models is an crucial for any detection algorithm. Therefore,  the proposed project will accompany a dataset of cleaned and textured CAD models for 5 object categories.",
                    "projectCode": "https://docs.google.com/document/d/1uJq8H5lG77iEgcvyJn-cyJoBo_Zf346DBmdx6OXVH3Q"
                },
                {
                    "title": "Writing a name and port service for running components",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4600633139134464/",
                    "content": "This Project deals with writing a new component in RoboComp that will provide a naming and port service. When starting, components will now contact this new service to advertise its name, available interfaces and request a valid port. Other components starting later will be able to query the service for component names and interfaces, and therefore being able to establish their proxy connections in real time, eliminating the need for complex and tedious configuration files. Extensive tests with large networks of components will be performed and more advanced query capabilities for the service will be explored.",
                    "projectCode": "http://robocomp.github.io/website/2016/08/20/yashWeek16"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "zeroc ice",
                "cmake",
                "gnu/linux"
            ]
        },
        {
            "title": "RTEMS Project",
            "orgLink": "https://www.rtems.org",
            "projects": [
                {
                    "title": "Beaglebone Black BSP Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6072851828310016/",
                    "content": "RTEMS is mainly designed for Real time applications, embedded systems that implements a single process, multi threaded environment. The project focuses on the improvements of the BSP for Beaglebone black that consists of development of various peripherals support like PWM,I2C,USB,SPI etc. Future task would be to fix the failing tests over Beaglebone Black as well as qemu. As Beaglebones are one the popular boards. So full BSP support will be significantly useful for developers to develop applications with RTEMS.",
                    "projectCode": "https://learnsom2day.wordpress.com/2016/08/23/gsoc-2016-improvement-of-board-support-package-for-beagle-bone-black/"
                },
                {
                    "title": "Improvements in the RTEMS Trace Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6188170894901248/",
                    "content": "Current Tracing Framework under RTEMS instruments the target ELF files to trace event-data based on a user-configuration. A Capture Engine buffers trace data in SMP-safe manner and records it on the target. RTEMS uses its own format for the traces. In this project we propose to modify the tracing framework to generate traces in the standardized Common Trace Format (CTF). CTF is a bit-packed trace-format used by a range of monitoring and visualisation tools (eg. Babeltrace). In the next phase, I will implement live-tracing functionality over a set of popular transport mechanisms(eg. USB, JTAG). Using LTTng tools we can visualise and analyse these live-traces on the host. I will focus on measuring and minimizing the overhead added due to tracing.",
                    "projectCode": "http://rtems-tracing-tweaks.blogspot.in/"
                },
                {
                    "title": "Low Level Peripherals & SD Card Support for Raspberry Pi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6397834018422784/",
                    "content": "The idea aims to complete the implementation for the SD Card file system support that was previously initiated. In addition to that, I also plan on implementing DMA support for I2C and SPI, support for second SPI device and model identification, detection and reporting.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1bLqkedKvIfBJenPWVuHlcNYUdOHpr-hxd2BH_hpTJAM/edit?usp=sharing"
                },
                {
                    "title": "Raspberry PI USB and Ethernet Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5992398500921344/",
                    "content": "This project aims to improve the Raspberry PI BSP support on RTEMS. Project intends to add the following supports to the Raspberry PI BSP: USB device support, basic HID support (keyboard/mouse), networking (Ethernet driver and lwIP integration). Adding USB and Ethernet support to one of the most widely used development boards, Raspberry PI, makes RTEMS more attractive for the user community.",
                    "projectCode": "https://github.com/deval-maker/rtems-libbsd/commits/RPi_USB_Ethernet?author=deval-maker"
                },
                {
                    "title": "RTEMS Port to ARM Cortex-M4F core-based MCUs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4569689778814976/",
                    "content": "The objective of this project is to add processor support and a board support package (BSP) for the ARM Cortex-M4F  microcontrollers on RTEMS. In addition, I will be adding an ethernet driver and lwIP for networking, and console and clock ticks support for the BSP.",
                    "projectCode": "http://rtemstolaunchpad.blogspot.com/2016/08/port-rtems-to-ti-tm4c129e-final-report_21.html"
                }
            ],
            "techStack": [
                "c",
                "python",
                "waf",
                "embedded systems"
            ]
        },
        {
            "title": "Ruby",
            "orgLink": "http://ruby-lang.org",
            "projects": [
                {
                    "title": "Automatic-selection mechanism for data structures in MRI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5201565367402496/",
                    "content": "I will consider and conduct a survey about the data structures appropriate to the operations used in Ruby, and combine their merits by dynamically selecting the moderate implementation from types of data structures.Ruby is beloved by its simplicity and productivity. It is common to implement optimized data structures when working in C, but it should not impose users of the high level languages like Ruby to the task of implementing optimized data structures by themselves. However, it is necessary to select appropriate data structures in order to achieve efficient access to the data structures.It seems possible to offer some implementations per data structure in Ruby, and select it implicitly in order to offer desirable performance without difficulty to the users.For example, List is a basic structure for programmers, but Ruby does not offer it. Instead, Ruby programmers use Array. In fact, Array offers List like methods such as insert, delete, push back and more. Hence, it is easy to use, but the performance of these methods like insert and delete are not executed at a constant time, while they in List run at a constant time.\n(Similar ideas would be possible on String and Hash.)",
                    "projectCode": "http://www.spinute.org/ruby/gsoc2016/english"
                },
                {
                    "title": "Breaking changes for the 2.0 release",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5180308366295040/",
                    "content": "Everything that worked with Bundler 1.0 still works with Bundler 1.11, all new features from 1.0 to 1.11 have been incremental additions, without removals or deprecations. Some feature ideas that break backwards compatibility are planned for Bundler 2.0 release.I plan to implement two features related to the first and only bundler security vulnerability, that allowed gems to be installed from a different source than expected. This includes some changes to part of the codebase that is fragile, complex and prone to bugs, to make it a drastically simplified version which would be more stable and easier to maintain.",
                    "projectCode": "https://gist.github.com/chalkos/e93ab425f78a12058f4c97bfe98aac0a"
                },
                {
                    "title": "Cap'n Proto RPC implementation by wrapping c++",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6182672799891456/",
                    "content": "There is already a decent binding of Cap'n Proto in github but it doesn't have RPC. My project consist in extending the existing code by adding a level one RPC implementation by wrapping the existing C++ official classes in ruby.",
                    "projectCode": "https://nemonoboru.github.io/projects/2016/08/18/Google-summer-of-code.html"
                },
                {
                    "title": "Implement UJS using native JavaScript",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5116543536988160/",
                    "content": "The goal of this project is to",
                    "projectCode": "https://github.com/rails/jquery-ujs/pull/474"
                },
                {
                    "title": "Java ByteBuffer Support for Nio4r",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5743258319716352/",
                    "content": "Ruby has no native ByteArray or ByteBuffer types, unlike Java. While it'd be great to have something like this in core Ruby, the next best place would be in the New IO for Ruby project, which provides a thin wrapper around Java NIO.\nThe goal of this project would be to wrap Java ByteBuffers (particularly direct ByteBuffers) in a Ruby class that can also be implemented in pure Ruby which hooks into nio4r and can be used directly with nio4r's Java NIO backend.",
                    "projectCode": "https://github.com/celluloid/nio4r/commits/bytebuffers"
                },
                {
                    "title": "Maintain Bundler: a very popular and widely-used open source project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6133135989276672/",
                    "content": "I will help with current contributors of bundler to help maintain the bundler projects and other related project under bundler. As a maintainer, my day to day task includes: triaging bug reports, updating documentation, managing fixes and features across multiple release branches, releasing new versions, and communicating with the public.",
                    "projectCode": "https://github.com/bundler/bundler/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Aallenzhao%20"
                },
                {
                    "title": "Maintain Bundler: a very popular and widely-used open source project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6117802150723584/",
                    "content": "As mentioned in the listing for Bundler-related ideas, \"Once an open source project has taken off and become popular and widely used, writing code and implementing new features has to take a back seat to accepting bug reports, assisting users, and ensuring that contributed changes work together without causing problems for a different set of users. This project idea basically consists of the chance to participate in the ongoing work of maintaining and administrating an extremely popular open source project. It will include triaging bug reports, updating documentation, managing fixes and features across multiple release branches, releasing new versions, and communicating with the public. This project is most suitable for students interested in continuing to work in open source, either as a hobby or a job, as they continue in their career as a software developer.\"",
                    "projectCode": "https://github.com/b-ggs/bundler-gsoc2016"
                },
                {
                    "title": "Move the Bundler API back into RubyGems.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5019846106415104/",
                    "content": "My project would re-implement the Bundler API on the Rails app that provides RubyGems.org. Bundler uses bundler-api to download dependency information about all the gems it is trying to install. This request for complex database queries, marshalling the output and everything else is quite CPU intensive and rubygem.org limited hardware infrastructure could not support it until now. With help of Ruby Together, hopefully we will make bundle install faster and more reliable for everyone.",
                    "projectCode": "https://github.com/rubygems/rubygems.org/commits/master?author=sonalkr132"
                },
                {
                    "title": "Optional types for Matz's Ruby Interpreter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4986104843337728/",
                    "content": "Dynamic languages trade some of the compile-time safety properties of statically typed languages for greater flexibility for a programmer to write correct programs that a static compiler would turn down as potentially faulty. There is a recent trend to integrate aspects of both disciplines, commonly by \"adding types\" to languages originally designed as dynamic.There has been interest in the Ruby community to explore such an approach: Yukihiro Matsumoto devoted his keynote at RubyConf 2014 to the potential implementation of static typing in the language. The topic is complex: a Ruby tightly corseted by types would not be true to the essence of the language.Under a gradual typing discipline, type annotations can be specified at will: interesting parts of the program can be given explicit types and their type safety checked statically. We propose an implementation of gradual typing in Matz's Ruby Interpreter, drawing inspiration from similar additions to other dynamic languages, with strictly optional type annotations consistent with Ruby's DRY and \"lazy\" philosophy and an evaluation of the practical usefulness of gradual typing.",
                    "projectCode": "https://gist.github.com/robblanco/f644ef41d8c65f15e9ce8271f618521e"
                },
                {
                    "title": "Plugin system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5845236815233024/",
                    "content": "This is to develop a plugin system for bundler which can be used to add features like CLI commands, new sources for ruby gems and hooks for lifecycle events without modifying the core bundler project. This can enable the community to customise bundler without messing with the core module and also can be used as staging area for future bundler features.",
                    "projectCode": "https://gist.github.com/asutoshpalai/5d49663b7b19441fb2decaca8de79b28"
                },
                {
                    "title": "Rails: Support Auto-Completion in Web Console",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6484979710164992/",
                    "content": "Web Console is a debugging tool for the web apps built with Ruby on Rails. In order\nto debug, it provides an interactive Ruby session to the developers. The console is\ndisplayed in the current page of the browser, and its session stores context of running\ncode of the web app. It allows us to debug the web apps interactively.This project aims to make a better user experience for Web Console as a whole,\nand the main focus is to support \"auto-completion\" feature, which is to help us\ntyping commands speedy and quickly on the console.And also, this project is getting into ways to extend Web Console. The other goal of\nthe project is to create \"built-in commands\" and its architecture, which makes Web\nConsole more extendable, and it can open the door to yet another contributors.A point worthy of special mention is that the above features are working on the inner\nof console, and it basically does not need new things for the HTML view of Web Console.Details: https://github.com/sh19910711/google-summer-of-code-2016",
                    "projectCode": "https://gist.github.com/sh19910711/3782603cafdcecd2ca1fdda259d5803c"
                },
                {
                    "title": "Rebuild bundler.io, the Bundler website",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6035657411526656/",
                    "content": "Rebuild old, middleman based http://bundler.io website and make it more automated",
                    "projectCode": "https://gist.github.com/kruczjak/4311b5ff8fdc5afe8bc75d32f54d10f0"
                }
            ],
            "techStack": [
                "ruby"
            ]
        },
        {
            "title": "Ruby Science Foundation",
            "orgLink": "http://www.sciruby.com",
            "projects": [
                {
                    "title": "Categorical data support for Daru, Statsample and Statsample-glm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5356167010189312/",
                    "content": "In Data Science acquiring insight from data is what matters and any good data analysis tool must have the key functionalities required to extract information from data.\nNow, it’s needless to say how ubiquitous categorical data is in Data Analysis but they are not currently supported in Daru and operations on them like regression is not supported in Statsample and Statsample-glm. This shortcoming of Daru prevents data to be easily and to its full extent analyzed. This project aims to achieve just that.This project has broadly two goals:On accomplishing both of these tasks, one would be able to see Data more clearly.",
                    "projectCode": "http://lokeshh.github.io/blog/2016/08/18/gsoc-summary/"
                },
                {
                    "title": "Create a Ruby Wrapper for NASA's SPICE Toolkit",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4588569918177280/",
                    "content": "NASA's SPICE toolkit is a collection of subroutines and functions designed to interpret and perform numerical computations on archived data returned from NASA's Space Science Missions. The commissioning of this project began in 1982 and saw the release of SPICELIB, the initial FORTRAN implementation of the SPICE Toolkit. NASA has since released ports of the SPICE toolkit to other interfaces such as C and MATLAB but the ease of use of these libraries is far from attractive.This project entails the design and implementation of a Ruby wrapper for the C version of the SPICE toolkit with a focus on clean extension code and an easy to use API.",
                    "projectCode": "http://gauravtamba.me/gsoc/2016/08/22/report.html"
                },
                {
                    "title": "Port Nmatrix to JRuby",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4640058522992640/",
                    "content": "NMatrix for MRI has become a fairly well-established project. However with JRuby+Truffle+Graal becoming very fast compared to MRI, a lot of ruby developers are switching to JRuby. \nThis project aims to port NMatrix to JRuby. JRuby compiles to byte code making it fast and also does heavy optimizations before and after generating byte code. Apache Commons Math will be used to build the core of NMatrix.",
                    "projectCode": "http://www.prasunanand.com/jruby/2016/08/22/gsoc16-project-report-port-nmatrix-to-jruby.html"
                },
                {
                    "title": "Ruby Wrappers for SymEngine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5816312089542656/",
                    "content": "The work proposed is to extend the already available, but limited SymEngine's Ruby interface. This project will greatly increase the computational capacities of the SymEngine ruby gem and add interfacing with other ruby gems for mathematical programming.Some of the proposed work are:At the end of the project, added features will include:",
                    "projectCode": "https://rajithsays.wordpress.com/2016/08/19/gsoc-epilogue/"
                }
            ],
            "techStack": [
                "ruby",
                "c programming",
                "jruby",
                "c/c++"
            ]
        },
        {
            "title": "Sage Mathematical Software System",
            "orgLink": "http://www.sagemath.org/",
            "projects": [
                {
                    "title": "Expand the generic algebraic curve functionality in Sage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4758095901229056/",
                    "content": "The aim of this project is to build on the functionality Sage has for algebraic curves. The primary topics for this expansion are intersection analysis, analysis and resolution of singularities, plane curve models, and rational parameterizations. This functionality should be implemented for generic curves rather than just for plane curves whenever possible.",
                    "projectCode": "https://grayjorgenson.wordpress.com/2016/08/23/gsoc-project-summary/"
                },
                {
                    "title": "Extending Matroid Theory functionality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6306447583346688/",
                    "content": "The goal is to improve the functionality of the matroid package in terms of usefulness to researchers. In particular, we plan on the following.We will add certificates to various functions which give a boolean response, a feature to find the automorphisms of a matroid, and the ability to test if a given matroid is quaternary.Currently the test to see if a matroid is graphic cannot return a graph in the case that the matroid is graphic. It also runs in exponential time. We plan on implementing an algorithm from Bixby and Wagner which will both be able to produce the graph and run in near linear time.We will add a class for laminar matroids: This will serve as a warm up project, and could potentially be useful, as laminar matroids are important to some aspects of optimization.",
                    "projectCode": "http://extendingmatroidfunctionality.blogspot.com"
                },
                {
                    "title": "Modular Abelian Variety",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5220187808727040/",
                    "content": "There are several key features missing in Sage for modular abelian varieties. The goal of this project is to implement as much as possible. I will start with functions related to l-series and homology classes that currently raise a NotImplementedError. Then I will implement as much as possible from 16.5 of the Magma documentation.",
                    "projectCode": "https://github.com/williamstein/sage_modabvar/commits/master?author=kevinywlui"
                },
                {
                    "title": "Moduli Space of Dynamical Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5344615427211264/",
                    "content": "There is functionality for working with dynamical systems over projective space in Sage. However, one of the areas lacking in functionality is the moduli space. We say two self-maps of projective space are equivalent if there is an element of the Projective Linear Group that conjugates one to the other. The following two algorithms should be implemented, in order to create more functionality in moduli space.\nThe first algorithm would be that given two endomorphisms of projective space determine if they are conjugate. In other words, determine if they are in the same class in the moduli space. If they are, also return the PGL element that conjugates one to the other.The second algorithm would be that given an endomorphism of projective space to compute a reduced form. This conjugation would that makes the coefficients small. There is already an algorithm implemented to return the minimal model in terms of resultant, but the coefficients can be non-optimal. The simplest approach would be to reduce the binary form describing the fixed points or if the binary form describing the fixed points is not sufficiently nice then reduce the binary form for points of period n for some small n.",
                    "projectCode": "http://lifebynumber.org/life-by-blog/final-gsoc-report"
                },
                {
                    "title": "Rank Metric Codes in Sage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5721008107421696/",
                    "content": "In this project, our goal is to extend the Coding Theory library in Sage by implementing\nbase classes for linear rank-metric codes and Gabidulin codes. We also aim to add\nfunctionality for encoding and decoding algorithms and methods to answer basic queries\nabout these codes while ensuring efficient operations.",
                    "projectCode": "https://arpitdm.wordpress.com/2016/08/23/project-linear-rank-metric-codes-in-sage-gsoc-2016/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "cython",
                "c++"
            ]
        },
        {
            "title": "Scala",
            "orgLink": "http://www.scala-lang.org",
            "projects": [
                {
                    "title": "Ammonite - Better Scripts in Scala",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5203877938855936/",
                    "content": "Ammonite is an improved Scala REPL supporting convenient and robust File System operations and Typesafe bash scripting coming over lot of sloppiness of Bash.It considers of:\n    1)Ammonite-REPL  -- Improved Scala REPL\n    2)Ammonite-Ops     -- Provides robust and convenient Filesystem operations\n    3)Ammonite-Shell -- Safe and Composable Bash\nDespite of Ammonite's many improvements over Bash it’s not commonly used and my GSoC proposal is regarding improvements in Ammonite to make it a stronger candidate for popular standard scripting language.",
                    "projectCode": "https://github.com/lihaoyi/Ammonite/commits/master?author=coderabhishek"
                },
                {
                    "title": "Better off-heap collections for Scala",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6587683249848320/",
                    "content": "Scala-offheap is an experimental project which provides type-safe off-heap memory management for Scala language. The goal of this project is to expose the full potential of Scala off-heap collections by expanding the existing functionality of Array combinator methods and providing an efficient implementation of the off-heap Set and Map classes.",
                    "projectCode": "https://github.com/adamwy/mutabilite"
                },
                {
                    "title": "Dottydoc",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5280919451598848/",
                    "content": "During the winter break I decided to give back to the Scala community. I re-built the entire documentation website and implemented a new search functionality for browsing the Scala library code. This introduced me to members of the LAMP and Scala team.This summer I'd like to continue along this path by helping to implement dottydoc.",
                    "projectCode": "https://github.com/lampepfl/dotty/pull/1453"
                },
                {
                    "title": "ENSIME Graphocalypse",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5920696437833728/",
                    "content": "ENSIME is an IDE feature provider, available for most popular text editors. Currently, it uses regular relational database with a Lucene full-text search engine on top of it, to store and index whole project structure with its dependencies, but given the natural structure of the relations between things we would want to store (i.e. dependency files, classes, fields and methods) it is apparent, that a graph database can be used to achieve great success in both supporting old and introducing new exciting features, such as show implementing classes or project classes hierarchy.",
                    "projectCode": "https://gist.github.com/sugakandrey/a31539f93a1694e2ab4a7d9a023e3b04"
                },
                {
                    "title": "Flexible Fast Parser Combinators",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6740066407809024/",
                    "content": "The FarstParse library is a simple replacement for the original Scala Parser Combinators. It uses the same ideas and implements the same functionality with the only few main operators, but nevertheless provides much more wide support for logging and great performance. But now it can handle only Char/String parsers. And this project aims at the development of architecture for parsers of arbitrary classes and streaming data.",
                    "projectCode": "https://github.com/lihaoyi/fastparse/commits/master?author=vovapolu"
                },
                {
                    "title": "Implementation of Coroutine-­Based Utilities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6091500039438336/",
                    "content": "Scala Coroutines generalizes subroutines in a clean and composable way, but currently\nprovides little value to the average user who wants to use coroutines at a high level. We\npropose to build an extras subproject that will include common use­-cases for coroutines­- for\nexample, enumerators, continuations, and async/await.",
                    "projectCode": "http://kinchen.co/2016/gsoc-2016-summary"
                },
                {
                    "title": "Java source code to Scala.js IR compiler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6064612738859008/",
                    "content": "As Scala.js is Scala compiled to JavaScript, it seems only fitting that it can also compile Java code. One of the things that make Scala so popular is its seamless integration with existing Java libraries and codebases. Enabling Scala.js to compile Java would greatly enhance its functionality and make it even more attractive to developers wanting to run their code in the browser, at the same time not being limited to using JavaScript or its derivatives.Over the course of the few months it is possible to extend the compiler to a point where it can handle most Java code used in day-to-day development.The idea, as stated in the project title, is to compile Java to Scala.js Intermediate Representation (IR). Then the existing compilation pipeline can be reused to produce JavaScript code from the IR. The key to this project is that, as complex as it may be, it would reuse a lot of great code. Reusing an existing Java parser and typechecker as well as the whole JavaScript generation framework will allow me to focus on converting the AST into IR efficiently and covering as many Java constructs as possible.",
                    "projectCode": "https://github.com/piotrMocz/scalajs-java/commits/master?author=piotrMocz"
                },
                {
                    "title": "Source Code Preserving AST",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5911282943262720/",
                    "content": "The   goal   of   this   project   is   to   design   a   unifying   AST   which   helps   preserving   source ­code  attributes   thereby   allowing   IDEs   to   use   this   as   a   backend   to   implement necessary refactorings and enhancing developer workflow.",
                    "projectCode": "https://github.com/akhileshs/scalameta/"
                },
                {
                    "title": "Working towards a fully featured version of CBT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5665294865399808/",
                    "content": "CBT is a build tool in its infancy with a lot of room for optimisation and enhancement. As such, development is still very fast moving. The goal of the project would primarily be to threefold: decreasing build time by having CBT work completely in memory with a virtual file system; adding support for download center upload and deployment; and implementing a cloud compilation feature to exploit the benefits of cluster computing.",
                    "projectCode": "https://docs.google.com/document/d/1Ff-Hm14uwCF9q6t70xbv96leyoSMJcjOMmKW7qIPYNc/edit?usp=sharing"
                }
            ],
            "techStack": [
                "scala",
                "jvm"
            ]
        },
        {
            "title": "Scilab Enterprises",
            "orgLink": "http://www.scilab.org/",
            "projects": [
                {
                    "title": "General Graphics Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5180804300800000/",
                    "content": "This project aims to polish the current graphics features of Scilab such as zooming, datatips and interactive curve edition through plotting.\nUsually the Scilab is widely used by students and engineers as a completely free and open source numerical software solution for fast prototyping and data visualization. In this context the user experience is dictated by how well one can view and easily interact with its data. This makes the plotting capabilities and interactions, besides performance, a key factor of the perceived easiness and software quality.",
                    "projectCode": "https://wiki.scilab.org/GSoC_2016_Caio_SOUZA"
                },
                {
                    "title": "Improving UI-Elements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4823522614444032/",
                    "content": "Scilab being a software used worldwide, needs to focus on how its users (potential developers) interact with Scilab and how comfortable they are with using the features  provided by Scilab. Scilab already incorporates the facility to make figures such as tables labels etc and allows insertion and manipulation of data. Unfortunately even though the  facility is provided the features have been found buggy and not well documented making its usage very limited and  which incapacitates the current users and fails to attract new users .There are some most wanted features like spreadsheets, progress bar etc which are not present and are highly wished for by the users of Scilab,and others.My aim is to improve/upgrade the already existing facility to such a level that the users become very comfortable using it and to further introduce much needed user interface elements in Scilab User Interface Control to make it most favoured software. My work starts with modifying and documenting Uitables and Uitrees and extends upto incorporating ProgressBar. These development would solve major issues with GUI,would attract more users to Scilab and would help in retaining already existing users",
                    "projectCode": "http://batcode17.blogspot.in/"
                },
                {
                    "title": "Memory Safety",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5994243994681344/",
                    "content": "The main objective of this project is to reduce the memory errors faced by the Scilab code-base and ensure memory safety.",
                    "projectCode": "https://codereview.scilab.org/#/q/owner:dhruv%2540khattarindia.com"
                },
                {
                    "title": "Native Scilab Kernel for Jupyter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6165785793789952/",
                    "content": "Jupyter project provides a way to perform scientific/mathematical computations with several different programming languages using the same user interface. It achieves that by distributing the processing between a front-end (Jupyter clients, like the web based Jupyter Notebook) and a back-end (Jupyter kernels, written in Python, R, Java, etc.), that communicate among themselves with standardized format messages, transmitted through ZeroMQ connection.Besides the ability to switch across different kernels from the same common interface, another advantage of this approach is the possibility to run the two software components on different machines, e.g., offloading the heavier backend processing to a remote server while sending commands and visualizing data from a mobile device running the frontend.For Scilab, there is currently a kernel that uses a compatibility layer with file access data exchange and numpy calls to communicate with clients through the Python reference implementation.This Google Summer of Code proposal aims to adapt or rewrite the current suboptimal solution, to make it a truly native kernel, linking ZeroMQ messages directly to Scilab API.",
                    "projectCode": "http://bitiquinho.github.io/2016-08-18-notebook/"
                },
                {
                    "title": "Xcos Automatic Layout II",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4710427267170304/",
                    "content": "Xcos is a great tool for modeling and simulation. However, as the number of the blocks increases, an Xcos schema can become quickly messy.\nThis idea of is to provide options to automatically update the layout of an Xcos schema including its links and blocks, so that the diagrams could be kept well-presented. Based on the optimal route for a link, I will try to improve the positions of blocks and implement the preview functionality.",
                    "projectCode": "https://wiki.scilab.org/GSoC2016_ChenfengZHU"
                }
            ],
            "techStack": [
                "scilab",
                "c++",
                "java",
                "c",
                "fortran"
            ]
        },
        {
            "title": "ScummVM",
            "orgLink": "http://www.scummvm.org/",
            "projects": [
                {
                    "title": "Add support for MacVenture games via WebVenture engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6559102792630272/",
                    "content": "The ScummVM project currently does not support the original MacVenture games developed for the Macintosh 128k. However, there is already a modern implementation of these games that supports the original game files, the WebVenture engine.Most of the reverse engineering work for the MacVenture games is already done in the WebVenture engine, but since it is written in JavaScript, a direct port is necessary for it's integration with ScummVM. In addition, the WebVenture engine already supports the Apple II versions of the games, making it possible for them to be added to the same engine in the respective ScummVM implementation.Therefore, the goals of this project are:Most of the MacVenture games were pioneers in their respective genres, so the ScummVM community would benefit greatly from having access to these games as classics of their genres, for academic and nostalgic value.",
                    "projectCode": "https://gist.github.com/blorente/a8a66788aba35f14cf2d2338eb2bd069"
                },
                {
                    "title": "Dungeon Master",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5117213551886336/",
                    "content": "Dungeon Master, the grandfather of all dungeon crawlers, would be the very first RPG ported onto ScummVM and will enable for the fans, who grew up with it, as well as new adventurers to experience it once more. The game will also benefit from the advanced features offered by ScummVM, most significant of which is portability.",
                    "projectCode": "https://github.com/WinterGrascph/dm/commits/master?author=WinterGrascph"
                },
                {
                    "title": "Implement cloud storages support in ScummVM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6101705955475456/",
                    "content": "The idea is to implement cloud support in ScummVM. Users would be able to sync their save files and download game data from different cloud storage services on all their devices.At least these cloud services would be supported:All of them use OAuth2 and provide an API to manage user's files.Things to be implemented:Possible mentors: Eugene Sandulenko, Peter Bozso.",
                    "projectCode": "http://tkachov.ru/gsoc/post_work_product"
                }
            ],
            "techStack": [
                "c++",
                "sdl",
                "opengl",
                "assembly"
            ]
        },
        {
            "title": "Shogun Machine Learning Toolbox",
            "orgLink": "http://shogun.ml",
            "projects": [
                {
                    "title": "Fundamental ML: The usual suspects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6668976109125632/",
                    "content": "This project aims to improve Shogun’s implementation of the fundamental algorithms which are necessary and form the base of any machine learning library. Improvements will target around efficiency as well as ease of use.",
                    "projectCode": "https://gist.github.com/Saurabh7/b492519a6044a840145824011229a64b"
                },
                {
                    "title": "New Parameter Framework and Plugin Based Architecture for Shogun",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6685641655975936/",
                    "content": "Shogun is an amazing machine learning toolbox with good set of algorithms available. Since the project is old, the code base is huge and it's old. A major refactor of code is required to make the development process better and improve the user experience. This can be done by making Shogun support plugins which requires all of the code to be migrated to the plugin framework. I also aim to develop a new parameter framework to improve the syntax of the API which is exposed to the user via SWIG. This would also make installing Shogun much easier (which is an important priority of Shogun community) as base library will be small and most of the features will be enabled by installing plugins for the base library with their own dependencies.",
                    "projectCode": "https://gist.github.com/sanuj/62f576cdaa80ecaa781f78b4b9298de4"
                },
                {
                    "title": "The Shogun Detox – GSoC 2016 Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6048302868987904/",
                    "content": "As a powerful machine learning toolkit, Shogun was achieved by the efforts of many developers. However, this also implicates the trouble with Shogun: some parts of the codes are outdated, or less optimized, and codes between modules are not unified. The problems dampen the developers’ experience with Shogun, and can lead to the obstruction for further implementations. Thus, my project will be focusing on cleaning-up and refactoring the codes of Shogun, including linalg and I/O libraries, and updating several data structures. I expect to improve the maintainability, stability and beauty of Shogun by the end of my work.",
                    "projectCode": "https://github.com/OXPHOS/shogun/wiki/GSoC-2016-Final-Report-:-The-Shogun-Detox"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "swig",
                "cmake"
            ]
        },
        {
            "title": "Sigmah",
            "orgLink": "http://www.sigmah.org",
            "projects": [
                {
                    "title": "Easier Project Model Management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6500037328633856/",
                    "content": "The main objective of this project is to enhance the flexibility and versatility of Sigmah software to meet new requirements and satisfy user feedback and will be working in this regard as the GSoC project. The Sigmah's concept is extremely fascinating and  can be worked over so that it accomplishes greater heights.",
                    "projectCode": "https://github.com/niksj/GsocWork/blob/master/README.md"
                }
            ],
            "techStack": [
                "java",
                "gwt"
            ]
        },
        {
            "title": "Soletta Project",
            "orgLink": "https://solettaproject.org/",
            "projects": [
                {
                    "title": "Implement Auto-complete for Soletta Dev-App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4536824152195072/",
                    "content": "The project aims to implement live auto-complete support for Soletta Dev-App. Soletta Dev-App uses Ace editor which already has auto-complete available as an external plugin for certain languages only. The challenge is to implement the same for various nodetypes available in Soletta. Syntax auto-complete tips based on FBP will also be implemented. This will enable both new and old Soletta users a better programming environment.",
                    "projectCode": "https://drive.google.com/folderview?id=0Bz7Cfllru5REdXU2a2haNmNBRmc&usp=sharing"
                },
                {
                    "title": "Implement go bindings for soletta",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5290556552904704/",
                    "content": "Go is a programming language with a design focused on simplicity, effectiveness and performance, that is widely used in all kind of projects. With NodeJS and Python bindings for Soletta being under development, adding a Go interface would further enhance the project.",
                    "projectCode": "http://blog.digitalkid.me/almost-there-gsoc-2016/"
                },
                {
                    "title": "sol-lwm2m: Implement missing features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5629807966552064/",
                    "content": "Soletta has its own implementation of the lightweight machine to machine (LWM2M) protocol. The LWM2M protocol is used to remotely control IoT devices, these include: Firmware updates, status reporting and etc. Although Soletta already implements the LMWM2M Server and the LWM2M Client, Soletta's implementation is lacking some main features, namely: an LWM2M Bootstrap Server, Message Encryption and Data Access Control.The idea is to:",
                    "projectCode": "https://github.com/solettaproject/soletta/commits?author=bsmelo"
                }
            ],
            "techStack": [
                "c",
                "python",
                "javascript",
                "networking",
                "machine learning"
            ]
        },
        {
            "title": "Stony Brook University Biomedical Informatics",
            "orgLink": "https://bmi.stonybrookmedicine.edu/",
            "projects": [
                {
                    "title": "App development for infectious microbial genomics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5097662860754944/",
                    "content": "I will be developing a browser based interactive application for microbial genomic information using Webassembly, which will help in serving as a reference and a visual aid for spread and evolution of the infectious disease in real time. The work shall go in accordance with the OpenHealth study and application architecture for contextualization and analysis of data on the Browser. Webassembly is latest development in the web application and is much faster than the presently used languages. Webassembly will be used as a compile target to transform algorithms into Web App.",
                    "projectCode": "https://docs.google.com/document/d/1K2Qvpxc-6370ccrg258gUkV-gnSP1VPQtEKG7hXYrAI/edit?usp=sharing"
                },
                {
                    "title": "High performance Data Cube materialization and querying using Apache Spark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5673128885747712/",
                    "content": "Big data analytics has become increasingly popular in many application domains including medical imaging applications, location based services and other geospatial problems. MapReduce is and has been one of the most popular model for high performance distributed computing and data analytics. Multidimensional data cubes on the other hand have been supported by databases for large scale business intelligence. In this project we will combine the two worlds and implement a multi-dimensional data cube in Apache Spark for high performance analytics.",
                    "projectCode": "https://github.com/sameer9311/Data-Cube-Materialization"
                },
                {
                    "title": "Large scale image viewing/editing module in 3D Slicer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5105437288431616/",
                    "content": "I am full of enthusiasm about programming visualization and image processing tools to provide a fast prototyping for innovations in statistical methods and imaging informatics.3D Slicer is an open-source medical image computing environment for clinical researchers and it is well designed to extend modules for programmers.  In this project, I will develop modules in 3D Slicer to read/write, visualize and process high-resolution images used in digital pathology, which can occupy tens of gigabytes and cannot be comfortably uncompressed into RAM.  So far, I have developed a standalone application importing and visualizing the high-resolution large images utilizing PyQt and openslide-python. The interactive front panel is shown in the following Additional Info URL. The image region being visualized is defined by multiple parameters by users. This summer, I will implement scripted modules (Python) incorporating functionalities of Openslide, VTK, Qt, Slice libraries and Medical Reality Markup Language (MRML) to do streaming I/O and sub-region based processing of the images.",
                    "projectCode": "https://github.com/naiyunzhou/GSOC2016"
                },
                {
                    "title": "OpenHealth app development - Public health",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6507148989169664/",
                    "content": "Overall usability improvement and development - modernize look & feel by adding Bootstrap, increase ease of use by creating dashboard, provide more inside by adding more visualizations and supply with new information by adding new datasources.",
                    "projectCode": "https://sbu-bmi.github.io/GSoC2016-Andrey/"
                }
            ],
            "techStack": [
                "medical imaging",
                "bioinformatics",
                "hadoop",
                "big data"
            ]
        },
        {
            "title": "strace",
            "orgLink": "https://sourceforge.net/projects/strace/",
            "projects": [
                {
                    "title": "Multi-platform continuous tests infrastructure",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5741642204053504/",
                    "content": "Strace is an essential tool which has been ported to multiple architectures.  To confidently ship release, we need to ensure each new commit has been tested on all supported architectures.  This project intends to provide such functionality using existing tools like Docker, Travis CI, Open Build Service, etc.  Multiple available options are compared in attempt of finding one which achieves high platform coverage, minimizes test time and ensures realistic replication of testing environment.  The anticipated result of this project will be a working implementation of best solution as discussed.",
                    "projectCode": "https://www.csie.ntu.edu.tw/~yunchih/gsoc/"
                },
                {
                    "title": "Netlink socket parsers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5126179027681280/",
                    "content": "Netlink is, basically, an API used to transfer information between kernel and user-space processes. It consists on a standard sockets-based interface for user-space processes and an internal kernel API for kernel modules. The general idea would be to add netlink messages parsing support in\nstrace. It could be very useful for network debug or tracing.After this work, more netlink family protocols can be added (NETLINK_ROUTE,\nNETLINK_FIREWALL ...).",
                    "projectCode": "https://github.com/Saruta/strace"
                },
                {
                    "title": "Strace Fault Injection Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5253362136121344/",
                    "content": "Fault injection is something that could be really usefull in many ways for\ndeveloppers and testers. It could be used in test suites context to assert that\nan application behave correctly on errors. By errors we don't necessarely mean\nthat something went wrong, in fact an asynchroneous application may want to\nhave some tests for the code path when getting an EAGAIN value on a read for\nexample. Normally the tester have to setup a complex environment to create\nartificial errors or simply assert that the code works the way it should.\nstrace would definetly get rid of that easily. On another hand if we considere\nthe high proportion of bugs found by fuzzers nowadays it's pretty clear that\ntampering with the underneath of applications, that is with syscalls, looks\npromising.",
                    "projectCode": "https://brokenpi.pe/tools/strace-fault-injection"
                },
                {
                    "title": "Truly structured output for strace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6296300991545344/",
                    "content": "Parsing current strace output is not an ideal solution, because:A more correct way would be for parsers to store parsed data in memory in a more\nabstract representation, which then could be used by various outputting engines,\nfor example, a JSON engine or an engine for the traditional strace output.",
                    "projectCode": "https://github.com/lineprinter/strace/wiki/GSoC-related-information"
                }
            ],
            "techStack": [
                "linux",
                "c",
                "git",
                "shell script",
                "make"
            ]
        },
        {
            "title": "Sugar Labs",
            "orgLink": "http://sugarlabs.org",
            "projects": [
                {
                    "title": "Git Backend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4898833389584384/",
                    "content": "The Sugar Journal doesn't do a great job of supporting versioning or forking. This project is to build a backend for the Journal and Turtle JS that is based on git, which does support versioning and forking. This project will also help the end user i.e., students and teachers to understand the concept of git.  We also get the benefit of network access by building on the top of a git hosting site",
                    "projectCode": "http://vikramahujagsoc.blogspot.in/2016/08/gsoc-2016-final-blog-post-git.html"
                },
                {
                    "title": "Journal Rethink : Abhijit",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5603387743666176/",
                    "content": "Journal Rethink is to enhance Journal such that students could use it as a platform to do their project-work. The project includes adding extensions like the Shared mini-Journal to the Journal which can be used as a platform for working on the project-based school activities by students.",
                    "projectCode": "http://abrahmab.github.io/GSOC-Final-Submission/"
                },
                {
                    "title": "Music Widgets",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4530264394956800/",
                    "content": "This Project is implementing four widgets \n[1]. Pitch Stair case \n[2]. Tempo\n[3]. Rhythm Ruler\n[4]. Free pitch slider\nand more if time permits.",
                    "projectCode": "http://musicblocks.net/2016/08/23/gsoc-final-submission/"
                },
                {
                    "title": "Sugar Labs proposal - Jeremie Amsellem",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5084828424732672/",
                    "content": "Full proposal is available at : https://wiki.sugarlabs.org/index.php?title=Summer_of_Code/2016/SugarizerOS",
                    "projectCode": "http://lp1-eu.blogspot.fr/2016/08/google-summer-of-code-last-week.html"
                },
                {
                    "title": "Sugar on the Ground",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6111341446168576/",
                    "content": "This projects aims at optimizing the storage capabilities on XO, adding improvements to the Sugar UI and adding offline support to InfoSlicer and GetBooks activities.",
                    "projectCode": "https://iamutkarshtiwari.wordpress.com/about/google-summer-of-code16-with-sugar-labs-2/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "gtk+"
            ]
        },
        {
            "title": "Sustainable Computing Research Group ( SCoRe )",
            "orgLink": "http://www.scorelab.org/",
            "projects": [
                {
                    "title": "A Clustering-based Analysis Tool for Anomaly Detection at Large Scale",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6225674012459008/",
                    "content": "Security is a serious problem nowadays.  Anomaly Detection might be a good answer to the problem. As the amount of data becomes extreme large, normal computing methods cannot handle such a volume. Running Big Data on Spark ecosystems might be a reasonable way. Its capability to compute data at large scale give us a good solution. However, most of data are unlabeled data; and labeling data not only means highly cost but also requires expertise in that domain.  That is to say, using Supervised Learning algorithms might be unreasonable. In addition, Semi-supervised learning might not be a good way too as for its assumptions need some particular data distributions. Unsupervised Learning (Clustering-based) is a good start step towards this problem. \n       Thus, in this project, I am trying to solve this problem by two phases: retrieving data from Elasticsearch-Hadoop; building a statistical analysis tool on Spark streaming computing from a clustering perspective.  It aims to detecting the patterns in a dataset which behave abnormally.",
                    "projectCode": "https://github.com/xiaoleihuang/OpenADS/"
                },
                {
                    "title": "Bassa",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5462650255310848/",
                    "content": "Automated download queue to take the best use of internet bandwidth by monitoring the network traffic and downloading at the optimum time period.",
                    "projectCode": "https://github.com/scorelab/Bassa/commits?author=malithsen"
                },
                {
                    "title": "G-Clouds",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4991902243880960/",
                    "content": "A homogeneous client library implemented in GO language for performing basic cloud computing tasks via heterogeneous APIs provided by different cloud providers. The objective of this project is to come up with a unified API which increases productivity of the programmer by providing a uniform way of working with different platforms, as well as to increase the portability of applications which use this library, among different vendors.",
                    "projectCode": "https://github.com/TharinduMunasinge/gocloud/wiki/GSoC-submission"
                },
                {
                    "title": "Implementing the tracker front end",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4648968164212736/",
                    "content": "Tracker is a Node.js application (Restful Service) + MongoDB stack which is capable of  sending and receiving hundreds of GPS data in real time, with the functionality of being able receive GPS data from any GPS unit and store them in a Mongo database and allowing us to retrieve those data and manipulate to track those devices using its Restful service.Target of the project is to design and implement rich and responsive user interfaces for the managing and graphically representing of GPS data and information of the trackers.",
                    "projectCode": "https://docs.google.com/document/d/1xk1vP2tWpNzDXF-YkavHudpKC4ryUrKOnn6T4VfbALg/edit?usp=sharing"
                },
                {
                    "title": "IoT middle-ware platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4740818724192256/",
                    "content": "With the low cost of sensors and many interesting usages of them, many industries and academia are increasingly using them.\nAutomation is becoming hugely popular because of this recent popularity of IoT (Internet-of-Things).\nHowever as expected, IoT is becoming fragmented because of various standards and manageability of these devices are becoming quite complex.\nIn addition to that these devices produce data 24x7, therefore processing and analyzing them is not a simple task because of the number of transformation steps to make the data ready for the required analysis.\nTo solve these issues, I propose an IoT server developed using open source frameworks with the required interoperability and features.",
                    "projectCode": "https://github.com/scorelab/OpenIoE"
                },
                {
                    "title": "OpenADS - On the fly insights from the elasticsearch data stream",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5116335499509760/",
                    "content": "Task would be to get the data from Elasticsearch as a stream and model it as a graph in order to  provide insights on the fly. Once we map the data stream into a graph model, we can use the high performing graph algorithms to cluster the data and send through different nodes for further processing.",
                    "projectCode": "https://docs.google.com/document/d/1nfuYr_ObdLZjTZytDojhHPNv72DUHhqLqHZfAcVY4eA/edit?usp=sharing"
                },
                {
                    "title": "User interfaces for Tracker",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5602835840368640/",
                    "content": "This proposal is for User interfaces for Tracker project in SCoRe",
                    "projectCode": "https://gist.github.com/Dilu9218/c40f73b8fbb7e2f70077f20eafda031b"
                }
            ],
            "techStack": [
                "java",
                "android",
                "hadoop",
                "python",
                "golang"
            ]
        },
        {
            "title": "SymPy",
            "orgLink": "http://sympy.org/",
            "projects": [
                {
                    "title": "Adding to SymEngine's Polynomial functionality and interfacing it with FLINT & Piranha",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6695921391763456/",
                    "content": "This project deals with introducing much needed functionality to the SymEngine polynomial module. It improves upon the already existing univariate polynomial class, and also implementing a new multivariate polynomial class. Along the way, I also want to implement classes for rational coefficients for both these classes, and benchmark their performance against the integer class.Also, as discussed with the potential mentors, polynomial manipulation should also be provided by dedicated polynomial libraries like FLINT & Piranha. So, I propose to implement interfaces with these libraries, to use the functions they provide.Rest of the details are explained in the project proposal.",
                    "projectCode": "https://gist.github.com/srajangarg/5a56d9e7400ca0ab9bdeb6ce0e49b432"
                },
                {
                    "title": "Extending solveset",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6056916694335488/",
                    "content": "Solving equation is a quintessential feature of any Computer Algebra System. And having the ability to solve a variety of equations, with accuracy, adds new dimensions to the system. Currently, SymPy has two different APIs for solving equations- the old solve and the new solveset. The solveset module is based on a Set based results while the solve uses a list for the same. Recently, there has been a lot of development around the solveset to replace solve. The major issues with merging solveset with solve are that the lack of solvers for univariate Transcendental Equations and Multivariate equations. I, on my part, intend to implement these solvers to extend the solveset module and make it more robust.",
                    "projectCode": "https://gist.github.com/kshitij10496/02239931fd59e510e03f5ee7ffe33788"
                },
                {
                    "title": "GSoC 2016 Application Gaurav Dhingra: Group Theory",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6593494743252992/",
                    "content": "It would be awesome to have a Group Theory module. Presently only Combinatorics module has been implemented in SymPy, which is fairly well developed. My intention is to create a module for computation with Finite Groups and Finitely Presented Groups. I will focus upon:After taking a basic course in Abstract Algebra, i realised that computations in even the \"small\" (i.e small order) FpGroup is difficult to do manually. Also i have been contributing to SymPy for almost 1 year now, so i think adding its functionality to it would be good to SymPy and Python world in general. On the way i came across Magma software, i enjoyed reading its documentation (i haven't used it). Alas! it's a proprietary software, so i would like to add that functionality that i could use in further studies.",
                    "projectCode": "https://gxyd.github.io/gsoc2016/gsoc2016_project.html"
                },
                {
                    "title": "GSoC 2016 Application Shekhar Prasad Rajak: Solvers - Completing Solveset",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6728916672708608/",
                    "content": "SymPy is a Python library for symbolic mathematics. Solvers module is mostly used module, so it is very important that Solver works perfectly and give all solution. Harsh Gupta( GSoC 2014) and Amit Kumar (GSoC 2015) have worked on Solveset submodule. Solveset returns a set object and a set object takes care of all types of output.\nBut to make Solveset fully functional, need to implement Non-linear multivariate Equation and System of multivariate Equation solver, System of Inequality solvers, Transcendental Equation solver and have to improve solve_trig, _invert methods .\nSo in this summer I want to implement these remaining things, to complete Solveset.",
                    "projectCode": "http://shekharrajak.github.io/"
                },
                {
                    "title": "Implementation of Holonomic Functions in SymPy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6325197531512832/",
                    "content": "The Goal of this project is to implement operations on Holonomic functions in SymPy. Holonomic functions cover a very large set of functions, and have algorithmic closure properties and are also easily represented on a computer. These are of great use in Computer Algebra and have applications in Integration and Series Expansions.",
                    "projectCode": "https://gist.github.com/shubhamtibra/37fd0ebeeda094ed1b57508c8b8484b7"
                },
                {
                    "title": "Implementation of Singularity  Functions to solve Beam Bending problems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5169362239488000/",
                    "content": "My proposal aims at designing and implementing a singularity functions module in a pure mathematical way. This module is further utilised in implementing a module which would only focus on solving beam bending problems. There will be a CAS implementation of  the singularity functions and some high level abstractions for solving beam bending problems.",
                    "projectCode": "https://github.com/sympy/sympy/commits/master?author=sampadsaha5"
                },
                {
                    "title": "Implementing Finite Fields and Set module in SymEngine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5419004260777984/",
                    "content": "Polynomial factorization is one of the fundamental tools of the computer algebra systems. And in symbolic mathematics, it is one of the basic requirement over which other algorithms can be implemented. Currently, SymEngine has the implementation of Univariate Polynomial class, which provides us the basic functionality to add, multiply and subtract two polynomials.Now, comes the problem of factoring the polynomials and then other modular arithmetics and, gcd and lcm.Therefore, we need to have a module, which can convert the polynomial into a finite field (or Galois Field), do basic operations of add, mul, div etc. on them and then the algorithms for factorization like:After doing factorization, we will be able to find roots, which in turn will help us to solve univariate polynomial equations. Then for returning solution, Set are the simplest and most intuitive way. Like in real pen-paper exam, we are supposed to return solutions in form of sets. So, here also, following the way sympy has been adapting to solveset, we should develop a basic infrastructure, over which solveset can be developed.",
                    "projectCode": "https://github.com/symengine/symengine/commits/master?author=nishnik"
                }
            ],
            "techStack": [
                "python",
                "c++"
            ]
        },
        {
            "title": "Systers, an Anita Borg Institute Community",
            "orgLink": "http://systers.org",
            "projects": [
                {
                    "title": "[Malaria - iOS] Malaria Prevention iOS App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5509901874888704/",
                    "content": "Malaria Prevention is a Swift application that will aid the Peace Corps volunteers in Africa defend against the Malaria disease. I am responsible with developing the second version of the application and launching it on the App Store.",
                    "projectCode": "https://gist.github.com/teo029/ab3ab8de6443e83ced97731bd2499fd3"
                },
                {
                    "title": "[PCSA-Android] Collaborative Map of Risk Areas",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6136682290085888/",
                    "content": "Aiming at the goal of PCSA, which is to help victims of sexual assault, I propose through this, add a feature to the application, which enables a collaborative mapping of areas that offer risk to the volunteers.",
                    "projectCode": "https://gist.github.com/izacristina/3d2216473c02c2469d15c47e633ceca6"
                },
                {
                    "title": "[portal] Completion of Systers Portal Meetup App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5233399933435904/",
                    "content": "After Meetup Everywhere was discontinued, Systers needed a Meetup app within the Systers Portal. This project was started last year but several features are yet to be added to it. This project aims at adding some extra features and completing the Meetup app.",
                    "projectCode": "https://everybodyneedsablog.wordpress.com/2016/08/20/systers-portal-meetup-application/"
                },
                {
                    "title": "Automated Testing - VMS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4748188619636736/",
                    "content": "Systers has many projects wherein it is crucial to ensure that applications function as expected. Volunteer Management System is one such project, which is currently in a state of active development. However there is no testing system in place to monitor the changes being proposed to the project.The existing tests are housed in a different repository, brittle in nature, extremely sensitive to changes in the UI and take up a lot of time to execute. In addition to these, the coverage is low and the tests are limited in nature to unit and functional.My plan for the summer is to add continuous integration for the project, migrate the entire test framework to follow a more scalable and maintainable design pattern, reduce test time as well as duplication and to add a series of python scripts to increase test coverage and variety for different scenarios applicable. Also, I hope to setup Cross Browser Testing via Open Sauce/Browserstack.",
                    "projectCode": "https://github.com/smarshy/vms/wiki/GSOC-16--Work-:-AUT-VMS-%5Bvatsala%5D"
                },
                {
                    "title": "Automated Unit Testing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6195637427109888/",
                    "content": "I would like to work on Automated Unit Testing and build off the current base that was developed last year, partly by me.  The goal is to create a comprehensive suite of tests for Systers projects such as Photo Language Translation, expanding and improving the code base that  is currently there and developing new tests for new features added to the program that I would be testing along with more tests for previously existing features.  I would like to try to continue integrating the tests  with Travis CI and Sauce Connect or something similar and also create more documentation to make it easier for other developers to be able to start contributing to the project!",
                    "projectCode": "https://docs.google.com/document/d/1QXlycV24xGfdp1PV735F09dDEDsXUK-ALtefQp7YFG4/edit?usp=sharing"
                },
                {
                    "title": "Crowdsourcing for the Guyana Deaf Community - Google Glass Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6629263499329536/",
                    "content": "The Peace Corps have taken up the task of working with PCVs to educate the differently-abled students of Guyana who are unable to hear. The volunteers identify such students in need and shall upload their location along with other necessary details on the Guyana Crowdsourcing portal. I worked on this project last year to build the portal using Ushahidi. For implementing GIS, integration of Google Glass with the Ushahidi Portal is desired. This shall serve to post images and videos of differently abled students on the map. Closed Captioning to aid communication using Glass shall also be implemented as a Glassware.",
                    "projectCode": "http://systers-opensource.blogspot.in/2016/08/divya-upadhyay-gis-crowd-final-status.html"
                },
                {
                    "title": "Malaria Prevention Application Proposal (Android)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6258539639078912/",
                    "content": "The aim behind Malaria-app-android is to help PeaceCorps volunteers sustain protective practices against malaria. Currently the application serves the function of a medication reminder with a trip planner and Information Hub.\nThe current application does not have a mechanism to push user's data to web back-end. Hence, I plan to create a mechanism to push and store user's data from all devices on a single database. I also plan to game-ify the application by adding a point system, a reward system, a sharing feature and 2 mini-games. Last, I intend to add a 'medication check' and 'refill' feature.",
                    "projectCode": "http://yatna1.blogspot.com/2016/08/i-worked-on-malaria-prevention.html"
                },
                {
                    "title": "Migrating Volunteer Management System to Class based views and Search Engine Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5000811885101056/",
                    "content": "Systers’ Volunteer Management System  currently uses function based views. It repeats certain patterns again and again, and is mostly redundant. Function based views are deprecated after Python version 1.3.  Class Based generic views helps to streamline common use cases, saving development time and effort.\nConsidering various advantages of shifting to CBV,  I propose this migration for all the apps in VMS.The project also aims at implementing a django-haystack powered Search functionality to VMS to search volunteers by region/city, job/task etc. Haystack helps to write search code once and choose the search engine we want it to run on, and is particularly modular.",
                    "projectCode": "https://docs.google.com/document/d/1ryU5TJ-NKbSj2YWEaqH35AhlFcDnnY1siQF4JC7kgXE/edit?usp=sharing"
                },
                {
                    "title": "Mobile App Control Center",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6095102040604672/",
                    "content": "A server-side support platform for Peace Corps' mobile projects",
                    "projectCode": "http://systers.org/systers-dev/doku.php/medha_chakravarthula"
                },
                {
                    "title": "PCSA Web-App (FirstAide)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5675574601187328/",
                    "content": "PCSA (Peace Corps Safety App) is a web application developed to help the volunteers if they become victims of sexual harassment.It also ensures safety by sending messages to fellow volunteers when in trouble. Usually, the victims are uncomfortable  to report the crime or unwilling to get support. This app ensures that the victim can be sure of getting all the help he/she needs.\nThe sexually assaulted volunteer can get information of Peace Corps reporting and safety procedures and also contact Peace Corps for help.",
                    "projectCode": "http://gsoc16experience.blogspot.in/"
                },
                {
                    "title": "Peace Corps Safety App - iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5700176710729728/",
                    "content": "Peace Corps Safety App (PCSA) helps the volunteers to get information about the Peace Corps’ safety and security procedures in a button click. It also has the functionality in reporting and sending messages when the PCV’s (Peace Corps Volunteers) are in trouble. The purpose of my proposal is to suggest the iOS version for the Peace Corps Safety App. The scope covers the initial development of the iOS version to reflect the already developed Android app and the remaining development which is suggested by the UI and general content update by the Peace Corps.",
                    "projectCode": "http://systers.org/systers-dev/doku.php/chamika"
                },
                {
                    "title": "PeaceCorps Safety App (Android)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5927586102247424/",
                    "content": "Sexual assault is a major concern in today's world. PCSA is a mobile application that aims to serve as a safety resource to the PeaceCorp Volunteers (PCVs). The sole purpose of the app is to guide the volunteers to protect/defend themselves from sexual assault.",
                    "projectCode": "https://github.com/systers/PCSA-Android/commits/develop?author=rohands"
                },
                {
                    "title": "Photo Language Translator (PLT)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4754493900062720/",
                    "content": "Photo Language Translation project is helpful for the Peace Corps Volunteers who are working  in different countries and sites which are developing local languages. The photos uploading, Chuukese and English translation are already done and the main requirements of the project are the offline usage of “application”, categorization of the article, add geolocation using OSM, refactoring code and removing the bugs of the existing code.",
                    "projectCode": "http://rupinderwadali.github.io/Final/"
                },
                {
                    "title": "PowerUp (iOS)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6490536055668736/",
                    "content": "An educational mobile game app that will allow young girls to learn about reproductive health and self-esteem by navigating the life of their Avatar in a virtual world! The iOS app would cover a variety of features including mini-games and choose-your-own-adventure scenarios that would teach SEL (Social Emotional Learning), conflict resolution, health skills in a fun, interactive way.",
                    "projectCode": "https://github.com/systers/powerup-iOS/commits/develop?author=sanyajain"
                },
                {
                    "title": "PowerUp Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5082861866582016/",
                    "content": "The goal of this project is to create a female empowerment app which spreads awareness among  the preadolescent girls on sensitive issues like reproductive health, teenage pregnancy, sexually transmitted infections and low self esteem. It is and educational app which will help the young girls in taking decisions when such situations arise in life. To address this issue, PowerUp uses Social and Emotional Learning (SEL) to empower middle school girls to take ownership of their health and sexual activity. The proposal is to create a mobile application that will incorporate quality and relevant information surrounding self-esteem and reproductive health, and will offer interactive activities to help concertize corresponding concepts through a choose-your-own-adventure game that puts preadolescent girls in the driver’s seat, making their own decisions to learn about reproductive health and self-esteem.",
                    "projectCode": "https://docs.google.com/document/d/1tDD1Y6XT8k5LEmEOCDb9p8_i-Zt-vky7ZE_ju-InVis/edit?usp=sharing"
                },
                {
                    "title": "Systers Features for Mailman 3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5163212114755584/",
                    "content": "Currently,a customized version of Mailman2 is used by Systers. My main goal will be porting Systers customized features to Mailman 3.The features that are ported include Essays and Stats for admins like: - Number of subscribers/unsubscribes: - Number of total unique subject lines - Number of subscribers that posted.",
                    "projectCode": "https://github.com/systers/postorius/pull/4/commits"
                },
                {
                    "title": "Test Automation for Mobile App Control Center",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6533553911234560/",
                    "content": "This project is about extending the automated test suite for the Mobile App Control Center(MACC) which is one of the many projects undertaken by Systers, an Anita Borg Institute Community. The objective of this project is to create, maintain, and execute automated tests for this web software applications on the Systers platform. The project's main goal is to have reusable and automated scripts for regression testing.",
                    "projectCode": "https://docs.google.com/document/d/1fzjT84IN6R9FhJP5kwXof2rHXpBzGNJonSxStJDASJ8/edit?usp=sharing"
                },
                {
                    "title": "Testing Automation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4969441443971072/",
                    "content": "Systers has a lot of social impact projects it undertakes.  It is important that these projects are tested before released to the public.  This project seeks to create reusable selenium webdriver scripts to test one of the Systers web app projects for regressions.  The project also provides the ability to test the web app across multiple browsers, configuring a continuous integration tool and testing the web app in conjunction to its database.",
                    "projectCode": "https://github.com/daisyab/pchub/commits/new"
                },
                {
                    "title": "Testing Automation for Peace Corps Safety Web Application(PCSA Web)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5723533548191744/",
                    "content": "The project aims at creating a Java based testing framework for PCSA(Peace Corps Safety App) Web application project undertaken by Systers on the Ideas Page for GSoC 2016. The goal is to create efficient, reusable, executable and maintainable test scripts for regression, functional and integration testing. The framework will be configured on a continuous integration tool and will be tested and configured on a cloud service for cross browser and platform compatibility. It will be implemented in Java using Selenium WebDriver and Maven.",
                    "projectCode": "https://drive.google.com/drive/folders/0B1qLSXsGqNTPdkJFYnUwcy1pb3c"
                }
            ],
            "techStack": [
                "python",
                "android",
                "ios",
                "mysql",
                "ruby on rails"
            ]
        },
        {
            "title": "TARDIS-SN",
            "orgLink": "http://tardis.readthedocs.org",
            "projects": [
                {
                    "title": "Carsus - TARDIS support package for creating atomic datasets.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6699840280985600/",
                    "content": "For running its simulations TARDIS needs atomic data, such as atomic masses, ionization energies, \nlevels and transitions. This data is available from a number of known sources. In order for TARDIS to be\nable to use the data, it should be downloaded, stored in a database, and converted to the HDF5 format. \nThis task is currently done by the tardisatomic package; however, this package has some underlying \nissues. It has no clear workflow and the existing database structure is difficult to modify and maintain. \nThese problems complicate adding and processing data from new sources.If my project is accepted, I will implement a new package named carsus (the name suggested by \nthe collaboration) that will be deprived of the issues inherent in tardisatomic. The new package will \nhave clear workflow, sound database structure and flexible input/output modules.",
                    "projectCode": "https://gist.github.com/mishinma/011aa5ed9ce417c3f514027394c21300"
                },
                {
                    "title": "Extensive Test Suite for TARDIS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4796129849901056/",
                    "content": "TARDIS has scientific code. While many people working together on various functionalities - there are possibilities for anything to break and go undetected for a long time. It might misbehave at times and detecting it would get very difficult at times. Testing a scientific code like TARDIS is crucial - apart from the main code base, the test suite needs to be up-to-date and should have a good code coverage.  This project focuses on development of an extensive test suite - which will stretch and probe many functionalities of TARDIS to make sure everything functions properly. But these test setups are very complex, hence testing is slow and resource extensive.\nSolution - this testing project ! Enabling slow tests to be run at regular intervals on a dedicated server, generating comparison plots and notification of test status through email - these are the assets which are targeted to be added with TARDIS by completion of the project.",
                    "projectCode": "https://github.com/tardis-sn/tardis/pulls?utf8=%E2%9C%93&q=author%3Akarandesai-96%20created%3A%222016-03-26..2016-08-22%22%20"
                },
                {
                    "title": "Improvement of the TARDIS configuration system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5656164301799424/",
                    "content": "Currently, TARDIS uses the pyyaml library to parse the configuration file and a complex, custom-made validator to validate it. The issues with the configuration system in its current form are many:My project proposal is to improve the way the configuration system works by:",
                    "projectCode": "https://github.com/ftsamis/tardis/wiki/%5BGSoc-2016%5D-Fotis-Tsamis'-Work-Product-and-devlog"
                }
            ],
            "techStack": [
                "python",
                "cython",
                "c"
            ]
        },
        {
            "title": "TEAMMATES @ National University of Singapore",
            "orgLink": "https://github.com/teammates/teammates",
            "projects": [
                {
                    "title": "AutoComplete ComboBox for Panel's Filter, Interactive Tutorial and GUI Filter Expression Generator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6359480765775872/",
                    "content": "In this proposal, 3 features will be proposed. All proposed feature are based on the needs for user to key in the panel filter faster and easier.The first proposed feature is to provide a dropdown list of possible filter expression based on the partially input expression. This feature will help the user to recall label spelling and enter the filter expression faster. The second proposed feature is to have an interactive tutorial for first-time user. The tutorial will guide the user step-by-step on various syntax on writing the filter expression. The last proposed feature is to allow user to create filter expression by using a GUI wizard. The wizard will allow drag and drop of labels to create filter expression for issues.",
                    "projectCode": "https://github.com/HubTurbo/addressbook/pulls?utf8=%E2%9C%93&q=%20is%3Apr%20author%3Ayl-coder"
                },
                {
                    "title": "Email Customizer and Rich-text support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6428000794968064/",
                    "content": "Proposal is based on two project ideas:",
                    "projectCode": "https://github.com/TEAMMATES/teammates/pulls?page=1&q=is%3Aclosed+author%3Abelyabl9+is%3Apr+label%3As.MergeApproved"
                },
                {
                    "title": "HubTurbo -- Usability Hero",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5937087375212544/",
                    "content": "Why me?Purpose / VisionFeature categories",
                    "projectCode": "https://github.com/HubTurbo/addressbook/pulls?q=is%3Apr+author%3AYijinL"
                },
                {
                    "title": "Project Proposal - Reports+ in TEAMMATES -GSoC 2016",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6544904167620608/",
                    "content": "In this proposal, I discuss my approach on improving the existing reporting platform with more data formats to download, with more visualizations and more statistics.",
                    "projectCode": "https://github.com/TEAMMATES/teammates/commits/master?author=rclakmal"
                },
                {
                    "title": "Report + And Question +",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4607451131281408/",
                    "content": "I am willing to devote extra time if required to complete this project. I am much familiar with the TeamMates working flow . And I am always willing to learn new stuff if required.",
                    "projectCode": "https://github.com/TEAMMATES/teammates/commits/master?author=tarun14110"
                },
                {
                    "title": "Sessions + (Customisable Feedback Paths)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6312019766542336/",
                    "content": "This proposal outlines the steps that I plan to take in order to enhance the customization of the Sessions feature. It explores a possible approach in implementing a feature that would allow the Feedback Session Creator to specify which Feedback Giver should give feedback to which Feedback Recipient on a per-question basis.",
                    "projectCode": "https://drive.google.com/open?id=1FdiyiDfSav8ZuXODaDhiycjGcf4_r0_huyZYYTNQlp4"
                },
                {
                    "title": "Usability Hero: Rethinking the UI/UX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4828703955615744/",
                    "content": "TEAMMATES has many features and customization that can be better delivered to the users by:",
                    "projectCode": "https://github.com/TEAMMATES/teammates/commits/master?author=YongJieYongJie"
                }
            ],
            "techStack": [
                "java",
                "app engine",
                "javascript",
                "css",
                "html"
            ]
        },
        {
            "title": "The Apertium Project",
            "orgLink": "http://wiki.apertium.org",
            "projects": [
                {
                    "title": "Adopt an unreleased Kazakh-English language pair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4744168530247680/",
                    "content": "These days the translating text automatically by using machine translation is very important, because it helps people from whole world to understand and get information in foreign language very quickly and easy. I want to improve Kazakh-English machine translation(MT) system on Apertium, because: resources could be used for another language pairs, where the Kazakh is source language; English speakers, who are interested in Kazakh culture could use it to understand Kazakh texts, songs and news. My mother language is Kazakh and I fluently speak English, and I am already familiar with Apertium system: I started to build Kazakh-English MT system in 2014. Therefore, I am planning to rise quality of translation by expanding dictionaries, cleaning testoc and writing more rules.",
                    "projectCode": "http://wiki.apertium.org/wiki/User:Aidana/Proposal/Working_plan#Report_of_GSoC_project"
                },
                {
                    "title": "Apertium website improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5652720409116672/",
                    "content": "New features provide benefits both to Apertium users and Apertium team.\nApertium website users will get the improved tool which provides a new dictionary lookup mode which is the second important feature after translation itself.\nThe feedback feature is important to Apertium team. Apertium team will be able to know more about Apertium from users and the tool obtains more testing from people who don't have technical background.\nBoth the feedback page and reliability visualization make the site more user-friendly thus it will grow to one of the coolest online translation tools.",
                    "projectCode": "http://wiki.apertium.org/wiki/GSOC%2716_Kira%27s_results._Apertium_website_improvements"
                },
                {
                    "title": "Apertium Weighted Transfer Rules",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5976116011466752/",
                    "content": "The idea of the task is to implement a mechanism of resolving transfer rule conflicts using previously obtained rule weights. The tool for obtaining the weights is to be implemented as well.Currently, transfer rules have to be devised with no possibility of conflicts, and that limits the system's capabilities, because ambiguity is an essential part of any natural language, and that fact should be reflected by the rules. Introducing of weighted rules would have a positive impact on both how the transfer rules represent the language pair and the quality of the resulting translation.The deliverables will be as follows:",
                    "projectCode": "http://wiki.apertium.org/wiki/Weighted_transfer_rules_at_GSoC_2016"
                },
                {
                    "title": "Automatic Blank Handling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5791376851599360/",
                    "content": "Our current format handling is brittle, requiring transfer rules to explicitly deal with blanks, and some times inevitably outputting them in the wrong order. This project is to do blank-handling automatically, by treating some blanks as \"glued to words\" (e.g. italics, emphasis), and others as paragraph-level blanks.",
                    "projectCode": "https://apertium.projectjj.com/gsoc2016/junzayy.html"
                },
                {
                    "title": "Investigation of new ways to combining Constraint-grammar and apertium-tagger & a new averaged perception based tagger",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5669287574372352/",
                    "content": "Many less resourced languages don’t have a tagged corpus or only have a small amount of poorly tagged material. In such cases unsupervised learning is a great first step beyond simply picking a random tag or the most frequent form according to some corpus statistics. The way CG is currently combined with the tagger works reasonably well empirically but is actually somewhat unsound in terms of the theory of operation of the tagger (words are identified by different ambiguity classes during training and tagging). For my first task, I will implement new ways of combining them both during in tagging and during tagger training .For my second task I will implement an averaged perception POS tagger based on the one in the Python module nltk. This will have some level of configurability in terms of word features (ie can choose to look at suffixes or prefixes of different lengths) to accommodate different types of languages. Another requirement will be to work (not necessarily very well) with little or no configuration (which means eventually not using the coarse tags of the other taggers).",
                    "projectCode": "http://wiki.apertium.org/wiki/Frankier/GSOC_2016_submission"
                },
                {
                    "title": "Kurmanji (Kurdish)-English MT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5069737520267264/",
                    "content": "I propose to work on the Kurmanji-English language pair, with the aim of improving it to the state of the art level, in terms of coverage and accuracy.",
                    "projectCode": "http://wiki.apertium.org/wiki/Kurmanji_and_English/Final_report"
                },
                {
                    "title": "Lint For Apertium",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4902239969738752/",
                    "content": "My draft proposal for the Lint for Apertium project.",
                    "projectCode": "https://gitlab.com/jpsinghgoud/apertium-lint/commits/master"
                },
                {
                    "title": "Machine Translation for Sicilian-Spanish Language Pair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5883995808071680/",
                    "content": "The project goal is to create a machine translation package for Sicilian-Spanish language pair on the base of Apertium’s machine translation system. This project is using the existing Apertium’s Spanish dictionary in order to build a package with two monolingual dictionaries for Spanish and Sicilian languages and a bilingual package for Spanish-Sicilian equivalents and translation rules.So, the project flow is the following:As a result, the final coverage of monolingual Sicilian package must be more than 90% of Sicilian Wikipedia corpus, and the evaluation on the parallel corpus must be error-free. First of all, this Sicilian dictionary has good prospects to become a base for new Apertium language pairs. Second,  automatic translation based on the developed package could be useful for Wikipedia users: Apertium's machine translation for Sicilian could help to translate more articles for the growing Sicilian Wikipedia.",
                    "projectCode": "http://wiki.apertium.org/wiki/Siciliano_y_castellano/Informe_final"
                },
                {
                    "title": "New Belarusian-Russian language pair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5954603862458368/",
                    "content": "I propose to create Belarusian-Russian language pair.",
                    "projectCode": "http://wiki.apertium.org/wiki/Belarusian_and_Russian/Final_report"
                },
                {
                    "title": "Project: Adopting a language pair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5122107398684672/",
                    "content": "Currently the pol-rus language pair is in the beginning state (in the incubator). There are very few words in the bilingual dictionary and no rules. The pol dictionary also does not have enough words. My goal is to fill the dictionaries, make as many rules as I'll be able to and bring it near to the release quality.",
                    "projectCode": "http://wiki.apertium.org/wiki/Polish_and_Russian/Project_description#Description_of_the_main_package_components"
                },
                {
                    "title": "Sardu, abbarra vivu!",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6136890327564288/",
                    "content": "The project I intend to carry out is the creation of a MT engine for the language pair Italian-Sardinian based on the Apertium platform. As pointed out above, MT is crucial for the survival of minoritised languages. Apertium, having lead the development of RBMT engines in the last years, provides an excellent framework for language pairs of the same linguistic family without the need of linguistic corpora. The experience of Apertium with several minoritised languages such as Occitan, Asturian or Maltese proofs that such a project is viable.\nGoogle and Apertium would benefit from this project, not only because it would contribute to open-source software and minority languages, but especially because it would have a great impact in the Sardinian society, since at present there is no MT system for the Sardinian language, neither by Google nor by Apertium.",
                    "projectCode": "https://apertium.projectjj.com/gsoc2016/gfro3d.html"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "perl",
                "xml",
                "finite-state technologies"
            ]
        },
        {
            "title": "The Center for Connected Learning and Computer-Based Modeling",
            "orgLink": "https://ccl.northwestern.edu/netlogo/",
            "projects": [
                {
                    "title": "Improve the usability of NetLogo IDE for Desktop",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6007456119390208/",
                    "content": "This project aims to add features to improve the usability of NetLogo IDE for desktop. The features that will be implemented in this project are -",
                    "projectCode": "https://github.com/Akarshit/GSoC/blob/master/blog.md"
                }
            ],
            "techStack": [
                "javascript",
                "scala",
                "java",
                "html5",
                "css"
            ]
        },
        {
            "title": "The Honeynet Project",
            "orgLink": "http://www.honeynet.org/",
            "projects": [
                {
                    "title": "[MITMProxy] Clemens Brunner",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6267043674324992/",
                    "content": "MITMproxy is a console tool that allows interactive examination and modification of HTTP traffic. The aim of this project is to improve the corresponding web application, called MITMWeb, which has a very limited feature set at the moment. After this is summer MITMWeb should be fully usable as an alternative to the console tool.",
                    "projectCode": "https://github.com/mitmproxy/mitmproxy/commits/master?author=cle1000"
                },
                {
                    "title": "Centralized Service Configuration for Holmes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5106365001367552/",
                    "content": "Holmes Processing (http://holmesprocessing.github.io) is a system used for automated malware analysis of huge volumes of malware samples, which consists of a multitude of configurable services. The goal of this project is to create a centralized way of managing the configurations of these services, so that they don’t have to be configured manually in all parts of the cluster.",
                    "projectCode": "http://holmesmashell.blogspot.de/"
                },
                {
                    "title": "Context based fuzzy clustering of malware",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5387812597661696/",
                    "content": "CuckooML will deliver a mechanism to find similarities between malware through analysing reports about them. Additionally, the software will be able to detect new types of malware - reports not similar to anything seen before (anomalies) - hence, it will constitute an invaluable tool for security researchers.Through the project a state of the art data science and machine learning approaches will be developed and integrated into Cuckoo package being accessible through both: command-line toolkit and as a web based interface.\nFirst and foremost, a set of features that well represents the diversity of malware reports will be engineered; it is a common knowledge that the classification - clustering in particular - can only be as good as the features that are used.\nThe development will be focused on fuzzy (soft) clustering approaches that can be easily calibrated to maximise their performance. Additionally, the probabilities returned by the classifier will be adapted to serve as novelty detection mechanism.\nFinally, developed approach will be versatile in a sense that user will be able to choose a context based on which clustering is performed e.g. platforms at risk, type of threat, etc.",
                    "projectCode": "https://honeynet.github.io/cuckooml/2016/08/21/gsoc16-summary/"
                },
                {
                    "title": "Foundations for DRAKVUF on ARM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6408159388237824/",
                    "content": "Dynamic malware analysis techniques assist to fully understand the cause, intention, and extent of damage caused by malicious applications. Therefore, malware analysis tools dissect and analyze the behavior of malicious entities at run-time. In this way, security analysts can deduct the cause of infection, e.g., to provide necessary means for potential countermeasures. DRAKVUF is an open source malware analysis framework running on top of the Xen hypervisor. By using Virtual Machine Introspection (VMI) techniques, DRAKVUF is able to transparently monitor and control the state of a virtual machine from a level beyond the OS. While DRAKVUF is a powerful means to analyze malware, its use is currently limited to x86-64 based architectures. This project aims to shift the scope of application of DRAKVUF towards ARM and thus the mobile market ultimately providing powerful malware analysis on mobile devices.",
                    "projectCode": "http://arm-altp2m.blogspot.de/"
                },
                {
                    "title": "Improving mitmproxy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6751990310764544/",
                    "content": "Improve mitmproxy by adding features like SQLite based flow storage, TCPflows etc. and Port pathod & mitmproxy to Python 3.",
                    "projectCode": "https://github.com/mitmproxy/mitmproxy/commits/master/?author=dufferzafar"
                },
                {
                    "title": "Improving the coverage of DroidBot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6205350227214336/",
                    "content": "DroidBot is an Android application exerciser like Monkey. It is better than Monkey in malware detection because it is aware of the static information and dynamic information of the target apps. Currently the main limitations of DroidBot are about coverage: 1. How to measure the test coverage? Currently DroidBot use the amount of DroidBox log as a metric, which is not a standard metric; 2. How to improve DroidBot’s test coverage?  Currently DroidBot cannot reach some states of app due to various of reasons. I would like to address these issues in this summer.",
                    "projectCode": "http://honeynet.github.io/droidbot/2016/08/20/GSoC_2016.html"
                },
                {
                    "title": "Integrate DroidBOT into Cuckoo Sandbox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5413166058045440/",
                    "content": "Cuckcoo Sandbox is an extensible automated malware analysis tool written in Python. Although Cuckcoo Sandbox begins supporting Android OS since v2.0, it’s still lacking of many features. Integrating DroidBOT into the Android part of Cuckcoo Sandbox is one of the ideas proposed by Honeynet would help improving the code coverage of the dynamic analysis.",
                    "projectCode": "https://blog.tinduong.pw/automated-android-malware-analysis-with-cuckoo-sandbox-gsoc-2016/"
                },
                {
                    "title": "Rumal Dennis Parchkov",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5745943345364992/",
                    "content": "Rumal's aim is to present visually the result from Thug, a tool for studying exploit kits. The currently available version requires some tweaks to the communications, docker and front end parts of the tool as well as introducing a more social and collaborative element to it.",
                    "projectCode": "http://dennisparchkov.github.io/"
                },
                {
                    "title": "Vulnerability emulation for SNARE and TANNER",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6327465274245120/",
                    "content": "SNARE is a web application honeypot sensor attracting all sort of maliciousness from the Internet. The web page is generated by cloning a real web application and injecting known vulnerabilities. SNARE connects to TANNER, a remote data analysis and classification service, to evaluate HTTP requests and composing the response then served by SNARE.",
                    "projectCode": "https://github.com/mushorg/tanner/wiki/Google-Summer-of-Code-2016-Work-Product-Submission"
                },
                {
                    "title": "Web Interface and Generic API Development for Holmes Processing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6008008022687744/",
                    "content": "The Holmes Project is a modern, modular, and scalable environment for collaborative malware analysis\nand storage. Despite the relatively young age of the project it is growing fast and already succeeds most other solutions when it comes to performance and scalability. To help lower the bar of entry and bring this solution to the masses, it needs an intuitive UI and more connectivity to other tools and services. The goal of this project would be to tackle these two currently missing features by:",
                    "projectCode": "https://gist.github.com/cynexit/046b781454b8a9bd49b79eac4d6b1f02"
                },
                {
                    "title": "YAPDNS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4816683952766976/",
                    "content": "Collect Passive DNS data from various sources; display, correlate and analyze them.",
                    "projectCode": "https://yapdns.github.io/2016/08/17/introducing-yapdns/"
                }
            ],
            "techStack": [
                "android",
                "machine learning",
                "honeypots",
                "python",
                "html/javascript"
            ]
        },
        {
            "title": "The Julia Language",
            "orgLink": "http://julialang.org",
            "projects": [
                {
                    "title": "Design of an API and set up of a regression tracker for iterative methods in Julia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6437038479900672/",
                    "content": "This proposal consists of the design of an API for Iterative methods in Julia and the set up of benchmarks and a regression tracker.",
                    "projectCode": "https://gist.github.com/lopezm94/49ce2428c5e22321307977f670823cdb"
                },
                {
                    "title": "Documentation tools for Julia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6024733296427008/",
                    "content": "A big part of Julia is its package ecosystem and their documentation should be as thorough as possible\nand documenting packages should be made as easy as possible for package developers.The primary goal of the project is to extend Documenter.jl so that it could also generate a detailed reference manual of functions, types, submodules etc. with full signatures and a search capability.\nThe idea is to complement the docstring, since sometimes you need this detailed information and\nit should be easily accessible (reading the code or using introspection methods is cumbersome).A secondary goal is to lay the groundwork for a comments/notes system, where the community could more easily\ncontribute to the docs (of both Base and packages).",
                    "projectCode": "http://mortenpi.eu/gsoc2016/"
                },
                {
                    "title": "Enabling Polyhedral Optimizations in Julia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6197080536121344/",
                    "content": "Julia is a dynamic programming language that, over the past few years, gained interest in the open-source community, especially in the field of scientific computing. Julia programs are executed by a virtual machine that translates the source code, during run-time, to machine code based on the LLVM compiler framework. LLVM provides a variety of analyses and transformation capabilities that are leveraged to optimize programs and facilitate efficient execution. More recently, LLVM was enhanced by a new optimization framework, namely Polly, that supports automatic parallelization and data-locality optimizations based on the polyhedral model. Polly is able to speed up compute kernels significantly, especially in the context of dense linear algebra and iterative stencil computations. In the course of this project I plan to integrate Polly into Julia to enable polyhedral optimizations for Julia programs.",
                    "projectCode": "http://www.mreisinger.com/?p=179"
                },
                {
                    "title": "HTTP/2 Implementations for HTTPServer.jl, Requests.jl, and Mux.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6286483501613056/",
                    "content": "This proposal is about implementing HTTP/2 for HTTPServer.jl and Requests.jl, as well as implementing a heuristic for Mux.jl for HTTP/2’s “server push”. In the end, It is expected that Mux.jl, HTTPServer.jl and Request.jl users can seamlessly transit to HTTP/2 with little changes on their sides.Here are some expected outcomes of this project.",
                    "projectCode": "https://github.com/sorpaas/HTTP2.jl/wiki/GSoC-Status-Report"
                },
                {
                    "title": "Image Features and Exposure Correction using Images.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6538571506778112/",
                    "content": "My Proposal is to develop a feature detection and extraction package for Julia, ImageFeatures.jl. Alongwith feature detection and extraction, I will work on adding exposure correcting functions to Images.jl. I plan to add the following functions over the course of the coding period :",
                    "projectCode": "https://mronian.github.io/gsoc-2016/"
                },
                {
                    "title": "Interactive Tutorial System for Julia and Juno",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5884862720376832/",
                    "content": "A Julia program for completing interactive tutorials, being available in the REPL and in Juno (in it’s current form as a series of Atom plugins), with a webpage interface as a stretch goal. Paired with this would be a tool for creating these lessons, and as another stretch goal some kind of central repository from which students can download tutorials and to which tutorial creators can upload.",
                    "projectCode": "https://github.com/matthew-lake/Juliet"
                },
                {
                    "title": "Native Julia solvers for ordinary differential equations and  improvements to IVP testing suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6041935311536128/",
                    "content": "ODE.jl is an ever increasing store house of numerical solvers of ordinary differential equations. While many solvers are currently found in ODE.jl, there are still many which are awaiting a native Julia implementation in the package. In particular, there is a lack of implicit solvers implemented in ODE.jl (currently, there is only one implicit solver: ode23s). Such solvers are important because they are especially suited for solving stiff ODEs, which are very common. In light of this, the first goal of my proposed project is a native implementation of implicit solvers RADAU and MEBDFI. Further, in order to reliably use ODE.jl, a robust initial value problem (IVP) testing suite for ODE.jl solvers is a necessity. Work has has been started towards this end through the development of IVPTestSuite.jl. Though, there are many improvements to IVPTestSuite.jl which could be made, especially in improving the ODE solver performance tracking. Thus, the second goal of my proposed project is to advance IVPTestSuite.jl and its surrounding documentation.",
                    "projectCode": "https://obiajulu.github.io/journal/entry/2016/08/16/GSOC-summary.html"
                },
                {
                    "title": "ParallelGraphs: A General Purpose Graph  Processing Library.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4951609947717632/",
                    "content": "I hope to develop a package, ParallelGraphs, that enables the analysis and manipulation of massive graphs in a distributed environment. The package will adhere to two separate computing models; The first being the vertex centric Pregel model that relies on Bulk Synchronous Parallel infrastructure. The second model is a combinatorial approach that involves matrix operations such multiplication and vector indexing on distributed sparse matrices. ParallelGraphs will enable users to process graphs using sequential algorithms on smaller graphs. This will be accomplished by providing compatibility with LightGraphs.jl. The package will also experiment will CPU/GPU parallel algorithms with an aim of unifying all graph computation models in a single package.",
                    "projectCode": "https://github.com/pranavtbhat/Gsoc2016"
                },
                {
                    "title": "Random Number Generators for Julia language",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4506787566845952/",
                    "content": "The random number generator(RNG) of Julia needs updating to a more reliable one. I'm going to implement a package (may be named RNG.jl) providing several RNGs, and a binding to Intel MKL(VSL.jl) for the RNG work. After comparing the performance of them the best one is supposed to replace the current RNG in Julia Base.",
                    "projectCode": "https://github.com/sunoru/RNG.jl"
                },
                {
                    "title": "Support for Optimization with Complex Variable in Convex.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5820022941286400/",
                    "content": "Many problems in applied sciences are posed as convex optimization problems over the complex field such as MaxCut, Phase retrieval from sparse signals, designing a FIR filter given desired frequency response.The present approach is to manually convert the complex-domain problems to real-domain problems, then use domain specific languages like Convex.jl, cvx or cvxpy to get the solution of the corresponding real-domain problem and finally combine the solution from these languages to get the complex-domain solution. This process can be time-consuming and non-intuitive sometimes. The correct approach to such problems is to make our existing packages deal with complex-domain problems directly.The aim of the project is to add the support for solving complex-domain linear programs, second order conic programs as well as complex semidefinite programs (SDP) in Convex.jl (a Julia package for Disciplined Convex Programming).",
                    "projectCode": "https://ayush-iitkgp.github.io/posts/is-it-the-end-or-another-beginning/"
                }
            ],
            "techStack": [
                "julia",
                "atom",
                "c++",
                "javascript",
                "c"
            ]
        },
        {
            "title": "The Linux Foundation",
            "orgLink": "http://www.linuxfoundation.org/",
            "projects": [
                {
                    "title": "Add MuPDF support to cups-filters for a lightweight mobile printing stack",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6263429190909952/",
                    "content": "The current PDF renderer in cups-filters, namely Ghostsscript and Poppler, are much heavy weight to mobile devices as compared to MuPDF which is significantly lightweight. Implementation of MuPDF is required in the cups-filters as it will save lots of memory, storage and CPU resources in mobile devices for printing job. Filters like pdftops, pdftoopvp, pdftoraster, pdftoijs and pdftopdf have to be modified in order to add support for MuPDF without dropping existing support for Ghostscript and Poppler.",
                    "projectCode": "http://pranjalbhor.me/articles/gsoc16.html"
                },
                {
                    "title": "Diagnose my ceph cluster",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6336374915465216/",
                    "content": "The project aims to build a script that can be run very quickly and give the user best guess as to what was wrong with the running Ceph cluster and also suggest solution to rectify it. If the user is satisfied with the diagnosis he may allow the script to go forward with rectifying the problem.",
                    "projectCode": "https://gist.github.com/hellboy2k8/dbd1ccdbe38b4e0c0a1e32ed742b1334"
                },
                {
                    "title": "Disk Removal Safety Utility for Ceph",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5760161029292032/",
                    "content": "Using Ceph's JSON dump we can create a utility to help decipher whether or not\na disk is safe to remove from within a Ceph cluster. Since Ceph shuffles placement groups when a disk is added or one dies then the user must be able to discern which disks are safe to remove. Using Ceph’s JSON output of a given cluster a user can be presented with an easy to understand representation of removable disks.This project consists of one main component, a standalone command line utility.",
                    "projectCode": "https://github.com/CanonicalLtd/ceph_safe_disk/commits/master?author=0X1A"
                },
                {
                    "title": "Environment model specifications for more bugs to reveal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5714677862498304/",
                    "content": "Static verification of Linux kernel modules has already helped to reveal hundreds of real bugs in Linux kernel device drivers. On practice software verification tools cannot analyze modules of device drivers with the whole Linux kernel source code. Thus verification of separate modules requires generation of a precise and complete environment model to achieve a suitable false positive rate. I propose to develop a set of specifications for an environment model generator of the LDV Tools system developed in terms of the Linux Driver Verification program. It will help to drastically improve verification results reducing the false positive rate and thus will make it possible to find even more real bugs in the latest versions of the Linux kernel.",
                    "projectCode": "http://forge.ispras.ru/news/553"
                },
                {
                    "title": "Linux Kernel Backports",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6376816327524352/",
                    "content": "One of the main challenges when creating custom Linux Kernel images is choosing the adequate drivers composing it, respectively to the target machine. We want all needed hardware functionalities to be enabled in software but also, either from performance of security reasons, the number of unnecessary modules to be minimal. The configuration system provides several methods of achieving this goal either by generating a default configuration or by letting the user select the needed drivers but, by far the most interesting solution is the automated disabling of unused modules with localmodconfig configuration.Linux Kernel backports are a solution to provide drivers released on newer kernels to be available for usage on older kernels. APIs and data structures change over time but drivers should provide functionality in any case.This project aims to add support for Linux Kernel backports in already existing configuration option, localmodconfig.  The goal is to automatically determine the available functionalities not only from the drivers provided by the current kernel version but also from all the backported ones. Extensions of this project could fill some gaps in upstream Linux.",
                    "projectCode": "https://kernelsense.wordpress.com/2016/08/23/gsoc-2016-summary/"
                },
                {
                    "title": "LLVMLinux: Static Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4600081235836928/",
                    "content": "Clang/LLVM provide a static analyzer that is focused towards userspace errors; however, it can be extended to kernelspace.  The final goal is to fix false-positives and extend the functionality of scan-build so that it reaches feature parity with splice, the current in-kernel checker.  Ideally, the checker will then be more useful for other projects as well.",
                    "projectCode": "https://github.com/andrewmw94/llvm_clang_GSoC"
                },
                {
                    "title": "LSB Navigator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6056343047766016/",
                    "content": "The aim of this project is to implement collecting data about package dependencies in the LSB data collection tools and implement support for these data in the LSB Navigator. The latter includes lists of package dependencies provides/requires, search among package dependencies and more intellectual features such as comparison of packages from different distributions.",
                    "projectCode": "https://lists.linuxfoundation.org/pipermail/lsb-discuss/2016-August/008168.html"
                },
                {
                    "title": "Porting mainline kernel to ARM Cortex-M7 microcontroller",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6617849892175872/",
                    "content": "The project goal is boot up to mainline kernel on STM32F7-discovery ARM Cortex-M7 microcontroller evaluation board and to implement code to utilize some of its features.ARM Cortex-M7 that is powerful microcontroller core, it has D&I cache, 6-stage pipeline, super-scaler and so on. Several ARM Cortex-M7 development boards(e.g.  STM32F7-discovery) has enough memory to boot linux  kernel, but the mainline kernel has not supported.\nIf ARM Cortex-M7 supported, then we will be more easy to develop applications.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1ZO8Rzt7pT4TaCwkuZEE0e5ntt6JE1eF0BswDdCBHYr4/edit?usp=sharing"
                },
                {
                    "title": "Programmatically Discover Data Center Topology",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6557193948102656/",
                    "content": "The goal of this project is to develop a Ceph enhancement in Rust that utilizes basic networking tools to discover the physical topology of a network in order to lay out data clusters with maximal fault tolerance in a timely fashion.",
                    "projectCode": "https://github.com/mskalka/DataCenterTopology"
                },
                {
                    "title": "Race detection in Linux kernel",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5296785597661184/",
                    "content": "Race conditions are one of the most challenging bugs, I would like to deal with them. I have already participated to the project, which is related to the Linux kernel analysis. I would like to look deeper the Linux kernel, find a number of bugs, related to the race conditions, try to prove them using dynamic analysis tools and finally fix them, preparing patches to Linux kernel.",
                    "projectCode": "http://linuxtesting.org/16-08-2016"
                },
                {
                    "title": "The Linux Foundation OpenPrinting Proposal (Draft)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6171282278187008/",
                    "content": "Collaborate with Artifex to implement a resource efficient print function that bypasses common drivers found throughout desktop computers in order to maximize memory efficiency.",
                    "projectCode": "https://kdn251.github.io/linux-description-page.html"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "python",
                "mysql",
                "cups"
            ]
        },
        {
            "title": "The LLVM Compiler Infrastructure",
            "orgLink": "http://www.llvm.org",
            "projects": [
                {
                    "title": "Better Alias Analysis By Default",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6292280902156288/",
                    "content": "The cfl-aa pass implemented by Gerorge Burgess IV back in GSoC 2014 is a fast, precise and interprocedural analyses that overcomes many deficiencies in the alias analyses currently used in LLVM. It is also easily extensible to add support for field-, flow-, and context- sensitivity. However, the pass is not enabled in today’s LLVM build due to (1) various self-hosting miscompilation bugs, and (2) not sufficiently tuned for existing optimization passes that uses it. \nThe goal of this GSoC project is to bring cfl-aa to a usable state and make it a good complement, if not a replacement, of the existing alias analysis pipeline.",
                    "projectCode": "https://github.com/grievejia/GSoC2016"
                },
                {
                    "title": "Enabling llvm’s self-hosted modules builds using libstdc++",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5766827892277248/",
                    "content": "A Module System for C++ is on its way to the C++ standard.The current state of the Module System, although fairly stable, it has a few bugs for C++ support. The most common reason for the bugs is the semantic merging of C++ entities. Currently, the method for ensuring no regressions is a buildbot for libc++, which builds llvm in modules self-hosted mode. Its main purpose is to find bugs in clang’s implementation and ensure no regression for the ongoing development.Since the Module Systems is meant to be generic, the project aims to improve the stability and coverage of the Module System by finding as many issues as possible. One approach is to add a buildbot for libstdc++, because this would change the merging model for the modules, and in this way, it will point out different issues which would not be observed by using libc++. The choice for libstdc++ is motivated by its wider use in Unix and, more importantly, the benefits it will bring to supporting modules for third party projects that rely on libstdc++.",
                    "projectCode": "https://docs.google.com/document/d/1Y2D9HjiFGrbZOOKd33sDbo-N0MJ1MVA2vZ8EQWfghnc/edit?usp=sharing"
                },
                {
                    "title": "Finding and analysing copy-pasted code with clang",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5307118483668992/",
                    "content": "Copy-pasted code is dangerous because it introduced bugs and makes projects harder to maintain. This proposal is about creating tools for finding copy-pasted code and report bugs that are caused by this practice. These tools include a checker for clang’s static analyzer that analyses a single translation unit and a standalone tool that performs a project-wide analysis.",
                    "projectCode": "https://docs.google.com/document/d/1V54-X3hXt_kZ91c4NHPn-k0kAYO230b8zFhIdwGpYy0/edit?usp=sharing"
                },
                {
                    "title": "Improvement of vectorization process in Polly",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4902396467609600/",
                    "content": "Polly can perform classical loop transformations, exploit OpenMP level parallelism, expose SIMDization opportunities. However, due to the lack of a machine-specific performance model and missing optimizations, these transformations sometimes lead to compile and execution time regressions, and the generated code is at least one order of magnitude off in comparison to the corresponding vendor implementations. The goal of the project is to reduce such influence through implementation of optimizations aimed to produce code compatible with the best implementations of BLAS and an attempt to avoid vectorization of loops, when it is not profitable for the target architecture. It could be a step in transformation of Polly into an optimization pass used in standard -O3 optimizations.",
                    "projectCode": "http://lists.llvm.org/pipermail/llvm-dev/2016-August/103986.html"
                },
                {
                    "title": "Interprocedural Register Allocation in LLVM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6189040357343232/",
                    "content": "The objective of this project is to implement a simple interprocedural register allocation that attempts to minimize register spill code by propagating register usage information through the program call graph. By examining the register usage information at each call site, the intraprocedural register allocator can avoid assigning registers already used in the called routines and minimizing spill code.\nStretch goal for this project would be a link time register allocator. In this register allocation is deferred till linking of the code to optimize the allocation.",
                    "projectCode": "https://docs.google.com/document/d/1v-R7gB7Or4bPn0LW7d-yb1yla8jK3DVmTJNFVNYNu6k/edit?usp=sharing"
                },
                {
                    "title": "Polly as an Analysis Pass in LLVM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5932114339954688/",
                    "content": "The Polyhedral framework provides an exact dependence analysis, which is more powerful than conventional dependence testing algorithms. Currently, LLVM mainline lacks a powerful dependence analysis framework, and at the same time, Polly’s (a high level data locality optimizer based on polyhedral framework) dependence analysis is suitable for many transformation passes in LLVM like Loop Vectorization, Loop Versioning, Modulo Scheduling, Loop Nest Optimizations, etc. I want to provide an API to Polly such that its precise dependence analysis can be used as an Analysis pass within LLVM's transformation passes.",
                    "projectCode": "http://utpalbora.com/gsoc/2016.html"
                },
                {
                    "title": "SAFECode’s Memory Policy Hardening",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4811739371667456/",
                    "content": "Monolithic kernels, like linux, did not provide a hardening mechanism on the kernel modules’ memory access. Modules in Linux could do almost everything. Arbitary write and read may cause system crash, information leak, and even rootkit injection. There is a great need to implement a memory hardening mechanism to limit the behavior of a kernel module.This projects will enhance the ‘Baggy Bounds with Accurate Checking’ (BBAC). By adding information to the memory object’s padding area, we can perform various safety checks with limited overhead. I will mainly focus on providing runtime access policy hardening. This work will prevent most of illegal memory accesses efficiently.",
                    "projectCode": "https://github.com/zhengyangl/safecode-llvm37/commits?author=zhengyangl"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "llvm",
                "clang"
            ]
        },
        {
            "title": "The Monarch Initiative",
            "orgLink": "http://www.monarchinitiative.org",
            "projects": [
                {
                    "title": "PhenoPacket Scraper",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6025229230931968/",
                    "content": "In essence, the project aims at building a generic phenopacket scraping tool, providing a command line interface and a rest api. The project can be classified into two parts, the first being a phenopacket scraper with a command line interface and a rest api which takes input in the form of a url or a stream, then scrapes the required content from the web page, analyzes it to extract phenotypes and genes and returns a JSON encoded phenopacket. The second part of the project includes a way of deploying the phenopacket scraper. A Django portal through which users can use the tool to generate phenopackets, search, analyse and share the results to study and collaborate among themselves.",
                    "projectCode": "https://gist.github.com/satwik77/1b9e1727c21b3f4642c55206c9e2b54c"
                }
            ],
            "techStack": [
                "semantic web",
                "javascript",
                "text mining",
                "named entity recognition",
                "ontologies"
            ]
        },
        {
            "title": "The NetBSD Foundation",
            "orgLink": "http://www.netbsd.org",
            "projects": [
                {
                    "title": "Implement Ext4fs support in ReadOnly mode",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5183714946449408/",
                    "content": "NetBSD currently doesn’t support Ext4fs. The aim of this project is to extend the code of Ext2fs to add Ext4fs read-only support. Additionally, the new functionality is supposed to be implemented in new files rather than making invasive changes in the files that are shared to some extent with UFS.",
                    "projectCode": "http://hrishikeshgoyal.blogspot.in/2016/08/blog-post.html?view=sidebar"
                },
                {
                    "title": "NPF and blacklistd web interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5074692033478656/",
                    "content": "NetBSD has a unique packet filter and dynamic firewall which are not widely used in part due to the absence of a user-friendly interface.\nThis proposal is for creating such a user-friendly interface, and also resolving some of the other expected difficulties by users: the initial installation and setting up the rest of the networking features.\nThe potential feature list of such a project is extremely large, so instead a second goal of allowing and documenting the creation of extensions was added.",
                    "projectCode": "https://github.com/coypoop/npfUI"
                },
                {
                    "title": "POSIX Test Suite Compliance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5669314954788864/",
                    "content": "Open Posix benchmark suite (http://posixtest.sourceforge.net/) is designed to test whether an operating system respects the standard of POSIX. It is an open source test suite with the goal of performing conformance, functional, stress, and performance testing of the functions described in the IEEE Std 1003.1-2001 System Interfaces specification. The test suite will be developed independent of particular implementations of the POSIX APIs. It is configurable to test any implementation by specifying include and library information. The purpose of this benchmark suite is the creation of tests that depend purely on POSIX APIs, thus leaving open the possibility of OS independence, although initial development is on Linux. NetBSD is one of these major stream operating systems. Thus, it would be cool if we can use this suite to test NetBSD, which also drives the evolvement of operating systems.",
                    "projectCode": "https://github.com/ycui1984/posixtestsuite"
                },
                {
                    "title": "Split debug symbols for pkgsrc builds",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5609947500904448/",
                    "content": "The ability to debug software is important not just when developing\nbut also when using it, e.g. post-mortem analysis.\nNetBSD provides MKDEBUG and MKDEBUGLIB variables that can be set in\nmk.conf in order to split debugging symbols for user-land applications\nand libraries. Resulting split debugging symbols are then available\nvia the debug.tgz and xdebug.tgz installation sets.\nNetBSD also provides Rump and to some extent also ddb(4),\nktrace(1) and DTrace that ease analysis, tracing and debugging.\nAll these features make NetBSD a great operating system in this regard.\nHowever, in pkgsrc it is possible only to generate packages with\ndebugging symbols by providing proper CFLAGS for debugging and\nsetting the INSTALL_UNSTRIPPED flag. This make debugging, especially\nfor binary packages users, not very feasible.The purpose of this project is to implement a mechanism for pkgsrc\nsimilar to the one provided by RPM and Debian package manager to\nsplit debugging symbols for a <package> in a separate package\n<package>-{debuginfo,dbg} (that just contains debugging symbols).",
                    "projectCode": "https://github.com/iamleot/pkgsrc/commits/debugpkg?author=iamleot"
                }
            ],
            "techStack": [
                "bsd",
                "security",
                "networking",
                "c programming",
                "kernel"
            ]
        },
        {
            "title": "The STE||AR Group",
            "orgLink": "http://stellar-group.org/",
            "projects": [
                {
                    "title": "HPX Debugger",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5730450056151040/",
                    "content": "Debugging distributed HPX applications with regular tools is a tedious task and not always helpful. A distributed debugger that understands HPX-specific data structures such as HPX threads, can list and track parcels, and display debugging information about other data structures is needed.",
                    "projectCode": "https://github.com/parsa/scmitar"
                },
                {
                    "title": "Implement a Map/Reduce Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5985974303588352/",
                    "content": "Map/Reduce frameworks are getting more and more popular for big data processing (for example Hadoop). By utilising the unified and standards conforming API of the HPX runtime system, we believe to be able to perfectly represent the Map/Reduce programming model. Many applications would benefit from direct support in HPX. This might include adding Hypertable or similar libraries to the mix to handle the large data sets Map/Reduce is usually used with.",
                    "projectCode": "http://aalekhnigam.tumblr.com/post/149361127187/summing-up-my-gsoc-with-ste-ar-group"
                },
                {
                    "title": "Plugin Mechanism for thread schedulers in HPX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5058560136314880/",
                    "content": "Thread Scheduling in HPX\nHPX currently supports seven types of schedulers:All of these schedulers are currently statically linked and must be specified at compile-time. The aim of the project is to make these dynamically loaded instead. These will be converted to the plugin system already present in HPX, which is used by message-handlers and parcelports. Factory design pattern will be followed. A scheduler-factory-base class will provide the template from which the factories of the individual schedulers are derived. These will then return scheduler-objects which can be used by executors.",
                    "projectCode": "https://gist.github.com/satyaki3794/fdb50926d024a81ca801f7a307477f17"
                },
                {
                    "title": "Working on parallel algorithms for hpx::vector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4816340623818752/",
                    "content": "Extend existing parallel algorithms of hpx::vector to work for the distributed case. See issue #1338. At the end of GSoC at least two simple algorithms (i.e. copy_if and copy_n) and one more complicated algorithm (transform_reduce) should be implemented.",
                    "projectCode": "https://github.com/STEllAR-GROUP/hpx/pull/2287"
                }
            ],
            "techStack": [
                "parallel processing",
                "high performance computing",
                "c++",
                "cuda",
                "opencl"
            ]
        },
        {
            "title": "The syslog-ng project",
            "orgLink": "http://www.syslog-ng.org",
            "projects": [
                {
                    "title": "Automated release generation for syslog-ng",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6226948275568640/",
                    "content": "Syslog-ng is a famous log management software with content-based filtering, rich filtering capabilities, flexible configuration options, TCP transport and many other features. The project aims to implement a automated release generation tool for the Syslog-ng project considering the current release requirements of the project.",
                    "projectCode": "http://black-perl.in/gsoc16-syslog-ng-autorel-summary/"
                },
                {
                    "title": "GSoC 2016 Proposal: WebSocket for syslog ng (Yilin Li)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5141549373456384/",
                    "content": "syslog-ng is an famous log management infrastructure for users all over the world. Syslog-ng is rightly known as the \"Swiss Army Knife of logging\" because of its rich filtering capabilities, flexible configuration options.\nWebSocket protocol   is a protocol enabling two-way communication between  a client and server over a single TCP connection.\nThis project will add WebSocket as a destination for syslog-ng.  The new destination can send log messages to an WebSocket Server directly. In addition, this project will enable the new destination to act as a WebSocket server,  so the WebSocket client (such as a javascript client in a browser) could subscribe directly to it to get log messages.  These will make sending log message privately or  publicly much easier.\nThis project will add WebSocket as a source for sysnlog-ng. So that it can receive log much more conveniently in some area such as IoT world.",
                    "projectCode": "https://github.com/balabit/syslog-ng-incubator/pull/156"
                },
                {
                    "title": "Kafka source for syslog-ng",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5423024350167040/",
                    "content": "The syslog-ng application can read messages from the sources. It processes them with filters, rewrite rules, parsers and finally sends messages to their destinations. The syslog-ng application already has a Kafka destination that is implemented in Java. The Kafka source will allow syslog-ng to read messages from Kafka. This can be used for example as a queue between several syslog-ng instances.",
                    "projectCode": "https://vithulanmv.wordpress.com/2016/08/21/syslog-ng-kafka-source-in-depth-analysis/"
                },
                {
                    "title": "syslog-ng as a command line tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5083161172115456/",
                    "content": "Syslog-ng is a system logging application available for a wide range of operating systems. It is capable of sending, filtering, parsing, rewriting and forwarding logs to various destinations. It runs as a daemon process on systems and configured via files.The projects goal is to extend its functionality by making it able to run offline as a command line tool reading incoming logs from stdin, transforming the input the usual way and forwarding it to stdout.",
                    "projectCode": "https://kvch.github.io/syslog-ng-as-a-command-line-tool.html"
                }
            ],
            "techStack": [
                "c",
                "java",
                "python",
                "big data",
                "rust"
            ]
        },
        {
            "title": "The Tor Project",
            "orgLink": "https://www.torproject.org/",
            "projects": [
                {
                    "title": "Ahmia search engine for hidden services",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4519911913160704/",
                    "content": "Ahmia is a working search engine that indexes, searches, and catalogs content published on Tor Hidden Services. Furthermore, it is an environment to share meaningful insights, statistics and news about the Tor network itself. In this context, there is a lot of work to do.During GSoC, I plan to work on several aspects of this search engine from fixing bugs to improving search results.First I’m going to start working on bugs and automation so users and developers can see immediate results and so I can learn my way around the codebase quickly.Then I will start developing new features like search commands, additional search results information (like screenshots). I will also work a lot on improving the search results.Finally I will work on statistics which is not an easy problem when you also want to respect privacy.I also have a couple ideas for optional goals or additional projects I could make after GSoC is done.",
                    "projectCode": "https://zma0.dreamwidth.org/306.html"
                },
                {
                    "title": "CONIKS for Tor Messenger",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5478985358114816/",
                    "content": "This project consists of two parts: a CONIKS server for key verification and a CONIKS client which integrates with the Tor Messenger client. The functionalities include key registrations, key change, lookups and monitoring.",
                    "projectCode": "https://docs.google.com/document/d/1oZdgrF0ovcq61QuH7vVqNUv7SNQd7fg3GaGW8HnpEWE/edit"
                },
                {
                    "title": "Fingerprint Central",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5915605559410688/",
                    "content": "The capabilities of browser fingerprinting as a tool to track users online has been demonstrated by Panopticlick and other research papers since 2010. The Tor community is fully aware of the problem and the Tor browser has been modified to follow the \"one fingerprint for all\" approach. However, due to the constant evolution of the web and its underlying technologies, it has become a true challenge to always stay ahead of the latest fingerprinting techniques.For this Google Summer of Code project, I propose to develop the Fingerprint Central website that will run a fingerprinting test suite and collect data from Tor browsers to help developers design and test new defences against browser fingerprinting. The website will be similar to AmIUnique.org or Panopticlick for users where they will get a complete summary with statistics after the test suite has been executed. It can be used to test new fingerprinting protection as well as making sure that fingerprinting-related bugs were correctly fixed with specific regression tests. The expected long-term impact of this project is to reduce the differences between Tor users and reinforce their privacy and anonymity online.",
                    "projectCode": "https://github.com/plaperdr/fp-central"
                },
                {
                    "title": "Orfox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4698651272151040/",
                    "content": "Orfox, Tor browser for Android, requires a few updates that would help it move from beta to a release.I hope to achieve this this summer!Some of the updates include:",
                    "projectCode": "https://github.com/amoghbl1/tor-browser/commits?author=amoghbl1"
                },
                {
                    "title": "Tails Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5783137762148352/",
                    "content": "The Tails Server should provide a user-friendly way to start onion services that facilitate group collaboration, communication, and data sharing. See the Tails Server Blueprint for further information on the entire Tails Server project.During GSoC 2016, I plan to implement the basis of the Tails Server. It should be possible to use a GUI or CLI (I will implement both) in Tails to automatically install a service and set everything up so it is reachable as an onion service. It should be a generic solution which makes it easy to add many different services (web server, Etherpad, Mumble server, file sharing service, etc.), but I don't plan to add many of them during this project, because that might go beyond scope. I will instead use a simple web server serving a static page as a first service.The user should be able to choose:",
                    "projectCode": "https://lists.torproject.org/pipermail/tor-dev/2016-August/011316.html"
                }
            ],
            "techStack": [
                "c",
                "javascript",
                "golang",
                "python",
                "browser extensions"
            ]
        },
        {
            "title": "The Wine Project",
            "orgLink": "https://www.winehq.org/",
            "projects": [
                {
                    "title": "Further work on the Visual C++ iostream library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4888926107992064/",
                    "content": "The Microsoft Visual C++ iostream library is a now obsolete library distributed with Visual Studio versions up to 6.0, implemented in the file msvcirt.dll. A GSoC project carried out last year partially implemented a replacement of this library for Wine, leading to 44% of the functions being implemented.\nThis proposal is to complete the implementation of msvcirt, focusing on the classes istream and ostream, to make the Wine library actually usable for real-world applications.",
                    "projectCode": "https://gist.github.com/Sulley38/4cf874a0fe4ce925b1d6b2dbba29963b"
                },
                {
                    "title": "Implement basic rendering for Direct3D Retained mode",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5321541789155328/",
                    "content": "Last year, the main object creation API's of devices for all versions of Direct3DRM were implemented. There's still quite some work left before rendering can be shown without the help of the native DLL. The main focus of this project will be to implement some important rendering functionalities of the d3drm API,  enough to get a static background color drawn on the screen, and go further from there.",
                    "projectCode": "https://github.com/wine-mirror/wine/commits?author=jammm"
                }
            ],
            "techStack": [
                "c",
                "opengl",
                "directx",
                "x11",
                "win32"
            ]
        },
        {
            "title": "Timelab Technologies Ltd.",
            "orgLink": "http://www.timelabtechnologies.com/",
            "projects": [
                {
                    "title": "An integrated graphical environment for visual inspection and filtering of time-series for astronomy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5076271507701760/",
                    "content": "The project involves building an integrated graphical environment for visual inspection filtering of time-series for astronomy . With the progress of data science industry, it is very crucial to have advances in data visualization tools.Most of the existing tools for data analysis lack in efficient data exploration due to lack of graphical user interface . Displaying data graphically in form of plots, helps in quickly viewing the most important aspects of the given data and helps in finding the patterns and trends hidden in the Data . Project involves performing series of operations on the data , and produce interactive plots out of it , for analysis .",
                    "projectCode": "https://github.com/StingraySoftware/dave/wiki/Google-Summer-of-Code-2016"
                },
                {
                    "title": "Library of Time Series methods",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4644645548064768/",
                    "content": "This project aims to implement a single, comprehensive library for Time Series analysis with a major focus on the analysis of data received from accreting  systems such as black holes and neutron stars. Time series analysis is fun but challenging area of Machine Learning. This project aims to reduce the barrier of upfront new researchers to use the software extensively for their purpose.",
                    "projectCode": "https://docs.google.com/document/d/1CCEUUqFuziigu2c65rCKNATW33pAM_GBA5XPMewGniU"
                },
                {
                    "title": "Time Series Simulator Using Impulse Responses",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5685057352105984/",
                    "content": "The purpose of this project is to interpret the timing behavior of light curves in terms of impulse responses, and in doing so, build a common tool for astronomers to analyze X-ray time series. Impulse responses are useful as they enable us to link the variability properties with emission properties and subsequently, observe the X-ray spectrum.The end-goal of this project is to implement a fully-working time series simulator with working unit tests and complete documentation. The end-goal also includes comparing the properties of simulated time series against real data.",
                    "projectCode": "http://usmanwardag.github.io/gsoc/stingray/2016/08/14/GSOC-Wrap-Up.html"
                }
            ],
            "techStack": [
                "python",
                "javascript"
            ]
        },
        {
            "title": "TimVideos.us",
            "orgLink": "https://code.timvideos.us",
            "projects": [
                {
                    "title": "Add \"hardware mixing\" support to HDMI2USB firmware",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5448350430134272/",
                    "content": "This project aims at the development of a hardware mixer block in the HDMI2USB firmware which can implement mixing of the two input pixel stream as per the mask information. This suitable mask can be varied dynamically to create fading and wipe effects using the hardware block at a given pixel rate.",
                    "projectCode": "https://shashankgangrade.wordpress.com/gsoc-final/"
                },
                {
                    "title": "FX2 firmware support for FTDI emulation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5573940374142976/",
                    "content": "Adding firmware support for FX2 so that libftdi drivers can be used to talk to the device",
                    "projectCode": "https://docs.google.com/spreadsheets/d/11g_5kHMvrNSwYT-GBX_GsV2IUszO5mB3-n3uUau9KUg/edit?usp=sharing"
                }
            ],
            "techStack": [
                "vhdl",
                "verilog",
                "fpga",
                "python",
                "c"
            ]
        },
        {
            "title": "Unitex/GramLab",
            "orgLink": "http://unitexgramlab.org",
            "projects": [
                {
                    "title": "Integration of Classic IDE and Project-oriented IDE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6306704207642624/",
                    "content": "The project aims to integrate the two IDEs, Unitex and GramLab into a new one having both perspectives: Classical and Project-oriented. The functionalities of the new IDE would be accrued on to the core as plugins. Plugins will be built on PF4J. This would enable users to add a new feature to the IDE by simply downloading the zip file for respective plugin.",
                    "projectCode": "https://drive.google.com/open?id=0B1uzOloZ6LTcbVFLXzFhbjRDWTQ"
                },
                {
                    "title": "TreeCloud Visualization tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5907565380632576/",
                    "content": "TreeCloud is a project for visualizing the word occurences of the text in a form of the tree with words as leaves. This concept is alike with TagClouds, used widely across websites. TreeCloud reflects frequencies of the words with the color and font size and semantic proximity of the words with the length of the branches. Such tool is a highly demonstrative way to overlook and analyse the text in its lexical and pragmatical aspects. It is of a great thing to integrate such tool into Unitex/GramLab. The present project aims to make this feature possible for Unitex users. CloudTree will be built for occurences of words in Unitex concordance output. Such visualization will be useful in characterising the context of the search token and can be applied in semantic, lexical, typological, or disourse analysis.",
                    "projectCode": "https://drive.google.com/drive/folders/0B1uzOloZ6LTcVDY3bjBLbXExYmc"
                }
            ],
            "techStack": [
                "java",
                "c++"
            ]
        },
        {
            "title": "Urban Energy Systems Laboratory, Empa",
            "orgLink": "https://hues.empa.ch",
            "projects": [
                {
                    "title": "Modular Energy Hub Modelling Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4906260059127808/",
                    "content": "Energy system components are modular in nature and interact across multiple scales. There is a need for a modelling framework that can easily construct and configure systems of modular entities (energy demands, sources, converters, storages and network links). These systems should be hierarchically nestable, facilitating the construction of large systems at high levels of detail. The framework should also facilitate the approximation of sub-systems, to aid model solvability. The above framework should be implemented in an object-oriented fashion, making use of the modular >>Open Energy System Modelling Framework<< (Oemof). Components should be specified in a common format that integrates with a database of available entities. The implementation should allow particular systems to be duplicated and reconfigured as well as reused as subsystems in larger models. Configuration parameters of multiple sub-systems should be readable from an external table.",
                    "projectCode": "https://bitbucket.org/Jazzpilz/modular-energy-hub-modeling-framework.git"
                },
                {
                    "title": "Open source energy simulation database : using MEAN Stack",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4780796011347968/",
                    "content": "This project involves the development of an open source database to enable the linked exploration of data in the platform, including energy demand, supply and technology data. Data in the HUES platform is\nhighly diverse and rapidly growing. Currently, this data is stored in separate platform modules using\ndifferent data structures and file formats, making it difficult to explore holistically. We will migrate this\ndata using a tool Mongify to migrate database from MySQL to MongoDB. The development of server based scripts to automatically extract relevant data from the modules of the HUES platform, and write this data to a common database. In the new database everything can be retrieved in the form of JSON objects. The development of a web-based portal for querying, visualizing and downloading data will be the last part of the project development.",
                    "projectCode": "https://gist.github.com/Khushboo1192/d5214e25fb3f9e5d2eff8938641b6f59"
                },
                {
                    "title": "Real-time Wind Flow in Cities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6313634942681088/",
                    "content": "Modelling wind flow through a city has many applications, such as studying the effect of natural ventilation or looking at pollution levels. Solving the full Navier-Stokes equations over a domain the size of a city in 3D would be prohibitively expensive. Fast fluid dynamics (FFD) present an opportunity to solve a simplified version of the incompressible Navier-Stokes equations very quickly. In this project I would like to implement FFD to model wind flow through a city, and then apply FFD to solve an optimization problem. Unfortunately I didn't have enough time to come with a specific optimization problem, but there are no doubt several that would be interesting.",
                    "projectCode": "https://github.com/lukasbystricky/GSoC_FFD"
                }
            ],
            "techStack": [
                "python",
                "milp",
                "gis"
            ]
        },
        {
            "title": "Vert.x",
            "orgLink": "http://vertx.io",
            "projects": [
                {
                    "title": "DevOps tooling for Vert.x applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5465346421030912/",
                    "content": "Vert.x is a powerful framework to build polyglot applications based on the Java Virtual Machine. It is very suitable for projects developed following the DevOps approach. In this project, several demos will be implemented which will show how such a DevOps environment can be set up by using third-party tools. The common DevOps environment will include: setting up log aggregators (Graylog and Heka), use application monitors (New Relic and Netflix Servo), use of deployment recipes (Chef and Ansible), and lastly, configuring a complete continuous delivery pipeline based on Jenkins. All implemented examples will be accompanied by the corresponding documentation and guidelines.",
                    "projectCode": "https://docs.google.com/document/d/1L19p6zypA5qWRqMFp_qwNfBvvA5oYkm7PH6lOTaEP58/edit?usp=sharing"
                },
                {
                    "title": "Implementation of “blueprint” Vert.x applications and detailed documents",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6595109919391744/",
                    "content": "Motivation for Proposal / Goal:Vert.x is an excellent full-stack toolkit which can help us build FRP-sytle, high concurrent, scalable applications. And I hope more developers could make full use of Vert.x to build their applications rapidly and concisely. So it is necessary to implement a series of applications using various part of the Vert.x toolkit to demonstrate the ability to build many kinds of applications.My goal is to implement some different applications using Vert.x and write detailed documents(both in English and Simplified Chinese)  as guideline for the newcomer to Vert.x in order to help them understand the foundations of a vert.x application rapidly and then build complex applications. As for the newcomers who are from other frameworks, like Spring MVC or Spring Boot, I can also give a document for them using analogy to help them get used to Vert.x rapidly.",
                    "projectCode": "http://www.sczyh30.com/en/2016/08/19/gsoc-2016-final-evaluation/"
                },
                {
                    "title": "Vert.x Eventbus clients for Python,C#, C, and Rust applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5874088526479360/",
                    "content": "Vert.x is a toolkit for the Java Virtual Machine enabling the implementation of reactive, highly concurrent, polyglot applications. Thanks to its eventbus, any application can interact with Vert.x applications. The TCP EventBus bridge is a bridge built on top of TCP, meaning that any application able to create sockets can use the EventBus from a remote Vert.x instance.\nThe main project idea is to create TCP EventBus clients for C , Rust , C# and Python. For each language, a library will be developed in order to let an application developed with the language to interact with the Vert.x Event Bus easily.",
                    "projectCode": "http://jayamine.weebly.com/project-progress/tcp-eventbus-clients-python-c-c-and-rust"
                }
            ],
            "techStack": [
                "java",
                "reactive",
                "javascript",
                "groovy",
                "micro-services"
            ]
        },
        {
            "title": "VideoLAN / VLMC Project",
            "orgLink": "http://www.videolan.org/vlmc",
            "projects": [
                {
                    "title": "Audio/Video sync mechanism",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5071754275848192/",
                    "content": "Audio/Video sync is essential in movie editing and playback. Videos that are out of sync are often uncomfortable to watch to a viewer, so it is mandatory that any reasonable video editing software should contain some audio/video sync mechanisms, otherwise the software may not be used because the users would quickly become discouraged. Currently VLMC lacks any reasonable strategy for synching streams from multiple video sources. This often leads to final video being out of sync if its composed of material from multiple sources. The goal of this proposal is to introduce a solution to this problem - an abstract clock mechanism, that would feed renderers with data at just the right time.",
                    "projectCode": "https://github.com/qiubit/libvlc-mlt"
                },
                {
                    "title": "Cloud services support for vlmc",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4539394958557184/",
                    "content": "Backend for some most popular cloud services: Google Drive, Dropbox, OneDrive. Integrating it with vlmc user interface.",
                    "projectCode": "https://code.videolan.org/videolan/libcloudstorage"
                },
                {
                    "title": "Implementing a sandboxed rendering engine and a remote UI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5106337620951040/",
                    "content": "Through refactoring the rendering, workflow and UI classes, we will have a better structure of the software, which will make easier to implement a sandboxed rendering engine and a remote UI. The sandboxed rendering engine will help reduce the risk of crashing the main UI process of VLMC. And being able to create a remote UI will give us many options of UI forms such as a web application and\nQML.",
                    "projectCode": "https://github.com/luyikei/VLMC/commits/master?author=luyikei"
                }
            ],
            "techStack": [
                "opengl",
                "c++",
                "c",
                "assembly",
                "qt"
            ]
        },
        {
            "title": "vitrivr",
            "orgLink": "http://www.vitrivr.org",
            "projects": [
                {
                    "title": "Cthulhu - Vitrivr Feature Extraction Pipeline",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4835068560277504/",
                    "content": "Cthulhu is a simple server-client-based job scheduler developed in Java; named after H.P. Lovecraft's part-octopus god (because it will be able to manage several machines - get it? : D). It's similar to Batch systems, in that it schedules lists of jobs in cluster environments. It consists of a master binary and a worker binary, which work together to run processing jobs of different kinds (e.g. Feature Extraction (FE), Bash Scripts, FE Result Retrieval, etc.).",
                    "projectCode": "https://github.com/vitrivr/cthulhu/"
                },
                {
                    "title": "Motion-based Retrieval: Feature Extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5066858013130752/",
                    "content": "Current system has 3 problems: 1) It doesn’t account for camera motion; 2) The moving objects are not separated from the background; 3) The motion feature is too simple. Many motion properties can be extracted in the motion feature. This project aims to build a more robust and detailed feature. It follows 3 steps: 1) Apply keypoint matching method to eliminating camera motion; 2) Build GMM background model to detect moving objects and segment them; 3) Train a SVM classifier to recognize objects and extend motion feature with object numbers, sizes and colors, etc.",
                    "projectCode": "https://zydu51.github.io/cineast/"
                },
                {
                    "title": "Natural Language Query Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5015310620950528/",
                    "content": "Today with the advancement in technology, speech recognition applications are becoming more and more useful. Currently vitrivr supports video retrieval from a large video collections using visual content by querying using an example and sketch. The project here aims build a natural language query interface for vitrivr that gives full control to the user to interact with the user interface by speaking voice commands in a complete natural way.",
                    "projectCode": "https://prateek1985.github.io/vitrivr-ui/"
                }
            ],
            "techStack": [
                "java",
                "web",
                "computer vision",
                "machine learning",
                "databases"
            ]
        },
        {
            "title": "Wayland",
            "orgLink": "https://wayland.freedesktop.org/",
            "projects": [
                {
                    "title": "Weston output management enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5995944801730560/",
                    "content": "",
                    "projectCode": "https://armin-gsoc.blogspot.ba/2016/08/summary.html"
                }
            ],
            "techStack": [
                "opengl",
                "wayland",
                "c",
                "xml",
                "kms"
            ]
        },
        {
            "title": "Wikimedia Foundation",
            "orgLink": "http://wikimediafoundation.org/",
            "projects": [
                {
                    "title": "Abhinand GSoC Proposal : Extension for page creating/editing notification",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6346087715569664/",
                    "content": "This project aims in developing a MediaWiki extension that provides a much greater range of notification options related to page creation and editing.",
                    "projectCode": "https://www.mediawiki.org/wiki/Extension:EditNotify"
                },
                {
                    "title": "Accuracy Review of Wikipedia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6337818024476672/",
                    "content": "This project aims to provide editors with an easy mechanism to find and review inaccurate content in Wikipedia articles. The aim is to achieve this with the help of algorithms that are specifically designed to flag suspected content, which the editors can then review by a three-way mechanism. The reviewer bot finds articles in given categories, category trees, and lists. For each such article, the bot aims to accomplish the following tasks:\n(1) Flag passages with facts and statistics which are likely to have become out of date and have not been updated in a given number of years\n(2) Flag phrases which are likely unclear\n(3) Flag bad student editsFlagged instances are then stored in a database and open to the reviewers for reviewing and closing the flags. A reviewer can decide to either 'Accept' or 'Dismiss' a review item as valid/invalid. Two reviewers decide the fate of each review item, and in the case of a conflict, it is sent to a third reviewer. Reviewer reputation scores are computed based on a mechanism of acceptability of reviews by other peer reviewers. Reviews which lowered the scores can be optionally displayed to the reviewers.",
                    "projectCode": "https://priyankamandikal.github.io/posts/gsoc-2016-project-overview/"
                },
                {
                    "title": "Automated Testing and Integration of IFTTT support to Wikidata",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6173155689234432/",
                    "content": "This project aims at integrating IFTTT (IF This Then That) feature to the Wikidata extension and extending RSS views and writing Unit tests for the existing Wikipedia triggers on IFTTT. IFTTT technology being one of the most popular ways of making chains of web services communicate with one another, will be used to make Wikidata to communicate with other web services (IFTTT web service)  across the web. This project involves studying the Wikidata API, IFTTT technology internals and providing a new and friendly way to communicate to Wikidata. Adding RSS views will enable users to connect with the service independent of IFTTT and writing tests will automate testing of the application saving time and improving on productivity.",
                    "projectCode": "https://github.com/wikimedia/ifttt/commits/gsoc?author=ch3nkula"
                },
                {
                    "title": "Improving static analysis tools for MediaWiki",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5608332324765696/",
                    "content": "MdeiaWiki-CodeSniffer is a linting tool based on PHP_CodeSniffer. It helps MediaWiki to improve its code quality. This proposal aims to fix existing issues in the project, complete linting rules, add supports for linting method usages and standarize test files.\nPossible mentors: @Addshore, @EBernhardson, @Legoktm,\nTask Number: T89682,\nProposal Task: T130574",
                    "projectCode": "https://docs.google.com/document/d/1whpf9g8ylRwHkzzDqByFRdY6pklqHd_92_v1eCDfeAM/edit?usp=sharing"
                },
                {
                    "title": "List Of Contributors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5097815600529408/",
                    "content": "Listing of contributors to a project is an important feature that must be an integral part of an open source community. Listing of contributors comes as an essential feature as it provides basic information on the number of people who edited the content and also the number of edits each contributor has made. This gives the  user, necessary details about the content they are going to work on , such as the people currently involved in the project and their participation. It is also  a way to give credits to the contributors for their contributions for a project.The project idea is to come up with an extension to come up with an extension to preserve contributors of a page while its contents is being transferred from one location to another. This can be:1.One wiki to another wiki2.One location to another within the wiki",
                    "projectCode": "https://docs.google.com/document/d/1GD36m1zQtvYYmX6d0J8c_4bUkWqihHjfsQG1-qhqBYw/pub"
                },
                {
                    "title": "Port catimages.py to pywikibot-core",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4529397482651648/",
                    "content": "The aim of the project is to bring to life the catimages.py script from pywikibot-compat. This involves heavy refactoring of the script to make it work with pywikibot-core. While doing this refactoring, it’d be useful to modularize the script and make it a generic python package to handle file metadata. This generic package can then be used in pywikibot-core to provide the same functionality as catimages.py provided earlier.Possible Mentors: @jayvdb, @DrTrigonPhabricator task with complete proposal: T129611",
                    "projectCode": "https://commons.wikimedia.org/wiki/User:AbdealiJK/file-metadata/GSoC2016"
                }
            ],
            "techStack": [
                "php",
                "javascript",
                "html",
                "css",
                "jquery"
            ]
        },
        {
            "title": "WSO2",
            "orgLink": "http://wso2.com/",
            "projects": [
                {
                    "title": "[ML]Visual(Deep) Neural Network Builder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6077824863567872/",
                    "content": "From Visual(Deep) Neural Network Builder, users can drag and drop layers and other computational units and they can create neural networks as they wish. They can test,train the networks and this builder will be integrating with WSO2 Machine Learner.This will be the front end for the WSO2 Machine Learner.",
                    "projectCode": "https://lakini.github.io/carbon-ml/"
                },
                {
                    "title": "Contact Development Team feature in DevStudio",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4942423683760128/",
                    "content": "Currently Developer Studio users contact the development team via wso2 web support portal (Jira), so the\nusers have to put additional effort to send error logs, metadata etc. The project goal is to develop a new plugin for users to be able to contact development team within the IDE\nitself. This plugin can be used to capture and report errors to Development team (WSO2).",
                    "projectCode": "http://nathiesha.blogspot.com/2016/08/contact-development-team-feature-in.html"
                },
                {
                    "title": "Document Based NoSQL Support for  WSO2 Identity Server Database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6699632243507200/",
                    "content": "WSO2 Identity Server is the first Identity Server Bus in the industry which is capable of managing multiple user identities among applications, APIs, cloud, mobile, etc. One of the main components of the WSO2 Identity Server is user stores. Currently WSO2 Identity Server supports user stores related to LDAP, Microsoft Active Directory and Relational Databases such as MySQL, SQL Server, DB2 etc. With the fast growth of enterprise adoption of NoSQL databases in industry, WSO2 Identity Server needs to be expanded to support NoSQL Databases. In this project I will be implementing a user store support for WSO2 Identity Server based on MongoDB which is one of the most popular NoSQL database in industry today.",
                    "projectCode": "https://asanthamax.github.io/mongodbuserstore/"
                },
                {
                    "title": "Ensemble Methods Support for WSO2 Machine Learner",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5221888615776256/",
                    "content": "Ensemble methods combine predictions of base models in order to improve performance or generalizability over a single model. To this end, there are many approaches that either use averaging or voting over base model predictions.\nThe main objective is to integrate ensemble support for the existing flow of the WSO2 Machine Learner.\nImplementation will include following tasks:\nImplement an ensemble method(s), to combine multiple algorithms (particularly Stacking, Boosting and Bagging)\nCreate a UI to include the end to end flow of training the algorithm.\nIntegrate it to the WSO2 Machine Learner.",
                    "projectCode": "https://docs.google.com/document/d/1bpTMiSciOqt7vfDgYglSBQucQReDs-btEa5xFjBZkDU/edit?usp=sharing"
                },
                {
                    "title": "HTTP Load Balancer On Top Of WSO2 Gateway",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5891422477615104/",
                    "content": "HTTP Load balancer is a software application capable of distributing HTTP traffic to backend servers according to the specified scheduling policy.WSO2 Gateway is a high performance, lightweight, low-latency messaging gateway based on standard gateway pattern. Its Netty based non-blocking IO and Disruptor (ringbuffer) architecture makes it the fastest open-source gateway available.  Benchmarks shows that the performance of gateway is very high when compared to other solutions and is close to the direct netty based backend (without any intermediate gateway).The following features will be implemented:This Load Balancer will a pluggable component.  It will be able to achieve even load distribution through highly efficient, lightweight and low latency messaging. Thus, the performance will also be able to compete with existing load balancers.",
                    "projectCode": "https://venkat2811.blogspot.in/2016/08/http-load-balancer-on-top-of-wso2.html"
                },
                {
                    "title": "Improve production system debugging capabilities of WSO2 ESB (ESB Flight Recorder)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6479129159401472/",
                    "content": "WSO2 Enterprise Service Bus is a lightweight, high performance, and comprehensive ESB. The WSO2 ESB effectively addresses integration standards and supports all integration patterns, enabling interoperability among various heterogeneous systems and business applications.\nWhen ESB crashes, to investigate the reason developers may want to get several details from the server instance. Currently developers required to perform above task manually. It can lead to complications and sometimes developers may not get their hands on relevant details.The JVM can be monitored through JMC or JConsole. But this is not a sophisticated solution for the ESB. In this project we are developing a stand alone tool to monitor and report such catastrophic event of a WSO2 ESB",
                    "projectCode": "http://dinanjanagunaratne.blogspot.com/2016/08/during-past-3-months-i-was-engaged-in.html"
                },
                {
                    "title": "Integration Test Framework for WSO2 Dockerfiles",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4811368393867264/",
                    "content": "WSO2 Dockerfiles project contains the Dockerfiles for all the WSO2 products and allows users to build and run Docker images of these products. The Dockerfiles for all the WSO2 products follow a standard structure and can also be customized to cater to specific requirements from various WSO2 projects. The WSO2 Dockerfiles project is still under development; changes are constantly being applied to the codebase by multiple developers of WSO2 community. In order to ensure the availability and robustness of WSO Dockerfiles, we propose to design and implement a general purpose integration test framework for Dockerfiles, which provides features to write and execute integration tests in an effective manner.Developers will also be able to locally execute all the tests in the integration test suite in order to ensure that their latest change did not break any existing functionalities and there are no regressions. The integration test suite should also be extensible to work in conjunction with continuous integration tools (eg Jenkins), where these tests will be executed as a result of a recent check-in or pull request.",
                    "projectCode": "https://github.com/abhishek0198/wso2dockerfiles-test-framework/commits/master"
                },
                {
                    "title": "PREDICTIVE ANALYTICS WITH ONLINE DATA FOR WSO2 MACHINE LEARNER",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5573732336664576/",
                    "content": "Machine Learning algorithms for data analysis makes new areas such as Big Data analysis. Emerging data analysis with the streaming data is one of the most paramount areas that will be pioneered the businesses in the future.  WSO2 ML (Machine Learner) is one of the main platforms which building some intelligent and predictive data analysis based on the machine learning algorithms to support modern data transactions. Even though they have ML which is build upon the well known Apache Spark MLLib, WSO2 ML still could not support  streaming data. Even though the Spark MLLib has streaming support for k mean clustering and generalized linear regression  (GLR) , it developed with a Scala API. Purpose of this project is to develop a Java API to support streaming k mean clustering and GLR with the mini batch sampling techniques to support streaming data without using Spark streaming. Therefore design include a way to acquire streaming data and break those data streams into mini batches which can be used this batches to retrain the models periodically with some optimization techniques such as Stochastic gradient descent algorithms.",
                    "projectCode": "https://dananjayamahesh.github.io/"
                },
                {
                    "title": "RESTful Fine Grained Authorization-as-a-Service (AZaaS)  for the WSO2 Identity Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6112004750180352/",
                    "content": "The Identity Server currently supports SOAP as the service medium in between its PDP (Policy Decision point) and any PEP (Policy Enforcement Point) accessing it. Authorization requests from PEP should be sent to PDP to be evaluated through a SOAP service. In the scope of the project, a RESTful service is implemented along with the SOAP service.",
                    "projectCode": "http://manzzup.blogspot.com/2016/08/gsoc-2016-rest-implementation-for-wso2.html"
                },
                {
                    "title": "SAML Assertion Query/Request Profile support for WSO2 Identity Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4965600132595712/",
                    "content": "Security Assertion Markup Language (SAML) is an XML based security token which is used to exchange authentication and authorization data between two entities.  It is one of the most widely used open standards to perform brokered authentication and web browser based single-sign-on. \"Assertion Query/Request Profile\" defines a protocol for requesting dynamic or existing assertions by reference or by querying on the basis of a subject and additional statement-specific criteria. Assertion Query/Request Profile defines five major request/query message types which can be used to request assertions from SAML authority.",
                    "projectCode": "http://velozit.blogspot.com/2016/08/gsoc-2016-saml-assertion-queryrequest.html"
                },
                {
                    "title": "Web (Javascript / D3) based BPMN editor to support a subset of commonly used BPMN constructs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5551141345558528/",
                    "content": "Business Process Model and Notation (BPMN) is a standard way of representing business processes in graphical representation.The purpose of this project is to implement Web based BPMN editor to construct business processes diagrams, which can be exported as a BPMN-2.0 compatible XML format . This BPMN diagrams can be built using components like tasks, events and gateways etc. Users can implement their BPMN diagrams by dragging, dropping, positioning, resizing, deleting and adding more details to the attributes. Constructed BPMN diagrams can be then exported as png/jpeg or a process definition XML file(BPMN 2.0 standard).BPMN editor also supports the inverted process, which is uploading of a standard BPMN model in XML format to generate a  BPMN process diagrams.This piece of software has the capability to build complete Business process diagrams and is also extensible to allow the construction of flow charts, chevron charts and other graph-based diagrams.",
                    "projectCode": "https://gist.github.com/heshanjse/25e727ce17e8b76619f70fbb91b4226f"
                }
            ],
            "techStack": [
                "middleware",
                "java",
                "soa",
                "distributed computing",
                "web services"
            ]
        },
        {
            "title": "X.Org Foundation",
            "orgLink": "http://x.org/wiki/",
            "projects": [
                {
                    "title": "\"Soft\" double precision floating point support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5364636148826112/",
                    "content": "For decades CPUs did not have hardware floating point support. Floating point was implemented using using bit twiddling operations and integer math. This applied to both single and double precision. Starting with GLSL 1.30, GPUs have all of the necessary bit twiddling operator and integer math to do the same thing. GPUs natively support single precision, but only OpenGL 4.0 class GPUs have hardware support for double precision. The goal of this project is to implement a library of double precision operations in pure GLSL 1.30.",
                    "projectCode": "https://hopetech.github.io/tech/2016/08/18/Last_week_GSoC.html"
                },
                {
                    "title": "Plug the core-apitrace support for performance counters to qapitrace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5548391492747264/",
                    "content": "Apitrace is an open source program that allows tracing, replaying, inspecting and profiling OpenGL/Direct3D calls made by any application.\nLast summer during GSoC 2015 there was developed an abstract interface that allows to use various profiling backends in Apitrace, also several backends (that use OpenGL extensions) were implemented then.\nThe goal of this task is to provide a convenient interface to the new feature in qapitrace. There already exists a version of profiling view in qapitrace. It has only a limited set of old metrics and it might lack some usability features. This GUI project plans to add new metrics, as well as improving the interface overall.",
                    "projectCode": "https://perfc.wordpress.com/2016/08/23/gsoc-16-final/"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "opengl",
                "vulkan",
                "opencl"
            ]
        },
        {
            "title": "Xapian Search Engine Library",
            "orgLink": "https://xapian.org/",
            "projects": [
                {
                    "title": "Clustering of Search Results",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4670134971006976/",
                    "content": "The current clustering functionality implemented in Xapian uses hierarchical clustering and though it provides fairly good results for low dimensional and small datasets, it becomes inefficient because of its high computational complexity. A clustering functionality should be implemented which will be able to give good quality of clustering and provide this in lesser time so as to make it more efficient.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2016/Clustering/product"
                },
                {
                    "title": "Learning to Rank Stabilisation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6427220989968384/",
                    "content": "The project aims to provide an end to end system for Learning to Rank (Letor) functionality in Xapian, which could be included in the next stable release. This shall involve integrating work done by previous four GSoC projects, creating a stable core API, writing automated test suite, and creating practical code examples.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2016/LetorStabilisation/Code"
                },
                {
                    "title": "R bindings for Xapian",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5647778378153984/",
                    "content": "R is one of the best available programming languages for computational statistics, data visualization and data science. The goal of this project is to implement R bindings for Xapian search engine library, thus allowing the use of Xapian's advanced indexing and searching facilities in R applications.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2016/R/RXapian"
                },
                {
                    "title": "Support for HHVM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6005008524902400/",
                    "content": "HHVM is an open-source virtual machine designed for executing programs written in Hack and PHP. Rather than directly interpret or compile PHP code directly to C++, HHVM compiles Hack and PHP into an intermediate bytecode, which enables higher performance for Hack and PHP programs.This Project adds the support of hhvm to xapian by extending swig to support ​HHVM-Native Interface (HNI). This will make the job of hhvm users lot easier.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2016/HHVM/Report"
                },
                {
                    "title": "Weighting Schemes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5132639732236288/",
                    "content": "Primarily, the idea is to improve existing weighting schemes in Xapian. There are other weighting schemes which can potentially be employed but they might not be worth employing for practical use in large retrieval systems like Xapian. Also, to assess the retrieval effectiveness of improved weighting schemes, the existing schemes will be evaluated and compared with their improved counterparts along the way.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2016/Weighting/Code"
                }
            ],
            "techStack": [
                "c++",
                "unicode",
                "swig",
                "android",
                "golang"
            ]
        },
        {
            "title": "XWiki",
            "orgLink": "http://www.xwiki.org/",
            "projects": [],
            "techStack": [
                "java",
                "javascript",
                "html5",
                "css3",
                "velocity"
            ]
        },
        {
            "title": "Zulip Open Source Project",
            "orgLink": "http://zulip.org",
            "projects": [
                {
                    "title": "Add Python 3 support and type hints",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/6309614853292032/",
                    "content": "In this project I will add Python 3 support to Zulip, without breaking Python 2 compatibility. I will also add type annotation (see PEP 483 and PEP 484) to all code.",
                    "projectCode": "https://paper.dropbox.com/doc/Adding-Python-3-compatibility-and-mypy-annotations-to-Zulip-FehitXSQq761g39O31eE3"
                },
                {
                    "title": "Overhauling Zulip website’s UX to handle large teams",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/4655392361545728/",
                    "content": "To improve existing features and add new features, to create a more robust and agile version of web version of Zulip which can handle large teams. A user will be able to use it more intuitively.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1424l1dmlXpKeb5KHjcnfGU4UI_lC_3BV_N9aPE49viQ/edit?usp=sharing"
                },
                {
                    "title": "Zulip Android Application Rebuild",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2016/projects/5843869405020160/",
                    "content": "The current android version of Zulip is little bit outdated and has some performance issues as well as it is using the old libraries. I will implement new designs as shown in the UI Design's and will use the new libraries for the internet activities which would definitely enhance the performance of the app.",
                    "projectCode": "http://kunall17.github.io/gsoc/index.html"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "django",
                "android",
                "ios"
            ]
        }
    ],
    "list2017": [
        {
            "title": "52°North Initiative for Geospatial Open Source Software GmbH",
            "orgLink": "http://52north.org/",
            "projects": [
                {
                    "title": "Simple Features for protobuf and others",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6219606565847040/",
                    "content": "The Simple Feature Access Specification (aka. Simple Features) is a common standard for exchanging spatial features that is widely used in geoinformatics in Open Source projects as well as in proprietary programs. It defines a generic data model for storing and accessing geographic data and their geometry types.Protocol Buffers is a format for data serialization which has inbuilt features such as binary serialization, RPC frameworks and IDL. Its unique features such as flexible, efficient, automated mechanism for serializing structured data but with smaller, faster, and simpler manner makes it a very good candidate for ​ data serialization use cases.JTS Topology Suite (JTS), which is a free and open source library containing geometries that correspond to the Simple Feature Access Standard.Main goal of the project is to define and implement of a serialization API based on JTS, which transparently serializes geometries based on the Simple Feature specification using Protocol Buffers. Extending support for other serialization frameworks such as Avro and support for raster data will also be addressed based on time constraints.",
                    "projectCode": "https://github.com/52North/topology-serialization-framework"
                }
            ],
            "techStack": [
                "web services",
                "ogc standards",
                "java",
                "javascript",
                "web"
            ]
        },
        {
            "title": "AboutCode",
            "orgLink": "http://aboutcode.org",
            "projects": [
                {
                    "title": "Building ScanCode live scan server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6426516883767296/",
                    "content": "Building a project which uses ScanCode as a library in a web and REST API application that allows you to scan code on demand by entering a URL and then store the scan results. Travis or Github integration to scan on commit with webhooks. Including the  feature to scan based on a received tweet of similar IRC or IM integration.",
                    "projectCode": "https://github.com/nexB/scancode-server/wiki/Google-Summer-of-Code-2017-Work-Product-Submission---%5BRajuKoushik%5D%5BAboutCode%5D"
                },
                {
                    "title": "Live scan server to scan licenses using URL and file uploader",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5362705024155648/",
                    "content": "This project is based on the building a web app that can take the user input of the plain-text code or it can take the input as the URL from where the code can be downloaded into the proper directories. It can also allow the user to upload files from the computer.Once the user enters the information, the automating scripts will get the code. Some checks will be applied to check whether the given inputs are correct or not. Further, the scancode library can be used to analyse the user code. Finally, the analysed information will be stored in the database. The data exchange between the scancode and the web app is done using ABCD format as specified by the scancode documentation.The final output will be shown to the user on demand using templates.",
                    "projectCode": "https://singh1114.github.io/GSoC2017/"
                },
                {
                    "title": "Package Vulnerability Data Feed & Scanner",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4528971072929792/",
                    "content": "The usage of any open source software is primarily guided by the licenses binding it. Individuals/Organisations, generally make the decision of using an open source software, on this, i.e. the licenses. Vulnerability scanner, aims to, take it to a tad higher level. By being a comprehensive tool, which, using the industry standard CVE data and data from several other trusted sources matches packages with any reported vulnerabilities. Hence, providing another layer of information to Individuals/Organisations, helping them understand everything under the hood of an Open source software, better.",
                    "projectCode": "https://github.com/nexB/vulnerablecode/wiki/Final-Project-Report"
                },
                {
                    "title": "Plugin architecture for ScanCode",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4847532286935040/",
                    "content": "This project’s purpose is to create a decoupled plugin architecture for scancode such that it can handle plugins at different stages of a scan and can be coupled at runtime.These stages would beUpside of building a pluggable system would be to allow easier additions and rare modifications to code, without having to really fiddle around with core codebase. This will also allow a level of abstraction between the plugins and scancode so that any erroneous plugin would not affect the functioning of scancode as a whole.",
                    "projectCode": "https://github.com/nexB/scancode-toolkit/wiki/GSoC-2017-Plugin-Architecture-Final-Report"
                }
            ],
            "techStack": [
                "python",
                "c/c++",
                "javascript",
                " shell script",
                "static analysis"
            ]
        },
        {
            "title": "AerospaceResearch.net",
            "orgLink": "http://aerospaceresearch.net/",
            "projects": [
                {
                    "title": "Lone Pseudoranger: orbit position data analysis and interpolation (3d)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4841919569985536/",
                    "content": "The project is mainly focused on data analysis for 3d position data of satellite orbits. My work is to receive as an input a huge amount of positioning data perform parsing and cleaning techniques on them if needed and then apply different types of interpolation methods to the data sets. After the major computations the procedure will continue with some visualization of the results. More information are in the final shared draft proposal.",
                    "projectCode": "http://aerospaceresearch.net/?p=332"
                },
                {
                    "title": "Multi Purpose Ground Station",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6152911629320192/",
                    "content": "Iridium is a satellite communication system, previously mainly used for satellite phone calls and remote control and tracking of scientific instruments or trucks. However, recently more and more lightweight modules were introduced to the market which allow for new applications in vehicles such as high-altitude balloons and miniaturised spacecraft.The goal is to improve the existing ground station coded for the MIRKA2-RX experiment and improving it to become a flexible and versatile platform that can be easily modified and fitted to the needs of an experiment.\nThe current ground station already features the basic components needed for receiving data via the Iridium satellite but requires a lot of coding and understating of the code to use it in different scenarios. \nThe suggested proposal would heavily focus on making the application useable to a wider audience by featuring config files for the GUI and the data protocols used as well as adding support for 3D visualisation of GPS data.",
                    "projectCode": "http://aerospaceresearch.net/?p=326"
                },
                {
                    "title": "Orbit Position Data Analysis and Interpolation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6712304007643136/",
                    "content": "This project is directed towards obtaining the Keplerian orbit parameters from the jittery position vector obtained by de-noising and interpolating the data. \nProposal contains a mention of all the work that I have done until now along with a link to a demonstration video of the project.\nAll necessary details have been mentioned and the stated guidelines on the organization website are strictly followed.",
                    "projectCode": "https://aerospaceresearch.net/?p=299"
                },
                {
                    "title": "SiqNAL: Fast CubeSat tracking using IQ stream data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5749327108505600/",
                    "content": "This project aims to provide a reliable open-sourced cubesats tracking following different mechanisms and protocols for transmitting signals that too using very low end receiver i.e Software Defined Radio (SDR) and under limited computation power, for which no reliable satellite tracking facilities are provided.",
                    "projectCode": "https://goo.gl/xLXGsH"
                },
                {
                    "title": "Universal Space Operations Center",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6437495088611328/",
                    "content": "The Universal Space Operations Center, USOC, is an open-source tool that allows a simple and easy creation of a working groundstation to aid space projects. The program structure is divided into three main components:Due to the fact that the functionality of every experiment should be checked before lift-off, a communication software for up- und downlink is required. Based on the input of the user in a configuration file, the GUI and partially also the controllers can be written automatically. In this matter, USOC generates appropriate functionalities within the controllers for individual GUI contents, which can then be adapted manually. Changes in the configuration file are detected, localized and the corresponding GUI structures and controller functionalities are regenerated. If these are manually written functionalities, they are recognized and not overwritten. USOC also brings pre-coded functions, such as communication via serial ports and/or the Iridium satellite network, as well as a three-dimensional visualization of GNSS data.",
                    "projectCode": "http://aerospaceresearch.net/?p=350"
                },
                {
                    "title": "VisMa – A visual equation solver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6145493683929088/",
                    "content": "VisMa aims to make math simpler for all who are afraid of mathematics. Once the numbers are eliminated from an equation, people fear dealing with maths and hence stop pursuing it or leave it to the experienced. The project will develop a software that aims to break down several type of mathematical problems into simpler and more understandable steps and then solve each of them one by one and reach the answer. The project can be successfully used among the younger generation to teach them complicated mathematical concepts.",
                    "projectCode": "https://aerospaceresearch.net/?p=431"
                }
            ],
            "techStack": [
                "python",
                "c/c++",
                "vhdl",
                "boinc"
            ]
        },
        {
            "title": "aimacode",
            "orgLink": "https://github.com/aimacode/",
            "projects": [
                {
                    "title": "Implementation and Visualization of algorithms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6055199244288000/",
                    "content": "AIMA-Python’s current repo has code for most of the algorithms in the third edition. The proposed project aims to update these implementations and add additional implementations in the fourth edition. Interactive Visualizations will be made added using of IPython Jupyter notebook.",
                    "projectCode": "https://gist.github.com/Chipe1/54640f1164f62ad8f3ae8abbe690e82a"
                },
                {
                    "title": "Implementation of Probability and Learning sections of AIMA4E branch",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5123394546696192/",
                    "content": "Having a keen interest in the domain of Artificial Intelligence, I would like to propose to write and refactor sections of the code for the AIMA4E branch \"core\" module in the specific areas of probability and learning. I would use the language features of Java 8 to write shorter and readable code, as well as code efficient implementations that do not sway away from the pseudo code. After having gone through several of the open issues that are flagged as TODOs, I have come up with a list of issues I find myself in a capable position to work upon. Depending upon the scope of requirements, I would also be interested in working on some visualization modules of algorithm results that provide a clearer picture of its working.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1TxxjrQ8F9wWvHf7-clnxdzMg9IXPZDKa4HBpXtkq1ek/edit?usp=sharing"
                },
                {
                    "title": "Javascript Visualizations for concepts in the book 'Artificial Intelligence: A Modern Approach'",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6430712798380032/",
                    "content": "This project aims to design and implement Javascript visualizations for the following chapters in the aima-javascript repository:The visualizations will be accompanied by relevant context explaining them with complete relevance with the book.",
                    "projectCode": "https://gist.github.com/Rishav159/9b33681a3029c7c930a7c60d4a2aee1e"
                },
                {
                    "title": "Work on AIMA-Python",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6267057364533248/",
                    "content": "The Python repository includes IPython/Jupyter Notebooks that help the reader understand how the algorithms work and how to use their implementations. Currently this project is incomplete. A lot of algorithms are missing, some modules are empty and there are not enough examples. Also, some of the Python implementations in the repository are incomplete and don't have tests, and as new pseudocode is added to the new edition of the book, new implementations should be written.With this project I aim at expanding the Notebooks, adding algorithms not yet covered, adding examples and editing existing Notebooks. I will also add visualization aids to help get the concepts across (for example graphing with matplotlib, or images).Finally, I will add tests to the modules and I will help finish incomplete implementations, while also implementing new algorithms as they are posted.",
                    "projectCode": "https://gist.github.com/MrDupin/2db92e8b35d26990dff74fb9b1500aa0"
                }
            ],
            "techStack": [
                "python",
                " javascript",
                "machine learning",
                "artificial intelligence",
                "java"
            ]
        },
        {
            "title": "Amahi",
            "orgLink": "https://www.amahi.org",
            "projects": [
                {
                    "title": "Adding new functionalities to the Android app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6336674220998656/",
                    "content": "The android version of Amahi works well. For Summer of Code’ 17, I will mainly be focusing on adding the following functionalities to the app:",
                    "projectCode": "https://drive.google.com/open?id=0B3goqm-HUlJvSTRNQ1J1QWw5clE"
                },
                {
                    "title": "Android App (Amahi Anywhere) Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5989565433118720/",
                    "content": "The main goal of my project is to implement more advanced features and bring more functionality to the android app. It includes adding features like File upload and delete; auto image upload whenever a new photo is captured using any camera app; chromecast support for casting audio, video and photos; new native android video player; status bar and lockscreen notifications for controlling audio playback; swipe gestures in video player for controlling brightness, volume and video position.",
                    "projectCode": "https://drive.google.com/drive/folders/0BxF0CJgMqEzkVUpNakNXNUswTnc?usp=sharing"
                },
                {
                    "title": "Dockerize Amahi Apps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4977126348423168/",
                    "content": "Improve the app installation process using docker. Dockerize existing applications and add support for more applications. Improve plugins and overall performance of the platform.",
                    "projectCode": "https://viky.co.in/2017/08/25/google-summer-of-code-2017/"
                }
            ],
            "techStack": [
                " android",
                "golang",
                "restful api",
                "streaming",
                "ruby on rails"
            ]
        },
        {
            "title": "AOSSIE - Australian Open Source Software Innovation and Education",
            "orgLink": "http://www.aossie.org/",
            "projects": [
                {
                    "title": "Adding more voting algorithms to Agora",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6679992700239872/",
                    "content": "The project deals with addition of voting algorithms to Agora, providing comprehensive tests, refactoring the code base and providing documentation. This involves assigning new ballot, voting method and parser functions, new quotas in the algorithm package and automated tests. Apart from this, I will be working on a side project which will deal with delving into the topic of voting through Twitter, which will mainly be done before the coding period begins.",
                    "projectCode": "https://gitlab.com/aossie/Agora/blob/master/doc/GSoC/2017/SaumoPal.md"
                },
                {
                    "title": "Carbon Footprint ( Mobile App )",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4799017946972160/",
                    "content": "This mobile app will be used to tell user about CO2 emission during user’s activity . This app will find the type of activity and distance travelled . Based on activity type and distance travelled by user , CO2 emission will be measured by using same formula used in existing browser extensions . This measurement will be real time , i.e. , user will be notified about CO2 emission at same time while he/she is travelling . This app will also contain Google Map to show user about his/her source and destination which will help user in navigating the path ( Having less CO2 emission) along with current information about CO2 emission .Platform Used - This mobile app will be developed as a Hybrid app . For Hybrid app development , React Native framework will be used along with Scala.js to make it cross-platform and easy to develop and maintain .Functionalities provided by Mobile app -",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint-Mobile/blob/master/doc/GSoC/2017/AnujGupta.md"
                },
                {
                    "title": "Carbon Footprint Mobile Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4769743449882624/",
                    "content": "The browser extension does a good job of making people aware about the Carbon Footprint while searching for directions on map services. The mobile application should take this one step further. It should not only spread awareness but also help users in reducing their carbon footprint. I am proposing an application along the lines of Google Fit to track user’s carbon footprint. The app would allow the user to effortlessly track his movement. See real-time stats for your commute. The app would record the mode of transportation, distance travelled, speed, etc. and provide estimations regarding CO2 emissions. The app would allow the user to set personalised goals based on a mode of transportation or carbon footprint. The app would also suggest recommendations to achieve the set goals.",
                    "projectCode": "https://siddarthapadhi.wordpress.com/2017/08/29/wrapping-up-gsoc-2017/"
                },
                {
                    "title": "CarbonFootprint API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4671494193938432/",
                    "content": "CarbonFootprint is a great initiative to make people aware of their unnoticed contributions to the degradation of this planet. This initiative needs to be expanded to reach out to a much more wider audience. Thus creating an API for this project can help achieve this task. Modern smart devices can make use of this interface to create new possibilities and information which I think can surely benefit the planet in some way.",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint-API/blob/master/docs/GSoC/2017/RohitGupta.md"
                },
                {
                    "title": "CO2 EMISSIONS API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6288189677371392/",
                    "content": "This project aims to build a RESTful API , that is the one place to go to for any information that you require on Carbon Emissions . The aim is to create a universal converter to CO2 , that will act a easily accessible knowledge database and at the same time create a social awareness and alert people of the consequences.",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint-API/blob/master/docs/GSoC/2017/SaiSankarGochhayat.md"
                },
                {
                    "title": "CO2 EMISSIONS FOR FLIGHTS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4991142839975936/",
                    "content": "The project aims to extend the browser extension's ability to show carbon emission to websites that sell airplane tickets, the approach is to add this feature while keeping the code modular and easy to read. This works by scraping the relevant information from websites and processing it to convert it into carbon emission.\n     Also the project introduces the extension disable/enable function and functionality of alerting devs when the software has failed on some website.",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint/blob/master/doc/GSoC/2017/nakulh.md"
                },
                {
                    "title": "Computational Philosophy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6398517723529216/",
                    "content": "This project aims to formalize several ontological arguments and the \"Simulation Argument\" by Nick Bostrom in Isabelle/HOL using a shallow semantic embedding. It is part of an ongoing effort to see if and how automatic theorem provers can help solve problems in mathematics and philosophy.",
                    "projectCode": "https://gitlab.com/aossie/ComputationalPhilosophy/blob/master/doc/GSoC/2017/DavidStreit.md"
                },
                {
                    "title": "Enriching the Agora library with the state-of-the-art voting rules followed by application usage.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4578207504269312/",
                    "content": "Currently, AGORA supports the \u001bonly handful of voting rules and there is no usage of the library in any kind of application. In this proposal, I want to add new state-of-the-art voting rules like Smit Set, Bipartisan Set, Uncovered Set, Preference Analysis and enable automated performance testing with Scalameter followed by its usage in in the project election through twitter using loklak.",
                    "projectCode": "https://gitlab.com/aossie/Agora/blob/master/doc/GSOC/2017/deepeshpandey.md"
                },
                {
                    "title": "Front end for agora",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4542934548480000/",
                    "content": "This idea is about to develop a web front end for the agora core. I am planing to implement the system using play framework , html ,bootstrap , java script and jQuery . And I am going to use mongoDB for databse requirement because of the flexible schema and scalability.",
                    "projectCode": "https://gitlab.com/aossie/Agora-Web/blob/master/docs/GSoC/2017/Thuvarakan.md"
                },
                {
                    "title": "Making the current browser extension more powerful using REST API.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5159879488569344/",
                    "content": "This proposal is regarding my ideas on the API for showing results on various carbon emission sources and also enhancing the current browser extension. I would like take this opportunity to create awareness for carbon emission by adding some related features in extension itself for different websites and for more general usage I will make API from scratch to calculate emissions for more complex cases.",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint/blob/master/doc/GSoC/2017/vaibsharma.md"
                },
                {
                    "title": "Mind The Word GSoC Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5515919124070400/",
                    "content": "In this project I wish to develop a Mobile App for Mind The Word . I would be using Apache’s Cordova for developing the hybrid app as it would be easy to maintain and develop a cross platform app. Since the browser such as Chrome (for Android and iOS) do not support extensions, MTW cannot be implemented directly.In order to use our app, a user has 3 options.Any of the above 3 options, opens the InAppBrowser inside the MTW App and the mtw script is injected in webpage.The MTW App would include almost all the options (such as blacklist words, save learnt words etc ) available in the web extension.",
                    "projectCode": "https://gitlab.com/snippets/1673082"
                },
                {
                    "title": "Mobile App for Carbon Footprint",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5676072146305024/",
                    "content": "Carbon Footprint is a browser extension to calculate and display CO2 emissions incurred when driving (or using public transportation) on routes. But smartphones and tablets are increasingly becoming the computer of choice for more and more people and due to lack of extensions’ support for mobile browser, the mobile app for calculating the same makes more and more sense. My proposal shows a plan as to how we can develop a mobile app using a single codebase and replicate everything the extension provides us with.",
                    "projectCode": "https://gitlab.com/aossie/CarbonFootprint-Mobile"
                },
                {
                    "title": "Speeding up the existing theorem prover, using Conflict Resolution calculus",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5974751017172992/",
                    "content": "I'm going to speed up the theorem prover based on Conflict Resolution calculus. In particular, I am going to improve the bottlenecks in the current version of the algorithm by using better data structures.",
                    "projectCode": "https://gitlab.com/vlad10795/Scavenger/blob/develop/doc/GSoC/2017/padtsiolkin.md"
                }
            ],
            "techStack": [
                "scala",
                "javascript/html/css",
                "automated reasoning",
                "android/ios",
                "xcode"
            ]
        },
        {
            "title": "Apache Software Foundation",
            "orgLink": "http://www.apache.org",
            "projects": [
                {
                    "title": "Add Event Listeners to Data Objects and Implement Vote Based Locking",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5267581699096576/",
                    "content": "Apache Gossip is a system which can be used to build a distributed peer-to-peer network using the gossip protocol. Currently Apache Gossip is under its initial development stage where it supports basic data replication with CRDT, fault detection and multiple datacenter support. One of the requirement for this project is to support event based model to notify whenever the per-node data or shared-data get changed. Furthermore, the system is required support distributed locking mechanism in order achieve various tasks. For example dividing a task between nodes or electing a temporary leader.  Therefore, the purpose of this project is to design and implement the above mentioned functionalities to Apache Gossip project.",
                    "projectCode": "https://docs.google.com/document/d/1JZsXxqlcQeD12qlWLWwyn5txCfjHUmu88TCQHMne5_Y/edit?usp=sharing"
                },
                {
                    "title": "Add SQL support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6359040665845760/",
                    "content": "Apache Gearpump is a real-time big data streaming engine. It is inspired by recent advances in the Akka framework and a desire to improve on existing streaming frameworks. Gearpump is event/message based and featured as low latency handling, high performance, exactly once semantics, dynamic topology update, Apache Storm compatibility, etc. This project is about building a SQL layer with Apache Calcite to help those who are unfamiliar with Scala/Java to use Gearpump.",
                    "projectCode": "https://github.com/GearGSoC/gsoc2017/blob/master/GSoC_2017.md"
                },
                {
                    "title": "Adding a new NoVNC console- CloudStack9778",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5708090456408064/",
                    "content": "The aim of this feature is to make it possible to connect to VM consoles using  VNC client called NoVNC in browsers.noVNC is an HTML 5-based remote desktop web client which can communicate with a remote VNC server via WebSockets. Using noVNC, you can control a remote computer in a web browser over VNC.\nnoVNC has a full VNC client implementation in JavaScript/HTML5. However, noVNC is still limited by the fact that JavaScript cannot make plain TCP connections. noVNC uses WebSockets to connect to the server. noVNC includes a generic WebSockets to TCP bridge ( WebSockify ) that you can run on the server or the client. Using noVNC would be better than the current customized VNC in ACS. However, this project aims at adding noVNC support along with the current VNC feature. They will communicate to the VM via different ports.",
                    "projectCode": "https://cwiki.apache.org/confluence/display/CLOUDSTACK/noVNC+support+for+Cloudstack"
                },
                {
                    "title": "Apache -VXQUERY-180 (RESTful API)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6592753324523520/",
                    "content": "Apache VXQuery uses Hyracks and Algebricks open-source frameworks and provides a standards compliant XML Query processor implemented in Java to evaluate queries on large amounts of XML data. At the moment a CLI tool has been implemented for command line query execution. But to use the CLI tool, the user should have some sort of an advanced knowledge on using terminals. To break this barrier, a REST API can be implemented which will be used by a web interface to make use of VXQuery effectively. Therefore, adding a REST API will add more value to VXQuery and will help VXQuery to reach more users in the future. Implementing the REST API and developing a simple web interface on top of that are the main objectives of this project. Furthermore, the existing CLI will also be modified to make use of the REST API.",
                    "projectCode": "https://medium.com/@erandiganepola/gsoc-2017-apache-vxquery-180-restful-api-bcb8833f24e5"
                },
                {
                    "title": "Apache Fineract Credit Bureau Integration phase 2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5062843560886272/",
                    "content": "During Phase 1 of Credit Bureau Integration project, the focus was on Credit Bureaus from India region. Initial modifications were done in Loan and Client modules to accommodate a standalone credit bureau module. However, as Apache Fineract is Open Source core banking platform used globally, the demand is to make this module more generic to accommodate global credit bureaus. Phase 2 of credit bureau integration aims to provide flexible infrastructure which facilitates on boarding of new credit bureau in Apache Fineract Platform.",
                    "projectCode": "https://nikpawar89.github.io/"
                },
                {
                    "title": "Apache OODT : Rework OODT configuration to make use of Zookeeper for distributed configuration management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5113122192883712/",
                    "content": "Since OODT consists of different components like file manager, resource manager and work flow manager, all those components have their own configuration files and locations. This is complex to manage and creates problems when the platform is distributed across servers or geographically. Therefore, the objective of this project is to migrate the OODT configuration to an optional zookeeper module so that the OODT components can register themselves in the zookeeper ensemble accordingly and maintain each component’s state regardless of the scale of the cluster. The proposed zookeeper module will minimize the manual configuration required when configuring OODT components. That is, this module will make use of the inherited configuration at component level. For example consider the file manager. Almost all the configurations of file manager instances are identical. Therefore, new file managers which are coming up later will inherit the configuration of the initial file managers and will almost remove the manual configuration required when adding new nodes to the cluster.",
                    "projectCode": "https://loneidealist.wordpress.com/2017/08/24/gsoc-2017-distributed-configuration-management-for-apache-oodt/"
                },
                {
                    "title": "ASTERIXDB-1371 Support the standard GIS objects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6341931260968960/",
                    "content": "Apache AsterixDB is a scalable, open source Big Data Management System (BDMS). It currently supports many data types in the Asterix Data Model (ADM). This project aims to support all standard spatial object internally and to parse/format the spatial object by using either or both well-known format or/and geojson format.",
                    "projectCode": "https://asterix-gerrit.ics.uci.edu/1974"
                },
                {
                    "title": "Automate performance testing and reporting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6077565689135104/",
                    "content": "Currently the performance tests are only semi-automated and only a subset of algorithms are included, but largely the process is manual. An automatic benchmark suite can be used to detect regressions or improvements in critical components of the system. This GSoC would begin by building a benchmark infrastructure to conduct experiments that compare different choices in critical parts like Sparsity thresholds for Dense/Sparse datasets, Dataset Size, Memory Limit and Hyper parameters decisions.",
                    "projectCode": "https://github.com/krishnakalyan3/krishnakalyan3.github.io/blob/master/work_product.md"
                },
                {
                    "title": "Database Versioning in Apache Airavata",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4793818889060352/",
                    "content": "Considering Airavata, which has multiple developers contributing to the project, there is bound to be a situation where the databases and the data stored in it are not synchronized. Even with a single instance, it takes a significant amount of time to make sure that the changes are in sync when more than one developer works on it. The goal of this project is to introduce versioning of databases (schema and data) when merging a developed branch to the master branch before deploying the revision.",
                    "projectCode": "https://cwiki.apache.org/confluence/display/AIRAVATA/A+gist+of+my+summer+with+Apache+Airavata+during+GSoC+2017"
                },
                {
                    "title": "DBSCAN Clustering in Mahout",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5706035582992384/",
                    "content": "Clustering is an important Data Mining technique with wide applications in Medicine, Biology, Social Network Analysis, Image Segmentation just to name a few. Density-based clustering is an intuitive and efficient to group similar objects together. The DBSCAN algorithm is a state of the art density-based clustering algorithm. The DBSCAN algorithm has quadratic time complexity making it unsuitable for Big Data Applications. I propose to implement a distributed R-Tree based DBSCAN algorithm in Mahout which has a complexity of O(nlog(n)). And after due discussions, implement an optimized version of the distributed DBSCAN algorithm.",
                    "projectCode": "https://github.com/apache/mahout/pull/334"
                },
                {
                    "title": "DERBY-6921 How good is the Derby Query Optimizer, really",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6076759980113920/",
                    "content": "Query Optimization is an active field of research in the Database Research Community, researchers have spent significant time and resources studying the state of art in query optimization and continuously improving it through different approaches. At the 2015 VLDB conference, a team led by Dr. Viktor Leis at Munich Technical University introduced a new benchmark suite for evaluating database query optimizers. The research revisited the main components in the classic query optimizer architecture using a complex, real-world data set and realistic multi-join queries.This project aims to obtain the above benchmark suite, obtains an end to end analysis of various components of Derby Query Optimizer, isolate each component’s contribution towards Derby query optimization and improve the components. The analysis obtained will serve as the knowledge base for Derby’s current state of art in query optimization and help in directing future efforts towards improving Derby in the long term.",
                    "projectCode": "https://medium.com/@harshvardhangupta/apache-derby-google-summer-of-code-2017-52aa99ff77c4"
                },
                {
                    "title": "Distributed Workload Management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4774844797288448/",
                    "content": "Apache Airavata is a framework that allows users to manage and execute multiple tasks using distributed computing techniques in the cloud. A core aspect of its success depends on managing workloads in a distributed environment with a microservices based architecture. My work is to create an infrastructure to efficiently manage the workload requests and make execution of tasks much easier and faster.",
                    "projectCode": "https://docs.google.com/document/d/1z9Lo5zUkU01uchvtJCtX454x8lUG2o05-63F6O7awdA/edit?usp=sharing"
                },
                {
                    "title": "Fineract REST API \"Live\" - Swagger",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4848851110330368/",
                    "content": "Mifos (Fineract) has a documented REST API already. It currently has two limitations:\nIt's source is simply a HTML file that is maintained manually in parallel to the source code which actually defines the REST API, and therefore can be out of sync and it's not \"live\"\nThe goal of this project is address this by using Swagger (now Open API Initiative OAI), most probably combined with SpringFox in for Mifos (Fineract), and replace the current apiLive.htm.\nOnce the Swagger live documentation is working it would be interesting to use the Swagger descriptor to generate client libraries (e. g. Java, Angular2). \nNice to have optional add-on ideas for the end of the project is to add a paragraph to this new REST API Doc explaining how to easily import the (latest) Mifos Swagger into Postman, and perhaps add a Run in Postman button",
                    "projectCode": "https://github.com/apache/fineract/pull/409"
                },
                {
                    "title": "Implement Aerospike Datastore",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5583054563180544/",
                    "content": "Apache Gora currently supports for persisting objects to various database models such as column stores like Apache Hbase, Apache Cassandra and  key value stores. This project aims to extend its capability to provide support for Aerospike database which is a NoSQL database solution for real-time operational applications, delivering predictable performance at scale.",
                    "projectCode": "https://github.com/apache/gora/commits/master?author=nishadi&until=2017-08-30"
                },
                {
                    "title": "Improving Lucene Indexing on Apache VXQuery",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5339960219533312/",
                    "content": "This proposal aims to introduce indexing as a way to speed up XML query evaluation. In XML, due to the complexity of tree structures, a wide range of index structures exists, for which different classifications can be found in the literature. In this work, we will focus on path indexing, which facilitate the access to all unique document paths of a document. In this work, Apache VXQuery will be used as the system in which path indexing will be applied. Last year, Lucene index has been integrated in VXQuery. However, there have to be a few improvements in order for Lucene index to be fully optimized for VXQuery.",
                    "projectCode": "http://mail-archives.apache.org/mod_mbox/vxquery-dev/201708.mbox/%3Cf2f453d8-f848-88a1-6718-4af00b0df1ea%40ucr.edu%3E"
                },
                {
                    "title": "Mobile Field Officer App on Apache Fineract Version 2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4709667863265280/",
                    "content": "Fineract version 1.0 was based on the client server architecture. Now Mifos is moving one step forward and is going to releasing Gen 3/Fineract Version 2.0 which is based upon the cloud-native architecture for digital financial services.Fineract 2.0 evolved from the Fineract 1.0. Now Fineract 2.0 backend API structure is totally changed with great enhancement and is massively scalable and easily adaptable.I will design an android application on top of fineract 2.0 that will add many exciting features. \nMVP architecture with Dagger 2, Rxjava, Retrofit 2 etc. \nCode Quality plugins Findbugs, PMD, CheckStyle.\nUser Login with Multiple account (Using Basic Auth and OAuth2).\nUser Profile with Edit option.\nClient List.\nNew client onboarding (including additional user-defined data).\nViewing of client details.\nLoan and savings origination - opening, approving, and disbursing applications\nDashboard screen with advance search.\nSynchronizing client data so field officers can collect repayments, view data, and onboard new clients while offline and synchronize when the return with a connection.\nUnit testing and Instrumentation Testing. \nDocumentation etc.",
                    "projectCode": "https://github.com/therajanmaurya/android-client-2.0/pulls?q=is%3Apr+author%3Atherajanmaurya"
                },
                {
                    "title": "NUTCH-2369 Create a new GraphGenerator Tool for writing Nutch Records as a Full Web Graph.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5413355305041920/",
                    "content": "Currently Apache Nutch has the concept of a WebGraph which builds Web graphs, performs a stable convergent link-analysis, and updates the crawldb with those scores. The main purpose of building a new Graph Generator tool for Nutch is to create a substantiated ‘deep’ graph enabling true traversal, this could be a game changer for how Nutch Crawl data is interpreted. This will involve storage of  the crawl data as RDF datasets in the form of serialized n-quad statements. This graph can be used to execute queries on the webpages. Graph generation will be achieved using the Apache Tinkerpop ScriptInputFormat  and ScriptOutputFormat’s respectively.",
                    "projectCode": "https://wiki.apache.org/nutch/GoogleSummerOfCode/GraphGeneratorTool/WeeklyReports"
                },
                {
                    "title": "Port Apache SIS to Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5513810026692608/",
                    "content": "Porting task of SIS library to Android with possible alternatives for the technologies which are not compatible with Android.",
                    "projectCode": "https://gist.github.com/dinush/5e7a331ce4aa8796a8c507dc93b2fc84"
                },
                {
                    "title": "Port Marmotta to Eclipse RDF4J",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6223317417590784/",
                    "content": "Apache Marmotta has become one of the most prominent projects within the open source community of Linked Data. It brings together the standards of the Semantic Web (RDF, SPARQL) and a set of new and innovative technologies of Linked Data such as: LDP, LDCache, LDPath, etc. Currently Apache Marmotta relies on the Sesame Framework for handling data as RDF internally within its modules. However, Sesame is undergoing a deprecation process and it’s being replaced by its successor Eclipse RDF4J. In order to keep Apache Marmotta updated and insurance its compatibility with new developments, it is a fundamental need to port Apache Marmotta to the new version of this Framework.",
                    "projectCode": "https://wiki.apache.org/marmotta/GSoC/2017/MARMOTTA-659"
                },
                {
                    "title": "Rewrite Cassandra Module in Apache Gora to support CQL",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5727025356603392/",
                    "content": "gora cassandra module is written based on thrift connector, but new Cassandra servers don't support thrift connectors, therefore this module is needed to be rewritten to support CQL.",
                    "projectCode": "https://github.com/apache/gora/commits?author=madhawa-gunasekara"
                },
                {
                    "title": "SIS JavaFX Front End",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5105884501901312/",
                    "content": "Apache SIS is a library for handling  geospatial  data. This project aims to create a JavaFX app that will expose the features of this library.  The app will allow editing metadata such as coordinate reference system, transforming coordinates and visualizing queries on a map.",
                    "projectCode": "https://github.com/SiddheshRane/sis-client"
                },
                {
                    "title": "Support advanced features of resource managers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4630813337452544/",
                    "content": "This project aims to implement Node Labeling and Preemption API, which are existing feature of resource managers, on REEF. Node Labels allow users to group resources with similar characteristics or with similar ACL policies and Preemption is a way to respect elasticity and SLAs together.Even though YARN and Mesos, the resource managers have existing features that supports Node Labeling and Preemption, REEF doesn’t have APIs that makes these features available. To make developers can exploit these features on REEF regardless of which resource manager they use, APIs that make available Node Labeling and Preemption will be implemented on REEF in this project.When Node Labeling and Preemption has been done in REEF, developer can exploit these features without directly dealing with resource managers such as YARN or Mesos, but through the same interface on REEF. It will increase portability and simplifies development of applications for cluster resource managers.",
                    "projectCode": "https://gist.github.com/scan3/6eddf8a20735171fd1f4ccf3b32a3180"
                },
                {
                    "title": "Supporting Image-to-Text (Image Captioning) in Tika for Image MIME Types",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4859682480979968/",
                    "content": "Image captions are a small piece of text, usually of one line, added to the metadata of images to provide a brief summary of the scenery in the image. It helps text based Information Retrieval(IR) systems to \"understand\" the scenery in images. It is a very useful feature, yet a challenging and interesting problem in the domain of computer vision.The objective of this project is providing Apache Tika, image captioning capabilities and a scalable architecture to deal with deep learning models in the future.",
                    "projectCode": "https://wiki.apache.org/tika/GSOC/GSoC2017"
                }
            ],
            "techStack": [
                "java",
                "c",
                "erlang"
            ]
        },
        {
            "title": "Apertium",
            "orgLink": "http://www.apertium.org",
            "projects": [
                {
                    "title": "Adopting English-Catalan language pair to bring it close to state-of-the-art quality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5930868531003392/",
                    "content": "Apertium currently has an English-Catalan language pair in trunk, but there is a lot of room for improvement. One of the existing problems is the use of monodixes not shared with other languages, which makes future development more difficult. The main goal of this proposal is to bring the unreleased eng-cat language pair (which uses shared monodixes) to the same level as the release en-ca language pair in order to get rid of the old pair. In addition, coverage and error rates will be improved by expanding the bidix and adding new transfer and lexical selection rules. The proposal is focused on EN>CA machine translation, but some work will be done to improve the translated texts in the opposite direction.",
                    "projectCode": "http://wiki.apertium.org/wiki/English_and_Catalan/GSOC_2017"
                },
                {
                    "title": "Automatic blank handeling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5549278403493888/",
                    "content": "Our current handling of formatting/markup (HTML, odt, docx, latex) is brittle, requiring transfer rules to explicitly deal with blanks (e.g. markup), and sometimes inevitably outputting them in the wrong order. This project is to implement automatic blank-handling, by treating some blanks as \"glued to words\" (e.g. italics, emphasis), and others as paragraph-level blanks.",
                    "projectCode": "http://wiki.apertium.org/wiki/User:SilentFlame/updatedPipeline"
                },
                {
                    "title": "Chukchi morphological analyser using HFST",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4736366453719040/",
                    "content": "Chukchi is a language with rich and complicated morphology and incorporation.\nBy now morphological parsers using regular expressions were not able to handle it properly. The platforms themselves were not very user-friendly (no documentation whatsoever). \nHFST offers more possibilities than regular expressions for both analysing and constructing forms of Chukchi.\nApertium is, on the one hand, a platform that uses HFST, and on the other hand, a community that is interested in minor languages. \nChukchi is a minority language in Russia that needs a transducer-based morphological parser -- seems like a perfect match.",
                    "projectCode": "https://github.com/BasilisAndr/chkchn"
                },
                {
                    "title": "Crimean Tatar-Turkish MT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4632948204634112/",
                    "content": "Creating a new rule based translation pair between Crimean Tatar and Turkish. This involves disambiguation, transfer and lexical selection.",
                    "projectCode": "http://wiki.apertium.org/wiki/Crimean_Tatar_and_Turkish/GSoC_Report"
                },
                {
                    "title": "Development of the Czech to Russian Language Pair",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4620540983640064/",
                    "content": "I plan to assist in the development of the Czech to Russian language pair in order to bring the Czech to Russian translation capabilities to release state.",
                    "projectCode": "https://apertium.projectjj.com/gsoc2017/lylax47.html"
                },
                {
                    "title": "Discontiguous Multiwords",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4690909727817728/",
                    "content": "Discontiguous multiwords are multi-word expressions that are separated by something in the middle (e.g. \"take the garbage out\") . Apertium currently doesn’t offer support for discontinuous multiwords, and this is a source of many unfortunate translation errors. My plan is to improve the multiwords processor into being able to recognize sentences with discontiguous multiwords and then reorder the structure to place the whole phrasal verb together before entering bilingual dictionary lookup.",
                    "projectCode": "http://wiki.apertium.org/wiki/Lsx_module/report2017"
                },
                {
                    "title": "Implementing a shallow syntactic function labeller",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5054841768378368/",
                    "content": "In many pairs it is useful to know in addition to the morphological tags of a word, syntactic function tags in order to make an adequate translation.The shallow syntactic function labeller is a tool which takes a string in Apertium stream format, parses it into a\nsequence of morphological tags and gives it to a classifier. The classifier is a seq2seq model trained on prepared datasets, which were made from parsed syntax-labelled corpora (for instance, UD-treebanks).The dataset for an encoder contains sequences of morphological tags, the dataset for a decoder contains sequences of labels, in both cases one sequence is a one sentence. The classifier analyzes the given sequence of morphological tags, gives a sequence of labels as an output and the labeller applies these labels to the original string.So, in the end of the work there will be:",
                    "projectCode": "http://wiki.apertium.org/wiki/Shallow_syntactic_function_labeller"
                },
                {
                    "title": "Improvements to the Apertium Website Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4620792373444608/",
                    "content": "Apertium is a free/open-source platform for rule-based machine translation and language technology which is aimed providing support for lesser-resourced and marginalized languages. The current web interface for this platform is already pretty awesome. However, it still lacks some features such as Dictionary lookup, autocomplete, dropdowns and a lot more that would make this platform even more convenient for the users to use and thus make it even more awesome. This project aims to implement many such features and integrate many such functionalities into the existing web platform thus justifying the title of the project - Improvements to the Apertium Website Interface.",
                    "projectCode": "http://wiki.apertium.org/wiki/User:Mono/GSoC_2017"
                },
                {
                    "title": "UD-annotatrix",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5408319187451904/",
                    "content": "The aim of my project is to create an easy-to-use, quick and interactive interface tool for UD annotation based on the existing Apertium project. The tool should work both online and offline and allow a user to edit the annotation in both graphical and text modes. (However, in case, it turns out that it is hard to implement an interface with this functionality based on what there already is, it is possible to write it from scratch, using some appropriate framework.)",
                    "projectCode": "http://wiki.apertium.org/wiki/UD_annotatrix/UD_annotatrix_at_GSoC_2017"
                },
                {
                    "title": "“Proposal apertium cat-srd and ita-srd”",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6499295909904384/",
                    "content": "Catalan to Sardinian (apertium-cat-srd):\nThe project has already started and currently the bidix is in the Staging section. The Catalan language is definitely the one that has the most resources in the Apertium platform. The cat-srd bidix has 2645 words with a trimmed coverage of 77.7% and a Wer rate of 34.8%: my goal is to bring coverage up to 86,5% and WER to 15%. The work that I think I can make concerns the increased coverage in bidix,  work on transfer rules lexical selection.Apertium Italian to Sardinian (apertium ita-srd):\nLast year, thanks to Google Summer of Code program, the first Italian-Sardinian translator was released, apertium ita-srd. The project was a success.\nAs for apertium ita> srd the goal is to focus on transfer rules: through the structural differences highlighted by the completion of pending tests, this time srd>it requires the construction of new transfer rules that allow to solve problems like enclitics and proclítics (Sardinian there are words that have 3 enclitics and Italian 2, superlatives and NP possessive), lexical selection and morphological disambiguation.",
                    "projectCode": "http://wiki.apertium.org/wiki/Apertium_cat-srd_and_ita-srd/GSoC_2017"
                }
            ],
            "techStack": [
                "c++",
                "xml",
                "python",
                "nlp"
            ]
        },
        {
            "title": "Apertus Association",
            "orgLink": "http://www.apertus.org",
            "projects": [
                {
                    "title": "Smart Switching Regulator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4629005961527296/",
                    "content": "The main idea of this project is to design a high efficiency buck converter that will supply the Apertus AXIOM camera system. Its main feature is the efficiency, because we want to reduce the heat as much as possible.",
                    "projectCode": "https://github.com/vladniculescu/GSOC"
                }
            ],
            "techStack": [
                "fpga",
                "vhdl",
                "c",
                "linux",
                "c++"
            ]
        },
        {
            "title": "appleseedhq",
            "orgLink": "http://appleseedhq.net/",
            "projects": [
                {
                    "title": "Implementation of the Improved Many-Light Sampling Algorithm by Nathan Veghdal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4810446049640448/",
                    "content": "In order to render a nice looking scene (where light is concerned) we need to take into consideration that an object is lit by a combination of indirect and direct light, where each reflected light ray (indirect light) represents a new light source (small but not unimportant). With that in mind, the number of light sources in a scene expands rapidly and requires a program to traverse the lights optimally when estimating their significance and impact for each scene point. As such, the many-light problem is introduced when calculating global illumination.There are different algorithms to compute the global illumination, but each of those algorithms needs to sample all the lights of the scene first, and then do the computations. Optimizing the light sampling algorithm leads to faster and more efficient use of rendering time with the same degree of image realism, which are the exact same reasons why improvement of many-light sampling in Appleseed is required.Within the proposal I've given an overview of the implementation approach of the new many-light sampling algorithm, split the overall problem into smaller pieces and tried to propose a realistic implementation timeline.",
                    "projectCode": "https://medium.com/@petragospodneti/gsoc-2017-with-appleseedhq-cc5f33d04170"
                },
                {
                    "title": "Python scripting feature for appleseed.studio",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5680813790199808/",
                    "content": "",
                    "projectCode": "https://github.com/glebmish/GSoC-appleseed-final-report"
                },
                {
                    "title": "Volume Rendering",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5167749210832896/",
                    "content": "Currently, appleseed only renders the surfaces of objects, and treats the space between objects as a void. Hereby, one of the most requested features in appleseed is Volume rendering. This term implies that the rendering engine takes into account how light interacts with media between the objects, and computes how it is absorbed and scattered by air, smoke or fog molecules, or by denser media such as milk or marble.My goal is to integrate the feature of rendering homogeneous volumes to appleseed engine, and thus making it capable to handle simple volumetric effects, such as light shafts in a foggy environment. During my work I will investigate different approaches of visualizing volumes, select the techniques that are modern, efficient and fit the best to the existing path tracing code of appleseed, and then implement the chosen methods. Additionally, I will introduce how users will interact with the newly added features by extending the user interface of appleseed.studio.",
                    "projectCode": "https://github.com/Biart95/appleseed-volumetric-rendering-final-report/blob/master/report.md"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "qt"
            ]
        },
        {
            "title": "ArduPilot",
            "orgLink": "http://www.ardupilot.org",
            "projects": [
                {
                    "title": "Make APMRover2 a reference of generic UGV platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6164720910336000/",
                    "content": "The ardupilot features are already numerous and I already worked on helping ardupilot to have good compatibility with ROS.  Ardupilot rover version (APMRover2) is well behind Arduplane and ArduCopter in capabilities as they attract more attention from developers.  One obvious example is that Rover has only a very basic avoidance system (turn 45° on obstacle). It is also missing some autonomous features (on spot turn etc.), and more significantly is missing a proper motor configuration abstraction layer. While ArduCopter is capable of being configured in 4,6,8 motors copter with brushed (PWM) or brushless motor (RC PWM), the rover version is still limited to two modes: rover with propulsion and a steering servo (normal mode) and tank mode (skid steering mode), with only support on brushless motor.\nMy proposal to this GSOC is split in two parts. Firstly, reduce the gap between the APMRover2 and the other vehicles to provide a good generic UGV platform capable of multiple configurations, with advance feature such as avoidance.  Secondly,  provide a good set of tutorials on the usage of ROS and ardupilot either for single unit control or on simulated unit on Gazebo simulator!",
                    "projectCode": "https://github.com/khancyr/GSOC-2017/blob/master/Commit%20list.md"
                },
                {
                    "title": "Safe Return-To-Launch for ArduPilot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5146863455961088/",
                    "content": "This project aims to develop a \"safe\" return-to-launch feature for ArduCopter. This feature allows a copter to autonomously return to its home location while attempting to avoid obstacles that may exist between itself and its home.",
                    "projectCode": "https://discuss.ardupilot.org/t/safertl-mode-for-copter/20486?u=squilter"
                },
                {
                    "title": "Sensor Head Port",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5445550379892736/",
                    "content": "My Proposal for the Sensor Head Port",
                    "projectCode": "https://github.com/ArduPilot/ardupilot/pull/6388"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "embedded",
                "rtos",
                "ros"
            ]
        },
        {
            "title": "Babel",
            "orgLink": "https://babeljs.io/",
            "projects": [
                {
                    "title": "Combined Class Fields implementation and spec updates",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4523493647450112/",
                    "content": "Developers of JavaScript want to be able to test out new features to provide feedback to specification drafts, as well as making their code more concise and readable. Implementing private fields as part of the Class Fields proposal will allow these people to encapsulate code they don't want to expose as part of their API.This will be implemented as Babel transform plugin, which will also involve changes to Babylon (the parser used by Babel). My work will also extend to updating existing plugins to updated specification drafts, as well as fixing bugs in existing code.",
                    "projectCode": "http://qantas94heavy.github.io/gsoc2017.html"
                },
                {
                    "title": "Create Babel parser/transform plugins for proposals in TC39",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5302766071185408/",
                    "content": "As a part of my project, I'll take ownership of object rest spread, transform decorators, optional chaining, private fields, and async-await specifications and keep them updated, spec-compliant, tested and bug-free.I am a JavaScript developer and I'm really excited about what Babel does. Babel allows everyone to have access to future language features which make life easier, code cleaner, and give devs one less thing to worry about upgrading in next few months. As a side-note, I love things that compile to JavaScript, and I'm really excited about what I'll learn (AST manipulation, details of the JavaScript AST, lexing & parsing) as a part of my work on Babel.",
                    "projectCode": "https://gist.github.com/peey/992a67b5a732ad24cf4b4030f9681253"
                }
            ],
            "techStack": [
                "javascript",
                "babel",
                "nodejs"
            ]
        },
        {
            "title": "Bazel",
            "orgLink": "https://bazel.build",
            "projects": [],
            "techStack": [
                "java",
                "linux",
                "go"
            ]
        },
        {
            "title": "BeagleBoard.org Foundation",
            "orgLink": "https://beagleboard.org",
            "projects": [
                {
                    "title": "BeagleBone AVB Stack",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4596929535148032/",
                    "content": "Building a AVB node the stream reservation protocol and the precision time protocol are to be built in the linux kernel. \nA demo application will be included for a stereo speaker system with two individual beagle boards. The first board will decode a stereo audio file (ex: mp3 files stored in local disk) and play one channel of the audio through its speakers (ex: left channel) and then it transmits the second channel (ex: right channel) to the second device over AVB which plays back the second channel through its speakers. The objective is to achieve frame synchronization over such a system. This can be tested by recording the output from both devices and analyzing with an audio analyzer. In this case one device acts as a AVB master node and the second device acts as a AVB slave node.",
                    "projectCode": "https://github.com/induarun9086/avbtest/wiki"
                },
                {
                    "title": "BeagleBone PRU DMA support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6614225476648960/",
                    "content": "Most of existing PRU applications utilize (waste) one PRU core for data transfer. The goal of this project is to enable usage of EDMA controller for copying of data to and from main memory (DDR), which would allow applications to use both cores for computation.",
                    "projectCode": "https://gist.github.com/maciejjo/58a0d0213712e67fba9d0061f6b5bead"
                },
                {
                    "title": "BeagleBoot , an all in one flasher/updater",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5066113104740352/",
                    "content": "Currently, the ways to flash images in BeagleBone hardware are not easy especially for beginners, SD card method takes up much time and manual configuration, BBBlfs flashing tool works but is CLI based, not much reliable and works on limited platforms, TI's Uniflash tool is also old and works only under older versions of Windows and Linux with a lot of manual configuration. \nThe project is to port the BeagleBone bootloader server BBBlfs(currently written in c) to JavaScript(node.js) and make a cross platform GUI (using electron framework) flashing tool utilising the etcher.io project. This will allow us to have single code base for a cross platform tool.The tool works as:This project project will be really helpful for everybody especially newbies, who would have a nice experience with flashing images easily and faster, so that they can focus on the more important stuff be it their robotics project, kernel development or some new PRU hack.",
                    "projectCode": "https://medium.com/@ravikp7/gsoc-2017-final-report-beagleboot-a20d28c8d632"
                },
                {
                    "title": "BeagleLibs: Libraries for interfacing with the BeagleBone in Rust and Go",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4815942534037504/",
                    "content": "My project is basically two high quality, well-documented libraries for interfacing with BeagleBone hardware in Rust and Go.\nThese libraries will provide interfaces for common usecases like GPIO, ADC reads, PWM, UART, SPI, and I2C (I'm open to more!).\nThe intent of the project is to bridge the gap between the lower level and the higher level languages and make using the BeagleBone accessible to a wider range of users.People trying to get into hardware projects today are faced with difficult choices, especially when it comes to the platform their project will be based on.\nThe BeagleBone community has made an great strides toward bridging this gap by with the cheap and approachable BeagleBones, but users are still confronted with the choice of fast/difficult to use C, or easy to use/slow JavaScript.Users seeking to work on the BeagleBone shouldn't have to face this choice; which is where this project comes in.\nBy providing a well-documented set of libraries for the common tasks that every hardware project uses, users will be able to harness the power of performant languages while still having a pleasant development process.",
                    "projectCode": "https://github.com/ekmecic/libbeaglebone"
                },
                {
                    "title": "BeagleWire software support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5314472004550656/",
                    "content": "The task is to create software support for FPGA cape (based on iCE40 device). The completed project will provide the BeagleBoard.org community with easy to implement and powerful tools for realization of projects based on Programmable Logic Device(FPGA), which will surely increase the number of applications based on it.",
                    "projectCode": "https://github.com/pmezydlo/BeagleWire/wiki"
                },
                {
                    "title": "Sonic Anemometer using PRU and PRUDAQ",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6450379722063872/",
                    "content": "Write program for PRU present in BeagleBoard and to create a portable device able to measure the wind speed and temperature reliably in outdoor environments.It delivers the result by analyzing the time of flight or phase difference of sound waves between two points, deliver the final results in terms of ambient Temperature,Wind speed and direction.Considering the costs of commercial products available at this time in market, this open source project would provide a very useful and reliable anemometer to help universities and students/hobbyists during their meteorological research by providing them results in real time and format that can be further processed by user using languages like python etc.",
                    "projectCode": "https://github.com/thetransformerr/beagle-sonic"
                }
            ],
            "techStack": [
                "javascript",
                "linux",
                "beaglebone",
                "python",
                "c"
            ]
        },
        {
            "title": "Beam Community",
            "orgLink": "https://beamcommunity.github.io/",
            "projects": [
                {
                    "title": "A code formatter for Elixir",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6463694657552384/",
                    "content": "By leaving tedious formatting to the machine, code formatters provide a substantial increase in engineering productivity and a consistent style across teams. Hence, this project implements a code formatter that can take a piece of Elixir code and format it automatically according to a standard style guide. It is very similar to tools such as rustfmt and gofmt.",
                    "projectCode": "https://github.com/uohzxela/ex_format"
                },
                {
                    "title": "Ejabberd support for \"let's encrypt\" ACME protocol",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6727670863757312/",
                    "content": "The Automatic Certificate Management Environment (ACME) protocol is a communications protocol for automating interactions between certificate authorities and their users' web servers, allowing the automated deployment of public key infrastructure at very low cost. Supporting this protocol will reduce the complexity of acquiring certificates for TLS encryption, via the \"Let's encrypt\" certificate authority.The final goal of this project is for ejabberd to fully support the ACME protocol and thus provide an easy and cheap way of acquiring security certificates.",
                    "projectCode": "https://github.com/processone/ejabberd/pull/1959"
                },
                {
                    "title": "ETS support for Erlang Lab",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5300436051427328/",
                    "content": "Erlang Lab (https://github.com/erlanglab) is an Open Source project aimed at analysing the performance of Erlang and Elixir systems. The project provides web-based visualisations of the analysis. It can help developers to better understand their systems, observe the system behaviour and identify weaknesses.The Erlang Lab project is still developing and lots of its features are missing. The feature I would like to implement is a plugin for ETS (Erlang Term Storage) tables. The OTP team keeps working on the performance of ETS but Erlang and Elixir programmers, especially the newcomers, are prone to make mistakes which can cause e.g. lock contention on an ETS. Although it is possible to trace this kind of problems using Erlang tracing or dedicated profilers it can be difficult and time-consuming.The plugin I would like to deliver will rely on tracing techniques and the Erlang system introspection API. Information collected in this way will be presented through the web UI. I believe it will enable developers to quickly identify problems and understand them better.",
                    "projectCode": "https://github.com/mkacper/erlangpl/wiki/GSOC-Work-Product-Submission"
                },
                {
                    "title": "Implementation of a RabbitMQ Plugin for BarrelDB",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5826739599048704/",
                    "content": "All changes in the Barrel databases and indexes (updates, creations and deletions) can be retrieved in Barrel using the HTTP API. There are many usages for such a log. The replication in barrel is based on it. Having a way to send these changes via RabbitMQ would open it to more applications and usages.",
                    "projectCode": "https://medium.com/@tahteche/google-summer-of-code-2017-wrap-up-48d2268b0cd0"
                },
                {
                    "title": "Implementing a Real World Application in the Lasp Programming Language",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4917747754467328/",
                    "content": "The nature of distributed systems and their fault model is chaotic: replicas can fail temporarily or just stop working, and the complexity of adding defensive code against all possible scenarios is unrealistic if complex applications are to be designed. Despite several techniques that try to mitigate this issue (e.g. RPC), a more opaque abstraction layer is needed in order to avoid long implementation times as well as incorrect behaviour driven from faulty or careless code. I believe that providing a programming-language-level abstraction layer is an effective approach to significantly reduce the amount of time focused on how systems can fail, rather than how they should work. Such an approach should mainly consist in supplying systems programmers with basic functionalities in the following areas: node distribution, data replication and partition tolerance.\nBeing in an early adoption stage, Lasp needs applications that can serve as proof of concept in order to increase awareness of its capabilities as well as user adoption. This proposal is about the implementation of a real world application based on previous work published recently at PaPoC'17 - an EuroSys workshop.",
                    "projectCode": "https://gist.github.com/goncalotomas/a1ac942dc6fbb4a21b1203b7d251baf3"
                },
                {
                    "title": "Port Zotonic Shell Scripts to Erlang EScript.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5926176681885696/",
                    "content": "Currently Zotonc uses shell scripts for the command line functionality e.g starting Zotonic, installing modules, etc.\nThese command line scripts are fragile and non-portable hence they should be replaced with either Escript or Erlang modules. This would also create opportunities for exposing the script functionalities in a web interface.\nThe following will be done:",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1p9tYUJ3_JmTD1xbZ6fl6d-1foZ0iVR1CvcmsoxZKqMA/edit?usp=sharing"
                },
                {
                    "title": "Server-to-Server Stream Management Support for ejabberd",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5766531002662912/",
                    "content": "Reliability is essential for communication using XMPP. Although basic XMPP is not reliable in some situations. One of these situations is losing long-lived TCP connection between client and server or server and server because of network or destination failure. If this connection isn’t properly closed, sender will be unaware of the loss and connection will appear as open to server until TCP timeout is reached. All messages which will be sent by server during this time will be lost.The goal of this project is to implement XEP-0198 for server-to-server communication in ejabberd. This extension allows to request  stanza acknowledgement and quickly resume session.  Any messages that were not delivered over previous connection will be retransmitted during session resumption without duplication.",
                    "projectCode": "https://gist.github.com/Amuhar/d238f4cc3974d8f946cbe9d0ef035175"
                }
            ],
            "techStack": [
                "erlang",
                "elixir",
                "lisp",
                "xmpp"
            ]
        },
        {
            "title": "BeeWare Project",
            "orgLink": "http://pybee.org",
            "projects": [
                {
                    "title": "Batavia improvements: JSON module, Generators and others",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5506569248702464/",
                    "content": "This project consists of a number of features and improvements that further advance BeeWare's Batavia:",
                    "projectCode": "https://pybee.org/news/buzz/2017-google-summer-of-code-final-report-adam-boniecki/"
                },
                {
                    "title": "Port Cricket to use Toga, instead of Tkinter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5746440890482688/",
                    "content": "Cricket's GUI interface is currently implemented using Tkinter, which has a lot of limitations. The main goal is the complete port of Cricket to use Toga as the framework for GUI interface. The base logic is mostly complete, so firstly I will plan how to adapt the actual architecture of the view to use Toga widgets. If I find one widget that Cricket uses but isn't implemented on Toga, I will develop a contribution to this specific widget. This way the application will not lose the basics layout. So, the proposal will not only focus on the port of Tkinter to Toga, but on mapping the necessary widgets for a real application using Toga framework. In addition of the advantages of using Toga instead of Tkinter as I highlighted, this is a opportunity to improve error handling and make better use of features that Toga has but Tkinter does not. It will be the first BeeWare project that “eats it is own dogwood\".",
                    "projectCode": "https://pybee.org/news/buzz/2017-google-summer-of-code-final-report-dayanne-fernandes/"
                },
                {
                    "title": "Toga Settings API and Inward Facing Testing API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5942267911077888/",
                    "content": "",
                    "projectCode": "https://pybee.org/news/buzz/2017-google-summer-of-code-final-report-jonas-schell/"
                }
            ],
            "techStack": [
                "python",
                "mobile",
                "ios",
                "android"
            ]
        },
        {
            "title": "Berkman Klein Center for Internet and Society at Harvard University",
            "orgLink": "https://cyber.harvard.edu",
            "projects": [
                {
                    "title": "Bake a Pi for the lIbrary(box)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5000927312347136/",
                    "content": "LibraryBox currently runs on a limited set of TP-Link devices. While relatively simple to get running, LibraryBox still depends on being custom firmware for the TP-Link devices it supports. The goal of this project is to make installation on low-cost wireless hardware such as the Raspberry Pi 3 simple and effective, with a DIY option for those who like mixing up their own dough, while also providing a \"bake and run\" option for those who'd rather have a pre-made solution.",
                    "projectCode": "https://github.com/LibraryBox-Dev/alexandria/blob/master/gsoc-2017.md"
                },
                {
                    "title": "End-to-end encryption in SwellRT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5480697707888640/",
                    "content": "End-to-end encryption (E2EE) has been gaining relevance during the last years due to the increasing privacy concerns of users. Encrypting communications between the client and the server using SSL is not enough to protect users privacy, since data can be read in plaintext in the server, which is not trustworthy.It is trickier to perform E2EE into SwellRT documents than it is to perform it into simple chat messages. SwellRT use operational transformations (OTs) to coordinate the insertion and deletion of characters in its documents, so instead of encrypting the entire document, we need to encrypt each operation and still guarantee that the server has enough information to coordinate the document editioning. Fortunately, it is a field that has been researched for many years and we have some studies that have successfully implemented E2EE in Google Docs. We can take their insights to encrypt SwellRT OTs.The project has two parts. First, we need to encrypt and decrypt successfully SwellRT OTs, using a symmetric key. Then, we need to communicate those symmetric keys among users, and here is where we need public key cryptography.",
                    "projectCode": "https://llopv.github.io/gsoc-2017/code/2017/08/29/project-overview.html"
                },
                {
                    "title": "Inclusion of new UI features along with third-party integrations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5234444147359744/",
                    "content": "Going with the idea that is mentioned on Teem’s project idea page, that \n“Internet applications do not exist as independent islands but rather as a part of a live ecosystem where everything is connected”\nJust after reading this line I was motivated enough, to make Teem open and connected to multiple popular services running around us. For example Trello, Twitter, Facebook and many others. Also, when I used Teem for the first time, the idea to implement contextual knowledge about integrated links makes sense, since a user coming from most of the web applications today is used to these kind of contextual information. The main target of my project is to let users use Teem with the least friction and make them feel connected across the web.",
                    "projectCode": "https://gist.github.com/krshubham/f8a6024d37c8e50f157ae5f745ebfdaa"
                },
                {
                    "title": "Project Proposal: Implement topic creation using machine learning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6403119244115968/",
                    "content": "While retrieving articles with simple boolean queries will suffer from a list of problems in general, several machine learning approaches can be applied to allow better performance in terms of accuracy and efficiency. In particular, instead of naively focusing on the existence of the topic in the article, techniques with machine learning can broaden the search range by including more relevant secondary keywords in addition to the various variation of the given topic. Meanwhile, methods (such as SVM, nearest neighbor) can also be employed to prune the fetched articles to filter out those are irrelevant to our topic despite containing the exact words on the topic. Furthermore, due to the fact that articles may use different choices of words over time, time series analysis needs to be applied to keep track of the evolution of one topic during a certain period of time. In this project, I plan to design and implement a proof of concept unsupervised machine learning approach to retrieve articles and prune the results, with the assistance of mathematical models.",
                    "projectCode": "https://gist.github.com/Alan32Liu/08a639512568c7320b2869c019131de8"
                },
                {
                    "title": "UI Improvements and Testing suite for Book-A-Nook",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5820978034638848/",
                    "content": "Currently BookANook suffers from a great many UX bugs and seems unpolished in terms of features. With my experience in Web Design and Web Development, I can improve BookANook to be consumer ready product with excellent UX and industry grade production code.The objectives I wish to achieve for BookANook are:The existing codebase is in Ruby on Rails and jQuery. I would like to port the front-end code to VueJS and utilise the Webpack asset pipeline to manage VueJS and all front-end dependencies. This will help in future-proofing the code against the ageing Rails asset management pipeline as well give access to the testing modules and other plugins from NodeJS ecosystem for building a state-of-the-art front-end. This will also make testing the front-end much easier. I am open to any ideas from the project mentors regarding the design and tooling choices to be made.",
                    "projectCode": "https://drive.google.com/open?id=18vrNs5iQKyf_JUAjYGk2-g2c0OorfiTaOKDyZLs7R8M"
                }
            ],
            "techStack": [
                "ruby on rails",
                "meteor.js",
                "d3",
                "elasticsearch",
                "javascript "
            ]
        },
        {
            "title": "Blender Foundation",
            "orgLink": "http://www.blender.org",
            "projects": [
                {
                    "title": "Fluid guiding and secondary particle systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4771511365795840/",
                    "content": "In this project I would like to improve the existing Mantaflow integration by adding support for secondary particles and by implementing a novel technique on fluid flow guiding from a recent research paper (Primal-Dual Optimization for Fluids). Furthermore, I would like to incorporate more user feedback to get the integration ready for Blender 2.8.",
                    "projectCode": "https://wiki.blender.org/index.php/User:Sebbas/GSoC_2017"
                },
                {
                    "title": "Improvement of Vertex Painting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6715177072328704/",
                    "content": "Currently the vertex painting lacks the features like vertex masking, don’t have many blend options, color choice is only limited to rgb and not to rgba. With this project I propose to improve vertex painting toolkit, adding lacking tools and functionality so that artists will be able to use  vertex painting tools as easily as texture painting tools",
                    "projectCode": "https://wiki.blender.org/index.php/User:Darshan/GSoC2017"
                },
                {
                    "title": "Normals Editing Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6126827219189760/",
                    "content": "A Normal Editing mode to facilitate editing of vertex normals with toolset to provide users an ability to manipulate normals of a mesh. This is especially useful in game development. Several studio quality games have been developed with custom edited normals and the importance of normal editing tools is growing since the past few years. Normals in Blender are currently only editable through modifiers and there is no way to directly edit and control normals of a mesh. I wish to provide creative as well as editing freedom to artists and uncap the potential for game development in blender with the improvements I propose. \nOf course along with providing the described functionality I will also be documenting the code to help developers understand the code and artists familiarise themselves with the features.",
                    "projectCode": "https://wiki.blender.org/index.php/User:RohanRathi/GSoC_2017/Final_Report"
                },
                {
                    "title": "Python Package Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4882716659023872/",
                    "content": "This project will add a package manager to Blender’s current addon system with the goal of providing functionality similar to that found in Atom (the text editor).",
                    "projectCode": "https://wiki.blender.org/index.php/User:Gandalf3/GSoC_2017/Final_Report"
                },
                {
                    "title": "Sculpting Tool Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5680240546283520/",
                    "content": "Improve the sculpting tools by adding a silhouette brush and other minor improvements to the toolset. Giving the sculptor the freedom to add and subtract new geometry contrary to just shaping the existing.",
                    "projectCode": "https://wiki.blender.org/index.php/User:Witt/GSoC2017/Reports/FinalReport"
                }
            ],
            "techStack": [
                "opengl",
                "opencl",
                "python",
                "c",
                "c++"
            ]
        },
        {
            "title": "Boost C++ Libraries",
            "orgLink": "http://www.boost.org/",
            "projects": [
                {
                    "title": "boost static_map",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5964928695402496/",
                    "content": "This document proposes an addition to Boost C++ Libraries -- a compile-time hash table. There are multiple good implementations of unordered associate containers (e.g. std::unordered_map, Google's sparsehash). These implementations provide both lookup and insertion/deletion functionality. They are, however, not the perfect fit for the case when the contents of the container are fixed upon construction or even known at compile time. std::vector vs. std::array is a good analogy here. We propose a static_map -- an associate container with focus on constexpr usage.",
                    "projectCode": "https://github.com/BoostGSoC17/static-views/tree/v0.1"
                },
                {
                    "title": "Data.Frames in boost.uBLAS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5563281339056128/",
                    "content": "To implement the dataframes library for uBLAS using Expression Templates and Meta-programming paradigm in C++ that is capable of doing simple manipulations with data sets.\nIt requires studying the existing implementations (data.table/data.frame in R and Pandas in Python) and analyzing the limitations (that occur due to template meta-programming paradigm) and possible optimisations (instantiation of type parameters which is not possible in R and python because of generic implementation of data.frame).",
                    "projectCode": "https://gist.github.com/RArora28/6c6712c816a2eb5a88ef4ef943efa6cb"
                },
                {
                    "title": "GSoC2017 Boost.Geometry:Filtering of compare distance predicates Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6056458475012096/",
                    "content": "In some algorithms there is the need to compare two distances of two point pairs. Especially, computing distances on ellipsoid in Boost.Geometry used compare_distance() function, which need to calculate the actual distance of two geodesic segments on the ellipsoid. Boost.Geometry used Vincenty formula, the time complexity of this algorithm is hard to estimate and expensive.To reduce the time complexity, this project tried to use the following approaches:",
                    "projectCode": "https://github.com/BoostGSoC17/geometry/wiki"
                },
                {
                    "title": "Optimising Multiplication in uBLAS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5627141597167616/",
                    "content": "Matrix multiplication is one of the most important operations in linear algebra. The project \"Optimising multiplication in uBLAS\" is concerned with optimising the multiplications under matrices. Optimising multiplication in uBLAS can be done in done following two lines: 1) By finding patterns to optimise in expression templates using template programming. 2) By applying optimising algorithms (written with templates). I would be optimising the matrices multiplication operation following both the above mentioned ways.",
                    "projectCode": "https://github.com/BoostGSoC17/uBLAS"
                }
            ],
            "techStack": [
                "c++",
                "c++11",
                "c++14",
                "boost"
            ]
        },
        {
            "title": "Boston University / XIA",
            "orgLink": "https://github.com/AltraMayor/XIA-for-Linux/wiki",
            "projects": [
                {
                    "title": "Gatekeeper Priority Queue Implementation in the Linux Kernel and tc(8) Userspace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4569614885322752/",
                    "content": "In this proposal, I describe my plan to adapt Gatekeeper’s priority to the Linux kernel in context of traffic control and QoS. Gatekeeper is an open source defence against denial-of-service (DoS) attacks. To protect server resources from an attack, it services requests based on priority: the higher its priority, the closer to the exit of the egress queue its placed. Additionally, it also limits the requests’ maximum link bandwidth occupancy to 5%. Such countermeasures are implemented through the priority queue data structure which holds all requests in a single priority queue dropping low-priority requests when resources are low. This functionality allows us to allocate as many resources as possible to high-priority requests while servicing low-priority requests only when resources are idle. The successful implementation of this project will essentially enable a regular Linux router to help isolate and protect legitimate traffic during DoS attacks by employing Gatekeeper’s priority queue as a kernel module, enabled by its userspace component in Linux's tc(8) utility.",
                    "projectCode": "https://gist.github.com/ndev2/062a94d4d32ecb829cfb0574cfee7b3d"
                },
                {
                    "title": "Implementing the Ethernet principal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5694830281752576/",
                    "content": "I have been under the guidance of XIA mentors since 3 months and have put in all my knowledge necessary to the project in my proposal.Hope i am up to the standard set by XIA developers.",
                    "projectCode": "https://gist.github.com/sauravkumar2014/04e169a284b374a24c6de98a0a09449c"
                }
            ],
            "techStack": [
                "xia",
                " linux kernel",
                " c",
                " advanced data structures"
            ]
        },
        {
            "title": "BRL-CAD",
            "orgLink": "http://brlcad.org",
            "projects": [
                {
                    "title": "Annotations: Implement support for 2D annotations, labels that can be added to geometry",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5125146893352960/",
                    "content": "The aim of the project is to enhance the representation of the wire frame views by adding annotations to the sketch.",
                    "projectCode": "https://brlcad.org/wiki/User:Gabbar1947/GSOC17/Report"
                },
                {
                    "title": "Elmer-Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4528647608205312/",
                    "content": "This proposal targets the “Elmer-Integration” project outlined in the “Google Summer of Code” article on the wiki (https://www.freecadweb.org/wiki/Google_Summer_of_Code). The project aims at an extensive integration of the elmer multiphysics solver into the FEM workbench of FreeCAD.",
                    "projectCode": "https://forum.freecadweb.org/viewtopic.php?f=18&t=22576&p=188021#p188021"
                },
                {
                    "title": "GPU Boolean Evaluation for CSG Ray-Tracing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5407004390588416/",
                    "content": "In BRL-CAD, some work has been done in order to optimize the ray-tracing process, with ray-intersection calculations implemented in OpenCL for several primitives, taking advantage of GPGPUs parallel mechanisms to render scenes in a faster way. I propose to continue the optimization of the ray-tracing in BRL-CAD, by implementing the CSG Boolean evaluation on the GPU using OpenCL.",
                    "projectCode": "https://github.com/MarcoSDomingues/GSoC17"
                },
                {
                    "title": "Implement 3MF read/write",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6555262823432192/",
                    "content": "Implement support for the 3MF file format in Slic3r and allow conversion into (AMF,  OBJ,  STL).3MF is generally smaller than other comparable 3D formats where transforms and object references are supported.",
                    "projectCode": "https://github.com/alexrj/Slic3r/pull/4046"
                },
                {
                    "title": "LibreCAD 3 plugins system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5947790702149632/",
                    "content": "This proposal is made to improve the current LibreCAD 3 plugin system, by adding new features like custom entities or read and write files, to allow more complex plugins to be created.\nThis is also containing rendering improvements, with unit tests and optimizations.",
                    "projectCode": "https://gsoc17.feragon.net/?d=2017/08/21/16/20/35-final-evaluation"
                },
                {
                    "title": "Online Geometry Viewer Update",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6003003848916992/",
                    "content": "This project aims to improve Online Geometry Viewer in different ways: UI update, code quality and improved model importing.",
                    "projectCode": "https://gist.github.com/sniok/5f3ade53508609ad50913b13a05d3ee5"
                },
                {
                    "title": "Part Design Workbench Refinement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5950309432033280/",
                    "content": "By adding complete functional test coverage to Part Design, bugs can be systematically eliminated. The Attachment Editor and Boolean Operation tools will receive attention, and some code from experimental add-ons will be ported to be useful in FreeCAD's core.",
                    "projectCode": "https://kkremitzki.github.io/blog/gsoc-week-12-final-work-product/"
                },
                {
                    "title": "Rebar Addon for FreeCAD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6536382147198976/",
                    "content": "The current rebar functionality in FreeCAD is very limited by its UI and creating a reinforcement system using it is quite tedious. Currently, the user has to create a sketch for the rebar profile and define the required set of constraints. This becomes very time-consuming task even for an expert level user when he/she has a building model with several structural objects. This project is aimed at easing up the process of rebaring in FreeCAD. In this project, list of rebars will be provided to user in the form of dropdown. On selecting a rebar from dropdown, a dialog box will popout with input fields where can provide data related to selected rebar. The entire project will be delivered as a FreeCAD addon. The input fields in the dialog box are further categorised and presented in the form of tabs. User can easily switch to any tab to see contained input fields, thus enriching the experience by keeping the natural flow of user. With successful completion of this project, FreeCAD user will have an easy and professional way to create rebars for their projects with less efforts in less time.",
                    "projectCode": "https://github.com/amrit3701/FreeCAD-Reinforcement"
                }
            ],
            "techStack": [
                "c/c++",
                "opencl",
                "python",
                "javascript",
                "qt"
            ]
        },
        {
            "title": "Cadasta",
            "orgLink": "http://cadasta.org/",
            "projects": [
                {
                    "title": "Additional Login Options",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4580135676149760/",
                    "content": "Additional Login Options focuses on providing more than one ways to login to a user account on Cadasta platform.\nThe main goals of this Project are listed below priority-wise:[Goal 1] Phone Support  Currently, users can only SignUp/SignIn with email ID, but there are many users who do not have email accounts. To make Cadasta Platform available to those users, we provide Phone Support, to allow the user to Register with a Phone number.[Goal 2] OAuth Login Providing the users with an option to Sign In with Social Providers such as Google and Facebook.[Goal 3] MultiFactor Authentication Allowing users to make their account more secure by enabling Multifactor Authentication.I have listed more than one ways to implement these goals in my proposal and have planned my timeline convenient to those implementations.",
                    "projectCode": "http://parthvi.me/2017/08/24/gsoc-2017-summary/"
                }
            ],
            "techStack": [
                "python",
                "django",
                "javasc",
                "javascipt"
            ]
        },
        {
            "title": "Catrobat",
            "orgLink": "http://www.catrobat.org",
            "projects": [
                {
                    "title": "HTML5: Physics Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5593070158479360/",
                    "content": "Physics seems to be a challenging task in HTML5 and especially on mobile devices. Changes will not only be extensions to the current implementation but will also have an impact on the current rendering engine and existing features (bricks), e.g. Catrobat sprites are based on images, physics on vertices. Not only the implementation, also tests, requirement engineering, evaluation of existing physics engines are interesting parts of this project I would really like to work on.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1xpFVqmS9HwAQF09lQX25oKqgitwrtr5qGguXJLK6H34/edit?usp=sharing"
                },
                {
                    "title": "iOS: Implementation of missing Bricks and Sensors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6441041926291456/",
                    "content": "New Bricks:New Sensors:Tasks:",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1ypN-WZUV_ioAhkncmYJ0OICuvJpzZa7s_4eyumu5Rok/"
                },
                {
                    "title": "iOS: Implementation of missing Bricks and Sensors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5796090712424448/",
                    "content": "iOS: Implementation of missing Bricks and Sensors",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1kb_pdzdY6FAKVasxyTem3kEwP5JfmdMUHd-KXcdcHn0/edit?usp=sharing"
                },
                {
                    "title": "Refactoring – Reimplementing all UI tests in Espresso",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4948592330539008/",
                    "content": "Current UI test setup using Robotium is unstable, slow, and a big portion of UI tests is broken.\nTo fix this multiple steps are to be taken, replacing Robotium framework with Espresso, establish best practice for (UI-) testing, review and reimplement existing UI tests in Espresso or refactor them into junit tests if possible, enforcing clean code and the use of test patterns.",
                    "projectCode": "https://coffeeclstrfck.wordpress.com/2017/08/19/gsoc17-catroid-ui-test-refactoring/"
                },
                {
                    "title": "Refactoring/Redesigning Pocket Code",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6534219094294528/",
                    "content": "The Pocket Code project suffers from instabilities and cross-dependencies at its core. Because of this usability and extendability are limited and cannot be used to full potential. Furthermore, the user interface does not comply with Google's material design standards.Pocked Code should be refactored in a modular way that fully facilitates the functionality provided by the Android framework. Maintainability should be improved by removing code duplicates and unnecessarily complicated code in general. A more modular structure would also provide contributors with an code base that is more accessible and clearly structured, which in turn would encourage more stable features in the future. As a perfect tie-in a redesign of the Ui according to the material design guidelines should be applied simultaneously.",
                    "projectCode": "https://docs.google.com/document/d/1tpjjW7__Pxf0gFMdReUypbLeeF3_2juQhCMPkjJOxwA/edit?usp=sharing"
                }
            ],
            "techStack": [
                "android",
                "java",
                "html5",
                "ios",
                "web"
            ]
        },
        {
            "title": "cBioPortal for Cancer Genomics",
            "orgLink": "http://cbioportal.org/",
            "projects": [
                {
                    "title": "Collaborative construction of cancer pathways with PathwayMapper",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6038148760993792/",
                    "content": "The tool used in cBioPortal for network visualization is a powerful one with many implemented features. However, researchers and biologists are more comfortable with a simplified network view, which represents diagrams of curated The Cancer Genome Atlas (TCGA) pathways. With the aim to have a more attractive and intuitive tool for the biologists, PathwayMapper project was developed, which provides more intuitive pathway diagrams supported with cBioPortal’s rich data. For this project, I hope to help in implementation of a new version of\nPathwayMapper, which will include new features as well as making it more user friendly and easier to be used. Furthermore, I'd like to do the necessary integration to the portal pages such that PathwayMapper capabilities are more conveniently reachable to portal users.",
                    "projectCode": "https://docs.google.com/document/d/1JElWO3knKrANMkvtp231tpH6N2Er5CSQM3WRHT-75gs/edit"
                },
                {
                    "title": "Implement a Pipeline to Extract and Transform GDC Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6012174140964864/",
                    "content": "The goal of this project is to extract Cancer Genomic data available from NCI's Genomic Data Commons and transform them according to the file formats required by cBioPortal. There is currently no ET pipeline existing to import data from NCI data repository and this project will add this feature to cBioPortal. The user will simply need to run a Batch that will transform genomic data from GDC into accepted file formats.",
                    "projectCode": "https://github.com/cBioPortal/gdc-et-pipeline"
                },
                {
                    "title": "Improved genome overview in patient view page.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5445666612445184/",
                    "content": "Through this project I plan to improve the genome overview in the patient view page. By adding- 1) Zoom Feature 2) Introducing Probe Level Copy Number Data 3) Filtering feature (Showing the overview for only a subset of samples)",
                    "projectCode": "https://github.com/JiaoJiao123/igv.js/pull/11"
                },
                {
                    "title": "Integrating MolecularMatch clinical trials data into cBioPortal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6569403466383360/",
                    "content": "One of the main challenges in CBioPortal is to interpret the great amount of genomic data it has accumulated. It has currently integrated a few resources, including OncoKB, MyCancerGenome, and CancerHotspot.org in the annotation column in the mutation table. In addition to this, it would be useful to link to clinical trials too for each mutation.\nClinical trials are a key research tool for advancing medical knowledge and patient care. They are an important step in discovering new treatments for cancers and other diseases as well as new ways to detect, diagnose, and reduce the risk of disease. Therefore I propose to link clinical trials for cancer studies in CBioPortal which will improve the ability to analyze and interpret the genomic data for various kinds of mutations. Linking clinical trials from Molecular Match for mutations based on a patient’s cancer type and molecular data would the most feasible option for this project since it provides an effective API to retrieve precise data in real time",
                    "projectCode": "https://medium.com/@technospace/gsoc-2017-integrating-molecularmatch-clinical-trials-data-into-cbioportal-fd32da44ea9b"
                },
                {
                    "title": "Standardizing clinical data from cBioPortal to for easier comparison and analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5426615479697408/",
                    "content": "cBioPortal provides clinical data from a number of different cancer studies.  The clinical data from the studies is conveniently organized in a tabular format, however the data available varies between different studies.  The variation in data makes it difficult to directly compare all of the different studies.  The aim of this project is to standardize the data currently available and to propose certain standards for the data added to cBioPortal from future studies.  Standardized data will allow for users to more easily work with the data provided by cBioPortal.",
                    "projectCode": "https://github.com/cBioPortal/clinical-data-normalization/pull/1/"
                },
                {
                    "title": "Visualizing circulating tumor DNA results in the cBioPortal patient view",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5038821003493376/",
                    "content": "A major need in cancer research is the development of non-invasive cancer detection and monitoring methods. Circulating tumor DNA (ctDNA) is DNA that has escaped from tumor cells and is free-floating in the bloodstream, meaning that genetic information about the developing tumor can be obtained without the need to invasively extract tumor tissue. cBioPortal wants to display the insights obtained from these “liquid biopsies” onto their existing Patient View page. I propose to create a global view of ctDNA information by modifying their existing Genomic Overview to display allele frequencies, allowing users to identify at a glance mutated genes of interest. Mutated genes can be tracked by clicking on the gene, which would display a plot of the gene’s mutation concentration over time. A heatmap of selected genes can also be generated to monitor tumor heterogeneity over time. Another feature could consist of plots to track whether a mutated gene produces a differential time to relapse or survival time compared to the unaltered gene. By visualizing ctDNA results on the cBioPortal interface, I can participate in adding an exciting new clinician tool for personalized cancer genomics.",
                    "projectCode": "https://pambot.github.io/posts/gsoc2017-cbioportal"
                }
            ],
            "techStack": [
                " javascript",
                "java",
                "web",
                "reactjs",
                "web services"
            ]
        },
        {
            "title": "CCExtractor Development",
            "orgLink": "https://www.ccextractor.org",
            "projects": [
                {
                    "title": "CCAligner - Word by Word Subtitle Synchronization.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4751522051129344/",
                    "content": "Word by Word Subtitle Synchronization ToolThe usual subtitle files (such as SubRips) have line by line synchronization in them i.e. the subtitles containing the dialogue appear when the person starts talking and disappears when the dialogue finishes. This continues for the whole video. For example :In the above example, the dialogue #1274 - The Force is strong with this one appears at 1:55:48 remains in the screen for two seconds and disappears at 1:55:50.The aim of the project is to tag the word as it is spoken, similar to that in  karaoke systems.E.g.In the above example each word from subtitle is tagged with beginning and ending timestamps based on audio.Project for CCExtractor Development, GSoC 2017 by Saurabh Shrivastava.\nsaurabh.shrivastava54@gmail.com\nsaurabhshri.github.io",
                    "projectCode": "https://www.ccextractor.org/public:gsoc:gsoc2017:ccaligner_word_by_word_audio_subtitle_synchronisation_saurabh_shrivastava_gsoc_2017"
                },
                {
                    "title": "Cross Platform GUI for CCExtractor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4578714847281152/",
                    "content": "Cross Platform GUI for CCExtractor using Nuklear library. Since, Nuklear library doesn't incur additional dependency and  draws its own widgets, the GUI would look exactly the same on all major platforms. The simplistic UI design aims to improve UX even for the user using CCExtractor for the first time. Nuklear mostly uses OpenGL (GLFW and GLEW) as render backend. Since, use of these libraries are common across GUI development in Immediate Mode Graphical User Interface Development, the project aims to lower down the maintenance efforts too.",
                    "projectCode": "https://gist.github.com/techfreakworm/f9d30c0c7f5dc62178413a69619f49f8"
                },
                {
                    "title": "Enable automated testing on windows and other general sample platform improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6430829030932480/",
                    "content": "The sample platform has been a good way to test regression tests, but still lacks windows support. It needs some improvements that are listed on issue tracker.\nThe main aim of the project is to extend the support of sample platform to windows.\nThe focus of the project would be to add some add-on features to sample platform such as FTP upload support, improved error detection and github integration that helps user to have a single place to upload,view samples and associated test results.",
                    "projectCode": "https://www.ccextractor.org/public:gsoc:gsoc2017:google_summer_of_code_2017_satyam_mittal"
                },
                {
                    "title": "Extraction of Highlights of a sports video",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5593812650950656/",
                    "content": "Under this project, a new independent software is going to be developed from scratch, which will be able to model a video input into a time series of excitement curve, which will be used for extraction of highlights. This software will be complete with tests and its own GUI.",
                    "projectCode": "https://github.com/siddharthjindal1997/ExCCitement_extractor"
                },
                {
                    "title": "Python Bindings for CCextractor proposal by Diptanshu Jamgade",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6478163597066240/",
                    "content": "I have written this proposal for the Python Bindings Project. I have detailed out to maximum possibilities. However, in case of lack of clarity we may discuss it out either on the Slack Channel or via emails. Thank you.",
                    "projectCode": "https://www.ccextractor.org/public:gsoc:gsoc2017:python_extension_module_for_ccextractor_diptanshu_jamgade_gsoc_2017"
                },
                {
                    "title": "TV Commercial Classification and Optimization of Visual Recognition Pipeline for News Videos (For Red Hen)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5299316407140352/",
                    "content": "Red Hen has an existing visual feature based classification and labeling system for news videos, but TV commercials are not considered by the pipeline so far. I want to add a multimodal TV commercial classification system to the pipeline’s current capabilities. In addition to this, I will work on enriching the current state of the visual pipeline using semi supervised learning. The third major component of my project will be to optimize the performance of the deep learning pipeline in order to allow the system to efficiently scale and process the massive amount of data that the NewsScape dataset has.",
                    "projectCode": "http://abhinavshukla95.wordpress.com/2017/08/27/google-summer-of-code-2017-work-product-submission/"
                }
            ],
            "techStack": [
                "c",
                "python",
                "raspberry pi",
                "linux",
                "visual studio"
            ]
        },
        {
            "title": "Ceph",
            "orgLink": "http://ceph.com",
            "projects": [
                {
                    "title": "ceph-mgr: Cluster Status Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6008616565866496/",
                    "content": "Under this project idea, I will be working on the development of a web-based application, Cluster Status Dashboard. This application fetches the real-time statistics from a Ceph Cluster with the help of ceph-mgr daemon. It uses Flask, a Python-based web framework, to transfer the data from cluster to the frontend. It also uses D3.js, a javascript library, for visualization of the collected data.",
                    "projectCode": "https://medium.com/@saumay.agrawal/gsoc-17-work-product-142c2bf5a76b"
                },
                {
                    "title": "File backend for Rados Gateway",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6325122638020608/",
                    "content": "RGW, or Rados Gateway is a RESTful gateway that is one of the primary components of ceph, providing both S3 and SWIFT frontend as an interface for the Ceph object storage. Most of RGW should be, in theory, useable with any storage backend, however currently RGW can only use the Ceph object storage. This project implements a file backend for Rados Gateway(RGW).  The project would a.) Create a file backed layer that can replace librados and b.) Create an abstraction between RGW and object storage so that either backend can be used.",
                    "projectCode": "https://gist.github.com/forumulator/cb5ee5f3ca08b9ba7ded4fe8948d5415"
                },
                {
                    "title": "Implementation of RBD diff verification using a rolling checksum algorithm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6243190499704832/",
                    "content": "The main idea of the project is to provide an efficient algorithm for fast verification of the validity of RADOS block device diffs against an image/snapshot using rolling checksums. Since calculating the checksum of an entire image would be too slow and inefficient, I came up with the pretty trivial solution to use a rolling hash checksum algorithm.Rolling hash algorithms reduce computational complexity (i.e. save time and memory) at the price of weaker hashing (i.e. larger risk of collisions). They split the input into chunks, and calculate the hash of each chunk using a simple (i.e. fast) hashing algorithm. What is important to note here is that the hash for the whole string is calculated incrementally, beginning from zero (or some known constant value), and for each chunk the checksum of the string including that chunk is calculated only using the old checksum (of the string without the new chunk) and the difference between the last chunk and the current one.Some useful rolling hash algorithms that could be employed are Fletcher’s checksum algorithms or the Adler-32 checksum.",
                    "projectCode": "https://github.com/ceph/ceph/pull/17321"
                },
                {
                    "title": "SMARTER REWEIGHT BY UTILISATION",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6121644267405312/",
                    "content": "The project involves designing an evaluation model, for assessing the relative efficiency of various reweight_by_utilisation algorithms and attempts to revamp the existing reweight_by_utilisation, so as to improve upon the general performance of Ceph. The proposal tries to address the first part, by an algorithm to develop a normalised, weighted evaluation procedure and the second part, by an algorithm that relies on an iterative feedback mechanism to improve upon the efficiency (better distribution, faster convergence and less network clog).",
                    "projectCode": "https://spandankumarsahu.wordpress.com/2017/08/25/google-summer-of-code-work-product-submission/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "object-storage"
            ]
        },
        {
            "title": "CERN-HSF",
            "orgLink": "http://hepsoftwarefoundation.org/activities/gsoc.html",
            "projects": [
                {
                    "title": "Assess ROOT's asynchronous data prefetching",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5326115929325568/",
                    "content": "Assess the performance of ROOT's asynchronous data prefetching compared to standard prefetching mechanism for reading remote ROOT files.",
                    "projectCode": "https://gist.github.com/giorgosp/3e9779299aca9737d038130898ee79b8#file-readme-md"
                },
                {
                    "title": "Automatic code generation for fast inference in the CMS tracking software",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4675205045682176/",
                    "content": "Extracting shape information from simulated CMS events\nUsing Tensorflow to train a DNN based on the shape of the hits, detector information and Montecarlo Truth\nMeasuring efficiency and fake rejection\nIntegrate in the CMS software the trained network",
                    "projectCode": "https://github.com/kunal-iitkgp/Inference"
                },
                {
                    "title": "Big Data Tools for Physics Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5045066422812672/",
                    "content": "Jupyter Notebook is an interactive computing environment that is used to create notebooks which contain code, output, plots, widgets and theory. Jupyter notebook offers a convenient platform for interactive data analysis, scientific computing and rapid prototyping of code. A powerful tool used to perform complex computation intensive tasks is Apache Spark. Spark is a framework for large scale cluster computing in Big Data contexts. This project aims to leverage these existing big data tools for use in an interactive scientific analysis environment. Currently Spark jobs can be called from Jupyter Notebook using the pySpark module. However to know what is happening to a running job, it is required to connect separately to the Spark server. This project aims to develop a plugin to monitor jobs sent from a notebook application, from within the notebook itself. The plugin will have features to monitor tasks, stop ongoing jobs and detect errors. ROOT is a data analysis framework, widely used in the scientific community at CERN. The plugin designed will be used to monitor processing of ROOT objects using Spark. The plugin will also be used to monitor distributed machine learning tasks.",
                    "projectCode": "https://github.com/krishnan-r/sparkmonitor"
                },
                {
                    "title": "Convolutional Deep Neural Networks on GPUs for Particle Physics Applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5404527133982720/",
                    "content": "Toolkit for Multivariate Analysis (TMVA) is a machine learning toolkit for the ROOT scientific software framework. It contains a variety of techniques for data analysis and prediction such as Likelihood Estimation, Support Vector Machines, Decision trees, etc. It is used mainly for particle physics applications. Currently only feed forward Deep Neural Networks with GPU support are available in the TMVA. Recently CNNs and other DNNs have proven useful in a variety of applications like classification and tracking of particles, detection of new particles, etc. The aim of this project is to expand the current library of TMVA DNN with optimized Convolutional Neural Networks (CNN)",
                    "projectCode": "https://sshekh.github.io/blog/gsoc/index"
                },
                {
                    "title": "Convolutional Deep Neural Networks on GPUs for Particle Physics Applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6326594738061312/",
                    "content": "In the last few years, deep learning has led to very good performance on a variety of problems, such as visual recognition, speech recognition and natural language processing. Among different types of deep neural networks, convolutional neural networks have been most extensively studied. Due to the lack of training data and computing power in early days, it is hard to train a large high-capacity convolutional neural network without overfitting. After the rapid growth in the amount of the annotated data and the recent improvements in the strengths of graphics processor units, the research on convolutional neural networks has been emerged swiftly and achieved state-of-the-art results on various tasks. GPUs are much more effective in utilizing parallelism and pipelining than general purpose CPUs, as they are designed for high performance rendering where repeated operations are common. This proposal proposes quick and efficient implementation of CNN on both GPU and multi-core CPU. I’ll use CUDA (compute unified device architecture) that can be easily programmed due to its simple C language-like style.",
                    "projectCode": "https://medium.com/@akshayvashistha1995/google-summer-of-code-summary-92ce7ca48d18"
                },
                {
                    "title": "Convolutional Deep Neural Networks on GPUs for Particle Physics Applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4801233076355072/",
                    "content": "The Convolutional Neural Networks (CNNs) are one special type of a deep learning neural networks with an enormous discriminative power for image classification. In fact, they significantly outperform the standard Computer Vision techniques of manually extracting image features and then building classifiers on top of them.Recently, the physicist started to harness the power of the CNNs in the task of particle tagging. In their paper Oliveira et al. 2015 used the jet images in combination with CNNs to obtain better results to jet tagging in comparison to the standard physically-motivated features. Moreover, using the simulations of particle smashing, which in fact produces an accurate 3D image, is another potential use of the CNNs.Since ROOT is the state-of-the-art data analysis tool extensively used in the High Energy Physics, it is of paramount importance to integrate a CNN implementation in its submodule called TMVA. For this reason, throughout this project I will implement such a solution.",
                    "projectCode": "https://ilievskiv.github.io/2017/08/23/final-submission/"
                },
                {
                    "title": "Deep Anomaly",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5341432319574016/",
                    "content": "This project is aimed towards building a framework which monitors incoming ATLAS Computing Operations data for anomalies and then autonomously, acts on this information by either solving the problem or by proposing the best solution. \nThe solution proposed for this has at its heart two machine learning models-",
                    "projectCode": "https://medium.com/towards-data-science/gsoc-2017-working-on-anomaly-detection-at-cern-hsf-49766ba6a812"
                },
                {
                    "title": "Efficient Python routines for analysis on massively multi-threaded platforms-Python bindings for the Hydra C++ library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6217497468469248/",
                    "content": "‘Effective Python routines for analysis on massively multi-threaded platforms-Python bindings for the Hydra C++ library'. The title of this project suggests that we need effective Python routines for some kind of intensive heavy-duty data analysis on multi-threaded platforms. It also suggests that Python bindings for the Hydra C++ library. Hydra library is a C++ header-only library which is used for high performance and precision. Since in this project, we are writing Python package for the binding of Hydra library, we can expect to have the dynamicity of Python combined with the performance and precision of C++. In large experiments when we have terabytes of data to perform analysis on we need performance and at the same time, we want tools which are not too hard to use. Keeping this in mind, after completing this project we can expect to have such kind of Python package which anyone can use without any performance and precision lose.",
                    "projectCode": "https://github.com/MultithreadCorner/Hydra.Python/blob/master/README.md"
                },
                {
                    "title": "Electron-ion collision in Pythia8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4878223586361344/",
                    "content": "PYTHIA is used for generation of events in high-energy collisions. Originally developed in fortran until Pythia6.4, it was rewritten in C++ starting from Pythia8. One such process of interest is electron-ion collision. Currently, most of the process have been implemented in the C++ version but still a few remain to be implemented/tested.This project will aim to complete the missing implementation and test it using experimental results. Furthermore, we will attempt to build a framework for input-beam polarisation option in pythia8.",
                    "projectCode": "https://vikasnt.github.io/pythia8/"
                },
                {
                    "title": "Improvements in vectorization and parallelization of ROOT Math libraries",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5350915607363584/",
                    "content": "ROOT is a data analysis software used by scientists all over the world; therefore, its efficiency is critical for the scientific community in general and for CERN in particular. This project aims to improve the efficiency of one of the most used ROOT features: the mathematical functions and the fitting methods, which will be accomplished by making the corresponding code vectorized and/or parallelized. The main tasks that will be covered during the coding period are:If time allows it, the special and statistical functions implemented in ROOT will be also vectorized and/or parallelized.",
                    "projectCode": "https://agarciamontoro.github.io/2017/08/25/gsoc-final-thoughts.html"
                },
                {
                    "title": "Integration of TMVA and OpenML platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6041482192486400/",
                    "content": "OpenML is an open source project that aims to create a novel ecosystem for machine learning experimentation. It is possible to integrate different machine learning tools through plugins and APIs to share datasets, experiments and results in the platform. The idea is to write an OpenML’s plugin in Java for ROOT, that allows the use TMVA in OpenML, and also create an C++ API for TMVA that permits the use of OpenML tools from within ROOT.",
                    "projectCode": "https://docs.google.com/document/d/16Ccz0NPMKdVZ6QPSkB5NzQqz3O92OKPbsJJUGAiga1o/edit?usp=sharing"
                },
                {
                    "title": "Jet Clustering Optimizations in Fads",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6624607083692032/",
                    "content": "Fads is a fast detector simulation toolkit in Go used for High Energy Physics analyses. The current version is not very scalable and it takes up too much CPU. To make fads competitive a faster jet clustering strategy using Delaunay triangulation will be implemented.",
                    "projectCode": "https://gist.github.com/Bastiantheone/03921bb8207c37e2e8306101e7e3bcaa"
                },
                {
                    "title": "Launching Wagon, a WebAssembly interpreter in Go",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5164191635734528/",
                    "content": "WebAssembly (wasm) is a low level bytecode binary file format made for execution on the Web, designed as a compilation target for various programming languages. The aim of this project is to implement a tooling environment for executing WebAssembly, specifically geared towards the Go Programming Language.\nThis includes packages for:",
                    "projectCode": "https://gist.github.com/vibhavp/f6041cf6e21c2b2285f4056b3230a2b8"
                },
                {
                    "title": "Machine Learning Project: Multi-target Regression for Particle Physics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6223742887788544/",
                    "content": "Toolkit for Multivariate Data Analysis (TMVA) is a multi-purpose machine learning toolkit integrated into the ROOT scientific software network, used in many particle physics data analysis and applications.  Current implementations of TMVA have expanded regression from the single-target level to the multi-target level, yet only restricted to two certain types of regression.  In order to fully accommodate the need for a well-supported, robust multi-target regression framework for particle physicists, this summer we are expanding the toolkit capabilities to cover multi-objective function estimation from more diverse algorithmic approaches.",
                    "projectCode": "https://briancylui.github.io/falcon/"
                },
                {
                    "title": "New error control methods for integration of trajectories",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5253859681239040/",
                    "content": "Track of a charged particle in a non-uniform electromagnetic field can be described by the first-order initial value problem (IVP). Robustness and efficiency of the integration process is important for overall performance of the simulation code.  Geant4 and GeantV use explicit Runge-Kutta (RK) methods with the adaptive stepsize control. I propose to implement several methods which may have a better performance for the problem of interest.",
                    "projectCode": "https://dmitrysorokin.github.io/GSoC2017/"
                },
                {
                    "title": "Next generation of CMS data replication system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6256225993883648/",
                    "content": "The CMS (Compact Muon Solenoid) is a high-energy physics experiment at the LHC. The CMS PhEDEx(Physics Experiment Data Export) project is responsible for facilitating large-scale data transfers across the grid ensuring transfer reliability, enforcing data placement policy, and accurately reporting results and performance statistics. CMS tracks over 2 PB of data using PhEDEx. The architecture of PhEDEx is made up of the distributed, loosely coupled agents.The transfer2go is R&D project within CMS collaboration. The aim of this project is to extend basic PhEDEX functionality to address upcoming challenges in exabyte HL-HLC era via implementation of modern Go programming language.This proposal offers to make transfer2go even better by adding simple router which can intelligently choose which agent to use based on some underlying conditions. This router will be helpful to reduce the traffic on the single agent and will be helpful to decrease the data transfer latency.",
                    "projectCode": "https://docs.google.com/document/d/1QkyN-NsQcOPOrnyOJqn1ehXkJCM756KkKv3Dj0ltDls/edit?usp=sharing"
                },
                {
                    "title": "Optimisation of GeantV HPC workload balancing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5475198807572480/",
                    "content": "This is proposal for implementing suggested HPC aware infrastructure with workload balancer.",
                    "projectCode": "https://gist.github.com/dvush/a589e94874d0db71e218f117f96140ca"
                },
                {
                    "title": "Smart Data Structures in CUDA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6549039684255744/",
                    "content": "The CUDA language, used for programming NVIDIA GPUs, is not dynamic-data-structure friendly since it was designed for working with data structures of predictable size. The project targets applications, intended to run on GPU, that involve many dynamic data structures with many small allocations and deallocations. We want to design and implement a scheme for dynamically allocating memory for data structures (eg. vector of vector) on demand. The allocator on GPU will allocate a pre-defined amount of memory at a time. The design will try to use this predefined size of memory to service the upcoming requests for a smaller amount of memory from this larger pool. This way the service of memory allocation will be fast as the allocation is already done. We will see how the implementation handles the challenges posed by the GPU  for allocating as per demand.",
                    "projectCode": "https://github.com/ssomesh/SALLOC/tree/master"
                },
                {
                    "title": "Updating gopy to support Python3 and PyPy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5352263690223616/",
                    "content": "gopy is an excellent tool which generates (and compiles) a CPython extension module from a go package. And I hope more developers could make full use of gopy to migrate their go code into python code. \nTo make gopy more advanced, It is necessary to provide APIs for various Python compiler versions, such as CPython 2/3 and PyPy. This can be improved with CFFI or ctypes.\nMoreover, many go’s implementations/features are not yet implemented in gopy. \nSo we need to implement implementations such as slices, interfaces, and maps in the go.My goal is to update gopy by using CFFI to support Python3 and PyPy and write detailed documents.Github: https://github.com/go-python/gopy",
                    "projectCode": "https://github.com/corona10/GSoC2017"
                },
                {
                    "title": "Using Pseudo-random number repeatably in a fine-grain multithreaded simulation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6471566527299584/",
                    "content": "Particle transport Monte Carlo simulations are a key tool for High Energy Physics experiments, including the LHC experiments at CERN. All Monte Carlo (MC) simulations depend vitally on Pseudo-Random Number Generators (PRNGs) used to sample many distributions.\nEach LHC experiments generates 5-10 Billion sampled physics events a year using around 10^18 sampled values from PRNGs. PRNGs take 1-5% of CPU time. PRNGs used must possess very large periods, fast execution, the ability to create a large number of streams, and very good correlation properties between streams and sampled values. It must be possible to reproduce a simulated event any time, for reexamination or debugging.\nThe transition from event-level parallelism in Geant4 to dynamical multithreading in GeantV requires associating the random generator states not with the threads but with the tracks, which are shuffled between \"baskets\" based on their type and energy. Maintaining reproducibility after such transition requires a drastic change in the way the random generators are used. We suggest solutions based on Scalable Pseudo Random Number Generators and on pedigrees introduced in CilkPlus, which are first tested in Geant4.",
                    "projectCode": "https://sd57.github.io/g4dprng/"
                }
            ],
            "techStack": [
                "python",
                "c/c++",
                "machine learning",
                "data analysis",
                "parallel algorithms"
            ]
        },
        {
            "title": "Chapel",
            "orgLink": "http://chapel-lang.org",
            "projects": [
                {
                    "title": "Distributed Data Structures",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6530769430249472/",
                    "content": "Built-in data structures are a necessity for any budding language, and in a language where distributed computing is at its core, data structures that can properly be maintained across clusters is desired.For my project, I have designed the core framework for a distributed data structures library, and have implemented two novel scalable distributed data structures, an ordered deque and an unordered multiset, that exceed a naive implementation by at least two orders of magnitude in a moderately sized cluster.",
                    "projectCode": "https://github.com/LouisJenkinsCS/Distributed-Data-Structures"
                },
                {
                    "title": "Improve LLVM backend for Chapel compiler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5832541428776960/",
                    "content": "This project is about improving LLVM backend for chapel compiler. Improvements consist of improving loop vectorization by adding proper metadata and changing loop compilation, adding type-based alias analysis metadata,  adding notations when there is load from const memory, experimenting with aliasing algorithms, adding polly optimizer and extending support for wide pointers. Main goal of the project is to improve loop vectorization.",
                    "projectCode": "https://gist.github.com/coodie/546d92f3e18bed9a82537207f237f4e2"
                },
                {
                    "title": "To write a new cryptography module for Chapel that provides an interface to standard cryptography libraries that support common algorithms.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5356768842481664/",
                    "content": "This project aims to enable Chapel with its own module which would be a collection of both secure hash functions(such as SHA256) and various encryption algorithms(such as AES / DES / RSA/ ElGamal, etc) by using the crypto primitives of native libraries such as OpenSSL or libsodium in Chapel (libtomcrypt in our case). This module will be a part of Chapel’s standard library and enable it to compete with other cryptographically secure languages and increase Chapel's range of applications.",
                    "projectCode": "https://github.com/chapel-lang/chapel/pull/7139"
                }
            ],
            "techStack": [
                "chapel",
                "python",
                "high performance computing",
                "c",
                "c++"
            ]
        },
        {
            "title": "Checker Framework",
            "orgLink": "https://checkerframework.org/",
            "projects": [
                {
                    "title": "Bounded-size strings",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4550172239462400/",
                    "content": "The goal of this project is to implement a checker for bounded-size strings in the Checker Framework, as described on the GSoC 2017 Ideas page.\nThe checker will be based on a type system in the form of Java type annotations (JSR 308). The annotations will state that the annotated strings and arrays have a bounded size, and running the checker will statically check that the specified size is never exceeded.",
                    "projectCode": "https://docs.google.com/document/d/1Pja29eu-gR1Aerb0fEaySO-W3o4RwLfGhFRFsMSgIpc/edit?usp=sharing"
                },
                {
                    "title": "Erroneous use of Java 8's Optional class",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5686344500117504/",
                    "content": "Traditionally, java programs use null to represent the absence of value. Java 8 introduced Optional class, a container that contains a reference to T (non null) or is empty. Using Optional Class solves the problem of null pointer exceptions but creates new problems that may crash your program. The goal of this project is to create a new type system that warns programmers who have misused Optional and expose latent errors, which would ultimately lead to proper use of Optional class.",
                    "projectCode": "https://gist.github.com/nikshinde1996/a27297ab4718e5ca7b300ef7b24a92ae"
                },
                {
                    "title": "Improving dataflow framework and analyzers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5186377155084288/",
                    "content": "Checker Framework has a Dataflow Framework for Java Language.\nThis is useful to infer more specific types in Checker Framework.\nThis framework is not limited to Checker Framework and helps to implement other tools to analyze Java programs.Dataflow Framework will provide a builder which creates control flow graphs from ASTs.\nIt also provides transfer functions, analyze, abstract value and store interfaces.\nChecker Framework has their own data flow analyzer to infer more specific types.Some of dataflow issues are reported which cause false negative or positive and performance problems.\nIn this project, I'll address most of these issues to make it more accurate and faster and remove some false positives or negatives from Checker Framework.I'll do",
                    "projectCode": "https://github.com/bitterfox/checker-framework/wiki/Final-results-for-GSoC-2017"
                },
                {
                    "title": "Update to newer version of JavaParser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4591775574392832/",
                    "content": "The JavaParser plays a significant role in the functioning of the StubParser project. The StubParser (sub-project of the Checker Framework) is the tool that is designed to parse stub files with AST (Abstract Syntax Tree) generation and visitor pattern support. Stub files are a way to describe the specification of a library. They could be Java classes or have method bodies that may be skipped for brevity. The project was created by modifying and extending the JavaParser v.1.0.7 several years ago. Hence StubParser is missing a number of Java 6, 7, and 8 features.The goal of the \"Update to the newer version of JavaParser\" project is creating a new version of the stub parser that is based on the latest version of JavaParser tool which is 3.1.4.",
                    "projectCode": "https://gist.github.com/Bohdankm22/e84f8a08c240411ed5f8ec9d0597b1c5"
                },
                {
                    "title": "Whole-Program Inference",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6689181245898752/",
                    "content": "Checker Framework provides a collection of type systems to prevent bugs on Java programs at development time. Although a type system might be useful to prevent certain types of errors, it requires the effort to write all the types, which might be an annoying task for developers. In order to tackle such problem, developers might use a type inference tool to write the types for a program. Particularly, to determine what type should be written for a procedure’s formal parameter, a type inference tool must examine the type of the argument at every call to that procedure. Thus, the type inference process requires a whole-program analysis. In conclusion, the main goal of this project is to create a single type inference tool that will work for any type system available in Checker Framework (e.g., Nullness and Interning Checker).",
                    "projectCode": "https://docs.google.com/spreadsheets/d/17VKHUBd1z9CkwCzPukYXAJHmlmDm6FQ_IYCzfTFW3-4/edit?usp=sharing"
                }
            ],
            "techStack": [
                "java"
            ]
        },
        {
            "title": "Checkstyle",
            "orgLink": "http://checkstyle.sourceforge.net/",
            "projects": [
                {
                    "title": "Coverage of Documentation Comments Style Guide and performance optimization of Javadoc parser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5760007215775744/",
                    "content": "First, all the existing ANTLR issues are to be cleared out. Bottlenecks in javadoc grammar must be identified so that javadoc parsing could be sped up enabling users to employ checkstyle as frequently as they want to for code review or in their build cycle and peacefully utilize javadoc checks. Currently, employing any javadoc check despairingly increases the overall validation time. Then, documentation (javadoc) guidelines shall be reviewed in detail and the missing functionalities and checks would be realized. The existing checks may need to be fixed and updated accordingly. All the new checks shall be implemented. Finally, the Javadoc Style checkstyle coverage page will be created and will list down all of the checkstyle's javadoc checks.",
                    "projectCode": "https://gsoc-ps.netlify.com/"
                },
                {
                    "title": "Flexible Suppression model",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4921362237882368/",
                    "content": "Flexible Suppression model",
                    "projectCode": "https://gist.github.com/timurt/e59c076e243dce6d901d73cd67adea4c"
                },
                {
                    "title": "Multi-thread mode for Java files processing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6534440821981184/",
                    "content": "This paper contains proposal for the \"Multi-thread mode for Java files processing\" project.Currently, checkstyle processes all files in a single thread. This proposal introduces support for multi-thread check mode, allowing users to decrease check time.Key features:",
                    "projectCode": "https://soon.github.io/projects/gsoc/2017/index.html"
                },
                {
                    "title": "Practice What You Preach",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5045639666728960/",
                    "content": "Quality of source code can be examined by many different tools, Checkstyle is one of them, but not the only one. Source code of such tools need to be checked also. Checkstyle uses its own tool to check its sources. But there is no limit to perfection and we can make Checkstyle source code even better than it is now. The idea is to reuse and configure some other well-known static code analysers (PMD,  Sonar, Eclipse, IntelliJ IDEA Inspection, Huntbugs, Pitest) to run all checks on Checkstyle main and source code at each pull request.",
                    "projectCode": "https://gist.github.com/Nimfadora/78f5351fe353ad02a9d61d798b107be4"
                },
                {
                    "title": "Regression Testing Tool and HTML Report Generator for Pull Request",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5790131042648064/",
                    "content": "We need to create an automation tool to do regression testing based on proposed patch (Pull Request). To complete that, we are required to achieve the following goals:",
                    "projectCode": "https://docs.google.com/document/d/1gOdpkTxLFjbYLV0cPAnwwKZWJ0jCcwIuIuF1jAddsAA/edit?usp=sharing"
                }
            ],
            "techStack": [
                " java",
                "antlr"
            ]
        },
        {
            "title": "Classical Language Toolkit",
            "orgLink": "http://cltk.org",
            "projects": [
                {
                    "title": "Adding CLTK Functionality for Old and Middle French",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5043004838510592/",
                    "content": "Old and Middle French are hardly studied outside of a limited network of French universities. Implementing NLP functionality to these languages would make it easier to study them and access the rich literature and culture expressed in them, famous examples of which include the \"Chanson de Roland\", Chrétien de Troyes' Arthurian legends, Marie de France's \"Lais\", Christine de Pizan's writings, etc.This project aims to extend basic CLTK functionality to Old and Middle French texts between c.900 and c.1500 CE, by implementing a tokenizer, stopwords, named entity recognition, a PoS tagger, and a lemmatizer with English translations for as many words as possible. \nData from which the above will be sourced will be from texts licensed under creative commons licenses, which have been transcribed and digitized. For example, a number of Old French texts from the BNF's 19th century editions have been digitized and made available at gallica.fr. \nLemmas will be sourced from Godefroy's 1901 \"Lexique de l'Ancien Français\" and the \"Dictionnaire Electronique de Chrétien de Troyes\", which has the advantage of English-language definitions.",
                    "projectCode": "https://gist.github.com/nat1881/6f134617805e2efbe5d275770e26d350"
                },
                {
                    "title": "Speaking of Comments: Annotations as a Springboard for Discussion",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6041859612737536/",
                    "content": "I plan to build a flexible platform for teachers to annotate texts in the CLTK Archive. The purpose of the annotations is twofold: first, to guide the students in their (re)readings of the text; and second, to provide a ready-to-hand reference to which students and teachers can return.Teachers will be able to enter annotations either by uploading a list of references and notes or by entering their annotations directly through a WYSIWYG interface built on top of Draft.js. Annotations will be searchable via Elasticsearch, taggable, and, if time allows, versioned.",
                    "projectCode": "https://gist.github.com/pletcher/9350e70310ef36105bd969374795b7b8"
                }
            ],
            "techStack": [
                " python",
                "javascript"
            ]
        },
        {
            "title": "CLiPS, University of Antwerp",
            "orgLink": "http://www.clips.uantwerpen.be",
            "projects": [
                {
                    "title": "Fake News Detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5547741878943744/",
                    "content": "I am a graduate student in Computational Linguistics with a keen interest in fake news detection.  I propose to build a classifier for detecting objective vs. sensationalist news, that would rely primarily on non-lexical features to get at the stylistic differences between the two genres.  It would be interesting to combine this model with other approaches to fake news detection. For example, do statements tend to co-occur across sensationalist news? Are there mismatches of dates, times, and numbers between objective and dramatic news?\nA prototype of a detector that I have built can be seen here: https://github.com/MashaIvenskaya/fake_news_analyzer.git",
                    "projectCode": "https://github.com/clips/news-audit"
                },
                {
                    "title": "Modernizing the Pattern library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4698291300204544/",
                    "content": "The purpose of this GSoC project will be to modernize Pattern, a Python library for machine learning, natural language processing (NLP) and web mining. A substantial part of this undertaking is to port a majority of the code base to Python 3. This involves porting the individual modules and sub–modules piece by piece, where the whole process will be guided by unit tests. In the beginning, I will remove all tests from the pipeline that do not pass for Python 3 and take this pared–down code base as a starting point, porting parts of the code and putting the respective unit tests back in as I go along. Missing unit tests must be added before moving on. Since porting Python 2 code to Python 3 code is a standard problem for the Python community, there are many different tools available that can help in this regard. In addition to that, I'd like to extend this project to a bit of a Hausmeister project (housekeeping for Pattern), and optimize/modernize the code base in terms of execution speed, memory usage and documentation.",
                    "projectCode": "http://markus-beuckelmann.de/blog/gsoc-2017-final-report.html"
                }
            ],
            "techStack": [
                "python",
                "machine learning",
                "mongodb",
                "javascript "
            ]
        },
        {
            "title": "Clojure",
            "orgLink": "http://clojure.org",
            "projects": [],
            "techStack": [
                "clojure",
                "clojurescript",
                "jvm",
                "javascript",
                "functional programming"
            ]
        },
        {
            "title": "Cloud Native Computing Foundation (CNCF)",
            "orgLink": "https://www.cncf.io/",
            "projects": [
                {
                    "title": "Create and implement a Data model to standardize Kubernetes logs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5112703567790080/",
                    "content": "This project aims to build and implement a Data model for logs in a large kubernetes cluster to process, correlate and query to make the troubleshooting easier and can reduce the time in finding root causes.The objective of this proposal is to twofold.",
                    "projectCode": "https://github.com/amitkumarj441/gsoc17-cncf"
                },
                {
                    "title": "Develop a set of Jupyter Notebooks for the Kubernetes Python Client + Kubernetes Python Client update",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6048005979373568/",
                    "content": "The Kubernetes python client is a Kubernetes incubator project. The python client makes it possible to access Kubernetes with python. Jupyter notebook extends the console-based approach to interactive computing in a qualitatively new direction, providing a web-based application suitable for capturing the whole computation process. The aim of this project is to develop a set of notebooks that highlight the Kubernetes primitives. This project would also include updating the python client to make it easier for users to carry out certain operations.",
                    "projectCode": "https://docs.google.com/document/d/1hkzasAlzqpRQAIZTChELLFsce4-HyQvnypQOjCjYlPE/edit?usp=sharing"
                },
                {
                    "title": "dnstap Middleware",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5269744752001024/",
                    "content": "The goal is to capture the DNS data within a CoreDNS middleware and write it to a \"dnstap log file\" (prehaps over the network)I can see from middleware/whoami that the message is to be constructed inside a middleware.Handler interface, from the parameters passed in ServeDNS(context.Context, dns.ResponseWriter, *dns.Msg) (int, error), especially from *dns.Msg.The message is in fact a dnstap.Message nested within a dnstap.Dnstap structure which is (satisfies) a Protocol Buffer proto.Message to be marshalled by proto.Marshal.The serialized data can then be streamed over the network using the dnstap.FrameStreamOutput/dnstap.FrameStreamInput structures.In fact, according to this: encoding the serialized data with dnstap.FrameStreamOutput, and writing the output to a socket (dnstap.sock), is enough to use the dnstap command-line tool, for example: dnstap -u dnstap.sock.The log file can then be generated using: dnstap -u dnstap.sock -w log.dnstap.",
                    "projectCode": "https://drive.google.com/file/d/0B6nvUsp4JxeCenByOXpuSm5tMGc/view?usp=sharing"
                },
                {
                    "title": "Improve Third Party Resources",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5736684469616640/",
                    "content": "ThirdPartyResources are already available but the implementation has languished with multiple outstanding capabilities that are missing. They did not complete the list of requirements for graduating to beta.Hence, there are multiple problems present in the current implementation of ThirdPartyResources. This project aims at working towards a number of known shortcomings to drive the ongoing effort toward a stable TPR release forward.",
                    "projectCode": "https://github.com/nikhita/gsoc-meta-k8s"
                },
                {
                    "title": "instrument OpenTracing with go-restful web framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5449224187543552/",
                    "content": "go-restful（https://github.com/emicklei/go-restful）is a widely-used library for building REST-style Web Services using Google Go. With powerful built-in modules including intelligent request routing, RESTful support and \nfilters for intercepting HTTP request, go-restful make it very convenient to build a web application from scratch. This proposal aims at instrumenting OpenTracing with go-restful.With OpenTracing instrumentation, go-restful web app developers can add (or switch) tracing \nimplementations with an O(1) configuration change. More important, because OpenTracing is \ninstrumented at go-restful library, a low enough level in the software stack, even large \nweb application could be traced without additional annotations, application programmers \nalso does not need to be aware of the tracing system.",
                    "projectCode": "https://github.com/opentracing-contrib/go-restful"
                },
                {
                    "title": "Integrate Unikernel Runtime",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5962288766910464/",
                    "content": "The main idea of this proposal is Why and How we integrate unikernel as a runtime into kubernetes/frakti project, so that kubernetes could use unikernel instance just like use docker, which eventually make kubernetes play a role in more application scenarios. If you are not familar with these two words, here is a brief introduction.Unikernel are specialised, single-address-space machine images constructed by using library operating systems. You can consider it as a virtual machine but only has a special OS compiled with your applications binaries. Unikernels are considered as the future infrastructure of IoT and cloud system. And already show great potential in NFV, serverless and immutable infrastructure.Frakti is an official Kubernetes sub-project which is a well-designed CRI implementation for hypervisor-based runtimes. It now support hypervisor container as well as mixed container runtimes (e.g. Docker + HyperContainer)on same node.",
                    "projectCode": "https://gist.github.com/Crazykev/bd9d0fbb7d41aa8c12cbd2c450cfa319"
                }
            ],
            "techStack": [
                "kubernetes",
                "go",
                "prometheus",
                "fluentd",
                "grpc"
            ]
        },
        {
            "title": "CloudCV",
            "orgLink": "http://cloudcv.org",
            "projects": [
                {
                    "title": "CloudCV Web App Redesign",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5277219337273344/",
                    "content": "The aim of this project is to rewrite Cloud CV Web App into a modern web app with a REST API  backend with continuous integration and deployment.",
                    "projectCode": "https://uttu357.github.io/gsoc/2017/08/26/gsoc-final-blog.html"
                },
                {
                    "title": "Implementing RESTful web services for EvalAI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4507838760091648/",
                    "content": "EvalAI is an evaluation server that will host AI challenges like Visual Question Answering, Image Captioning. In recent years, it has become increasingly difficult to compare an algorithm solving a given task with other existing approaches. These comparisons suffer from minor differences in algorithm implementation, use of non-standard dataset splits and different evaluation metrics. By providing a central leaderboard and submission interface, we make it easier for researchers to reproduce the results mentioned in the paper and perform reliable & accurate quantitative analysis.\nThe task includes implementing RESTful web services for EvalAI which consists of building a news feed for the portal, implementing webhooks, creating dashboards for the participants as well hosts , setting up  continuous deployment, writing unit tests to maintain its integrity and consistency and scaling it to large number of audience.",
                    "projectCode": "https://medium.com/@rishabhjain17/gsoc17-with-cloudcv-final-report-a50e964d2e87"
                },
                {
                    "title": "Improved layer support and collaboration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6224316131704832/",
                    "content": "The proposal is towards improving the layer support and adding real time collaboration for Fabrik. I propose to add support for some essential missing layers, creating a Dummy layer which will automatically load any unsupported layers, and adding real time collaboration capabilities to the framework.",
                    "projectCode": "https://utsavgarg.github.io/blog/the-end"
                },
                {
                    "title": "Making research more accessible with Origami",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5654547515047936/",
                    "content": "Origami aims to provide Artificial Intelligence as a Service. Presently, deep learning is a very interesting field. However, the issue arises when someone has to  setup someone else's code on their machine. Origami aims at solving that problem by allowing researchers to quickly create a  demo of their implementation for the  world to see. This serves a twofold purpose. It lets other users see if a particular implementation solves their purpose while also serving as a 'portfolio' for the researchers.By the end of the summer, users will be able to search for various demos published by various researchers and thus be able to find an implementation that suits their needs the best. Additionally, Origami will also support REST APIs. This will allow Origami to be used to provide some infrastructure  for chat bots which can then be integrated with Slack, Facebook, etc. Origami will also be integrated with EvalAI to allow users to compare their implementation with that of their competitors. Finally, Origami will support other features such as allowing users to upload to/from Dropbox, releasing anonymous demos, a better CMS and predefined templates to create apps to name a few.",
                    "projectCode": "https://avaisp.github.io/gsoc-the-end.html"
                }
            ],
            "techStack": [
                " python",
                "django",
                "angularjs",
                "reactjs",
                " deep learning"
            ]
        },
        {
            "title": "CMU Sphinx",
            "orgLink": "http://cmusphinx.sourceforge.net/",
            "projects": [
                {
                    "title": "Collect Pronunciation Dictionaries from Wiktionary",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5423139777413120/",
                    "content": "This Collect Pronunciation Dictionaries from Wiktionary project aims to expand pronunciation dictionaries in CMUSphinx for new words and multiple languages from Wikimedia Foundation projects. Current Sphinx dictionaries only support limited words and languages, which is difficult to meet the needs of applications, so expanding dictionaries in Sphinx is an urgent need. It's critical to reuse existing pronunciation dictionaries to improve system performance, support new words appeared recently and more languages. A valuable pronunciation source is Wiktionary, which is a multilingual, web-based project to create a free content dictionary of all words in all languages. Although Wiktionary contains pronunciations for many words and multiple languages in a standard format like IPA, it’s not easy to parse those pronunciations from sources in different page formats and convert phonemes in different languages to one common format like CMUBET which can be used by Sphinx. This project will solve those problems and form at least 10 pronunciation dictionaries which will be tested on several ASR benchmarks for Sphinx.",
                    "projectCode": "https://abuccts.blogspot.com/2017/08/gsoc-2017-with-cmusphinx-post-12-final.html"
                },
                {
                    "title": "Diphone alignment and acoustic scores",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6207651658596352/",
                    "content": "The goal of this project is to extend PocketSphinx so that it can calculate and provide alignments and acoustic scores for diphones similarly to how it already does for phonemes. This will help with learner analytics and adaptive instruction for pronunciation evaluation, assessment, and remediation, and can increase speech recognition accuracy and speech recognition system generality. Moreover, diphones may be helpful for new acoustic models, and can inform the construction of different kinds of language models.",
                    "projectCode": "https://github.com/akreal/diphones"
                },
                {
                    "title": "DNNs for Sphinx",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6254753893842944/",
                    "content": "In the past decade Deep Neural Networks (DNNs) have been be demonstrated to excel to wide range of learning tasks, including speech recognition. More recently, robust DNN-based speech recognition techniques have been developed that have been adopted by all major commercial systems including those from Google and Amazon. In such a setting, the GMM-HMM based speech recognition framework used by Sphinx is severely outdated and requires an upgrade to perform at par with the state-of-the-art systems.I propose a two-tiered approach for acoustic scoring that uses concepts from Convolutional Neural Networks (CNNs) for feature extraction and Gate Recurrent Units (GRU) for acoustic modelling. The first level consists of convolutional filters and pooling layers that produce convolutional features from each audio frame. The second level consists of a single GRU-based DNN that estimates the output probabilities for each HMM. The optimal state sequence can then be found using Viterbi decoding. Over the course of the project this setup will be optimised by experimenting with different structural parameters for the DNNs as well as different learning techniques.",
                    "projectCode": "https://github.com/vagrawal/gsoc-progress/blob/master/mshah1/GSOC.ipynb"
                },
                {
                    "title": "General Computer-Assisted Learning including Speaking Skills",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6604809566158848/",
                    "content": "This proposal is for the implementation of Computer-Aided Language Learning from the browser using Pocketsphinx.js. Using Twee/Twine as the question format, users will complete voice-based assignments based on courses which will be integrated with Moodle and Wikiversity. The user's motivation and effort levels will be monitored and a system which monitors these parameter and keep both of them at an optimum level will be integrated with the assignments. Based on these parameters, hints will be given or with held so that the user progresses better.  A community feature will be implemented which will facilitate the formation of peer-learning groups (This can also be in the form of a very basic version of an online role-playing game). Amazon Mturk will be used for the collection of transcription data.",
                    "projectCode": "https://github.com/SND96/twine-stories"
                },
                {
                    "title": "Javascript simulation of the brain’s motor control of vocal tract-GSoC 2017 proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5816809634660352/",
                    "content": "As mention in the title, it is a 3D animation model of the motor control of speech production. Our long range goal is to implement the model completely and test it exhaustively, in the belief that doing so will significantly advance our understanding of speech motor control. The model is designed to have properties that are as faithful as possible to data from speakers– including measures of brain function, speech motor control mechanisms,physiolog, an atom, biomechanics, and acoustics.",
                    "projectCode": "https://mritunjaygoutam1.wordpress.com/"
                },
                {
                    "title": "Large Vocabulary Continuous Speech Recognition using RNNs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6159566949580800/",
                    "content": "Automatic speech recognition systems are traditionally based on Hidden Markov models(HMMs) as it had given the best results in the past. However due to recent advances in neural networks,  recurrent neural network(RNN) models have became competitive and surpassed HMMs in speech recognition task. RNN models also have the advantage of being used in an end-to-end model and don't require extensive hand engineering of features like HMM. In this project I aim to implement a LSTM(Long Short Term Memory) based model as based on state of the art research and make it easily available using PocketSphinx like API.",
                    "projectCode": "https://github.com/cmusphinx/deepsphinx"
                },
                {
                    "title": "Leaderboard Population, Sorting, and Column Maintenance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5273302327099392/",
                    "content": "The project scope includes designing a web based leader board module for CMU Sphinx which would include details of top ranking people, models, training methods, data collection methodologies, proposals, benefactors, vocabulary, languages, fund raising methods, etc.This project would be a Python Flask based REST Web solution with inbuilt authentication which would provide users to update and view details of top performers in the above mentioned categories.",
                    "projectCode": "https://github.com/saurabhima/gsoc_LEADERBOARD"
                },
                {
                    "title": "MLP incorporation in Sphinx",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4676203759796224/",
                    "content": "CMUsphinx is a fast and flexible open source speech recognition toolkit. Currently it uses GMM acoustic models and it gives reasonable accuracy. This project is geared towards incorporating a state of the art MLP-HMM model into sphinx, substantially decreasing the error rates. A ResNet with MLPs instead of convolution networks will be trained and tested on TEDLIUM corpus.The aim is to achieve best-in-category accuracy in recognition of Ted talks.This project will bring CMUsphinx at par with other powerful speech toolkits like KALDI and will help Sphinx users worldwide get better accuracy in their ASR projects.",
                    "projectCode": "https://github.com/habdullah/pocketsphinx"
                },
                {
                    "title": "Pronunciation Intelligibility Remediation with Pocketsphinx.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6114169682132992/",
                    "content": "The proposed framework will implement a user interface capable of collecting audio signal from microphone corresponding to a prompted text and perform a comprehensive speech analysis to produce a report of mispronounced segments of speech in the collected audio. Audio collection is performed asynchronously through web workers in browsers or flash actionscript as a fallback. The collected audio is parallely decoded using multiple grammars within pocketsphinx framework and standardized acoustic scores for each decoded unit is compared across grammars to evaluate the pronunciation. These grammars form the core contribution of this project wherein they act as a panel of native and non-native transcriptionists or recognition models predicting the output as intelligible to each of them.",
                    "projectCode": "https://brijmohan.github.io/iremedy/single_line.html"
                },
                {
                    "title": "ROS Integration for pocketsphinx",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5980098251456512/",
                    "content": "ROS has support for pocketsphinx, but it is very initial stage. So, this project aims to update the ROS package for pocketsphinx with a full-scale support for the recent features and updates. Also, the current package makes use of many external dependencies for its proper functioning. This leads to a lot of complexities in the installation process and in maintaining the codebase. So, another motivation for this project is to get rid of as many of the external dependencies as possible and maintain a proper documentation for the new package. The existing codebase does not have a proper wiki or documentation, neither for the developers, nor for the end-users. And ROS is all about flexible usability. So, this project would also strive to provide a concise, clear and up-to-date documentation of the entire package.",
                    "projectCode": "https://medium.com/@PankajB96/gsoc-a-joruney-just-started-53d6b8b68931"
                },
                {
                    "title": "Transcriber Qualification",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4880814793818112/",
                    "content": "The aim of this project is to write support code for obtaining accurate transcriptions, exemplar\npronunciations, and phonetic and part-of-speech labeling.One of the important concerns in Natural Language Processing is the availability of gold\nstandard information such as transcripts of speech, part-of-speech tagged sentences, word\npronunciation examples etc., which aid in training and evaluating the performance of\nspeech and text processing algorithms. This requires extensive collection, processing and\nvalidation of information from a variety of sources.The data needs to be normalized across these sources, evaluated based on quality,\nquantity and other metrics. This requires a structured system which allows for the data\ncollection and management tasks to be done effectively. This is especially important to\nCMU Sphinx contributors who require such data for their work, such as training and\nevaluating their speech and text models.The project involves the integration of a Flask and SQLite based leaderboard web\napplication with a transcription record system into a broader data aggregation and\nprocessing framework for the aforementioned tasks.",
                    "projectCode": "https://github.com/rrajasek95/gsoc_LEADERBOARD"
                }
            ],
            "techStack": [
                "c",
                "cross-platform",
                "hidden markov models",
                "javascript ",
                " python"
            ]
        },
        {
            "title": "coala",
            "orgLink": "https://coala.io",
            "projects": [
                {
                    "title": "Auto-removal of dead code through vulture",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5154725527814144/",
                    "content": "vulture is a tool which detects and reports dead (unused) code and coala is an automatic linter.\nThe motivation of this proposal is to:",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/RahulJha"
                },
                {
                    "title": "coala: Implement Aspeca",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4605261771702272/",
                    "content": "Currently configuring coala on a new project is unnecessarily hard, especially for first time user. There are few reason for this.New users are not always familiar with all the functionality provided by various tools inside coala. But, coala tries to provide a full set of options for those tools, which make configuration overwhelming. Finally, there is the possibility that the same type of checking could be executed by multiple tools, which makes choosing the right tools for a type of analysis hard.This project will aim to implement aspect based configuration on coala. With aspect, we abstract the bear picking process with specifying list of aspect and coala will automatically choose the required bear to run.aspect itself is a category of analysis that should be run over a code. Each aspect have a taste, which is a measurable metric on how a \"correct\" code should look like.This project have 3 main milestone, which is:",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/adhikasp"
                },
                {
                    "title": "cobot enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5675653521211392/",
                    "content": "coala community has grown substantially over last few months. To make it easier on maintainers to cope up and still be a welcoming community for new contributors.Currently, cobot is a hubot instance, scripts for which are written in Coffeescript. This project is about porting the existing functionality of cobot to a python bot framework errbot and adding topic modelling to cobot to auto respond with correct(probably) answer when someone asks a question.Another reason for porting: coala is python inclined community, cobot will receive more contribution if the devs can write plugins for cobot in python.As previously mentioned, coala has been growing substantially and there are new contributors frequently and same questions are asked frequently. This feature aims at using Natural Language Processing and matching the asked questions with the sections in docs and then respond with a relevant section. This saves time for the users as well as developers significantly. Also, since this a bot interaction one doesn't tire out the opposite person responding.",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/MeetMangukiya"
                },
                {
                    "title": "Documentation Extraction & Parsing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6645955352854528/",
                    "content": "To develop an analyzing routine at least for python and java that will find all documentation strings in a file, parse them into specific groups and check them against a specified documentation style given by the user. The functionality can be extended so that the analyzing routine provides a patch that re-formats the documentation correctly, checks for grammatical errors (eg: checking parameter’s description for imperative present tense) and perform other aesthetical fixes (i.e capitalization, sentence termination with a period).",
                    "projectCode": "https://damngamerz.github.io/gsoc/Souvenir-of-GSoC'2017!.html"
                },
                {
                    "title": "Enhance coala-quickstart",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6208607959908352/",
                    "content": "coala is a modular and language-agnostic tool for performing static code analysis. The aim of coala is to make static code analysis easier for the users. However, getting started with coala for a user requires prior knowledge about different bears coala has (users may get confused among lots of available options), how to create a correct coafile, what values to provide for settings, avoid duplicity among the bears, what bear-dependencies to install, etc.coala-quickstart is a tool with an aim to help users to quickly get started with coala by doing all the boilerplate work. It generates a .coafile (coala's configuration file) that is tailored to the project.The ultimate goal of the project is to make coala-quickstart generate a more tailored coala configuration file with less user effort and time.The primary objectives of the project are:",
                    "projectCode": "https://gist.github.com/satwikkansal/b72265a0d0ec678b9291ea8e21a398ec"
                },
                {
                    "title": "Extend Linter Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5215509247164416/",
                    "content": "The aim of the project is to ease the process of testing bears in coala by significantly improving the testing API to yield favorable, easy to understand results, add support for at least 8 additional useful linter bears, integrate the MarkdownBear with useful plugins, include remark-lint to report error messages and get the MarkdownBear to a bug free state, and enhance documentation to include the newly written Linter bears.",
                    "projectCode": "https://yash-nisar.github.io/blog/gsoc-summary/"
                },
                {
                    "title": "Extending GitMatev2.0 to support GitLab and BitBucket",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4690491102724096/",
                    "content": "This time with user configurable plugins!GitHub, GitLab and BitBucket support webhooks for common events like opening/closing/commenting on Merge Requests, creating Issues, etc. These webhooks could be configured for automated response using their own API's for comments, tests/integrations, etc. GitMate merely acts as a tunnel for these events and responds accordingly. The interface for these API's is held by its wrapper library, IGitt.This project is aimed at extending the support for GitMate to GitLab and BitBucket repositories. This adds up to unified and automated code analysis and maintenance on the big three code hosting platforms.This project consists of implementing GitLab and BitBucket interfaces in IGitt, following the already implemented GitHub's convention, while simultaneously creating webhook responders and tasks for the same on gitmate-2.Extending plugins is quite easy on gitmate-2 following gitmate_testplugin as an example, thanks to its plugin-based architecture.",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/NaveenKumarSangi"
                },
                {
                    "title": "Improve coala Website and Supporting Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4573465860374528/",
                    "content": "Currently, the coala Online module lacks support for all the bears. Bears with non-optional settings are ignored. The first goal of this project is to have a powerful online module that provides backend and frontend interface to be able to do code analysis with any given bear. The project focusses on enhancing coala-html by introducing results and bear search and filtering on basis of parameters.\nThe next thing where the project will help us is that it will provide an effective bear search mechanism on coala.io and make projects.coala.io configurable and extensible.",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/HemangKumar"
                },
                {
                    "title": "Improve the coala CLI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6112228356915200/",
                    "content": "coala has come a long way from its early days in terms of its usability, although all the changes that have been made are improvisations. A proper and planned overhaul of the user interface would help coala become much more user friendly and intuitive. At its core any software is as good as its interface with the user and this project aims to improve that.",
                    "projectCode": "http://projects.coala.io/GSoC/2017/StatusReport/AlexMaxim"
                }
            ],
            "techStack": [
                "python"
            ]
        },
        {
            "title": "Computational Biology @ University of Nebraska-Lincoln",
            "orgLink": "http://helikarlab.org",
            "projects": [
                {
                    "title": "CancerDiscover: a GUI for cancer prediction and biometric identification using microarray data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4745536745766912/",
                    "content": "As of today, CancerDiscover has a not-so-easy build and workflow for users to conduct microarray experiments. Moreover, the current setup requires users to manually download datasets and at the same time, separately label them. Users have no visual analysis provided at any given time during the course of the experiment. Moreover, users are also limited to use the default parameters for each classifier, thus limiting a user to build more efficient prediction models. Finally, the overall workflow is poorly documented for installation and usage.candis - A minimalistic clean Graphical User Interface integrated with the current command-line tool will not only provide a smooth build and workflow for an experiment setup, but also provide remote downloading for data sets, quality control visualisations and user-defined parameters during analysis. A modular framework will also provide future extensions for more techniques. Users will also have access to a well-documented manual that eases the overall use of the proposed software. The current ongoing development of this application can be viewed at github.com/achillesrasquinha/candis",
                    "projectCode": "https://github.com/achillesrasquinha/candis/wiki/Google-Summer-of-Code#google-summer-of-code-2017"
                },
                {
                    "title": "Mobile-Based Blood-Sample Image Analysis(iOS)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4503987785039872/",
                    "content": "The aim of this project is to use the camera and processing power of modern day cell phones to develop an intuitive and user-friendly application for the concentration estimation of various bio-markers in a blood-sample. Continuing on from last year’s work, this year’s task will be to improve upon the algorithm and implement the algorithm in iOS. The algorithm of the Android application will also be modified to the improved version.",
                    "projectCode": "http://abdulfatir.github.io/GSoC17/index.html"
                },
                {
                    "title": "Network Visualization Layouts",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6640515642556416/",
                    "content": "This proposal is focused in network visualization layouts. I intend to implement canonical algorithms for ccNetViz and to develop variations. Most significantly, I think that the Hive layout might be enhanced by enforcing undulations on the lines. I plan to properly document the layouts with examples and well commented code.",
                    "projectCode": "https://github.com/ttm/ccNetViz/wiki/GSoC-2017-final-evaluation"
                },
                {
                    "title": "Project Proposal-Javascript/WebGL Library For Interactive Visualization Of Large-Scale Network Graphs.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6465860126375936/",
                    "content": "A brief description on the plan of action and my understanding of the visualization project.",
                    "projectCode": "https://vchilkuri.gitbooks.io/gsoc-documentation/content/"
                }
            ],
            "techStack": [
                "javascript",
                "react",
                "java",
                "webgl",
                "mysql"
            ]
        },
        {
            "title": "Conversations.im",
            "orgLink": "https://conversations.im",
            "projects": [
                {
                    "title": "Improving Dino",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6004123493203968/",
                    "content": "This project will introduce various improvements in Dino, a new XMPP client using GTK+ written in Vala. Among the improvements will be MAM, Stream Management, Roster versioning, SRV records for XMPP over TLS and some UI extensions.",
                    "projectCode": "https://gist.github.com/fiaxh/d51713b15a1a29fc57d98d1a8a250a42"
                }
            ],
            "techStack": [
                "xmpp",
                "java",
                "android",
                "javafx",
                "python"
            ]
        },
        {
            "title": "Copyleft Games",
            "orgLink": "https://www.copyleftgames.org/",
            "projects": [
                {
                    "title": "A 3-D sidescroller game with physics based gameplay to show off the rendering and physics engine of PySoy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5352771033235456/",
                    "content": "I propose developing a 3-D sidescroller with physics based gameplay to show off the rendering and physics engine of PySoy. The player has a crystal that allows them to switch gravity between the vectors (0, ,9.8, 0) and (0, -9.8, 0). This would be implemented using the soy.fields.Accelerate class. The player will progress through three levels, dodge enemies, and fight a final boss to win. The camera follows the player object by calculating the difference in the X values and each frame smoothly matching the camera’s X value to the player object.I’d like to really show off what the engine can do graphically. Specifically, I would like to use the soy.bodies.mesh object to show more complex models then shape primitives. I would also like to use the triplanar material class soy.materials.triplanar to add more detail through bump and glow maps. In addition, I am developing a Blender add-on to export 3-D models from Blender into the custom PySoy mesh format.",
                    "projectCode": "https://bitbucket.org/alexbase/sidescroller/src"
                },
                {
                    "title": "Shadow Rendering",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5660792934367232/",
                    "content": "PySoy is a game creation engine where the aim is to give a remarkeable easy-to-use library to the developers compared to other game engines in the market. My project is to implement some shadow rendering algorithms so the creation gains a lot of value giving some sweet shadows. It'd be a step forward to a game engine used for more complex and good-looking games.The finality for this project is to add directional and no-directional light shadowing by including cubemaps instead of simple depthmaps.",
                    "projectCode": "http://abdulito.me/blog/2017/08/29/gsocfinal/"
                }
            ],
            "techStack": [
                "python",
                "opengl",
                "javascript",
                "c",
                "xmpp"
            ]
        },
        {
            "title": "DBpedia",
            "orgLink": "http://dbpedia.org",
            "projects": [
                {
                    "title": "DBpedia Mappings Front-End Administration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4695651371712512/",
                    "content": "Although the DBPedia Extraction Framework  was adapted to support RML mappings thanks to a project of last year GSoC, the user interface to create mappings is still done by a MediaWiki installation, not supporting RML mappings and needing expertise on Semantic Web. The goal of the project is to create a front-end application that provides a user-friendly interface so the DBPedia community can easily view, create and administrate DBPedia mapping rules using RML. Moreover, it should also facilitate data transformations and overall DBPedia dataset generation.",
                    "projectCode": "http://blog.ismaelrh.com/GSOC-2017/"
                },
                {
                    "title": "First Chatbot for DBpedia - Ram G Athreya",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6469474609790976/",
                    "content": "The requirement of the project is to build a conversational Chatbot for DBpedia which would be deployed in at least two social networks.There are three main challenges in this task. First is understanding the query presented by the user, second is fetching relevant information based on the query through DBpedia and finally tailoring the responses based on the standards of each platform and developing subsequent user interactions with the Chatbot.Based on my understanding, the process of understanding the query would be undertaken by one of the mentioned QA Systems (HAWK, QANARY, openQA). Based on the response from these systems we need to query the DBpedia dataset using SPARQL and present the data back to the user in a meaningful way. Ideally, both the presentation and interaction flow needs to be tailored for the individual social network.I would like to stress that although the primary medium of interaction is text, platforms such as Facebook insist that a proper mix between chat and interactive elements such as images, buttons etc would lead to better user engagement. So I would like to incorporate these elements as part of my proposal.",
                    "projectCode": "https://github.com/dbpedia/chatbot/wiki/GSoC-2017:-Chatbot-for-DBpedia"
                },
                {
                    "title": "Knowledge Base Embeddings for DBpedia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6665402964770816/",
                    "content": "Knowledge base embeddings has been an active area of research. In recent years a lot of research work such as TransE, TransR, RESCAL, SSP, etc. has been done to get knowledge base embeddings. However none of these approaches have used DBpedia to validate their approach. In this project, I want to achieve the following tasks:\ni)   Run the existing techniques for KB embeddings for standard datasets.\nii)  Create an equivalent standard dataset from DBpedia for evaluations.\niii)  Evaluate across domains.\niv) Compare and Analyse the performance and consistency of various approaches for DBpedia dataset along with other standard datasets.\nv)Report any challenges that may come across implementing the approaches for DBpedia.Along the way, I would also try my best to come up with any new research approach for the problem.",
                    "projectCode": "https://github.com/nausheenfatma/embeddings/tree/master/gsoc2017-nausheen"
                },
                {
                    "title": "Knowledge Base Embeddings for DBpedia - Akshay Jagatap",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6000474918486016/",
                    "content": "The project aims at defining embeddings to represent classes, instances and properties. Such a model tries to quantify semantic similarity as a measure of distance in the vector space of the embeddings. I believe this can be done by implementing Random Vector Accumulators with additional features in order to better encode the semantic information held by the Wikipedia corpus and DBpedia graphs.",
                    "projectCode": "https://github.com/akshayjagatap/embeddings/tree/master/gsoc2017-akshay"
                },
                {
                    "title": "The table extractor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6608069714771968/",
                    "content": "This is a proposal for the table extractor project. In this paper I explain how to improve the last year's project and to create a general way in order to read data from Wikipedia tables.",
                    "projectCode": "https://github.com/dbpedia/table-extractor"
                },
                {
                    "title": "Unsupervised Learning of DBpedia Taxonomy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5492249290866688/",
                    "content": "DBpedia tries to extract structured information from Wikipedia and make information available on the Web. In this way, the DBpedia project develops a gigantic source of knowledge. However, the current system for building DBpedia Ontology relies on Infobox extraction. Infoboxes, being human curated, limit the coverage of DBpedia. This occurs either due to lack of Infoboxes in some pages or over-specific or very general taxonomies. These factors have motivated the need for DBTax.DBTax follows an unsupervised approach to learning taxonomy from the Wikipedia category system. It applies several inter-disciplinary NLP techniques to assign types to DBpedia entities. The primary goal of the project is to streamline and improve the approach which was proposed. As a result, making it easy to run on a new DBpedia release. In addition to this, also to work on learning taxonomy of DBTax to other Wikipedia languages.",
                    "projectCode": "https://github.com/dbpedia/DBTax/wiki/GSoC-2017:-Final-Report"
                },
                {
                    "title": "Wikipedia List-Extractor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6628605295591424/",
                    "content": "Wikipedia, being the world’s largest encyclopedia, has humongous amount of information present in form of text. While key facts and figures are encapsulated in the resource’s infobox, and some detailed statistics are present in the form of tables, but there’s also a lot of data present in form of lists which are quite unstructured and hence its difficult to form into a semantic relationship. The project focuses on the extraction of relevant but hidden data which lies inside lists in Wikipedia pages. The main objective of the project would be to create a tool that can extract information from wikipedia lists, form appropriate RDF triplets that can be inserted in the DBpedia dataset.",
                    "projectCode": "https://github.com/dbpedia/list-extractor/wiki"
                }
            ],
            "techStack": [
                " java",
                "scala",
                "graph",
                "nosql",
                "rdf"
            ]
        },
        {
            "title": "Discourse",
            "orgLink": "http://www.discourse.org/",
            "projects": [
                {
                    "title": "Advanced search enhancements & Autospec gem",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5545567551750144/",
                    "content": "The project proposes new filters to advanced search and extraction of the rake task for running unit tests into a separate gem. Advanced search enhancements contains 1) searching posts containing all of the entered tags and 2) searching posts with images (with extension for searching by any filetype). The benefit for the Discourse community is better filtering of posts with emphasis on the search performance which will be useful for searching in bigger forums. By extracting custom way of running unit tests into a gem, we separate concerns as the tests running library is not dependent on the Discourse, Discourse code base gets smaller and it will be beneficial to whole Rails community.",
                    "projectCode": "https://gist.github.com/dmacjam/66211e9149ad72537bc12d0e483ea9e1"
                },
                {
                    "title": "Common Event System for Chatrooms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6383927988060160/",
                    "content": "In our increasingly connected world, full of social media and internet-connected devices, it is important for systems to be interlinked to provide the best user experience. Providing links between Discourse’s ‘long format’ discussion and instant-messaging applications is a natural way to promote real-time engagement with users. The discourse-slack plugin implements this well, and extending this functionality to more providers can only increase user engagement. This needs to be done in a maintainable way and creating a ‘common event system’ for chatroom plugins is the best way to do this.",
                    "projectCode": "https://dtaylor.uk/blog/2017/08/gsoc_with_discourse/"
                },
                {
                    "title": "General improvements to Discourse",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5584241047896064/",
                    "content": "This project is meant to improve the core of Discourse and implement new plugins. The features that are going to be implemented are:These features should improve considerably users' experience and make it an even better forum software.",
                    "projectCode": "https://github.com/nbianca/gsoc-2017"
                },
                {
                    "title": "Unicode username and search improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5173734516195328/",
                    "content": "I will improve Unicode/i18n for Discourse, especially a Unicode username feature.\nThis includes a new gem to leverage on battle-tested ICU library and a so called \\emph{i18n backend}.\nThe Unicode/i18n problem has already being handled by Rails but there are also limitation without improvement\nover years. Leveraging on Rails is not enough.I'll also improve the CJK search. That includes a set of plugins for PostgreSQL so that the index quality\ncan be further improved. Along with the refactors with search module, Discourse search for CJK forum should\nbe improved.",
                    "projectCode": "https://github.com/discourse/discourse/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Afantasticfears%20"
                }
            ],
            "techStack": [
                "ruby on rails",
                "ember",
                " ruby",
                "javascipt",
                "html/css"
            ]
        },
        {
            "title": "Django Software Foundation",
            "orgLink": "https://www.djangoproject.com",
            "projects": [],
            "techStack": [
                "python",
                "django"
            ]
        },
        {
            "title": "Drupal",
            "orgLink": "https://www.drupal.org/",
            "projects": [
                {
                    "title": "A Module for client-side File encryption",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6262315720638464/",
                    "content": "Objective : This project will involve building a complete module for Drupal 8 site to make it a zero-knowledge system using front-end JS encryption so that the users can rely on the site when uploading sensitive files, including images on confidential posts, not having to worry about data being stolen in case the server gets compromised.\nProject Introduction and why this project is important : The implementation of a zero knowledge system is very essential for the user as they\nwould want to rely on the CMS that their data is not being stolen and they are not being\nspied upon. Using client side encryption, sensitive data is already being encrypted before being\nstored on the server.\nIn a confidential post/article sharing sensitive information, the embedded illustrative\nimages and attached files might contain more detailed information than the plain-text\narticle that only provide an overview to the actual in-depth data in the document.\nHence, having only the fields encrypted is of no use if the images and other files\nrelated to that secret article are leaked by the attackers, possibly posing a higher threat\nthan leak of regular article field text.",
                    "projectCode": "https://www.drupal.org/node/2904242"
                },
                {
                    "title": "Adding support for Theleague oauth and new implementers for social auth and social post",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5887429768642560/",
                    "content": "Theleague is Oauth2.0 client library allows integration with any OAuth provider that conforms to the OAuth 2.0 standard, theleague provide a GenericProvider that may be used to connect to any service provider that uses Bearer token. Apart from this many providers provide additional functionality so thephpleague can be extended and wrapped for additional behavior. \nThe objective of this project will be to integrate Theleague into Social API project and add new implementers to Social Auth and Social Post.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/19MbptdDmhONHJLlR3vN_N18lTub-6PEtvGDAZ0zE5e0/edit#gid=0"
                },
                {
                    "title": "Client-side public-key encryption module for Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4835815616151552/",
                    "content": "The goal of this project is to provide a Drupal 8 module for client-side encryption using elliptic curve cryptography. Module will implement client-side cryptography by using the Stanford JavaScript Crypto Library (SJCL).",
                    "projectCode": "https://www.drupal.org/node/2901707"
                },
                {
                    "title": "Complete porting of Examples for Developers Sub-modules to D8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5123052157272064/",
                    "content": "I propose to port Examples for developers sub-modules from Drupal 7 to Drupal 8. The function of Examples for Developers is that it would provide high-quality, well documented API examples for a broad range of Drupal core functionality thus developers can learn how to use a particular API by just experimenting with its module thereby they can adapt them for their own use so  it is mandatory that it should be ported to Drupal 8(currently it is not configurable). As the project concentrate only on core API, each have their own importance.",
                    "projectCode": "https://www.drupal.org/node/2904882"
                },
                {
                    "title": "Creating a great geospatial experience in Drupal 8 by porting and enhancing the Search_Api_Location module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5615936295927808/",
                    "content": "Search_API_Location module provides the geospatial search experience to Drupal. Geo-spatial search mainly refers to searching data that is associated with a particular location. Queries such as give me all the restaurants that serves meat within 20 miles from me, or create a distance heat map of them are example of spatial search. Here, some live websites like Airbnb, TripAdvisor , yelp, olx etc use Geospatial searching functionality with different type of features which are still missing in Drupal domain.As we know location based search is slowly becoming popular and a must have for any content website in the recent era, Drupal 8 needs to have a drop-in solution for geospatial search. Right now there are some alpha modules existing but these modules need some serious investment for it to become production ready. As well as it should support both Apache solr and MySql server as backend for indexing location data.Search_API_Location module is an extension for Search_API module and it mainly does two things",
                    "projectCode": "http://dbjpanda.me/projects/gsoc-drupal-geospatial-search"
                },
                {
                    "title": "GSoC 2017 Project: Port \"Vote up/down\" module to Drupal 8",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5211526201868288/",
                    "content": "The project is about porting the 'vote up/down' module from Drupal 7 to Drupal 8.Vote up/down is a module which can be employed to add voting widgets to various content of your Drupal powered website.Fully functional and stable module for Drupal 8.",
                    "projectCode": "http://sudhanshug.com/blog/gsoc/2017/wrapup"
                }
            ],
            "techStack": [
                "php",
                " symfony",
                " sql",
                " javascript",
                " drupal 8"
            ]
        },
        {
            "title": "Eclipse Vert.x",
            "orgLink": "http://vertx.io",
            "projects": [
                {
                    "title": "Administration Console for Vert.x Applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5394178544500736/",
                    "content": "Eclipse Vert.x is a toolkit for the Java Virtual Machine enabling the implementation of reactive, highly concurrent, polyglot applications. The goal of this project is to implement a lightweight, extensible administration console for Vert.x applications that can be easily mounted as a Vert.x-Web subrouter, and serve as an example for developers wishing to implement complex, real-time applications using the SockJS bridge. A Prometheus-based metrics implementation that ships without an additional Dropwizard dependency would also be released as a separate project in order to benefit users with existing monitoring setups.",
                    "projectCode": "https://github.com/yunyu/vertx-console"
                },
                {
                    "title": "Developing a Vert.x based MQTT client (in the spirit of Eclipse Paho)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6059934177296384/",
                    "content": "MQTT is “lightweight\" messaging protocol for use on top of the TCP/IP protocol. This protocol is used when you to keep connections with remote and low-performance devices. For instance, it widespread in IoT sphere.Despite a plenty of MQTT clients, it is not suitable to use any of the clients with Vert.x out of the box and in Vert.x-like reactive style, keeping a connection with Vert.x's nature.The project idea aims at developing a native Vert.x MQTT client.The Vert.x based client must expose all MQTT features and be suitable for use from java-Vert.x code and have a convenient API. Also, for handling all of the network communications the Netty's NetClient should be used as it Vert.x do. Nativeness of the client means that state machine and implementation of behavior model should be written from the scratch. For this reason, it can't be a wrapped around some external and already written MQTT client.",
                    "projectCode": "https://docs.google.com/document/d/1PpzXr1-r2PncjwB1q6fymk8a62ItLn1tU9za-1gV7Sk/edit?usp=sharing"
                },
                {
                    "title": "Router Factory for Design Driven Web API Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5131880328331264/",
                    "content": "The main objective of my project is to expose functions that generate a Router from an API specification (based on an API specification standard like Swagger or RAML), to help dev teams building its services starting from a Web API specification. This method is called Design Driven Development.The main idea is to implement an interface inside vertx-web like this:This interface enables developers to create a router based on his API specification without caring about request validation and parameters parsing and other things described in API specification. Also a base interface DesignDrivenRouterFactory will be created to enable Vert.X framework to support multiple specifications standardsHere is my Twitter wall project",
                    "projectCode": "https://gist.github.com/slinkydeveloper/25e4f5543755480635b4dddc449dcf53"
                }
            ],
            "techStack": [
                "java",
                "reactive extensions",
                "kotlin",
                "microservices",
                "event-loop"
            ]
        },
        {
            "title": "Elm Software Foundation",
            "orgLink": "http://elm-lang.org/",
            "projects": [
                {
                    "title": "Elm for iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5097842980945920/",
                    "content": "Elm is a programming language for creating browser-based web apps. Elm for iOS (a.k.a. Elm Mobile) aims to bring the benefits of the Elm programming language, like no runtime errors, to mobile platforms like iOS. The goal of our project is to determine the feasibility of using Elm to create native mobile applications.",
                    "projectCode": "https://github.com/pzp1997/elm-ios"
                }
            ],
            "techStack": [
                "elm",
                "javascript",
                "haskell"
            ]
        },
        {
            "title": "Environmental Data And Governance Initiative",
            "orgLink": "https://envirodatagov.org/",
            "projects": [
                {
                    "title": "Data Visualization of Archived Content",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6462216651931648/",
                    "content": "The purpose of this project is to develop a set of visually impactful and meaningful models that allow users to easily visualize the changes archived by EDGI.",
                    "projectCode": "http://harshbaid.com/blog/2017/working-with-edgi/"
                },
                {
                    "title": "Identifying and prioritizing important website changes using learning algorithms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4910480938237952/",
                    "content": "The project goal is to utilise machine learning algorithms to identify changes on government agency websites which are worth reviewing.The ignorant and disparaging stand of the new U.S administration on environmental issues like global warming, air pollution etc. has led to panic as federal agencies gradually make the ocean of scientific data on government servers inaccessible to the public.The project will attempt to tackle the aforementioned issue and fill the following needs:1.Filter out insignificant changes (which may be a major share of all changes) to webpages, and thus, eliminate the need to spend time reviewing useless information.2.Direct analysts to important changes on active websites which will help them to efficiently document and analyze relevant information.",
                    "projectCode": "https://envirodatagov.org/google-summer-code-2017-web-monitoring-project-janak-raj-chadha/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "ruby on rails",
                "google cloud",
                "go"
            ]
        },
        {
            "title": "Fedora Project",
            "orgLink": "https://getfedora.org/",
            "projects": [
                {
                    "title": "Continuous monitoring system for source code weaknesses",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5729359134457856/",
                    "content": "Developing software is a creative activity, and being carried out by humans is subject\nto defects. There are types of defects that can occur in a software’s project, but the\nones that interest us most, are those related with the product of the project, that is, the\nsource code. Source code defects can be named as weaknesses, which depending on their\ncharacteristics, can lead to security vulnerabilities. In medium and large projects, find\nsuch weaknesses by manually inspecting all the modules of the project, it is infeasible,\nin addition to the fact that active projects launch with some frequency new versions of\nyour product, versions that may come with new weaknesses.  During Google Summer of\ncode period, i’m intend to build a system, that permits to run several static analysis tools in\nsource code packages. I’m working in the past few months in Debile, a tool created by the Debian community to make static analysis on Debian packages. Make this tool more generic will permit to analyses others fonts of source code, and this is the main object that i want to reach.",
                    "projectCode": "http://davidcarlos.me/gsoc-final-report.html"
                },
                {
                    "title": "Developing administrative tools for 389 Directory Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6108517505171456/",
                    "content": "The 389 Directory Server is an enterprise class LDAP server, used in businesses globally to authenticate and identify people. A python administration framework, lib389, have been designed recently to replace existing legacy perl tools. It contains tools and libraries for testing and interacting with the Directory Server, but it is still a work in progress. The purpose of this project is to develop command line tools for configuring some of the existing Directory Server plugins in an easier way, and additionally improve the lib389 framework in general.",
                    "projectCode": "https://iliaswrites.wordpress.com/2017/08/23/final-gsoc-2017-report/"
                },
                {
                    "title": "GSOC: Migrate Plinth to Fedora Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4549753614368768/",
                    "content": "Plinth is a web interface to administer the functions of the FreedomBox which is a Debian based project, and the main goal of this idea is to make it available for Fedora.To solve this issue, I made up a scenario in this proposal, it can be divided roughly into two parts. The first one is modifying the source code module by module to convert it to RPM-based, including replacing the apt command code with the dnf command code or fit both of them, changing the Deb-based packages into RPM-based packages which play the same roles and testing after each module finished. The second part is a little scattered, including making a RPM package for Plinth and setting up a repo for it in Copr, testing inside a Virtual Machine, and modifying some configuration files and the documents for users to fit the changes of Plinth during this project, at the same time, a new wiki page for Plinth in Fedora is needed.",
                    "projectCode": "https://mandywangblog.wordpress.com/2017/08/29/gsoc2017-fedora-final/"
                },
                {
                    "title": "Patternfly Frontend Pattern Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5019142000214016/",
                    "content": "The goal of this project is to provide web components to users based on Patternfly patterns.",
                    "projectCode": "https://gist.github.com/sahil143/37b5aadcbb367c392e026e2ca987ebfb"
                },
                {
                    "title": "Persistent storage for the Fedora Media Writer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5019593777086464/",
                    "content": "Allow any user to keep the changes he does when he's booted into the live system across reboots.",
                    "projectCode": "https://github.com/MartinBriza/MediaWriter/tree/gsoc2017"
                }
            ],
            "techStack": [
                "python",
                "linux",
                "git",
                "postgres",
                "ansible"
            ]
        },
        {
            "title": "FFmpeg",
            "orgLink": "https://ffmpeg.org/",
            "projects": [
                {
                    "title": "FITS image encoder and decoder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4991827350388736/",
                    "content": "The project aims at implementing the FITS image encoder and decoder in ffmpeg. FITS is an open standard defining a digital file format useful for storage, transmission and processing of scientific and other images. FITS is the most commonly used digital file format in astronomy.",
                    "projectCode": "https://docs.google.com/document/d/1RxNM424sANbe9XZ3KuEnx93G5ZvLYzEBbrM04wYJ7Yo/edit?usp=sharing"
                },
                {
                    "title": "Fully featured Ambisonic decoder implemented as a filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5502705388748800/",
                    "content": "Ambisonics is a full-sphere surround sound technique: in addition to the horizontal plane, it covers sound sources above and below the listener. FFmpeg as of now has no-support for decoding standard B-Format sound into any user-decided speaker configuration. The project would focus on implementing a fully-featured Ambisonic decoder, which decodes standard B-Format and converts it into the required speaker configuration. This would enable FFmpeg to decode Ambisonic files, right at the user-end and he/she will be able to create his/her own speaker configuration. This decoder would be implemented as a filter in FFmpeg/libavfilter.",
                    "projectCode": "https://docs.google.com/document/d/19jRCio_vsE-sxhe47My8aD0Lnx5vEWu14dY84Eay8HU/edit?usp=sharing"
                },
                {
                    "title": "mInterpolate Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5632390584074240/",
                    "content": "Improve quality of frames generated by currently implemented Motion Compensated Frame Rate Conversion video filter - mInterpolate by implementing state-of-the-art algorithms from latest academic papers.\nThe project also focuses on Motion Estimation API for FFmpeg which could be used independently by codecs, filters internally and by users.",
                    "projectCode": "https://docs.google.com/document/d/1Hyh_rxP1KGsVkg7i7yU8Bcv92z0LIL4r-axpoKfvMFk"
                },
                {
                    "title": "VMAF video filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4843671916642304/",
                    "content": "VMAF is a perceptual video quality assessment algorithm developed by Netflix. The project aims to create a fully functional video filter inside FFmpeg that measures the  Video Multimethod Assessment Fusion (VMAF) score of any input video compared to a reference. The overall goal is to have both the independent vmaf containing the implementation of metrics used in vmaf like ansnr,vif,dlm,motion and fusing them using Support Vector Machine (SVM) and a dependent library implementation linking to Netflix's vmaf (librarification).",
                    "projectCode": "https://gist.github.com/ashk43712/89e51b39b1c224fca49e6ff99a48f6d9"
                },
                {
                    "title": "Vorbis Encoder Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6487867807236096/",
                    "content": "Vorbis as a lossy audio codec provides excellent quality audio compared to other codecs at a similar bit rate, including MP3, and even comparable to AAC. High-quality audio combined with a fully open license should be valued by the open source community as an alternative to codecs that require a patent license for encoding or payments in order to legally stream.However, FFmpeg’s native vorbis encoder is currently labeled as experimental or broken due to its relatively poor performance and audio quality in comparison to competing audio codecs. It serves only to output a valid bitstream, with little concern about quality. This project aims to improve the general performance of the encoder, bringing it closer to a viable status. This will be done by integrating features of the existing AAC psychoacoustic model system within the native Vorbis encoder and adapting the FFmpeg Vorbis decoder to utilize that new information. Finally, additional documentation and test coverage will be added to enable long-term development in this area.",
                    "projectCode": "https://tjones879.github.io/blog/gsoc-2017/"
                },
                {
                    "title": "VP9 decoder improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6251046800195584/",
                    "content": "Assembly optimizations that take advantage of avx2 instruction set to provide performance improvements to the vp9 decoder. Tile threading support.",
                    "projectCode": "https://gist.github.com/zakne/06618f0af3ddd490df6e8701f0c402c9"
                }
            ],
            "techStack": [
                "c",
                "assembly",
                "git"
            ]
        },
        {
            "title": "FOSDEM",
            "orgLink": "https://fosdem.org",
            "projects": [
                {
                    "title": "Track proposals and scheduling workflow",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5795285003403264/",
                    "content": "Currently, a user can submit a proposal for an event. This document proposes a way to give the users the ability to submit requests for tracks (self organizing parts of a conference with dedicated dates and room), tries to enumerate the technical changes required for this to happen and provides a step by step workflow for the \"successful\" route (from track request submission to final scheduling).",
                    "projectCode": "https://blog.aetherc0r3.eu/gsoc/2017/08/28/gsoc-2017-summary.html"
                }
            ],
            "techStack": [
                "git",
                "ruby on rails",
                "postgresql",
                "html/css"
            ]
        },
        {
            "title": "FOSSASIA",
            "orgLink": "http://fossasia.org",
            "projects": [
                {
                    "title": "A Front End for the Search Appliance in Susper",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6143398947848192/",
                    "content": "Building a user- friendly UI for the search appliance in Susper, which has an existing Yacy-Grid back end. This project also aims to include many widgets and features, which enhance the usability of the search appliance",
                    "projectCode": "https://gist.github.com/Marauderer97/898630a8ffb23e7be7405bab648a9531"
                },
                {
                    "title": "A SUSI Web Chat Application with advanced features for various SUSI skills.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6548532341243904/",
                    "content": "The SUSI Web Chat App shall be implemented over the SUSI Server API with features supporting chat responses in the form of text, maps, images, tables, RSS feeds etc, user authentication, settings, feedback systems and much more. It will use the various SUSI Skills to render intelligent responses and help in day to day lives.",
                    "projectCode": "https://gist.github.com/rishiraj824/2d0a4848d863a148c61d03bf487ee88d"
                },
                {
                    "title": "A Web Application making use of the SUSI.AI Server functionalities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4703316948811776/",
                    "content": "To build a web application similar to the existing Android and iOS clients, making use of the functionalities of SUSI.AI Server. The web application will have functionalities such as replying intelligently to user's queries in different formats including text, image, table, map, emojis etc, accounting features, personalization features and much more.",
                    "projectCode": "https://gist.github.com/uday96/1a6f97de17f33b4dbf5f55c2fb2ba2b6"
                },
                {
                    "title": "Add Endpoints to Loklak API and Implement World Mood Tracker",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6156762604371968/",
                    "content": "Add stream and mood API to loklak server and build mood heatmap web app on it's top.",
                    "projectCode": "https://gist.github.com/singhpratyush/49ced965be92a2986b110d1338433e7b"
                },
                {
                    "title": "Add more harvester to loklak server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5162772014825472/",
                    "content": "'LOKLAK SERVER' is a distributed message search server to anonymously collect, share, dump and index social media search results.SearchServlet in Loklak Server only able to scrape the tweets from Twitter according to query input. To use other scrapers, one needs to use it separate endpoints.",
                    "projectCode": "https://gist.github.com/vibhcool/e7722cbb2196cdeceacfd9e319bd2eb6"
                },
                {
                    "title": "An iOS app making use of the SUSI.AI Server functionalities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6483869595336704/",
                    "content": "The main aim of this project was to develop an iOS app on top of the SUSI.AI Server functionalities. The server makes use of different skills which are defined in the Skill Data Repository. The app will have functionalities such as replying intelligently to user's queries, helping users in their day to day lives, hot word detection, and training, synchronizing settings across all the clients and much more.",
                    "projectCode": "https://gist.github.com/chashmeetsingh/c3db2ee75ae7b416360467379fa9a9aa"
                },
                {
                    "title": "Decoupling the building the frontend for Open event server in Ember js.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4741979170668544/",
                    "content": "Currently the open-event-server has very unorganized and uneven frontend which does not look good on different screens. So I will be decoupling the frontend and building it with my team. We are using ember js to do this. Integration of the JSON API will be one of the major part of the project.",
                    "projectCode": "https://gist.github.com/sumedh123/dfdcd7de01c1b2cfbbc7ce1b73af46a0"
                },
                {
                    "title": "Develop an Android Science App for PSLab Experiments",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6464072077803520/",
                    "content": "Create an Android App from scratch which would enable user to use PSLab directly from their mobile phone through an OTG cable and perform various experiments and get output from App itself. Many PSLab experiments have been already implemented in Python. They can be ported to Android and can be performed directly from the phone.",
                    "projectCode": "https://gist.github.com/viveksb007/b394b5815ebe4208435509ce40ec4521"
                },
                {
                    "title": "Develop firmware and experiments for Pocket Science Lab (PSLab)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6419685604065280/",
                    "content": "Characteristic of a shift into the digital era, students have started to learn to code at an early age. However, most of the academic applications are currently centered around purely software based learning techniques such as simulations.The ability to easily access multiple control and measurement tools as well as analyze the results from one common platform (such as is common in advanced research labs ) enables students to design new experiments and further the spirit of science.The Pocket Science lab is such a platform precisely, and its architecture makes it an affordable tool for the masses, that has the potential to nurture young scientists.I have spent more than two years developing resources to better equip educators , and have experience in developing various scientific instruments similar to PSLab. I believe I will be a good addition to the PSLab Team , and can contribute towards Firmware development, adding and testing new experiments , and developing a virtual lab interface for PSLab.\nMy entrepreneurial venture has manufactured over a 1000 devices of similar complexity, and I believe my experience will be useful for tweaking PSLab for manufacturability",
                    "projectCode": "https://jithinbp.github.io/GSoC2017/"
                },
                {
                    "title": "Develop Organizer features for Open Event Orga Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4884934204325888/",
                    "content": "Open event orga server offers the great solution for Organizing event. There are great tools and features like sessions, speakers, ticket management with the ability to export and provide API of the event. These all offer a great solution to organize an event with ease.There are certain features which can help Organizer to connect more with audience and speakers. The organizer should be able to receive feedback on​ the sessions and query regarding the event. This project focuses on same with providing such features for organizer to connect more with attendees, past audiences, speakers.",
                    "projectCode": "https://gist.github.com/poush/4e08e5da67301be8b9f796c941e8ed99"
                },
                {
                    "title": "Develop Susper Search Appliance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6421362923012096/",
                    "content": "Introduction:-The Susper Search Appliance uses Yacy-Grid. Currently only the backend exists, that can be used via terminal. The goal of this project is to offer users a simple UI for a Susper Search Appliance, that allows users to run a local distributed search engine and also Develop extra Features on the BackEnd side for Yacy",
                    "projectCode": "https://gist.github.com/nikhilrayaprolu/1dd9b32939e9fc1f699adfe0693c98f7"
                },
                {
                    "title": "Developing a Plug and Play adaptation of Susi to run on Hardware Device like Raspberry Pi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5824553058041856/",
                    "content": "This proposal aims at adding support for running Susi AI on the devices modeled after Amazon Echo and Google Home. The project has aims to:",
                    "projectCode": "https://gist.github.com/betterclever/149bff3537f0614bb7ffeaec0de5d5ad"
                },
                {
                    "title": "Developing the FOSSASIA’s Open Event Frontend App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5683815569686528/",
                    "content": "The FOSSASIA Summit is an exciting Open Technology event for developers, students, and startups using open source to build up their businesses. It is a unique opportunity to share the latest innovations in open source technologies and meet contributors and potential partners. Past FOSSASIA events have attracted thousands of participants, speakers from 35 countries, and hundreds of volunteers.\nThe  Open Event Frontend application is primarily frontend for the Open Event API Server where organisers, speakers and attendees can sign-up and perform various functions.",
                    "projectCode": "https://gist.github.com/harshitagupta30/a0eac0c50e1bf3458d4a3402709538af"
                },
                {
                    "title": "Developing the Meilix Generator for Custom Linux Distributions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5558694313984000/",
                    "content": "The task is to develop a webapp for generating custom Linux Operating System. This webapp will guide one through a Graphical User Interface to get an ISO image of the Linux Distro on its email within 10 minutes without actually to code a single line. The Distro is based on Meilix(lubuntu based) zesty 17.04 out of the box.The project focuses on creating:",
                    "projectCode": "https://gist.github.com/xeon-zolt/f9027c7dc566883021c8ffe7bd71b3be"
                },
                {
                    "title": "Development of an Android Application for Pocket Science Lab Experiments",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4704853473361920/",
                    "content": "Pocket Science Lab is a complete and powerful tool that can really power a regular science lab. It can work as Oscilloscope and Logical Analyzer. PSLab can generate desirable waveforms, voltages, currents and pwm signals, it can read resistance, capacitance and data from sensors (wireless/analog/digital). Its features have opened new horizons for engineers, teachers and students. As we live in 21st century, where Smartphones are possessed by the majority of people, it is important that the features of PSLab can be accessed via Smartphone. This proposal aims towards the development of an Android application for PSLab experiments. The proposal proposes an entire model contributing towards the development of the project. It starts with discussing various aspects of the project and defining its goals. Then it focusses on project implementation, the software lifecycle to be used and the modules in which the system can be divided into. Subsequently, it states application’s ideology and thoroughly explains each module (along with wireframes). It also presents a timeline of the entire project. The proposal concludes by discussing development and testing phase of the project.",
                    "projectCode": "https://gist.github.com/akarshan96/ad7ed49b1c5d4762cc17abb21af14652"
                },
                {
                    "title": "Development of Android Science App for PSLab and enhancement of firmware",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5941842440880128/",
                    "content": "I propose to develop an Android App for Science Experiments with PSLab. Due to the growing influence of smartphones, the requirement of an Android counterpart for PSLab is needed. As per the current development status, the device communicates with the app using an OTG Cable using I2C communication. PSLab has an already existing desktop counterpart and the features like oscilloscope, get data of the various sensors on the board etc. and I wish to integrate most of the features in the app along with some better feature suggestions. The project would require initial development of communication libraries followed by implementation of the proposed features and their rigorous testing. An entire development model needs to be developed which would the writing main code, tests to check validity in certain cases, paying attention to the aesthetics/looks of the app etc. The proposed features would require extensive understanding of communication protocols, using APIs in apps, development of tests & making good UI designs. The proposed project has been divided to development & testing phases with time bound schedules for the same.",
                    "projectCode": "https://gist.github.com/asitava1998/4cefce195392fd9ec866923fab03a6e0"
                },
                {
                    "title": "Enhancement of Phimpme Android App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4725675474812928/",
                    "content": "Since Phimpme lags basic functionalities like connecting to the social network and sharing photos is limited to Bluetooth. Editing photos are also limited to few filters. So, I plan to improve the basic functionalities by connecting account to not just facebook but also other social network platforms. To get the app ready for the current market I will add few major features. I will be improving user experience of the app so that it is attractive and easier to use.",
                    "projectCode": "https://gist.github.com/Subhankar29/c3c3653d8c83842e08cf76a52aeae997"
                },
                {
                    "title": "Enhancement of SUSI.AI Server and Android App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5725239723950080/",
                    "content": "SUSI.AI is a powerful and Open Source Artificial Intelligence based Personal Assistant which retrieves data from various sources and answers queries of the user in the form of text, images, maps, pie charts, etc. My aim for GSOC is to enhance Susi AI server and Susi Android app by implementing new features in them and improving already implemented features.Goals of the project:",
                    "projectCode": "https://gist.github.com/chiragw15/0631223836130601d9f94ed7a887042f"
                },
                {
                    "title": "Enhancement to FOSSAsia Loklak Search webapp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5422632434401280/",
                    "content": "",
                    "projectCode": "https://gist.github.com/hemantjadon/4e13120d72a1470b6167743619f54f4d"
                },
                {
                    "title": "Enhancement to the Fossasia’s PhimpMe Android application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4866412963168256/",
                    "content": "I would like to enhance this project and like to develop an all in one photo app. Where user can directly share his/her image on different accounts in one go. Image editing options were also in the app. In other words an open source alternative to Instagram.\nEnhancing the FOSSAsia PhimpMe to add new functionalities like",
                    "projectCode": "https://gist.github.com/pa1pal/6edb314a3fc2dc22fe8400898fcb3da1"
                },
                {
                    "title": "Enhancements in Susper Search Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5545607011762176/",
                    "content": "The idea is to improve the current Susper Search Engine by helping to update the theme to the latest search engine site using Angular Material, add more search options such as language search, safe search, private results, country wise results and autocomplete feature. Implementation of internationalization features as well using Angular Translate API, which will bring i18n support to our angular project.",
                    "projectCode": "https://docs.google.com/document/d/1TPAhQaXjEAE93io1W8XIyhYFgCvu33cygxEmPddXFQg/edit?usp=sharing"
                },
                {
                    "title": "Enhancements of SUSI AI web Chat",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5212033544880128/",
                    "content": "Susi AI is open source chatbot with enabled voice assistance. It can perform various tasks like music playback, making to-do lists, setting alarms, geo-location sensing, traffic updated etc. My task in Google Summer of Code Period is to enhance capabilities of Susi AI web chat.",
                    "projectCode": "https://gist.github.com/isuruAb/8f7a610571ff79a1c24bbe9891f1f392"
                },
                {
                    "title": "Enhancements to FOSSASIA Open Event Android App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6065655342170112/",
                    "content": "Aim of the project is to improve and enhance Open Event Android project by adding more features, improving performance and fixing bugs.",
                    "projectCode": "https://gist.github.com/Shailesh351/536281e4d6dbde7ae44d9bbf0cffa30e"
                },
                {
                    "title": "Enhancing SUSI AI server, skills and developing SUSI AI messenger bots",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5586404100800512/",
                    "content": "The goal of this project is to enhance SUSI, integrating different APIs to make it more responsive and smart and implementing SUSI AI messenger chatbots. SUSI will learn from every other interaction with user and will implement machine learning techniques relating with an option of enabling user to give feedback on answers.",
                    "projectCode": "https://gist.github.com/AliAyub007/d3cde0b03f3a603629561530afe76446#file-gsoc-finalreportaliayubkhan-md"
                },
                {
                    "title": "Enhancing the Loklak app service and adding more apps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6293649117675520/",
                    "content": "The site at http://apps.loklak.org presently showcases various apps which are build with the loklak api. The aim of this project is to enhance the site and convert it into a proper app site like any other mobile app store with proper store listing of each apps, so that users are able to know how to use each app and deploy them.This project also aims at developing more loklak apps and adding them to the site.",
                    "projectCode": "https://gist.github.com/djmgit/651cd0974956f5aafaef2122b7d008ad"
                },
                {
                    "title": "Implement json-api spec compliant API for Open Event Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5845352242479104/",
                    "content": "At the time of writing this, the frontend and the backend in open-event-orga-server are tightly coupled with each other. The goal of the project is to refactor the current project and properly implement a  json-api spec compliant API for Open Event Server. Other goals include setting up documentation testing using Dredd.",
                    "projectCode": "https://gist.github.com/shubham-padia/77c7f0345907f1e970d813ec7c869790"
                },
                {
                    "title": "Implementation of frontend for eventyay",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5436200504524800/",
                    "content": "The aim of this project is to decouple the current orga-server and move to API centric approach, with orga-server as the central API server & open-event-frontend as the frontend.",
                    "projectCode": "https://gist.github.com/geekyd/613fb9e4cb6fb4cecf410e6343461a16"
                },
                {
                    "title": "Implementation of webapp to generate customize Meilix Linux Distro",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4649083591458816/",
                    "content": "To design a Linux Distro based on a platform to achieve certain requirements. The proposal focuses on building such as Distro.\nThe distro will be based on Meilix (lubuntu). It will have certain features, especially for events.\nThe distro will be user-friendly, light weight with LXQt desktop.",
                    "projectCode": "https://gist.github.com/meets2tarun/270f151d539298831ce542be5f733c82"
                },
                {
                    "title": "Import of Events into Open Event Orga Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4957105492590592/",
                    "content": "This project aims at providing support for automatic import of events from various event listing sites into Open Event. This import of events is useful in two ways:",
                    "projectCode": "https://gist.github.com/enigmaeth/da43a8023ccfca9fc81bf270c0c175ac"
                },
                {
                    "title": "Improve and enhance open-event-webapp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4623427201662976/",
                    "content": "This project aims to improve and enhance open-event-webapp and add new features like calendar and png export of the event schedule. The other objectives include building a showcase site to display different sample events, adding service workers for caching and offline functionality of event websites,  implementing Selenium testing for fixing regressions and bugs and adding support for the new API of the open event server.",
                    "projectCode": "https://gist.github.com/Princu7/93a3c444c84c05aff6154379b961168a"
                },
                {
                    "title": "Improvement in Susi Web app and it's integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5961715522994176/",
                    "content": "Feedback Feature:\nI will change the UI of the Susi assistant to inculcate the option of feedback by the user. This feedback after review will be saved in a file on the server. \nThus, this file can be included in the main repository and change the behavior of Susi.Integration to various platforms:\nCurrently, Susi assistant is integrated to Telegram, Facebook, Slack and Kik. My proposed project aims to integrate Susi messenger to Viber, Skype and Gitter. \nThe user can add Susi assistant as a friend, and have a conversation with it, through these platforms.The improvement achieved in the website of asksusi (enabling feedback), the same can be introduced to the Susi assistant present on these messenger platforms, if I am left with time.",
                    "projectCode": "https://gist.github.com/Manveer695/699f5e716a500d236cbb5d7d41c910c8"
                },
                {
                    "title": "Loklak Wok Android app into library and app with search and tweet features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5062099726237696/",
                    "content": "Addition of required Javadoc comments and refactoring variable names, methods and some classes in the loklakj_lib​, so that it can be published in the Maven ​repository, MavenCentral. Adding loklak API endpoints that are not currently implemented in loklakj_lib. Implementing static methods for generating ​oauth_nonce and ​oauth_signature ​in both loklakj_lib and ​loklak_python_api​.Replacing Processing.org’s applet with auto-scrolling RecyclerView and ListView in the loklak_wok_android​ app and ​loklak_wok_desktop​ app respectively. Adding the following features to both apps:The GUI library for desktop app will be​ PyQt5​. The above listed app features can be implemented for desktop app using loklak_python_api. Desktop app will be either a new project (new repo) or the same repository (removing the current code), depends on mentor’s decision.",
                    "projectCode": "https://gist.github.com/SKrPl/10fa22d0bdfe9f53b6ce7348c98b523b"
                },
                {
                    "title": "Loklak: Track Emojis on Twitter and show them on a map using the loklak API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4599339817107456/",
                    "content": "loklak is free software hosted on loklak.org which provides message search results from twitter in json format. loklak is a complete search engine back-end solution with a json api. Loklak’s API can be used to build twitter clones and client alike, one of them being loklak.net. One of the main features that’s pending in such a tool is the ease of tracking emojis and using it as a sentiment analyzer.If we are able to track the emoji and make a heatmap according to the country/area , we can easily identify the mood of the people around.This proposal focuses on building such a tool.",
                    "projectCode": "https://gist.github.com/kavithaenair/ce4629f9cd93e935f92acaa3012a6485"
                },
                {
                    "title": "Open Event Format in other Open Source Event Apps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5117290592862208/",
                    "content": "The Open Event Project offers event managers a platform to organise all kinds of events including concerts, conferences, summits and regular meetups. The components support organisers in all stages from event planning to publish, marketing and ticket sales. Automated web and mobile apps help attendees to get information easily. My project is to add Open Event format support in other Open Source Event Apps.",
                    "projectCode": "https://gist.github.com/heysadboy/5d0509d38e493ecc94678bdbd858046f"
                },
                {
                    "title": "Open Event Frontend -Design the new frontend and integrate it with the API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6348389146951680/",
                    "content": "",
                    "projectCode": "https://gist.github.com/CosmicCoder96/cc6ed77d539333b227748bb8d18759a1"
                },
                {
                    "title": "Open Event Orga Android App Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6312277061926912/",
                    "content": "Open Event Orga App is an  Android client for the Open Event Orga API for event management. The app allows organizers to sign up and log in, view sale analytics, scan QR code and check in attendees, manage and create tickets.The app also contains following features:We have also followed best practices for Android and maintained high standards in terms of code quality and structure so that there is no compromise in app performance and stability:",
                    "projectCode": "https://gist.github.com/iamareebjamal/b7b1eb4c2888715617fe00c57f1978cf"
                },
                {
                    "title": "Open Event Organizer Android Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5132564838744064/",
                    "content": "Open Event Organizer is an Android Application for Event Organizers and Entry Managers. It is a client side application for another project under FOSSASIA named Open Event Organizer Server.The core features implemented in the app are:The app is designed on the Model View Presenter Architecture which enables robust unit testing. Each feature implemented in the app has a complete coverage of unit tests. The app uses most of the modern open source technologies like ReactiveX API for multithreading, Dagger for dependency injection, OkHttp+Retrofit for handling network requests, Evernote's android-job for handling jobs in the background, JSON API-converter to handle JSON API schema responses, Google Vision API for scanning QR code, Glide for image loading/caching, Jackson to parse JSON data, Leakcanary to detect memory leaks, Lombok for logs, Mockito Framework for unit tests, DbFlow ORM database library, Data Binding etc. Material Design Guideline is followed for the UI in the app.",
                    "projectCode": "https://gist.github.com/mejariamol/9ca7464eb4a977499a04bb0a185303c5"
                },
                {
                    "title": "Phimpme Android Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5625049679659008/",
                    "content": "PhimpMe   Android   is   an   image   application   that   aims   to   replace   proprietary   photo\nediting   applications.   It   offer   features   such   as   taking   photos,   adding   filters,\nediting   images   and   uploading   them   to   social   networks.   It   was   developed   by\nFOSSASIA   several   years   back.   Since   Android   has   changed   a   lot   in   last   few\nyears,   many   of   the   libraries   and   API’s   have   become   depreciated   making   the\napplication unstable and causing random crashes.Infact,   there   are   lots   of   development   that   needs   to   be   done   in   this\napplication to promise smooth and user-friendly experience.",
                    "projectCode": "https://gist.github.com/anantprsd5/a5ab456a2fb3981b6df436d0f8880bba"
                },
                {
                    "title": "Phimpme Image App Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4587911714439168/",
                    "content": "I have gone through the various projects of Fossasia and impressed with the kind of project organisation is working upon.I choose to work on Phimpme Image Editor app, I have used the app, look into the code and I found that there are lots of scope for improvement, which includes both UI/UX, code refactoring and functionality breaks. Also, currently apps provide basic features to edit an Image(few filters and few editing options). An Image editing app has to be the pro(rich feature) to make it a good utility app. So I fixed some issues and wanted to take this responsibility to make Phimpme more beautiful and useful.",
                    "projectCode": "https://gist.github.com/mohitmanuja/fca01bd10c01a1e452043b21e0a65702"
                },
                {
                    "title": "Proposal for Open Event project under FOSSASIA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5973278917132288/",
                    "content": "Improve attendee experience of ticketing and subtickets, for meetups and develop a venue custom map",
                    "projectCode": "https://gist.github.com/magdalenesuo/07b5bcc63c00c777e29f13a11cd7c011"
                },
                {
                    "title": "PSLab - Android/Firmware/Hardware",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4706641521934336/",
                    "content": "PSLab is a new addition to FOSSASIA Science Lab. This tiny pocket lab provides an array of necessary equipments for doing science and engineering experiments.It can help enthusiastic and teachers with providing features likeThe control and measurement functions are written in Python programming language. Now they are being implemented as an Android application. The existing firmware and hardware functionalities also require upgrades and brush ups. I'm going to help with those! :)PSLab is interfaced and powered by USB port of the computer!",
                    "projectCode": "https://padmal-gsoc17.github.io/"
                },
                {
                    "title": "Show loklak search results as auto-refreshing media wall",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6422325532557312/",
                    "content": "The view of the search results is currently showing as a list of results. The aim of the project is to offer an additional view as a wall.a.) Part of this issue is also to implement an \"advanced search\" page that offers an extensive list of search outputs including:\n       1.) for specific media (images, video)\n        2.) options to limit searches to specific keywords, accounts, number of tweets\n        3.) specify facets that should not show up in the search, e.g. certain accounts.\n   b.) Also implementing direct URLs\n  c.)  Additional features might include color options for the walls\nd.) Implement some widgets and info boxes",
                    "projectCode": "https://gist.github.com/Achint08/18759d76f34a61f8f19bb4d290f39c97"
                },
                {
                    "title": "SUSI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6147191001317376/",
                    "content": "SUSI is an AI-powered chat bot with the ability to reply almost every query asked by the user not only in the form of text but visuals as well. It has the ability to take both, speech as input and can also provide us speech as output. For the currently the user is asked to make his/her own profile and then he/she can interact with it",
                    "projectCode": "https://gist.github.com/madhavrathi/9be16a7778c8530b0e153dc522411cd5"
                },
                {
                    "title": "SUSI Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5127065938427904/",
                    "content": "SUSI.AI is an open source AI based personal assistant which retrieve data from various sources like twitter and provide answer to queries of user. So my aim is to implement features in android app. Implement feature such as showing rss, map, anchor link etc. Improving text to speech and speech to text feature. Implement anonymous mode so that user can query SUSI even without login. Adding more skills in SUSI.",
                    "projectCode": "https://gist.github.com/amitiwary999/7709c9b1845214f057750fe370defdf7"
                },
                {
                    "title": "SUSI.AI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5581911028137984/",
                    "content": "SUSI is an Artificial Intelligence system which apart from having its own Android, iOS, web and IoT clients also offers an extended support for different bot platforms to get integrated. My aim is",
                    "projectCode": "https://gist.github.com/DravitLochan/01944318d14a74c2be26abf8d4f4c4b9"
                },
                {
                    "title": "SUSI.AI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4577455616557056/",
                    "content": "SUSI AI is an intelligent Open Source personal assistant. It is capable of chat and voice interaction and by using APIS to perform actions such as music playback, making to-do lists, setting alarms, streaming podcasts, playing audiobooks, and providing weather, traffic, and other real time information. My project is to work on SUSI.AI Server. SUSI Clients like Desktop App, Android and iOS apps are powered by SUSI Server.",
                    "projectCode": "https://gist.github.com/dynamitechetan/ef25eaa20acd25e6e3c0b79c76ca64e6"
                },
                {
                    "title": "SUSI.AI- Artificial Intelligence for Chat Bots",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5980840743927808/",
                    "content": "An open source personal assistant that makes interaction with smartphones easy. Providing SUSI with abilities to reply almost every query asked by the user. The goal of the my project is to enhance Susi server by implementing new features and improving existing features.\nBy the end of GSoC, I will implement",
                    "projectCode": "https://gist.github.com/saurabhjn76/7154623db054f8a1717b15731f840b8a"
                },
                {
                    "title": "Updating Phimp.me Image Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6337933451722752/",
                    "content": "Updating Phimp.me, Image application and getting it ready for publishing in stores by implementing features like Image Tuning, Adding Filters of multiple types, Improving user interface and flow of the application and enabling share to social networking sites, WordPress sites etc.",
                    "projectCode": "https://gist.github.com/vinaysajjanapu/e3b8367921a50846bc6012c4d9c39c12"
                },
                {
                    "title": "Yaydoc - An automated documentation generator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5902910172954624/",
                    "content": "The primary goal is to work on an automated documentation generator that will deploy documentation for various projects using Continuous Integrations. Further in development, a UI will be built in the generator. Pre-existing libraries and framework for documentation generator like Sphinx will be used.Along the development of the project, many issues will be solved and improvements will be made in the existing automation of various Fossasia projects including Loklak and SUSI.AI server.",
                    "projectCode": "https://gist.github.com/imujjwal96/3c794cc86f7d5467dc2f41ccee8788f3"
                },
                {
                    "title": "Yaydoc - Build and Push documentation easily",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5699365767217152/",
                    "content": "Yaydoc is a one stop solution for all documentation needs. It is intended to be similar to Continuous integration services such as Travis CI, Circle CI, etc to automate building of documentation and generation of a fully functioning website without much work from the end user.  Along the development of the project, many issues will be solved and improvements will be made in the existing automation of various Fossasia projects including Loklak and SUSI.AI server.",
                    "projectCode": "https://gist.github.com/pri22296/f473eaef93a20ef2a02082cf5f13166b"
                },
                {
                    "title": "Yaydoc - Build and Push documentation easily",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4556591202304000/",
                    "content": "Yaydoc is a one stop solution for all documentation needs. It is intended to be used in Continuous integration services such as Travis CI, Circle CI, etc to automate building of documentation and generation of a fully functioning website without much work from the end user. One of it’s primary aim is to minimize user configuration. This project aims to be as generic as possible so it should be usable under a lot of circumstances.",
                    "projectCode": "https://gist.github.com/sch00lb0y/86c1e67798da6583f97627fbd2f427ed"
                }
            ],
            "techStack": [
                "python",
                "java",
                "javascript",
                "android",
                "php"
            ]
        },
        {
            "title": "Free and Open Source Silicon Foundation",
            "orgLink": "http://fossi-foundation.org/",
            "projects": [
                {
                    "title": "EDSAC Museum on FPGA",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6470218444439552/",
                    "content": "Electronic Delay Storage Automatic Calculator (EDSAC) is a first generation British computer commissioned in 1949. It was built by Maurice Wilkes and his team at the University of Cambridge Mathematical Laboratory. EDSAC is the world’s first stored-program computer.The project’s goal is to reimagine the EDSAC on modern hardware, with the ultimate objective to make the historic computer accessible to and reproducible by a new generation of computer architects and engineers. Investigating the evolution of computing techniques gives architects and engineers context to modern concepts of computer architecture, organisation and design.The historic computer, complete with all its subsystems, will be replicated on an FPGA, using Verilog HDL, capable of accepting and executing all EDSAC Orders. To emulate the ancient I/O, various “I/O flavours” will be designed to interface with the FPGA board, via a standardised communication protocol. Users can choose, extend and even add new I/O flavours. An assembler utility will be built in Python, which users can utilise to debug and build their code for EDSAC, which can be then loaded onto the FPGA for execution.",
                    "projectCode": "https://hatimak.me/notes/gsoc-final/"
                },
                {
                    "title": "Integration of OpenRISC Linux Port into OpTiMSoC",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6425216313982976/",
                    "content": "Open Tiled Manycore System-on-Chip (OpTiMSoC) is an open-source framework that allows one to design and prototype manycore-based platforms on FPGA devices. In its current status, OpTiMSoC offers wide support for experimenting different architectural-level configurations. However, when comes to benchmarking the prototyped platform at software-level, current runtime libraries and operating systems still have to be improved. To address this problem, the goal of this project is integrate OpenRISC Linux Port into OpTiMSoC. To do so, a new manycore configuration with a Host Tile will be designed and implemented. The Host Tile will run OpenRISC Linux and will be able to communicate with Gzll kernels running on Computing Tiles via message-passing through the Network-on-Chip (NoC). Overall, the communication infrastructure will be exported to user-level through standard UNIX file system operations.",
                    "projectCode": "https://docs.google.com/document/d/e/2PACX-1vRV4cqkd5YSsOL3YfkgUP9jNG7DW7-_UgjQerCQCRFaiL9M8Yu6H15reaIEw5cxypOwSKXWs0eK3dX4/pub"
                },
                {
                    "title": "Quality metrics for projects listed on LibreCores.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5363226728464384/",
                    "content": "LibreCores.org lists free and open source \"IP Cores\" on the website for the community to view and use. Currently the website extracts the project readme and license and renders them on the project page, along with links to the project homepage and git repository.A user browsing for cores on LibreCores will be interested to know the quality of the project’s code so as to determine how useful the project will be to them. A part of such information can be inferred from the project's source code repository and activity in issue trackers. Also, these metrics may be put to use in search ranking in the future.In this project I worked on collecting and visualizing metrics about project quality of projects listed on LibreCores.org. These metrics include the frequency of code commits, activity in issue trackers, code quality, presence of documentation in code and contributors to the project.",
                    "projectCode": "https://amitosh.in/stories/2017/08/28/gsoc-2017-project-report/"
                },
                {
                    "title": "Updating Sodor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4540415818596352/",
                    "content": "Update riscv-sodor currently implemented in Chisel2 to Chisel3 along with that also update Privilege ISA Spec it complies to from 1.7 to 1.10 and then later port sodor to an FPGA using an AXI wrapper eventually allowing others to use Sodor (a librecore) in their projects. Updating sodor an educational microarchitecture to latest tools and specifications would help teach/convey latest standards.",
                    "projectCode": "https://gist.github.com/codelec/cb26f7e2184c12599178bb5b6585c805"
                }
            ],
            "techStack": [
                "verilog",
                "c",
                "vhdl",
                "python"
            ]
        },
        {
            "title": "FreeBSD",
            "orgLink": "https://www.FreeBSD.org/",
            "projects": [
                {
                    "title": "A better Mergesort for FreeBSD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6055951132000256/",
                    "content": "The FreeBSD implementation of mergesort is fundamentally flawed in that\nit cannot sort data smaller than half of the size of a pointer. I aim to develop a pointer width agnostic Mergesort remove this constraint. Moreover, I aim to improve the speed of Mergesort and ideally decrease its space requirements when run.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2017/Mergesort"
                },
                {
                    "title": "A New ZFS Boot Environment Management Library & Tool For FreeBSD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6117727257231360/",
                    "content": "The purpose of this project is to build a convenient framework for managing ZFS\nboot environments in FreeBSD. Currently, boot environments are managed\nmanually, or with scripts such as beadm.  The approach that this project\nwill take is to first create a boot environment library to offer simplified\nboot environment interaction to userspace applications (for example, TrueOS'\nSysAdm perhaps), and then write an application that provides users with a\ncommand that retains all of the features of beadm, with added\nfunctionality. Among the new features are: the ability to recursively create\nboot environments containing child datasets, the ability to activate an\nenvironment for the next boot only, and the ability to attach/detach a boot\nenvironment to a jail.",
                    "projectCode": "https://wiki.freebsd.org/NewZfsBootEnvMgmtLibAndTool"
                },
                {
                    "title": "Add support for usbdump file-format to wireshark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5910538034872320/",
                    "content": "The usbdump program is an useful tool for capturing USB traffics, but its output is not very convenient for further researching. Wireshark has a user-friendly GUI that can be useful in debugging raw packets. So in this proposal I'd like to add support for usbdump file-format to Wireshark.",
                    "projectCode": "https://github.com/jerrywossion/wireshark/blob/usbdump_dissector/README.GSoC.md"
                },
                {
                    "title": "NVMe controller emulator for bhyve",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6187999633080320/",
                    "content": "This project is implementation of disk controller emulator for bhyve. I'l implement is NVMe controller. NVMe is defined by Non-Volatile Memory Host Controller Interface Working Group. NVMe has some advantage compared with another host interface, for example, scalable, small command, large command buffer and so on. It can say with disk controller emulator for virtual machine too. Small command can reduce MMIO emulation, thus, we can obtain performance improvement.\n Bhyve has mechanism of pci emulation. I'll use this one for implementation of NVMe controller emulator. This is similar to pci ahci. The pci ahci controller emulator is already implemented in bhyve, therefore, I can reference this for my project. I divide task for finishing project. First step, I'l implement basically function, for example, minimum queues and commands. When I finish implementation of fundamental function, I'l take more advanced function. For example, namespace queue, shared queue, fused operation and so on.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2017/NVMeControllerEmulatorForBhyve"
                },
                {
                    "title": "Smoke testing of all base utilities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6309642233708544/",
                    "content": "Smoke testing is a set of light tests which are done for checking basic functionalities of a software to ascertain if the crucial functions work correctly.\nFreeBSD currently has a set of tests under src/tests which are run using the kyua framework. These tests need to be first installed individually before they can be used for testing. This proves problematic in cases when direct testing of some newly installed or updated utility/library has to be performed. It makes testing changes to libraries and utilities difficult as one would like to perform tests (e.g. to ensure a proper build environment) before proceeding for installation.\nThis project aims to develop a new test infrastructure and automation tool along with basic tests to verify if all the base utilities in FreeBSD are linked properly. The testing framework will ease the process of writing test cases which will be run in a completely automated and developer friendly manner without need for any prior installation. Once integrated, the tool will also facilitate further development of tests.",
                    "projectCode": "https://wiki.freebsd.org/SummerOfCode2017/SmokeTestingOfBaseUtilities"
                }
            ],
            "techStack": [
                "c/c++",
                "llvm",
                "shell",
                "make",
                "assembly"
            ]
        },
        {
            "title": "Freifunk",
            "orgLink": "https://freifunk.net",
            "projects": [
                {
                    "title": "Add MPTCP support in LEDE/OpenWRT trunk",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5379317957656576/",
                    "content": "Create an MPTCP supported OpenWRT/LEDE trunk and ensure its operation in a multipath Wi-Fi aggregation environment.  The trunk should contain the tooling for establish a SOCKS proxy for operating systems without MPTCP support.",
                    "projectCode": "https://spyff.github.io/mptcp/2017/08/27/transparent-mptcp-proxy/"
                },
                {
                    "title": "Extending LoxiGen and ONOS to enable SDN control of wireless switches via OpenFlow",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5150861667860480/",
                    "content": "LoxiGen is a tool by the Floodlight project to generate OpenFlow libraries for several programming languages including Java and C. The goal of this project is to extend LoxiGen to include messages for controlling wireless switches using OpenFlow.\nIt will include the necessary extensions to LoxiGen as well as a proof-of-concept implementation of the control channel. This encompasses an application for the ONOS SDN controller and an agent for the LEDE router operating system.SDN-enabled wireless switches offer comfortable centralized management of larger deployments and may provide the basis for more complex use-cases in the future such as network slicing and seamless mobility.",
                    "projectCode": "https://blog.freifunk.net/2017/08/26/gsoc-2017-final-milestone/"
                },
                {
                    "title": "geolocator (Software defined GPS)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6061657130270720/",
                    "content": "A dynamical and flexible geolocator, which should give a GPS position based on WiFi information for devices which doesn't have GPS hardware but WiFi. This concept considers 2 main components:\nthe web backend and a package for devices like LEDE (Linux Embedded Development Environment) routers. Especially for Gluon which is a popular framework in the Freifunk community it can be a nice feature to enhance the quality of public maps where Freufunk routers will be visible for the public. Even for geobase routing protocols in the field of the Embedded devices.",
                    "projectCode": "https://blog.freifunk.net/2017/08/29/geolocator-software-defined-gps-final-evaluation/"
                },
                {
                    "title": "Implementing Pop-Routing in OSPF",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6288671921668096/",
                    "content": "Prince is a network daemon that continuosly monitors the network topology  and  sets  the  timers  for  OLSRv2,  it  is  developed  in  C  and  we  are  currently deploying it in the Ninux community network in Florence. This year\nwe  want  to  implement  Pop-Routing  for  another  link-state  routing  protocol:  OSPF.  OSPF  is  the  state-of-the-art  interior  routing  protocol  for  wired networks  and  it  is  used  also  in  some  wireless  community  networks.  This\nproject consists in realizing a plug-in of the OSPF open source routing daemon (Quagga or Bird) that will:",
                    "projectCode": "https://blog.freifunk.net/2017/08/29/implementing-pop-routing-ospf-final-evaluation-updates/"
                },
                {
                    "title": "Improving nodewatcher data representation capability",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5924917853814784/",
                    "content": "Currently nodewatcher has very limited overview of used IP space without more precise division of existing and used subnets. This could be improved using  compact and colorful matrix with IP ranges and links to nodes. I would display data about used ips similar to the IP Census 2014, better tables and other data representation that would help explain the network structure, it would help in explaining the network and its statistics even to an uninformed observer. I would also update the look and functionality of other graphs and tables representing statistical data from nodewatcher",
                    "projectCode": "https://gist.github.com/rasovica/67bfbd2d5985a6ee2261f983ffbb7d68"
                },
                {
                    "title": "LibreMesh Attended Sysupgrade",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6718970065321984/",
                    "content": "Performing updates on routers is quite different from full Linux distribution. It's not sustainable to do release upgrade via a packet manager. Instead it's usually required to re-flash the system image. \nDepending on the installed packages an image rebuild may be to complex for regular users. A more convenient way is needed.This project will implement an \"image as a service\" server side which provides custom build images depending on installed packages. A notification in the web interface will notify about the new release.\nAfter image creation a one-click installation is offered within the web interface.The server side implementation will use established tools like LEDE's ImageBuilder to provide an generic approach for image creating. In this way the entire OpenWrt/LEDE community including several community-mesh firmware projects will benefit from that new update routine.",
                    "projectCode": "https://blog.freifunk.net/2017/08/25/attended-sysupgrade-final-evaluation-update/"
                },
                {
                    "title": "lime-webui: port to LuCI2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4560102203850752/",
                    "content": "Make an inventory of all LuCI components that LibreMesh uses and that will not be compatible with LuCI2. Analyze which dependencies must be replaced or rewritten and generate the views according to the new framework selected.",
                    "projectCode": "https://gist.github.com/gmarcos87/e77759463bed026884a279a55e243087"
                },
                {
                    "title": "netjsongraph.js: visualization of netjson data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4599822061404160/",
                    "content": "NetJSON is a great work attracted some interest from around the world, but there are a lot of defects. And I’m a front-end developer and now focus on Data Visualization, so I want to contribute to NetJSON. In my proposal, I come up with my idea and list some tasks and schedules.",
                    "projectCode": "https://blog.freifunk.net/2017/08/26/netjsongraph-js-google-summer-code-gsoc-2017-summary/"
                },
                {
                    "title": "OpenWRT/LEDE Configuration Management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4873250551103488/",
                    "content": "Improve the proof-of-conecpt version of a OpenWRT/LEDE configuration software.",
                    "projectCode": "https://blog.freifunk.net/2017/08/28/openwifi-gsoc-2017-final-report/"
                },
                {
                    "title": "Powquty Live-Log",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6727994328481792/",
                    "content": "PowQuty provides statistics from measurements taken by a USB oscilloscope. The statistics provide information about the power distribution network, but don't highlight the most important information. Power networks need to comply with EN50160, if this norm is violated, damage to connected devices is possible.\nTo avoid damage, powqutyd will log violations and notify users on occurrence.",
                    "projectCode": "https://blog.freifunk.net/2017/08/28/powquty-live-log-gsoc-2017-final-update/"
                },
                {
                    "title": "RetroShare Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5162289770528768/",
                    "content": "The aim of this proposal is to improve RetroShare incrementally during the summer in the following work lines:",
                    "projectCode": "https://gitlab.com/angesoc/RetroShare-GSoC-2017-Report/uploads/a393c3361ebbcdea4dc5a736f2ed8ec6/GSoC_2017_RetroShare_Report-RC3.pdf"
                },
                {
                    "title": "Spectrum Analyzer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6581109399748608/",
                    "content": "I believe that Community Networks' Operating Systems could use the Spectrum Analysis a lot to make better decisions on how they use the electromagnetic field wisely and efficiently.As of now, no Free OS has been using Spectrum Analysis, so they can't know whether the radios are being used efficiently or not.This module would allow all routers that use Atheros radios (the main radio manufaturer around) to see how is the spectrum and take better decisions on which channels they use.Deliverables",
                    "projectCode": "https://blog.freifunk.net/2017/08/29/gsoc-libremesh-spectrum-analyzer-summary/"
                }
            ],
            "techStack": [
                "lede/openwrt",
                "c",
                "html/css",
                "shell script",
                " javascript"
            ]
        },
        {
            "title": "Frescobaldi",
            "orgLink": "http://frescobaldi.org",
            "projects": [
                {
                    "title": "Improve Frescobaldi Export to MusicXML",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6407706269188096/",
                    "content": "Frescobaldi is an awesome software to write and manipulate music sheets using Lilypond notation. However, it fails in (properly) providing a really important feature: exporting to MusicXML. MusicXML notation is an important format adopted for many score writing programs, music OCR and sequencers. Currently, there is a simple support for exporting scores to MusicXML, but the coverage is limited and is not able to export complex projects or to understand different notations to describe the same musical score.",
                    "projectCode": "https://github.com/wbsoft/frescobaldi/wiki/GSoC-2017:-MusicXML-Export"
                },
                {
                    "title": "Proposal for Add Support for Version Control (Git)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6285598469914624/",
                    "content": "Inside this proposal, I introduce my project goals of GSoC 2017 and bring out a tentative timeline to achieve them.  To make sure I can finish it in this summer, I focus on the basic features.",
                    "projectCode": "https://github.com/wbsoft/frescobaldi/wiki/GSoC-2017:-Git-Support-(final-report)"
                }
            ],
            "techStack": [
                "python",
                "pyqt"
            ]
        },
        {
            "title": "Genes, Genomes and Variation",
            "orgLink": "http://www.ensembl.org",
            "projects": [
                {
                    "title": "Data file search API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4741862938116096/",
                    "content": "The Ensembl and Ensembl Genomes projects provide genomic data for over 40 thousands genomes. Considering even the increasing number of this data, it rapidly becomes harder for the end user to work directly with current FTP sites. This project aims to tackle this problem.",
                    "projectCode": "https://gist.github.com/stefanches7/79f167369b543ab9089dc03c26780bc3"
                },
                {
                    "title": "Enabling large file format support in Genoverse",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5774476155289600/",
                    "content": "The motive is enable support for large binary file formats in Genoverse, a genome browser that is written in javascript. This project would involve writing javascript parsers for  BigWig, BigBed and VCF file formats. Once this support is added, Genoverse could be adopted by Ensembl for use in their genome browser. This would let Ensembl to process the files on client side and reduce load on server, letting it handle the large amount of genome data Ensembl hosts.",
                    "projectCode": "https://github.com/EnsemblGSOC/sourabhr-gsoc-2017/blob/master/README.md"
                },
                {
                    "title": "Gene Visualisation in Mixed Reality with Microsoft HoloLens.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5936022491758592/",
                    "content": "This project would involve building an application allowing genes to be visualised in ‘mixed reality’ with the Microsoft HoloLens. Mixed reality (MR), sometimes referred to as hybrid reality, is the merging of real and virtual worlds to produce new environments and visualisations where physical objects co-exist and interact in real-time. HoloLens uses the real-world as a canvas on which to overlay virtual elements. \nThe prospective application will utilise the genetic data held by Ensembl, and bring genes and genomes to life by creating 3-D ‘holograms’ of them which viewers can interact with using natural gestures, voice commands, and eye movements. \nDepending on the success of the resulting application, there is scope to move the application to the Improbable Spatial OS platform (https://improbable.io/), which can be integrated with applications built with Unity. (Improbable is partnered with Google Cloud Platform to deliver their services). This platform allows developers to build simulations of virtual worlds in which concurrent players can interact. This would mean that the gene and genome visualisations could be viewed and interacted with online by many people at once.",
                    "projectCode": "https://github.com/EnsemblGSOC/GeneticDataVisualisationInMixedReality_RachelSlater"
                },
                {
                    "title": "Project Proposal Ensembl Track Database Mentors : Andy Yates, Stephen Trevanion",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6753041504010240/",
                    "content": "Ensembl is a data warehousing and data sets project which helps to analyse advanced biological data. Simple this application displays a 1 dimensional map of a chromosomal region and then the stacks annotations on top of it. So scientists can configure these images and add/remove tracks at will to highlight biological features of interest.This is a brief introduction on the project which is currently in use in Ensembl project. The main goal of this project is to develop a database to store above mentioned tracks and also implement a REST API to search the tracks. And also an administration panel to manage(search) all the tracks and all other inside scripting and all.  So I would like to divide this project into 3 main stages.Implementation of the database\nImplementation of the REST API\nDesign and develop front end.",
                    "projectCode": "https://github.com/EnsemblGSOC/chanaka-gsoc-2017"
                },
                {
                    "title": "Strain Differential",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6539939722297344/",
                    "content": "The objective of the project is to get a scrollable web view for gene variations after changing the reference strain of genome data in real time. The project uses backend data processing in Java and front end visualization using customized Genoverse - an HTML5 and JavaScript genome browser with the reference change algorithm implemented in Java.The Genome data from VCF file format is converted into optimized index files and stored which is later processed on demand using reference change algorithm, converted into standard gene visualization tracks and visualized using Genoverse.",
                    "projectCode": "https://github.com/ravaan/GSoC-Strain_Differential"
                }
            ],
            "techStack": [
                "mysql",
                "perl",
                "javascript"
            ]
        },
        {
            "title": "GENIVI Development Platform",
            "orgLink": "https://at.projects.genivi.org/wiki/pages/viewpage.action?pageId=11567210",
            "projects": [],
            "techStack": [
                "linux",
                "c",
                "yocto",
                "c++",
                "qt"
            ]
        },
        {
            "title": "Gentoo Foundation",
            "orgLink": "http://www.gentoo.org",
            "projects": [
                {
                    "title": "A utility to manage packages in overlays",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5494929350459392/",
                    "content": "A utility is proposed to semi-automatically import ebuilds with deps from various sources (with subsequent management and updates) atomically to a local repository, maintaining changesets.",
                    "projectCode": "https://github.com/Hummer12007/pomu"
                },
                {
                    "title": "Gentoo Stateless Environment",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5364183029776384/",
                    "content": "A stateless system based on Gentoo, which aims on making the maintenance of multiple machines easier, improve stability and usability on environments like Research or University computer labs.The project will attempt to cover two methods of mounting the system and two sync/upgrade styles for local systems. In addition to that, it will attempt porting the project over ARM architecture, to support Raspberry Pi machines, which are used on labs very often, to increase the productivity by minimizing resources required, making them available for computational work.",
                    "projectCode": "https://github.com/ulfox/GSE"
                },
                {
                    "title": "kernel live patch - automatically check and live patching the Kernel",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5844756315766784/",
                    "content": "I propose an utility to semi-automatically check the kernel for known security vulnerabilities and live patch the kernel if there is a security risk found.",
                    "projectCode": "https://wiki.gentoo.org/wiki/Elivepatch"
                }
            ],
            "techStack": [
                "shell",
                "c/c++",
                "python",
                "linux"
            ]
        },
        {
            "title": "Git",
            "orgLink": "http://git-scm.com/",
            "projects": [
                {
                    "title": "Incremental Rewrite of git-submodules",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5434523185577984/",
                    "content": "To manage the external dependencies, git submodule commands have been\nfrequently used by the developers in their projects. But as most of the\nsubcommands of git submodule are still written in shell scripts (All, but\ngit submodule init), my project intends to convert the subcommands into\nC code, thus making them builtins. This will increase Git's portability\nand hence the efficiency of working with the git-submodule commands.\nThe function cmd_init has been ported to its built-in successfully and\nsimilar operation needs to be done to the remaining functions.",
                    "projectCode": "https://drive.google.com/drive/folders/0B1HuYKpJFTqWYk5vcmpaa2JJa28"
                }
            ],
            "techStack": [
                "c",
                " shell script",
                " git"
            ]
        },
        {
            "title": "Global Alliance for Genomics and Health",
            "orgLink": "https://genomicsandhealth.org/",
            "projects": [
                {
                    "title": "Improve Structural Variants Support in VCF Validator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5232335049981952/",
                    "content": "The VCF (Variant Call Format) is a format for text files, which is generally stored in a compressed manner to make the data retrieval of variants fast. The data which is redundant is not stored, only the variations are stored. VCF files are used to store all variant types which includes single nucleotide polymorphism (SNP) in a specific position of the genome, short insertions and deletions (INDEL) and structural variants (SV). \nVCF-validator includes various checks to ensure that the VCF file is consistent. It is based on a formal grammar and performs lexical, syntactic, and semantic analysis of the VCF file. It also includes a tool called VCF-debugulator which fixes errors such as the presence of duplicate variants automatically. \nSNPs and INDELs are fully supported in VCF-validator, but the support for SVs is still limited. The aim of this project is to improve the support for structural variants in the validator and the debugulator.",
                    "projectCode": "https://gist.github.com/Anishka0107/75d0f6c13ebbe22b1643689683c25a54"
                },
                {
                    "title": "VCF Streaming API Server and Specification",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5312337674240000/",
                    "content": "“Htsget retrieval API spec” [1] is a specification by the Global Alliance for Genomics and Health (GA4GH) for genomics bulk data transfers. This is a Streaming API that allows users to query remote services for regions of interest of genomic data, instead of having to download gigabytes of data and filter afterwards. The results are retrieved in formats that can be consumed by widely used bioinformatics tools. The specification currently supports BAM and CRAM formats.\nVariant Call Format (VCF) is the standard for describing genomic variation in bioinformatics. The goal of the project is to extend the specification to support the VCF format and provide an implementation.",
                    "projectCode": "https://gist.github.com/amilamanoj/a3827d91e9915569ee97d9802e394839"
                }
            ],
            "techStack": [
                " python",
                " java",
                "sql",
                "c++",
                "mongodb"
            ]
        },
        {
            "title": "GNOME",
            "orgLink": "https://www.gnome.org/",
            "projects": [
                {
                    "title": "Code Search for GNOME Builder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6016025116016640/",
                    "content": "Goal of this project is to implement fuzzy search of symbols in the project and improve Go to Definition in GNOME Builder.\nUsing fuzzy search we can search for declarations or definitions of symbols whose name matches fuzzily to given query in search bar of GNOME Builder.\nCurrently using Go to Definition we can go to definition which is in current file or file linked to current file. This project aims at improving Go to Definition so that we can jump from definition or declaration to its reference which can be in any where in the project.",
                    "projectCode": "https://gist.github.com/anoopchandu/e2404de0d9abd427434d1369fe0a0b01"
                },
                {
                    "title": "Documentation Cards for GNOME Builder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5056319773999104/",
                    "content": "This project helps GNOME developers find documentation while they are writing code without having to switch to searching documentation on Google or Develop. Think of it as a \"twitter card\" or \"facebook card\" describing a user, but instead for code and APIs. By clicking on a piece of code, the developer can see the documentation, or possibly even commentary about that API.",
                    "projectCode": "https://wiki.gnome.org/Outreach/SummerOfCode/2017/Projects/LucieCharvat_DocCards"
                },
                {
                    "title": "Gamepads and Keyboard Configuration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5774983498301440/",
                    "content": "Games supports many gamepads but does not allow the users to configure them.The project has been divided into three major phases :",
                    "projectCode": "https://theawless.github.io/GSoC-Final-Report/"
                },
                {
                    "title": "GNOME Calendar: Add support to recurrent events",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4732513062748160/",
                    "content": "GNOME Calendar doesn't have support for recurrent events as of version 3.24. This project intends to add support for recurrent events (repeating events) in GNOME Calendar.",
                    "projectCode": "https://wiki.gnome.org/Outreach/SummerOfCode/2017/Projects/YashSingh_Calendar_AddRecurrentEvents"
                },
                {
                    "title": "GNOME Disks: Resize and repair filesystems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5301579586469888/",
                    "content": "Disks has only seen minor development recently and needs support for resizing and reparing filesystems in order to fully replace GParted which runs only as root and not under Wayland. A good part, but not all, for this is already covered in libblockdev (which UDisks started to link to), and support for it has to be worked out as D-Bus API, so other projects using UDisks might also benefit. The UI for these features in Disks should enable unexperienced users to safely accomplish their task.",
                    "projectCode": "https://wiki.gnome.org/Outreach/SummerOfCode/2017/Projects/KaiLueke_Disks"
                },
                {
                    "title": "Gnome-shell UX Tweaks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5015312499998720/",
                    "content": "The interface of Gnome-shell is elegant, intuitive and very user-friendly. Proof for this is the fact that GNOME is the most popular Linux Desktop Environment. Constant adaptation and improvement are definitely the key to success, thus I believe that some tweaks added to the UI of Gnome-shell will provide useful functionality while avoiding to overcrowd the interface.",
                    "projectCode": "https://gist.github.com/raresvis/4992b9e816cee4c0e573d4a05723e44e"
                },
                {
                    "title": "Implement a Plugin System in Pitivi and a set of plugins",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6708954470023168/",
                    "content": "The goal of this proposal is to implement a Plugin System in Pitivi and a set of at least three plugins: the “Developer Console”, the “Timeline Markers” and “Automatic Transitions”. The first one is a tool for Pitivi developers and Pitivi’s plugins developers that will allow them to do quick experiments at runtime by having access to all the internal objects of Pitivi saving time to them. The second plugin gives the user a sense of time, by drawing vertical lines each ten seconds (or other period of time). For example, it will be useful when the user zooms in and wants to move along the timeline, because Pitivi will display guidelines. Finally, the third one is a plugin that avoid the tedious process of dragging video (or image) clips over other video (or image) clips in order to create a transition when there are a very large set of this clips. This plugin will save time to users who just want to import a set of images (of last vacation trip for example) to create a video as fast as possible.",
                    "projectCode": "https://cfoch.github.io/tech/2017/08/28/wrap-up-and-code-submission.html"
                },
                {
                    "title": "Improving the out-of-the-box cloud experience with Nextcloud and GNOME",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5023454147379200/",
                    "content": "The integration of privacy-aware cloud services is already quite good inside the GNOME desktop environment as gnome-online-services already provides file browsing as well as calendar/contact sync with existing GNOME apps. Nevertheless the integration of the Nextcloud desktop client for file synchronization still has lot of room for improvement.By now the client demands that the user already has an account for a Nextcloud instance. Providing the setup wizard with a simple list of hosting providers will allow users to find a provider they trust and register an account from within the client.The integration with the GNOME desktop environment will be improved by extending the existing file context menu and file icon overlays. Furthermore basic integration the the cloud providers API proposed by Carlos Soriano will be added.Gnome as well as KDE both provide a simple single sign-on service that allows users to enter their\ncredentials for web services like Nextcloud (gnome-online-accounts and accounts-sso). The Nextcloud client should make use of the accounts created there as well as add accounts when setting them up in the client.",
                    "projectCode": "https://blog.juliushaertl.de/index.php/2017/08/28/gsoc-final-report/"
                },
                {
                    "title": "Improving word completion in gnome-builder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5778459200585728/",
                    "content": "Currently, Builder relies on “Word Completion” from GtkSourceView. This provides completion of words used within the current, or other open, documents. The project will require to implement a new Word Completion provider that can take into account the distance of the word from the cursor position so that words near the cursor are in predictable locations.Ideally, this would look similar to Vim’s implementation of Word Completion. Control+P (in Vim mode) would take us to the closest match above the current word. Control+N would take us to the closest match after the cursor.",
                    "projectCode": "http://bugzilla.gnome.org/show_bug.cgi?id=786151"
                },
                {
                    "title": "Keysign: Alternative Key transports",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6637442190802944/",
                    "content": "Currently, GNOME Keysign transfers keys via a wireless network. This requirement can be challenging in certain situations where the network does not allow clients to connect to each other. The idea now is to use, e.g. Bluetooth or Magic Wormhole to transfer a key. This project encompasses the following tasks: (i) implement a Bluetooth and wormhole sender and receiver, (ii) ensure that the data has not been tampered with, and (iii) provide enough details in error cases so that the user can recover from them.",
                    "projectCode": "https://gist.github.com/RyuzakiKK/aa2697bac793f0e5031b7f5c25c96ee5"
                },
                {
                    "title": "Mutter Wayland without X11",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5769800546516992/",
                    "content": "Currently, Mutter acts as both Wayland compositor and an X Window Manager. Even under Wayland session, X11 support is required to be present, which makes XWayland a hard dependency. The goal is to remove the hard dependency on X11/XWayland when running under Wayland, making Mutter able to act as Wayland-only compositor.",
                    "projectCode": "https://armin-gnome.blogspot.ba/2017/08/the-gsoc-wrap-up.html"
                },
                {
                    "title": "Nautilus I/O Operation Management Rework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6188743467728896/",
                    "content": "Currently, I/O operations are largely unmanaged, allowing a large number of them to be running concurrently, which increases the amount of random I/O performed by the disk. That can lead to poor performance. While GTask rate-limits the tasks, it cannot be assumed that GLib will always do that and thus Nautilus would benefit from having a mechanism to control the execution of its tasks. That, along with rewriting the operations in a more object-oriented manner will result in better performance and maintainability.",
                    "projectCode": "https://drive.google.com/open?id=0BwtF_9PyC18ReGQtZHcxd19FTHc"
                },
                {
                    "title": "Nautilus: Improve Search",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6591117210419200/",
                    "content": "During the last releases, the search in Nautilus received several nice improvements. Though, there are still some improvements left to be made which would make Nautilus provide a much better search experience.At the moment, the search of Nautilus makes little use of all the power Tracker is capable of. The ultimate goal of this project is to make use of more of what Tracker provides so more search criteria will be available in order for the search results to provide more accurate results for it’s users. Besides this, other goals of this project are to fix the most important search bugs, work on performance, it’s debuggability and testing.",
                    "projectCode": "https://docs.google.com/document/d/1LwRH4K2vRr4FDf5BzuLWOm1bRiDimCdvf944fnpMfOU/edit?usp=sharing"
                },
                {
                    "title": "Pitivi - UI for the Ken-Burns effect",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6286742004957184/",
                    "content": "The Ken Burns effect is a type of panning and zooming effect used in video production from still imagery. This project aims to provide a way to simulate this effect in Pitivi by allowing users to easily manipulate the placement and zoom of their clips in time.",
                    "projectCode": "https://gist.github.com/stefanzzz22/260fa2be10bccd7404af87152ecd5a88"
                },
                {
                    "title": "Pitivi: Color correction interface using three chromatic wheels",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5230248232747008/",
                    "content": "Currently in Pitivi, the UI for configuring an effect applied to a clip is generated dynamically.  Also, as of now we simply use a Numeric widget to specify RGB values of color correction effects.",
                    "projectCode": "https://suhas2go.github.io/gnome/pitivi/2017/08/28/GSoCFinalReport/"
                },
                {
                    "title": "Rustify GJS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5649393554292736/",
                    "content": "The research and implementation of Rust language in to GJS to help reduce or eliminate memory leaks and increase memory safety.",
                    "projectCode": "https://luke-nukem.gitlab.io/gsoc-2017.html"
                },
                {
                    "title": "Search and User Interface Improvements in GNOME Logs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4874575011643392/",
                    "content": "In GSoC 2016, search functionality in GNOME Logs was improved in many ways. Now, further work to be done in GNOME Logs includes seamless integration with other GNOME applications like GNOME Shell and improve the robustness of GNOME Logs by writing a complete test suite. The ultimate goal of my proposal includes implementing the following mentioned features:1) To improve the existing search back end in GNOME Logs.\n2) To add an option to traverse the systemd journal in a reverse direction in a given boot\n3) To implement log entries compression for multiple redundant journal entries in the UI\n4) To write a complete test suite for the same so that implemented functionality is validated accordingly.\n5) To write a shell search provider module for GNOME Logs which can expose search results to GNOME Shell.",
                    "projectCode": "https://docs.google.com/document/d/1W-od0gOeVrBdMD8qkTLTj6cYGn6B85URZq8tLZ2Nww8/edit?usp=sharing"
                },
                {
                    "title": "Sharing of shopping list in Recipes App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5304812891537408/",
                    "content": "Implementation of sending the shopping list from Recipes to TODOist (the mobile app).  The purpose of sharing the shopping list is the ease of accessing the list of required ingredients while actual shopping. Here is the link to it : \n        https://wiki.gnome.org/Apps/Recipes/Contributing/Sharing",
                    "projectCode": "http://www.ektanandwani.com/2017/08/24/recipes-wrapping-up-gsoc-17/"
                },
                {
                    "title": "To Do: Todoist integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5703355523399680/",
                    "content": "The project intends to integrate Todoist with GNOME To Do allowing the users to manage their Todoist account using GNOME To Do. Implementation of Todoist will require a OAuth2 authentication and implementation of Todoist Provider that manages loading/editing tasks/ task lists and saving changes to Todoist Server. We would use GOA's already implemented OAuth2 authentication, by adding a Todoist Provider in GOA which will manage users login and store the access tokens. The Todoist plugin inside To DO will make use of the todoist v7 API to make sync calls for process like loading tasks,lists or updating tasks etc. Todoist server responds to every request with a JSON response. The Todoist provider would check the JSON response for error and if correct process it to retrieve requested data.\nAt the end of the project we will have a working Todoist plugin which will be a nice addition to To Do. Beside this, the project will take care of some feature implementations currently being used in Todoist and also general bug-fixing if time permits.",
                    "projectCode": "https://wiki.gnome.org/Outreach/SummerOfCode/2017/Projects/RohitKaushik_ToDo_TodoistPlugin"
                }
            ],
            "techStack": [
                "c",
                "python",
                "gtk+",
                " javascript",
                "gobject"
            ]
        },
        {
            "title": "GNSS-SDR",
            "orgLink": "http://gnss-sdr.org",
            "projects": [
                {
                    "title": "Expanding the GNSS-SDR receiver to GLONASS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5357969688494080/",
                    "content": "Expanding the receiver to GLONASS signals will help the community to research and implement new algorithms for multi-constellation and new estimation filters for GNSS solutions",
                    "projectCode": "https://gist.github.com/Gastd/f46a2bd78dcc11984e69eb7cbc49f8a4"
                },
                {
                    "title": "Expanding the receiver to GLONASS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6138210627354624/",
                    "content": "Add code to support GLONASS processing in the GNSS-SDR platform",
                    "projectCode": "https://gist.github.com/dmiralles2009/0d2d0402d0408b7d7bc0769ba9515369"
                },
                {
                    "title": "Graphical User Interface for GNSS-SDR configuration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6610212098146304/",
                    "content": "A proposal for developing GUI for generating configuration files for GNSS-SDR receiver. The project will deliver a friendly and intuitive GUI for the users.",
                    "projectCode": "https://github.com/UHaider/gnss_sdr_gui"
                },
                {
                    "title": "Pulsed and continuous wave radio frequency interferences mitigation: application to GNSS-SDR in low Signal to Noise ratio scenarios",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5347588081451008/",
                    "content": "During last decades Global Navigation Satellite Systems (GNSS) have increasingly become a fundamental tool for high accuracy positioning purposes. For this reason, it is crucial to guarantee a certain high quality of service (QoS). This QoS may be degraded by the presence of spurious undesirable signals coming from jammers that could degrade partially (or totally) the bandwidth of the desired GNSS signal.\nBasically, two kinds of Radio Frequency Interferences (RFI) can disturb a GNSS signal. Each one has its own characteristic spectral feature and a classification based on that is described as following:\n•    Continuous wave interferences (CWI): a perturbation of a relative small part of the spectrum and can be mitigated by means of a notch filter.\n•    Short pulsed interferences: with an instantaneous bandwidth that usually covers the entire GNSS band and can be partially removed by means of a blanking filter. \nTwo interference detection and mitigation algorithms will be evaluated in order to implement a new Signal conditioner block into GNSS-SDR. These algorithms will be coded in C++",
                    "projectCode": "https://gnsssdrinterferencemitigationgsoc2017.wordpress.com"
                },
                {
                    "title": "Robust KF-based Tracking Techniques for Advanced GNSS Receivers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6261573228167168/",
                    "content": "The currently available tracking technique in GNSS-SDR includes three parameters(code phase, Doppler shift, carrier phase). The GNSS-SDR technique however has certain limitations regarding the filtering of weak signals.The project will be executed using GNSS-SDR along with the equations of KF filter. Another parameter will be added to the existing tracking method and it will be tested using sample and raw signals. The results are compared with those obtained from traditional techniques.",
                    "projectCode": "https://trackinggsoc.wordpress.com/"
                }
            ],
            "techStack": [
                "c/c++",
                "c++",
                "c++11",
                "c++14",
                "gnss"
            ]
        },
        {
            "title": "GNU Octave",
            "orgLink": "http://www.octave.org",
            "projects": [
                {
                    "title": "Boolean operations with polygons on Octave",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4816941248151552/",
                    "content": "I got to know about Octave last year only when I started Machine Learning course of Andrew Ng online. Till then , I only knew abut Matlab. But when I first used Octave, I found that it can do almost everything which Matlab can (as far as I have used).I was pretty happy to know that there is such a free open source software, so when I found a project in this year's GSoC on Octave, I was pretty interested to contribute to the project and make Octave more better, as far as I can.\nIn this task, there is something which will help me use geometrical skills as well as development skills. That''s why I have chosen this project.I read about the Clipper Library which is to be used for this project.  I wrote a function for Union of two Polygons for Octave by using Clipper Library. It was written in C++.\nAll in all, I am pretty excited and looking forward to this project.",
                    "projectCode": "https://github.com/piyush-jain1/GSoC17OctaveGeometry"
                },
                {
                    "title": "GSoC 2017: Make specfuns special again",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5281806362345472/",
                    "content": "Traditionally, problem solving environments like Octave provide simple interfaces to numerical linear algebra, special function evaluation, root finding, and other tools. Special functions (such as Bessel functions, exponential integrals, LambertW, etc) are expected by users to \"just work\". But many of Octave's special functions could be improved to improve their numerical accuracy. Generally a user might expect these to be accurate to full 15 digits. Software testing is important to Octave; this project would improve the tests of many special functions, in particular by comparing the output with slow-but-accurate symbolic computations.",
                    "projectCode": "http://gsocspecfun.blogspot.it/2017/08/final-resume.html"
                },
                {
                    "title": "Improving the interval package - N-dimensional vectors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5549056675807232/",
                    "content": "I'm interested in improving the interval package for Octave by implementing support for N-dimensional vectors. With this I hope to learn more about Octave and its community with a later goal to create my own package for Taylor arithmetic.",
                    "projectCode": "https://gsocinterval.blogspot.se/2017/08/final-report.html"
                },
                {
                    "title": "Neural Networks package: Convolutional Neural Networks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5187659337039872/",
                    "content": "Neural Networks are one of the most breakthrough techniques nowadays. The goal of this project is to perform a radical update to Octave nnet package in order to keep pace with the times. Other open-source projects will be used, like Tensorflow. This will allow to guarantee a continuous updating on neural networks improvement and leading to a greater focus on Octave interface.\nThe tendency to open-researching is strong in the deep learning field, where even the biggest companies release their frameworks and open their code. In this sense, a project on the Neural Networks package, where Octave can coexist with Tensorflow, let us exploit their synergy and reach fast consistent goals.",
                    "projectCode": "https://gsocnnet.blogspot.com/2017/08/summary-of-work-done-during-gsoc.html"
                }
            ],
            "techStack": [
                "c++",
                "hg"
            ]
        },
        {
            "title": "GNU Radio",
            "orgLink": "https://gnuradio.org/",
            "projects": [
                {
                    "title": "A DAB/DAB+ transceiver app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5191955914948608/",
                    "content": "The project ”DAB/DAB+ transceiver app” aims to produce a DAB/DAB+ tranceiver app that is capable of the transmission and reception of audio and data according to the DAB/DAB+ standard. It builds on the existing GNU Radio Out-Of-Tree module gr-dab. The goals for this project are the completion of the gr-dab module and the creation of a full-fleshed application, including a graphical user front end that is capable of transmitting and receiving DAB/DAB+.",
                    "projectCode": "https://github.com/kit-cel/gr-dab/"
                },
                {
                    "title": "gr-bokehgui: A Web based GUI for GNU Radio applications",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5129007263645696/",
                    "content": "Currently, GNU Radio works on a local system (many times connected to a hardware). The display of GNU Radio is based on QT GUI framework. In addition to that, various input widgets of QT framework are used to interact with the ongoing simulations. The QT framework constrains the input/output operations from the system running the simulation.In software development, the new paradigm is moving towards web based systems because of simple usability for the user and wide range of available frameworks for developers. In this project, an OOT module for web-based GUI is proposed for GNU Radio. The primary focus of the project will be a display mechanism which will be used to interact with ongoing simulation based on the parameters provided through interactive HTML inputs.In the proposal, the focus is on the flow of the final OOT module and implementation details. The details of minute tasks like the arrangement of plots & widgets inside the output, the color, and labeling of the plots etc. have been intentionally left out but will be implemented taking gr-qtgui module as a guideline.",
                    "projectCode": "https://github.com/kartikp1995/gr-bokehgui/blob/master/README.md"
                }
            ],
            "techStack": [
                "software defined radio",
                "c++",
                "python",
                "dsp"
            ]
        },
        {
            "title": "Green Navigation",
            "orgLink": "http://greennav.io",
            "projects": [
                {
                    "title": "A Medication for e-range anxiety.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5535334657949696/",
                    "content": "The primary purpose of this project is to encourage the use of electric cars by taking a giant step towards addressing the range anxiety problem faced by all potential buyers. Electric cars are a great alternative to the traditional combustion engines and are known to run on electrically powered engines which reduces emissions upto cent percent. This project aims to provide a well sketched road map that can safely determine the distances upto which the car can travel without having to recharge in the midst of its on-going journey.",
                    "projectCode": "http://greennav.io/news/2017-08-23-gsoc2017-range-anxiety-wp/"
                },
                {
                    "title": "Prediction of Energy Consumption of Electric Vehicles",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6393481605939200/",
                    "content": "This project aims to develop a machine learning approach to predict the energy consumption of an electric vehicle given information about the intended route and associated terrain information such as altitude. This project will also however, have to find an appropriate dataset from which the models can be learnt and settle nuances such as finding an appropriate sampling rate for the time series data.\nAdditionally, the possibility of not finding the desired type or the adequate amount of data will also have to be accommodated, in which case a host of simulation approaches might have to be looked into. Eventually, this project aims to allow users to predict energy consumption after having proposed routes and hence may also be used to estimate operating ranges, thus helping alleviate range-anxiety.",
                    "projectCode": "http://greennav.io/news/2017-08-23-gsoc2017-predicting-energy-consumption-wp/"
                },
                {
                    "title": "Routing server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5829216855654400/",
                    "content": "GreenNav project requires fast and reliable server that supports computations optimal routing via efficient algorithms. I'm going to implement RESTful server that communicates with the persistence layer for getting coordinates and effectively computes optimal way to the destination.",
                    "projectCode": "http://greennav.io/news/2017-08-23-gsoc2017-routing-server-wp/"
                },
                {
                    "title": "Smart Range Viewer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5030862697529344/",
                    "content": "Using ReactJS and Javascript for computation and visualisation of vehicle range to ease range anxiety among electric vehicle drivers.",
                    "projectCode": "http://greennav.io/news/2017-08-23-gsoc2017-smart-range-viewer-wp/"
                },
                {
                    "title": "Traffic avoidance and prediction of energy consumption of electric vehicles with real time notification system",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4738629633048576/",
                    "content": "The 21st century ushered with it the age of smart and predictive technology with the optimum use of resources to make life easier. In accordance with this trend, the proposal is to leverage machine learning algorithms for improved traffic avoidance, determine the energy consumption of the electric vehicles, simulation of driving, visualisation of the route taken by a car, route prediction and providing a smart notification system. \nThe Fuel_prediction module has functionalities including predicting the energy consumption, the amount of CO2 that is saved from being emitted to the environment and the recharge time required for the journey.\nThe Route_option module focuses on leveraging human knowledge to get the best route for traffic avoidance.\nThe Trajectory module shows the visualization of the route a car takes.\nThe Route_predictor helps to predict the route that the car will take based on the previous history.\nThe Driving_simulator module is a simulator for vehicles to learn how to drive themselves.\nThe Smart_notifcation module helps in filtering the notifications in order to avoid spamming the user.",
                    "projectCode": "http://greennav.io/news/2017-08-23-gsoc2017-traffic-avoidance-wp/"
                }
            ],
            "techStack": [
                "javascript",
                "java",
                "react",
                "apache spark",
                "tensorflow"
            ]
        },
        {
            "title": "Haiku",
            "orgLink": "http://www.haiku-os.org",
            "projects": [
                {
                    "title": "Calendar Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6601098714415104/",
                    "content": "Develop a native calendar application for Haiku.",
                    "projectCode": "https://www.haiku-os.org/blog/akshayagarwal007/2017-08-28_gsoc_2017_calendar_application_final_report/"
                },
                {
                    "title": "Porting the Swift Programming Language to Haiku",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5199222731177984/",
                    "content": "Swift is a general purpose, multi-paradigm modern programming language which focuses on performance, safety and modern software design patterns aiming to be a C/C++ and Objective-C alternative. It was recently open-sourced by Apple and aims to make Swift portable with various OSes by leveraging LLVM for its compiler internals and POSIX for maintaining portability.Haiku has support for other modern languages with similar technologies but it still misses out on being officially supported by them and as new releases come by, maintenance becomes very difficult as some use platform specific features.  With Swift 3's main focus on portability and with Haiku being partially POSIX compliant, this serves as a opportunity to add Haiku as a supported platform for both Swift 3 and Swift 4 and to then merge these changes upstream.",
                    "projectCode": "https://www.haiku-os.org/blog/return0e/2017-08-28_gsoc_2017_porting_swift_to_haiku_-_final_report"
                },
                {
                    "title": "Preferences GUI Refactoring",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4535466271440896/",
                    "content": "Haiku is an operating system aimed at mainstream desktop users, it currently lacks a centralized preferences panel. This project proposes development of a shared control panel for all the preferences with its respective quick settings, and also a search bar for quick filter based on keywords.",
                    "projectCode": "https://www.haiku-os.org/blog/anirudhm/2017-08-27_gsoc_2017_preferences_gui_refactoring_-_final_report/"
                },
                {
                    "title": "TCP optimization and fine tuning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4982657058340864/",
                    "content": "TCP/IP is the most widely implemented, non-vendor-specific Internet protocol suite in use today. TCP (Transmission Control Protocol) is at the heart of million of network applications ranging all the way from simple file sharing apps to social media to complex distributed cloud systems. One of the main challenges of an operating system is to get their tcp implementation running at maximum efficiency.This project aims at improvising the current tcp implementation of Haiku to adhere to the recommendations suggested by rfc 7414 and any other rfcs mentioned therein. To keep the implementation robust and fault tolerant at all times is of absolute priority.",
                    "projectCode": "https://www.haiku-os.org/blog/a-star/2017-08-26_gsoc_2017_-_tcp_optimization_and_fine_tuning_final_report/"
                },
                {
                    "title": "Write supports for BTRFS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6290091542577152/",
                    "content": "Btrfs (B-tree filesystem) is a filesystem uses Btrees as its main on-disk data structure. It is based on Copy-on-Write (CoW) principle which means it does copy only when a write request is sent or a modification is necessary. Btree is used most in filesystem, database system. In Haiku, Btrfs is currently support read-only, the codebase only shows the basic structure, read operations, it lacks of core tree manipulation code, write supports, and other features.\nThe project ideas request supporting write features for Btrfs. This will be accomplished in the following steps: Setting up userland friendly development mode for Btrfs, implementing tree operations (splittings, CoW, etc), adding more Btrfs structures if necessary, implementing write-feature functions.",
                    "projectCode": "https://www.haiku-os.org/blog/hyche/2017-08-25_gsoc_2017_-_btrfs_write_supports_third_coding_period_-_final_recap/"
                }
            ],
            "techStack": [
                "c++",
                "posix"
            ]
        },
        {
            "title": "Homebrew",
            "orgLink": "https://brew.sh",
            "projects": [
                {
                    "title": "Increasing test coverage for Brew",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4951665782292480/",
                    "content": "The impact this project has, is huge and being able to make such an impact and also exponentiate my growth graph attracted me towards this project.I would learn Ruby before and during the bonding period.\nSpend an equivalent of 40 hours per week for 13 weeks time on increasing the test coverage for BrewI'm a junior year student at the University of Delhi. I was an intern with Mozilla for the round 13 of Outreachy. I'm an avid open source enthusiast. My internship and open source contributions have given me a lot of experience in writing unit tests.",
                    "projectCode": "https://medium.com/@mansimarkaur.mks/writing-tests-for-brew-during-gsoc-2017-9f61995d037c"
                },
                {
                    "title": "Port brew audit rules to RuboCop",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5140405569978368/",
                    "content": "brew audit command now runs RuboCop custom cops to enforce and automatically fix Homebrew coding style guidelines within supported editors and using the rubocop tool. The objectives of this project are to better integrate RuboCop into Homebrew core and also developing a DSL to make it easier for maintainers to add custom cops as required and migrating all possible brew audit rules (e.g. those using regex matches) to use RuboCop rather than custom brew audit logic.",
                    "projectCode": "https://gauthamgoli.github.io/blog/2017/08/16/GSoC-report.html"
                }
            ],
            "techStack": [
                "ruby",
                "git",
                "github",
                "bash",
                "macos"
            ]
        },
        {
            "title": "illumos.org",
            "orgLink": "http://illumos.org",
            "projects": [],
            "techStack": [
                "dtrace",
                "illumos",
                "unix",
                "openzfs",
                "zfs"
            ]
        },
        {
            "title": "INCF",
            "orgLink": "http://www.incf.org",
            "projects": [
                {
                    "title": "Active Segmentation Toolbox for ImageJ",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5293785697222656/",
                    "content": "The major goal of this project is to Extend the work of making plugin which was developed in last year.\nThis year we need to come up with some current architecture change to incorporate learning from entire images which can be further used to image classification. Other then this we need to add some additional features selection to the existing platform  and change the current GUI according to this.",
                    "projectCode": "https://github.com/mukesh14149/GOOGLESUMMERCODE2016/commits/master?author=mukesh14149"
                },
                {
                    "title": "Adding MPI support to GeNN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5271063575396352/",
                    "content": "This proposal is for adding MPI support to GeNN. GeNN is known as a GPU-enhanced Neuronal Network simulation environment based on code generation for Nvidia CUDA. However, the limitation of GeNN is that it can only support running on a single GPU or a single shared-memory machine. This proposal is to plan for expanding GeNN to multiple machine clusters. MPI is common message passing interface and infrastructure to communicate across multiple hosts and it is natural to expand GeNN with MPI interface to achieve parallel execution on multiple hosts. The key point of this project is to balance GeNN computation simulations across MPI hierarchy between hosts and block/thread on individual GPU. Furthermore, This proposal shows potential tuning directions basing on MPI-CUDA hierarchy. To bridge the gap between the destination and implementation, this proposal also describes  feasible stages for the MPI-GeNN project and narrates the candidate’s motivation, background and progressive approach. Curriculum vitae is attached to the last pages for reference. The candidate is welcome to any questions, comments or suggestions through any of the contacts, such as email, telephone, and skype.",
                    "projectCode": "https://github.com/genn-team/genn/tree/MPI_support"
                },
                {
                    "title": "Conversion of a large scale hippocampal network model to NeuroML",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4673827971792896/",
                    "content": "I propose to convert to NeuroML, test and validate a recent, full scale, multicompartmental CA1 hippocampus model by M. Bezaire DOI: 10.7554/eLife.18566. By converting the model and putting it to Open Source Brain we would not only give an open source baseline models to scientist who aim to create and compare similar models, but also give a detailed step-by-step conversion guideline for the ones interested in using NeuroML.",
                    "projectCode": "https://gist.github.com/andrisecker/aa7c2e300c127dd04bc9d9eca7811258"
                },
                {
                    "title": "Distributed EEG data storage and processing using Apache Hadoop and Spark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5202249072508928/",
                    "content": "Currently the human assistive system collects the EEG data, processes it and trains customized classifiers. With the increasing number of tested subjects, the goal is to store the rapidly growing data in a distributed storage system such as Apache Hadoop. Data processing would also be implemented on the distributed system using the MapReduce framework and its extension Apache Spark.The goal of this project is to create a scalable system which would enable storage of very large datasets and quick, distributed training of classifiers on those large datasets. Another goal is to provide the users with a GUI for browsing and managing the distributed filesystem as well as building full machine learning pipelines.",
                    "projectCode": "http://dorianbg.blogspot.com/2017/08/gsoc-2017-summary.html"
                },
                {
                    "title": "G-Node : odML Library and Editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4831228591079424/",
                    "content": "The open metaData Markup Language (odML), is a standard and organized format for recording, maintaining, and exchanging metadata in an automated fashion. It’s core principle is the simple, yet highly effective idea of successful collaboration by making the complete set of metadata available with the experiment or project data. This approach of storing the metadata in a standardized way for further experimentation and analysis of the results and observations, ensures the accessibility and reusability of the experimental data. It can save us hours of searching and reconstruction of parameters and conditions for performing an experimentation or analysis, sometime in the future.\n The main goals of this project in GSoC 17 are :-In this proposal, I've given my approach towards completing goals, with a detailed description of each process, along with the timeline.",
                    "projectCode": "https://gist.github.com/digaru19/d23ac93f78f7f008736d5752be34e824"
                },
                {
                    "title": "GPU implementations for MOOSE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4514656752238592/",
                    "content": "Neuronal and multiscale simulations are computationally demanding, they require large numbers of very similar calculations. One of the core problems in this domain is to rapidly perform detailed single-neuron calculations. These are typically the bottleneck in detailed multiscale and network models.\nThe central computation is solution of a large, almost tridiagonal matrix representing compartments in a neuron. Individual entries in this matrix require an inner loop to compute current contributions to the compartment. It is a particularly interesting problem to optimize GPU computations for these neuron calculations, since there is a tradeoff between memory transfers and speed of individual GPU cores. \nOptimizing the GPU code will increase the speedup, when the no of computations are very large,  then even a small amount of speedup is very beneficial as it saves a lot of time, so optimizing the GPU code is important.",
                    "projectCode": "http://gsocmoose2017.blogspot.in/2017/08/parallelization-in-moose_25.html"
                },
                {
                    "title": "Image processing with ImageJ (segmentation of high-resolution images)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5824191207047168/",
                    "content": "This is a project is about identifying and parameterizing the precursors of neuronal cells within early-stage embryos. We will co-register the names with the cells due to their general location, and we collect quantitative data about static location after division and vectors that describe shape changes and overall positional changes in the embryo. \nFor this, we need to develop image segmentation tools, which is the top priority of my proposal, to assist further development of this project.\nMy approach, in nutshell, is to try out a variety of segmentation techniques to achieve the top priority of this project. \nThe project will conclude with a development of a proper ImageJ plugin which will facilitate application of our approach on other databases.",
                    "projectCode": "https://gist.github.com/geekSiddharth/b1febf1585c94aa7e3041fb7e5538763"
                },
                {
                    "title": "Implementing support for numerical integration with GSL in the Brian simulator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6676966358908928/",
                    "content": "The current project aims to implement the option to carry out the numerical integration part in the Brian simulator with integrators defined in external libraries, starting with the odeiv2 module that comes with the GNU Scientific Library (GSL). In addition to coming with an extensive list of different integration methods, the GSL integrator comes with an adaptable timestep. The latter functionality will have major benefits for the speed with which large simulations in Brian can run.\nThis is because it allows the use of larger timesteps for the overhead loops in Python, without losing\n(likely even improving) the accuracy of the numerical integration at points where small timesteps\nare necessary. I have personally used Brian, and can tell from experience that this can be very useful\nat times - especially when working with Hodgkin-Huxley-type equations. I think this speed-up could be an important factor for people to choose to use Brian for their simulations.",
                    "projectCode": "https://charleesf.github.io/gsoc/gsoc.html"
                },
                {
                    "title": "In-memory Compression for Neuroscience Applications: Blue-Brain Neuromapp Research & Implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6743691628642304/",
                    "content": "State of the art computational tools are in especially high demand in the field of Neuroscience. However, bottleneck exists in terms of how much data can be transferred between hard disk and memory for computation  [1]. As research increasingly relies on processing huge volumes of data, this issue demands attention. One strategy which addresses this is memory compression of data in memory (DRAM). Algorithms that are effective do a good job of decompressing exactly as much of the data as are needed for the calculations, so that they still minimize the memory footprint of the program without significant speed drops.This proposal exists to address this bottleneck within the Neuromapp program created by members of the Blue Brain Project team. The project proposed is split into research and implementation of in-memory compression along the lines of compression library selection, interface algorithm development, and block data structure design. The resulting compression mini-app is intended to relieve this bottleneck, and provide accelerated calculation capacity for the suite of associated mini-apps that come with Neuromapp.",
                    "projectCode": "https://devinbayly.github.io/"
                },
                {
                    "title": "Integrating CBS Tools in the Nipy community",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4702934428286976/",
                    "content": "CBS Tools are specialized Java-based image processing tools for ultra-high field MRI data. Making this potent software more easily accessible to researchers will accelerate progress in the promising field of high-resolution neuroimaging. The goal of my project is therefore to make CBS Tools available through Nipy, a popular “community of practice devoted to the use of the Python programming language in the analysis of neuroimaging data”. First steps have been made to encapsulate CBS Tools’ Java classes using the JCC package, enabling access through Python. Within the Google Summer of Code I would like to take this further and provide easy-to-use and well-documented Python interfaces for the core modules of CBS Tools. Since rapid advances in the dynamic field of high-resolution neuroimaging are to be expected, another focus of my proposal is to facilitate future contribution of other researchers. My three main objectives are (1) to provide straightforward installation routines for different platforms, (2) to create Nipype interfaces for the core modules and (3) to make the code accessible through documentation and realistic examples.",
                    "projectCode": "https://juhuntenburg.github.io/gsoc2017/2017/08/25/final_report.html"
                },
                {
                    "title": "model completion dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5582543730507776/",
                    "content": "The OpenWorm project is building a simulation of the C. Elegans in an open science fashion. The model completion dashboard is a web-based visualization of the digital versions of biological entities that are currently captured within OpenWorm’s database API, PyOpenWorm. This interface is designed to display the results of the unifying modeling activity, and should be coordinated with the crowdsourcing platform for C. Elegans ion channels known as ChannelWorm. This interface allows a user to drill down into OpenWorms' model, and view the states of completion of modeled components at each level.",
                    "projectCode": "https://github.com/shubhsingh594/modelcompdash/blob/fbc9e0e10a56b198169be96b412046601f00a0f5/gsoc%202017.md"
                },
                {
                    "title": "Speeding up functional network analysis on fMRI data with distributed, in-memory computation using Apache Spark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6206392830525440/",
                    "content": "In order to study the fMRI images it is necessary to do a preprocessing , which consist of motion correction, slice timing and realignment, spatial filtering, temporal filtering [2], smoothing, normalization, and segmentation (divide the brain in gray matter and white matter). All this process takes time for a single subject, and doing this process for a set of subjects and cases could take days of processing.   GPU programming started to increase on 2007 [1] when NVIDIA launched CUDA, now there are more tools that allow to do GPU programming like OpenCL and others in java and python.  Big Data needs to use the new technologies for programming and deal with large data, that's what the use of GPU programming and Spark do.",
                    "projectCode": "https://drive.google.com/drive/folders/0B70qTSHMUf6xQ1pIaWw3Tk9QUnc?usp=sharing"
                },
                {
                    "title": "TVB-Modernize visualizers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4799755070734336/",
                    "content": "Some of the TVB visualisers are already old and need improvement. This project aims to update three of them, more specific the Wavelet Spectrogram Visualiser, the Fourier Spectrum Visualiser and if the time allows until the end of this project, also the Complex Coherence Visualiser.",
                    "projectCode": "https://gist.github.com/danvladpop/c46831b90a32223c99f96afbb1f8d691"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "java",
                "xml",
                "gpu"
            ]
        },
        {
            "title": "Inkscape",
            "orgLink": "https://www.inkscape.org",
            "projects": [
                {
                    "title": "Better CSS Style Sheet Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6239022099726336/",
                    "content": "Inkscape has basic support for CSS style sheet. Currently it can read and parse internal sheet. Aim of project is to extend its support by adding functionality and making it all-in-one solution for users.",
                    "projectCode": "https://gitlab.com/diehumbleX/inkscape/tree/master/GSoC-2017"
                },
                {
                    "title": "SVG 2 Text Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6083005399433216/",
                    "content": "Inkscape currently has a non-compliant flowed text feature (based on SVG 1.2 which was never adopted) that needs to be made compatible with both SVG2 and SVG 1.1. This project is to re-implement the flowed text feature within Inkscape to be SVG2 compliant and to have a proper SVG 1.1 fallback.In addition to the flowed text itself as it exists within Inkscape, SVG2 adds new formatting features. The one that I will look up for is the “inline-size” feature because I see it as being the imperative at the moment.",
                    "projectCode": "https://gitlab.com/AlexRoman/inkscape/blob/master/README"
                }
            ],
            "techStack": [
                "svg",
                "css",
                "c++",
                "c++11",
                "python"
            ]
        },
        {
            "title": "Institute for Artificial Intelligence",
            "orgLink": "http://ai.uni-bremen.de",
            "projects": [
                {
                    "title": "Multi-modal Cluttered Scene Analysis in Knowledge Intensive Scenarios",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6278948115709952/",
                    "content": "This project implements Object Segmentation approaches based on Symmetry Constraints in knowledge intensive scenarios. The final documentation describes\nhow this project is integrated to RoboSherlock framework and therefore enables RoboSherlock cognitive perception on surroundings in order to do more complex\ntasks such as Grasping, etc.",
                    "projectCode": "https://gist.github.com/anindex/ee4b32e73973ab24d3d7a17ab6486b9d"
                },
                {
                    "title": "Multi-modal cluttered scene analysis in knowledge intensive scenarios",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6708443637350400/",
                    "content": "The objective of the project is to improve accuracy of objects' descriptions generated by the RoboSherlock package in difficult environments. Glossy transparent objects can not be properly detected by off-the-shelf RGB-D cameras which use infrared structured light, like Kinect. Or as another example occluded object may be not properly classified or even segmented as one peace. So the goal of this project is to study and implement algorithms which will address such problems.",
                    "projectCode": "https://gist.github.com/klokik/902f7065ab0f8599fea7156542160cac"
                },
                {
                    "title": "Realistic Grasping using Unreal Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5478909659316224/",
                    "content": "Grasping different items in virtual reality can be very tricky, regarding physics and animation. There are several ways to do so. Implement and test out different algorithms for different grasping methods will be the topic of this project.",
                    "projectCode": "https://github.com/robcog-iai/RobCoG/tree/grasp-dev"
                },
                {
                    "title": "ROS with PR2 integration in Unreal Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6006714700660736/",
                    "content": "Robot simulators are essential tools for robot design and robotics algorithm development. We are going to build a simulator of PR2 Robot in Unreal Engine 4, which can provide more realistic physics simulation for users and allow for better user-robot interaction. The ROS will also be included so that users can utilize ROS packages to finish tasks like navigation and indoor SLAM in the simulated scenario.Tasks in this project includes integration of ROS libraries to Unreal Engine, import of different types of sensors like Kinect and Hokuyo Laser Scanner , and a controller manager which interacts with the ROS controller, the hardware interface, and simulated hardware. Apart from the main goal mentioned above, I plan to create a general controller manager and a toolchain to easily convert any URDF models to robot actors in Unreal Editor.Taking the complexity of the project into consideration, as an experienced ROS programmer, I will focus more on the ROS integration and robot control part.",
                    "projectCode": "https://github.com/robcog-iai/RobCoG/tree/robosim"
                },
                {
                    "title": "Topic 3: ROS with PR2 integration in Unreal Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4659539286687744/",
                    "content": "This project aims to bring a state of the art robotic framework (ROS) into a popular and well known video game engine (UE 4). It consists primarily of two parts. Part one will involve creating a plugin in UE4 that will read a robot's URDF file and create a new asset type. In part two, the ROS library will be linked to UE4 and the robot will be controlled from ROS similar to how it is controllable via a simulator. This will all be done in the Linux version of UE 4 using the URDF of the PR2 robot as an example.",
                    "projectCode": "https://gist.github.com/YousafRaja/6d16b0ea7a3629a0395e99774224a399"
                }
            ],
            "techStack": [
                "lisp",
                "prolog",
                "c++",
                "python",
                "ros"
            ]
        },
        {
            "title": "Intel Media and Audio for Linux",
            "orgLink": "https://01.org/linuxmedia",
            "projects": [
                {
                    "title": "libxcam Enable a debluring feature with OpenCL Design",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6440371911393280/",
                    "content": "Deblurring is a process that removes distortion from a blurry image using knowledge of the point spread function.\nThe blurring, or degradation, of an image can be caused by many factors:In this project I will be focused on removing blurs from camera shaking. It's a blind deblurring problem and iterative method will be used to estimate point spread function and deblurred image alternately.\nFor removing ringing artifacts edgetaper function will be implemented using OpenCV, also will be implemented PSF order estimation algorithm.The most time consuming operations, such as FFT2d, will be implemented using OpenCL to improve the algorithm's performance.",
                    "projectCode": "https://andrey1994.github.io/GSoC_2017/"
                },
                {
                    "title": "Support for decoding MVC/SVC base views/layers in the H264 decoder of gstreamer-vaapi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5282402289057792/",
                    "content": "According to the H.264/AVC standard, a decoder should be able to only decode the base view of an MVC encoded stream if the hardware doesn't support MVC decoding.\nThe same applies to the base layer of a SVC encoded stream.\nI propose adding proper backwards compatible decoding support to vaapih264dec by resolving:\n#732267,\n#732265,\n#732266.",
                    "projectCode": "https://gist.github.com/orestisf1993/cee24c54c1c9c2add951248a325c8e38"
                }
            ],
            "techStack": [
                "video",
                "decode",
                "encode",
                "vpp",
                "multimedia"
            ]
        },
        {
            "title": "Internet Archive",
            "orgLink": "http://www.archive.org",
            "projects": [
                {
                    "title": "Addition of advanced features to the existing Google Chrome extension of the Wayback Machine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6684594220826624/",
                    "content": "The 5 advanced features added to the Chrome extension of the Wayback Machine are focused on users who wish to research the history of the web .",
                    "projectCode": "https://github.com/abhidas17695/GSoC-project"
                },
                {
                    "title": "Internet Archive GSOC Project Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6528240499818496/",
                    "content": "This project focuses on \"Building a Chrome extension for the Way Back Machine, Adding new feature for the way back machine's chrome extension.\"The original chrome extension was released during January 2017 where the unofficial and pre-release version was developed and released as an open source contribution at mid-2016.\nThis is an extended update for the January 2017 chrome extension of the way back machine.\nThis project has already several repositories in GitHub, where previous selected projects for building a chrome extension for the way back machine alongside with integrations, are available at the link below:http://www.github.com/rakesh-chinta/WayBackMachineChromeExt/The project's Goals and criteria for success:",
                    "projectCode": "https://github.com/rakesh-chinta/GSOC-Project-Internet-Archive"
                }
            ],
            "techStack": [
                "python",
                "javascript"
            ]
        },
        {
            "title": "JBoss Community",
            "orgLink": "http://www.jboss.org/",
            "projects": [
                {
                    "title": "Analysis of Scalable Solutions for UPS database with Apache Kafka, Apache Spark and HBase",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6322957169197056/",
                    "content": "The Unified Push Server Database is currently based on MySQL/PostgreSQL, and the data is all stored in one schema. Database updates are handled by a JMS broker. However, when this system is put under pressure with a high level of users and an intense quantity of push metrics it is unable to perform optimally. The reality here could be a poor user experience with slow message delivery, dropped messages or the possibility of service unavailability. As messages begin to exceed millions, this will become a bottleneck for the system and one which needs to be addressed and engineered with scalability in mind.This project will investigate the possibilities of using different types of databases and methods to process large volumes of data. This will be a Proof of Concept that will aim to research Apache Kafka and Apache HBase as possible solutions to improve the real-time experience of the push metric of the AeroGear Unified Push Server.",
                    "projectCode": "https://gist.github.com/dimitraz/042e79d712dcee71689186b4ed22bc14"
                },
                {
                    "title": "Apache Kafka/HBase integration in Unified Push Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5570100404944896/",
                    "content": "The AeroGear UnifiedPush Server sends native push messages to different mobile operating systems, such as Android, iOS and others. It has already developed good logical structures for sending of push notifications using JMS. Moreover,  its \"sender\" module is mainly constructed of different message queues and their producers and consumers. On the other hand, the server DB is currently based on MySQL/PostgreSQL and each data entry lies in one DB scheme.\n   We need the process for sending of push notifications and the evaluation of message metrics to be as fast as possible and as scalable as possible. Therefore, with an increase of our data problems can be caused by slow writes/reads to DB and not scalable enough message queue usage.\n    The idea of the project is to try to overcome these obstacles and rebuild some modules of the system in the way that they perform well even if the data volume they are operating over increases. For that two different approaches can be taken. To speed up the DB access a new distributed, scalable, big data store HBase can be integrated into the project. For more scalable processing of the data, Apache Kafka can be used instead of JMS.",
                    "projectCode": "https://polinankoleva.github.io/gsoc2017/2017/08/28/GSoC-Final-Report.html"
                },
                {
                    "title": "Improving the hawkular android client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6036380845080576/",
                    "content": "The aim of developing the Hawkular android client was to provide users with a seamless experience of monitoring their servers, by allowing general purpose inventory browsing and quick access to favourite metric and alerts. I plan to take this initiative forward and make the android client more detailed, stable and intuitive to use. I plan to do so by:● Adding  support for full Alert setup and display.● Adding more details in triggers and improving metric graph visualisations.● Improving and rewriting the previously written tests for models and adapters.● Writing thorough UI tests using the  Espresso testing framework.",
                    "projectCode": "https://gist.github.com/pg301/a282062645933c48548869a9d7750565"
                }
            ],
            "techStack": [
                "java",
                "android",
                "asciidoctor",
                "mobil",
                "kubernetes"
            ]
        },
        {
            "title": "JdeRobot - Universidad Rey Juan Carlos",
            "orgLink": "http://jderobot.org",
            "projects": [
                {
                    "title": "Deep Learning to Detect Objects in Images from RGB-D Input",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6651478143926272/",
                    "content": "I aim to solve the problem of detecting and recognizing objects in videos by using RGB and depth data as input. The deep learning algorithm used would be an extension of the convolutional neural network YOLO (You Only Look Once). There are two phases to my project. In my first phase, since YOLO is natively written in Darknet based in C, I will explore ports of YOLO in a more friendlier framework (ex: Keras or Tensorflow) and test their accuracy against Darknet.In the second phase, I will extend Darknet to accept RGB and depth data as input. An accuracy script will be written in Darknet to evaluate the accuracy of the created models, original YOLO (only RGB), extended YOLO (depth only) and YOLO-D (RGB + depth). The inclusion of depth should hopefully result in an increase in accuracy.",
                    "projectCode": "http://jderobot.org/Ni9elf-colab"
                },
                {
                    "title": "DeepRL in Robotics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5467852131794944/",
                    "content": "Creating an OpenAI gym environment as a wrapper for Gazebo robots simulator, so that the environment would be a bridge to connect  an agent as a brain to the robot's body and interact with the Gazebo world, is the primary goal of this project. In addition, we will try to use Deep Reinforcement Learning methods to implement DQN agent as baseline and use a robot to learn how to navigate in an unknown map, using sensory data as input to the network, and generating velocity commands for the robot as the output of the network.\nAutonomous navigation and obstacle avoidance, can be used for autonomous driving in an unknown environment that we don't have any map from that. It is also useful for dynamic environments in which the map is constantly changing. This project could be used for autonomous exploring and mapping the environments, providing another solution replacing well-known SLAM algorithm.",
                    "projectCode": "http://jderobot.org/Deep_Reinforcement_Learning_in_Robotics"
                },
                {
                    "title": "JdeRobot GSOC'17 Application for Visual HFSM Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5643442877104128/",
                    "content": "I propose to improve the visual HFSM tool by refactoring for Qt5, improving the user experience by developing more capable schema viewer and code editor, integrating ROS SMACH and actionlibs for code generation. We can also improve the tool by creating a library of actions and transitions to have project-level code and behavior reuse. If we can finish early, we can extend the tool to create visual state machines directly from the source code.",
                    "projectCode": "https://github.com/JdeRobot/JdeRobot/pull/902"
                },
                {
                    "title": "Teaching Robotics: Translation of a Scratch program to ROS python components",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6170540859457536/",
                    "content": "JdeRobot is a software development suite for robotics, home-automation and computer vision applications. These domains include sensors (for instance, cameras), actuators, and intelligent software in between. It has been designed to help in programming such intelligent software. Details for the project:\nProject #5. Teaching Robotics: Translation of a Scratch program to ROS python components\nScratch is a free visual programming language used in children's education, to teach them basic programming. It is composed of graphical building blocks (instructions) that must be visually connected to build the program. The idea here is to take benefit of our experience translating from a graphical description of a program in visual HFSM into a JdeRobot-ROS component to do the same with a different visual language, Scratch. The goal is to explore the use of Scratch with robots, both simulated or real, that JdeRobot-ROS allows and simplifies. We will start with simulated robots in Gazebo, despite with real robots will be the same as they use the same interfaces.\nThis project expects to develop a new tool prototype that reads Scratch programs and translate them into ROS Python components.",
                    "projectCode": "http://jderobot.org/Raulperula-colab"
                }
            ],
            "techStack": [
                "python",
                "c/c++",
                "ros",
                "gazebo"
            ]
        },
        {
            "title": "Jitsi",
            "orgLink": "https://jitsi.org",
            "projects": [
                {
                    "title": "Face and Speech Recognition for Jitsi Meet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6060456284258304/",
                    "content": "Jitsi Meet is a WebRTC JavaScript application, which provides high quality scalable videoconferencing solution. It uses Jitsi Videobridge as the video relaying server. Currently, developers have embedded many useful functionalities into Jitsi Meet, such as shared document editing, remote presentation, etc. Here, I propose to bring face and speech recognition into Jitsi Meet. First of all, I plan to add \"Show your face\" prompts for Jitsi Meet. In this case, if a user's face is not well positioned, it will prompt the user to move to the center. Additionally, if time is enough during the summer, I will also add speech-to-text functionality in Jitsi Meet. With the help of speech recognition, there could be a transcript generated automatically for a conference.",
                    "projectCode": "https://joshuatang.github.io/gsoc/2017/08/24/GSoC-Summary.html"
                },
                {
                    "title": "Implementing 'Micro Mode' for Jitsi-Meet-Electron",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4847379010289664/",
                    "content": "Sometimes, users might want to use the desktop window while communicating with another person through Jitsi-meet. However, Jitsi-meet-electron does not allow the user to resize its window smaller than a certain size. This project is to provide an option for the user to toggle between the Normal Mode and the Micro Mode of Jitsi-meet-electron that will be located at one corner of the desktop. If the user wants to carry on their own work while being able to look at the remote user’s screen, they can toggle to the Micro Mode to clear out their desktop view. This Micro Mode for Jitsi-meet’s video communication will provide lots of usage freedom for the user as their desktop screen no longer has to be tied up with the unnecessarily large GUI of the Jitsi-meet-electron, allowing more room for multitasking while staying connected to the call.",
                    "projectCode": "https://han-gyeol.github.io/gsoc/2017/08/27/GSoC-2017-Warp-up/"
                },
                {
                    "title": "Integrate transcription into Jitsi Meet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5750609290461184/",
                    "content": "My Google Summer of Code project last year ended up with a functional back-end for transcriptions in libjitsi. This year I want to integrate it into the front-end of Jitsi Meet such that at the end of the summer every user can choose to get a transcription of their call, if they so desire.",
                    "projectCode": "https://nikvaessen.github.io/jekyll/update/2017/08/24/gsoc2017_work_product_submission.html"
                }
            ],
            "techStack": [
                "webrtc",
                "java",
                "javascript",
                "sip",
                "xmpp"
            ]
        },
        {
            "title": "Joomla",
            "orgLink": "https://www.joomla.org/",
            "projects": [
                {
                    "title": "Automatic Parallel Testing Environment",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6619408428433408/",
                    "content": "In the fast moving world of open source, PR requests are opened every day, which leads to the problem of testing. Time and resource needs to be put into testing the new submitted fix or feature. By doing this project I plan to finish and improve the work of my mentor by developing an automatic parallel testing environment integrated that will deliver fast results for the available unit tests. I believe that my education, work and project experience make me the perfect candidate for this project.\nThe general purpose of the project is getting early feedback for every newly submitted code. By creating a fully working environment to run tests for Joomla code, so that they can run in a parallel (container-based) environment, increasing speed and coverage of PHP and Joomla versions. The key requirement here is speed, it is crucial to get early feedback on new PRs. In order to achieve this, tests not dependent on each other will be run on different containers simultaneously.",
                    "projectCode": "https://github.com/isacandrei/joomla-testing/blob/container-test/readme_GSOC.md"
                },
                {
                    "title": "Cloud filesystem for Media Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6438237581082624/",
                    "content": "Joomla! is an Open Source CMS which allows the user to create websites with ease. It is rich in features that helps even a novice to set up a fully functional and a secure CMS.Joomla! 3 is the current stable version which is available to users. Joomla! 4 will be the next generation which is going to use more modern technologies.Joomla! has a built in Media Manager to manage media files, such that even a novice can easily upload and use them in his articles etc. In Joomla! 4, the media manager will get rewritten from scratch with a JavaScript based (Vue.js) client and a REST like API as data endpoint. Through this endpoint it is possible to make GET, POST, PUT and DELETE requests to fetch and manipulate the media files. On the server side are the requests forwarded to an adapter, which processes the data.The aim of this project is to add more cloud based file adapter’s through the Joomla plugin system for the media manager which allow the other developers to extend the capability of it. They can add a cloud file system to Joomla! which allows the users to interact with media files the same way as with local files.",
                    "projectCode": "https://github.com/joomla-projects/media-manager-improvement/commits/gsoc17?author=kasvith"
                },
                {
                    "title": "Project IX: Expand the Extension Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5865716024606720/",
                    "content": "The main goal of this project is to improve the extension manager and give developers a better support in Joomla when developing their components.",
                    "projectCode": "https://github.com/joomla-projects/gsoc17_expand_extension_manager/tree/GSoC"
                },
                {
                    "title": "Project IX: Expanding the Extension Manager.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5570519030038528/",
                    "content": "This report communicates how we implemented various features to expand the Joomla Extension Manager which is a core component of Joomla, in terms of planning, design and application.",
                    "projectCode": "https://gist.github.com/cokencorn/a8cf0091ad1f9fa97ba0286ec382f400"
                },
                {
                    "title": "Project VI: Publishing Workflow in Joomla!",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5816391009566720/",
                    "content": "Main goal is to replace publishing states with flexible workflows. User should can create multiple states and define transitions between them with assign role acl. In the list of items on the back side should be something to perform selected transaction between defined state in item and defined in the transaction. Created component should filter states and transactions by given extension. User for each transaction could define which action of which component will invoke when the transaction is performed.*more in Google docs",
                    "projectCode": "https://docs.joomla.org/Publishing_Workflow"
                },
                {
                    "title": "PROJECT XI: REFACTORING THE HELP SCREENS LOCALISED ON JDOCS AND SERVED IN THE JOOMLA! BACKEND THROUGH THE HELP SERVER TO MAKE THEM MORE MANAGEABLE BY VOLUNTEERS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6632469155545088/",
                    "content": "The purpose of this project is to make the Help Screen more manageable for the Volunteers which will require less time to keep the documentation up to date work in Joomla!.\nFor the Volunteers, the current Help System is becoming Unmanageable as they have to update the Help Screen for each Joomla Page and for every New version.  Keeping them up to date (content as well as numerous screenshots of the backend) is important for our users but it has become an impossible goal, even more, because they also need to be localized.",
                    "projectCode": "https://github.com/joomla-projects/gsoc17_helpscreens_on_jdocs/pull/10"
                },
                {
                    "title": "Project XIII - PR Testing Platform",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5424560606281728/",
                    "content": "The main goal of this project is to build a platform with a Docker Compose (multi-container docker) that integrates with the github API in order to automatically get the Pull Request content, build a running Joomla application and provide the URL for testers to test that particular PR on the fly. It attempts to take away any problems and time while in the setup process for the Joomla build and make it substantially easier for people to test requiring almost no technical knowledge about github and Joomla and effort from the testers in order to test Joomla.",
                    "projectCode": "https://github.com/joomla-projects/gsoc17_pr_testing_platform"
                },
                {
                    "title": "Web-Services in Joomla 4",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4879367121403904/",
                    "content": "Web services became a necessity in today’s web development world. It helps add other dimensions to the power of websites for example: a new website can sell their articles for other developers as APIs, also they can use Joomla! API to build a mobile application for their news and articles to help them reach more audiences.\nAs Joomla is one of the most famous CMSs in the world, with millions of websites that use it, It would be great that Joomla have the capability to provide APIs for websites owners.This project is to provide a REST interface for Joomla 4. As discussed by the mentors, it would be a stand alone web app that integrates with Joomla CMS extensions. This app will be built using Joomla! Framework as it’s a tool developed and managed by Joomla team and also Joomla 4 is coming with it.I’m thinking of the app as two parts, request and response handling. The request will be routed by the app router to reach the corresponding components and retrieve the data related to the user’s request. The response is when the component receives the request from the router, it will run its logic to respond to that request and then serialize the response to follow the REST specifications.",
                    "projectCode": "https://github.com/joomla-projects/gsoc17_webservices/blob/master/manual/en-US/about-joomla/GSoC-submission.md"
                }
            ],
            "techStack": [
                "php",
                "html",
                "html/css",
                " javascript",
                "jquery"
            ]
        },
        {
            "title": "JSK Robotics Laboratory",
            "orgLink": "http://www.jsk.t.u-tokyo.ac.jp/",
            "projects": [
                {
                    "title": "Integrating FCL for collision detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5496984223875072/",
                    "content": "The proposal firstly introduces my previous experience and then give a detailed idea of my plan for the gsoc project.",
                    "projectCode": "http://yswhynot.github.io/subpage/projects/gsoc.html"
                },
                {
                    "title": "Knowledge and Learned Model Exchange Between Robotic Agents using openEASE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5660367464169472/",
                    "content": "In this proposal, I propose a solution for using openEASE as a knowledge bridge between robots. For this, I aim to implement a module in openEASE called openEASEclient (oeClient). This module will make robots connect to openEASE using web sockets and services without a need of web front-end. This module will, also, offer SWI-Prolog predicates as API so that robots that have KnowRob available can easily interface. After the implementation and testing of oeClient, I will try to exchange static ontologies between PR2s. Then, I conductsome grasp learning experimentusing EULisp. The data gained from these experiments will be used to train models using learning modules in KnowRob. After validation of learned models, these models will be transferred to PR2 in Bremen using oeClient.\nFinally, I will test the learned models with PR2 in Bremen and validate the success of the implemented methodology.",
                    "projectCode": "https://gist.github.com/asilx/db597257e272e958a3b15243f2e1f451"
                }
            ],
            "techStack": [
                "ros",
                "lisp",
                "prolog",
                "openhrp",
                "openrtm"
            ]
        },
        {
            "title": "K-9 Mail",
            "orgLink": "https://github.com/k9mail/k-9",
            "projects": [
                {
                    "title": "Daquexian's proposal about improving account setup",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4763165975904256/",
                    "content": "My proposal about improving account setup, including my thought and progress on it :)",
                    "projectCode": "http://daquexian.me/blog/2017/08/29/K9Mail_GSoC_summary/"
                },
                {
                    "title": "Improve IMAP-related features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6603273041608704/",
                    "content": "The aim of this project is to enhance some portions of the application that implement the Internet Message Access Protocol (IMAP). Specifically :The Conditional Store extension, defined in RFC 7162, adds an additional mod-sequence value to every message. This makes it possible to reference changes made to the mailbox made since a particular point in time, which is extremely useful for mobile clients that are not always connected to the internet. Adding support for the CONDSTORE extension will help to greatly reduce the time and data spent on resynchronization.K-9 Mail has a basic search feature that searches the local database as well as the remote server for messages. The project aims to add features that make it more modern, such as suggestions, nested search, filters and proper full-text search.Support for some additional IMAP operations will also be added :",
                    "projectCode": "https://gist.github.com/rhari991/b8d650168b82ca720d0d6d0a6a2a904b"
                }
            ],
            "techStack": [
                "android",
                "java"
            ]
        },
        {
            "title": "KDE",
            "orgLink": "http://kde.org",
            "projects": [
                {
                    "title": "[digikam] Project: Database export to remote network devices using DLNA/UPNP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5717675481235456/",
                    "content": "Brief Explanation: In the past, Kipi-plugins provided a way to export KIPI host data to DLNA/UPNP by a plugin using HUpnp library for Qt. Since porting this tool to Qt5 will not work as HUpnp project is unmaintained and its code is not ported to Qt5. The goal of this project is to find a new way to restore this feature in digiKam core directly (not as a plugin), using a suitable solution to support UPNP/DLNA in the long term.Expected results:Review old plugin code DLNA Export. Review all required features to export digiKam contents through a DLNA server.\nImplement a DLNA server in digiKam core to export photo and video hosted in physical and virtual collections. The server must have the capability to be restored at each digiKam session.\nImplement the server configuration panel in digiKam setup.\nTest the new implementation with DLNA compliant devices, as smartphones, tablets, TVs.\nTest the new implementation under Windows and MacOS.\nWrite unit tests and documentation.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/ahmedfathy"
                },
                {
                    "title": "[digiKam]: Healing clone tool for dust spots removal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5686002110693376/",
                    "content": "Healing Clone Tool: \nA tool for image editor to be used for healing image stains with the use of another part of the image by coloring by the use of one part over the other, mainly testing on dust spots, but can be used for other particles hiding as well.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/shazaismailkaoud"
                },
                {
                    "title": "A Procedural Watercolor Brush Engine for Krita",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4810122584915968/",
                    "content": "Watercolor is one of the most complex tools for imitation. The painting, painted with watercolors, depends to a large extent on the motion of the pigment solution, on the paper worn. This process is rather difficult to model, because, depending on the environment, the system will continue to change for some time after the artist finished painting.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/GrigoryTantsevov"
                },
                {
                    "title": "Adding support for plotting of real-time data in LabPlot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6498972445179904/",
                    "content": "Currently LabPlot supports only the import of static data into one of its data containers, the aim of this project is to add support for real-time data analysis and plotting in LabPlot.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/FabianKristof"
                },
                {
                    "title": "Chat Bridge",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5938131589136384/",
                    "content": "Chat Bridge is intended to be a protocol-independent chat-bridge to allow messages forward to and from various chat systems.It has to support Telegram, RocketChat and IRC but it has to be modular (for future expansions).Current solutions do not offer an adequate integration because, besides generic text, not much is implemented. \nA big missing feature is the ability to exchange complex formats, such as images or file attachments.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/DavideRiva"
                },
                {
                    "title": "Database separation for Similarity",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4737667023503360/",
                    "content": "DigiKam is an advanced digital photo management  application which enables user to view, manage, edit, organize, tag and share photographs under Linux systems. DigiKam has a feature to search items by similarity. This require to compute image fingerprints stored in main database. These data can take space on disk especially with huge collection and bloat the main database a lots and increase complexity to backup main database which include all main information for each item registered, as tags, label, comments, etc. The goal of this proposal is to store the similarity fingerprints must be stored in a dedicated database (as for Face management database, which store face histograms in a dedicated database).",
                    "projectCode": "https://docs.google.com/document/d/1nlKsswoK0Sgj2doSChbgX0ofh_4j5NC2Ba54_96IOmk/edit?usp=sharing"
                },
                {
                    "title": "Develop a showcase of Krita's new scripting support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4881297038114816/",
                    "content": "Krita is a professional free and open source painting program. The Krita's tools and features are focused on digital painting, concept art, illustration and texturing.Some steps of working in software for digital painting can be repetitive and consequently boring, like exporting a painting, configuration of the document’s properties, applying filters and a set of other tasks. An approach to solve this problem can be to make it scriptable. Making a software scriptable is expose an API for the users and offer some way to execute your own code.Python is the Krita’s script language and the standard language in the VFX industry, but we are talking about artists that in your majority don’t code. My proposal is focused in solve this problem working together with the Krita’s community to implement a set of scripts and plugins in python, to attending your needs about this repetitive and boring tasks.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/EliakinCosta"
                },
                {
                    "title": "digiKam: Face Management Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5080492923682816/",
                    "content": "Face recognition in digiKam is now implemented using Local Binary Patterns Histograms(LBPH) from OpenCV. However, since the performance is not as expected, the algorithm needs to be improved. Another two face recognition algorithms named Eigenfaces and Fisherfaces are partially implemented in the face engine and the two algorithms will be finalized. One sufficient reason that recognition cannot work is that we don’t have any code for pose estimation and normalization. To improve face recognition, new face algorithm with pose estimation and normalization will be added. The algorithms will be selectable in GUI by users. Besides the algorithms, the face region in database should be synchronized when the image is transformed.",
                    "projectCode": "https://yjwudi.github.io/2017/08/22/work_report/"
                },
                {
                    "title": "Finishing started activities for GCompris in Qt-Quick",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5638243819192320/",
                    "content": "GCompris is a high-quality educational suite which aims at making learning\neasier for children aged 2 to 10. GCompris currently has 137 activities on\nvarious topics such as science, maths, games with which it has successfully\ncreated a great learning environment for children. However, there are few\nactivities which were started previously but is not yet complete. I strongly\nbelieve in what GCompris stands for and in this project, I aim at taking\nGCompris one step forward by finishing three started activities: Pilot a \nSubmarine, Family and Digital Electronics",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/RudraNilBasu"
                },
                {
                    "title": "Finishing started activities in GCompris (In Qt Quick)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6567073446625280/",
                    "content": "GCompris is an educational software suite comprising of numerous activities for children aged 2 to 10. My project would be to complete the already started activities (oware, computer parts, play piano and note names). These activities will be useful to GCompris which will make it more resourceful, usable and popular among young children and teachers.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/DivyamMadaan"
                },
                {
                    "title": "Go Language support in KDevelop",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5303509503180800/",
                    "content": "Go language have some support from KDevelop side. This project aims on improving that support, implementing: building and project management, formatting using “go fmt”, improved autocompletion and linting using “gometalinter”.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/MikhailIvchenko"
                },
                {
                    "title": "Improve stability, testing and bring modern C++ to KStars",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4839390639554560/",
                    "content": "KStars has a mature codebase with well-written C++. Despite the best efforts of the developer community, the sources need a serious modernization because this complex application has long development history (16 years) with many contributors and the testing methods are almost non-existent. The applicant would like to contribute refactoring of the sources with modern C++11/C++14 features (e.g smart pointers), explore and fix corner cases, static code analysis and implementing new testing methods.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/CsabaKertesz"
                },
                {
                    "title": "Integrate with share.krita.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5901122124382208/",
                    "content": "The project aims at the integration of Krita with share.krita.org using the library LibAttica and giving support for the resource manager. A new GUI will be introduced for the resource manager and for collaborative sharing implemented using LibAttica with share.krita.org",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/AnikethGirish"
                },
                {
                    "title": "Make High-DPI awesome",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6527878648823808/",
                    "content": "As seen on Blog Posts on Planet KDE support for High-DPI monitors has come a long way since Plasma 5.0. And thanks to the work by many dedicated people the situation in Plasma is now almost ideal. But unfortunately, this is not the case for all KDE applications. Support for HiDPI seems to be more of a hit-and-miss for some of them, many crucial for day-to-day workflows (like Okular and Gwenview). Competing desktop environments have nowadays a nearly perfect HiDPI support, so I think it is time to face the remaining problems once and for all.Therefore I suggest the following approach:\nMy Google Summer of Code project will find HiDPI rendering issues in KDE applications and fix them in a coordinated approach. I will look at applications, which are usually installed on the users desktop, like the Plasma Workspace, Systemsettings and utilities from the kdegraphics module (gwenview, okular, spectacle).This will also require working together with KDE community members, which report bugs, and application maintainers, to get the submitted patches on the KDE reviewboard in a state that allows them to be committed in their respective repositories.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/LukasHetzenecker"
                },
                {
                    "title": "Marble Indoor Maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4560444593274880/",
                    "content": "Marble Maps brings the highly detailed OpenStreetMap to your Android devices. It features a crisp, beautiful map with an intuitive user interface. This project is about extending it to support indoor maps (e.g. selecting and showing different levels of a building). The following are the goals to achieve from this project:",
                    "projectCode": "https://github.com/KDE/marble/commits/master/?author=mnafees&since=2017-05-30&until=2017-09-04"
                },
                {
                    "title": "Marble Material Maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5401978741981184/",
                    "content": "The goal for this project is redesigning the Marble Maps Android applications user interface to fit the Material Design guidelines.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/JuditBartha"
                },
                {
                    "title": "Migrating to Kirigami (Koko)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6254907170488320/",
                    "content": "Project: Migrating the 'Koko' image gallery application's UI components to Kirigami.Brief Explanation:\nThe current version of Koko uses the QtQuickControls components that use QML for internal event handling. However, kirigami uses QtQuickControls2 components that provide better internal event handling(done through c++).\nThe project will focus:Expected Results: \nHave a proper functioning mobile-friendly user interface for Koko on the top of kirigami.Knowledge Prerequisite: QML, Qt5 and C++.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/atulsharma"
                },
                {
                    "title": "Multiple-Instrument View Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5986089730834432/",
                    "content": "Minuet is a free musical software. Its goal is helping users learn and exercise their skills in music education. The areas covered by Minuet are: ear-training, first-sight reading, harmony, improvisation and solfa. Minuet consists of several test exercises which test and improve user’s musical knowledge and his ability to recognize intervals, rhythms, scales and chords.\nEven though Minuet has many powerful tools that contribute to music learning, there are still some missing features that would make it a fully-professional musical software.\nAt the moment, Minuet is using a piano keyboard (showed at the bottom of the screen) to display its exercises. It would be a significant improvement to give the user the choice to use other instruments as “helpers/companions”, such as guitar, bass, violin, trumpets, etc.\nI will try to modify the current piano keyboard view into a standalone plugin and then implement a guitar plugin from scratch.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/StefanToncu"
                },
                {
                    "title": "Polkit Support in KIO",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5344318537596928/",
                    "content": "KIO framework is used by KDE applications to provide file management abilities. This framework provides almost all file management functions that one will ever need. However it doesn’t provide any support for file management as a privileged user. So whenever there is a need to perform file management tasks with escalated privileges the application simply shows an error. A casual user may not see it as a problem but for power users, sysadmins, developers this is a huge impedance. Many users get around this by starting the whole application as root. Running Qt/KDE GUI solves the issue but its a very dangerous solution. Dangerous because if not handled properly it can cause irreversible damage to the the system. To address this issue some KDE applications are disabling being executed as root. For example, the next versions of Dolphin and Kate will show an error message and exit when started with root privileges.Polkit is just the tool which can solve this problem. It is the standard framework used by Linux desktops to grant privileged actions to unprivileged processes. The goal of this project is to add Polkit support in KIO and further integrate it in dolphin.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/chinmoyrp"
                },
                {
                    "title": "Progressive Web App for WikiToLearn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5384840748728320/",
                    "content": "This project will consist in designing and developing a progressive web app for WikiToLearn. New features such as offline browsing, mobile integration and a more immersive and engaging user experience will be implemented as well as creating building blocks for the development of new features in the future.In current days it is crucial to have a quick, responsive and fully featured web interface for any kind of website, especially for content heavy one like WikiToLearn. Although at the current state the website is definitely usable and functional it could use a lot of improvements and fixes in term of design, client side performance and overall user experience. Most of these features are the one also defined by what we call progressive web apps.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/CristianBaldi"
                },
                {
                    "title": "Rust support for KDevelop",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6681324676972544/",
                    "content": "Rust is a rather new programming language, but it has already gained a lot of traction. It was voted “most loved” language by developers for the second year in a row in the StackOverflow developer survey. There have been projects made using Rust on everything from operating systems to game engines for Minecraft-like games. Despite this, IDE support is still lacking. KDevelop currently does not support Rust at all. The end goal of this project would be to add support for all the standard features an IDE should support for a language.",
                    "projectCode": "https://cgit.kde.org/kdev-rust.git"
                },
                {
                    "title": "Stabilize and ship Ruqola",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5444246991536128/",
                    "content": "Ruqola is a Qt interface to Rocket Chat, with a library implementing DDP semantics, and a QML UI for both desktop and mobile phones. The application is a QML/C++/Qt app, thus providing multi-platform portability. Currently there is no native Rocket chat client; Ruqola will be the first generic chat application based on Rocket Chat.\nParticularly for WikiToLearn, there is no application/platform where people can discuss the content (and its fidelity) provided at WikiToLearn Portal (https://en.wikitolearn.org/Main_Page). Since WikiToLearn chat exists for discussing development issues, there is a need for such an application for making discussing the content easier.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/Vasudha"
                },
                {
                    "title": "Telemetry for getting statistics for which features are used the most in Krita",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5525578237083648/",
                    "content": "The creation of a telemetry system, which allows you to better understand what users of Krita are using. That is something similar to clickstream analytics for sites. It is supposed to create: a client part, a backend server, a front-end server.\nThe collection of statistics will help improve future development.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/AlexeyKapustin"
                },
                {
                    "title": "Testing interface for Kopete and Improvement of protocol support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6751693421150208/",
                    "content": "Idea is to create auto tests for kopete and improve the current protocol support. Autotests will be run using make check. QtTest will be used for unit tests and gui tests. For improving protocol support discussion with the community will be done and there are certain todo that need to be implemented.",
                    "projectCode": "https://community.kde.org/GSoC/2017/StatusReports/vijay"
                }
            ],
            "techStack": [
                "c++",
                "qt",
                "qt5"
            ]
        },
        {
            "title": "LabLua",
            "orgLink": "http://www.lua.inf.puc-rio.br/",
            "projects": [
                {
                    "title": "Adapt CGILua SAPI launcher to explore all WSAPI features.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6696418936881152/",
                    "content": "Project proposed by LabLua",
                    "projectCode": "https://github.com/keplerproject/cgilua/pull/14"
                },
                {
                    "title": "Editor Support for Typed Lua",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4554913883357184/",
                    "content": "Lua is a powerful, efficient, lightweight and dynamically typed\nscripting language supporting a variety of different programming\nparadigms. Typed Lua extends Lua with an optional type system\nallowing the use of both static and dynamic typing in the same code\nbase, while preserving existing Lua run-time semantics. It achieves\nthat by introducing optional type annotations and applying local type\ninference. This richer type system not only enforces stronger program\nbehavior guarantees, but also facilitates the development of more powerful\ndeveloper tools.Programmers nowadays expect that their editors/IDEs suggest accurate\ncompletion candidates, perform asynchronous - as you type - error\nchecking and support type queries such as \"go to definition\" or \"find\nall references\".The main goal of the project is to add such features for Typed Lua in\na wide range of popular editors. Furthermore, it shall be investigated\nhow a modern, asynchronous editor plugin architecture could be designed.",
                    "projectCode": "http://www.brain-dump.org/gsoc17/"
                },
                {
                    "title": "Interrupt-based drivers and libraries for Céu-Arduino",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5722829441990656/",
                    "content": "Developing interrupt-based drivers and libraries for Arduino chips and peripherals for the Céu-Arduino language, in order to replace current functions and libraries which freeze the application while executing.This project will make an overall contribution not only to the development of the Céu language but to the Arduino and Embedded Systems community as well.",
                    "projectCode": "https://github.com/fsantanna/ceu-arduino/pull/10"
                },
                {
                    "title": "Lua Client for Strava V3 API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5976989768876032/",
                    "content": "Strava is the social network for athletes. It’s a global community of millions of runners, cyclists and triathletes.The Strava V3 API is a publicly available interface allowing developers access to the rich Strava dataset.Currently the library support is not available for Lua language.\n               This project is to build a strava library in Lua language and thereafter build a demo application using the library. Library will have support for most of the important features provided in the Strava API.It is planned to build a demo application  \"Race Listing\".It lists all the races happening in the world registered with strava. User can also see detailed information about a specific race.",
                    "projectCode": "https://akshaynathr.wordpress.com/2017/08/29/gsoc-2017-final-submission/"
                },
                {
                    "title": "Parser Generator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6543790697349120/",
                    "content": "I would like to implement the LPegLabel parser generator idea.",
                    "projectCode": "http://parsergen.blogspot.co.uk/2017/08/parser-generator-based-on-lpeglabel.html"
                },
                {
                    "title": "Porting Terra to Android Devices",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6289975310024704/",
                    "content": "The main goal of the project is, which the title says, to port Terra to Android devices. \nOnce I already have Terra ported to android, my intention is to build an interface between Terra and the android API, that way I am sure Terra will support a lot of features common smartphones have as well as be able to use this features in different devices that have Android on it. This way, by the end of the project, we will not only have ported Terra to android but also develop an interface in which developers can easily access hardware sensors and functionalities to build their own applications.",
                    "projectCode": "http://afbranco.github.io/Terra/terra-gsoc.html"
                }
            ],
            "techStack": [
                "lua",
                "céu"
            ]
        },
        {
            "title": "LibreHealth",
            "orgLink": "http://librehealth.io",
            "projects": [
                {
                    "title": "Database Upgrade and Laravel Integration in LibreHealth EHR",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5081751751753728/",
                    "content": "This proposal provides a complete refactoring of the existing system along with database upgrade and use of framework. Providing a procedure to completely remove the existing system gradually and make a new robust, secure and scalable system. Future impacts of each step completed is also included.",
                    "projectCode": "https://pri2si17.wordpress.com/2017/08/19/gsoc17-final-submission/"
                },
                {
                    "title": "Practice Appointment Calendar for LibreHealth EHR",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6051275523227648/",
                    "content": "LibreHealthEHR's calendar, based upon the PostNuke Calendar, has been an integral part of the application. However, the calendar is antiquated and hence in dire need of replacement. My project aims to deploy a successor to the current calendar. This will also involve removal of the SMARTY engine (to some extent), generating documentation, and testing.The new calendar interface will lead to a more pleasant and comfortable experience for the users. Furthermore, there are bugs deeply rooted with the PostNuke calendar that will be solved by the migration.",
                    "projectCode": "https://medium.com/@azwreith/gsoc-2017-final-report-7eebdd0838c1"
                },
                {
                    "title": "Radiology Reporting Enhancements Continuation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5907268491018240/",
                    "content": "The Radiology module currently stores radiology reports as text in the radiology_reports  table inside the database. This is not ideal. In real life radiologists use templates to create radiology reports. These templates are HTML forms that follow the MRRT standard. A widely used standard in radiology report templates. \nSee https://www.ihe.net/uploadedFiles/Documents/Radiology/IHE_RAD_Suppl_MRRT.pdfThe goal of Radiology Reporting Enhancements Continuation which is a continuation of last years GSoC is to make it possible for reports to be created using these MRRT templates.",
                    "projectCode": "https://ivange94blog.wordpress.com/2017/08/27/gsoc-2017-final-report/"
                },
                {
                    "title": "Smarty Template Engine Removal and UI Redevelopment",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5295463016169472/",
                    "content": "This project aims to recreate all the features which are currently using Smarty Template Engine. This would involve the removal of all Smarty Template Engine dependent pieces such as Administration/Practice  as well as any other UI elements that are found to be using the Smarty package, and  replacing them  by native PHP or JavaScript . Additionally , this project would also be trying to improve the layout by improving the CSS as and where necessary without using any frameworks . If time permits, a new theme would be created. It would attempt to make the platform responsive across all devices.Moreover, currently type-validation/type-checking has not been done in an efficient manner throughout the project. This project would attempt to resolve all these related issues such as phone number formatting according to locations , which would also involve an improved use of database with the help of some efficient migration scripts .",
                    "projectCode": "https://gist.github.com/nileshprasad137/8cf19bbdcc7b38e6e54c191fd1c594bf"
                }
            ],
            "techStack": [
                "java",
                "php",
                "javascript",
                "mysql"
            ]
        },
        {
            "title": "LibreOffice",
            "orgLink": "http://www.libreoffice.org",
            "projects": [
                {
                    "title": "Implement QuarkXPress import filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5756673784283136/",
                    "content": "QuarkXPress is a desktop publishing application that was very popular in the 90s and early 2000, so there are lots of existing documents created in this application. Unfortunately it uses its own binary format and specifications are not publicly available.The goal of this task is to reverse engineer the document format produced by QuarkXPress 4 (and earlier versions, 3.1-3.3, they are similar) and implement import filter – a C++ library based on librevenge. Starting with QuarkXPress 5 the files are encrypted, but as far as we know, the last widely used version was 4.",
                    "projectCode": "https://alexp11223.github.io/qxp/gsoc-results"
                },
                {
                    "title": "Improve LibreOffice for Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6252965845270528/",
                    "content": "This project aims to work behind the scenes to improve the LibreOffice Android build system by switching from deprecated NDK GCC toolchain to a relatively newer and better toolchain-Clang, used to compile the native code in LibreOffice.\nApart from this, it proposes building of Mozilla’s NSS(Network Security Services) library for ARM and supporting it with LO Android which is using OpenSSL instead.",
                    "projectCode": "https://medium.com/@gautamprajapati/gsoc-final-submission-report-libreoffice-for-android-5623d011df41"
                },
                {
                    "title": "Improve SmartArt import in LibreOffice",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5394597169594368/",
                    "content": "SmartArt is a format of storing diagrams in Office Open XML files that was introduced in MS Office 2007.\nIt allows to separate data from a way of presentation resulting in complex diagrams generated from bullet list entries.Currently LibreOffice uses pre-rendered version of diagram included by Office 2010 and newer. Diagrams in Office 2007 files often appear blank.The aim of project is to extend support for loading and laying out SmartArt diagrams. It would make LibreOffice more compatible with OOXML files and allow eventually gaining full SmartArt functionality including editing and export.The project was started as improving VML import, but was soon changed.",
                    "projectCode": "https://lists.freedesktop.org/archives/libreoffice/2017-August/078396.html"
                },
                {
                    "title": "LibreOffice Online",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5605954791931904/",
                    "content": "Make important features known in LibreOffice(desktop version) and other leading office suites, available in LibreOffice online.",
                    "projectCode": "https://medium.com/@adityadewan/summer-of-code-with-libreoffice-6a657f24825b"
                },
                {
                    "title": "Migrating from legacy Parser to FastParser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5055363472687104/",
                    "content": "Most part of the ODF import uses legacy parser. FastParser is threaded, token based and faster than legacy parser. We aim to migrate almost everything to use FastParser and to make some more improvements to FastParser.",
                    "projectCode": "https://lists.freedesktop.org/archives/libreoffice/2017-August/078392.html"
                },
                {
                    "title": "Replace EditEngine binary clipboard with ODF filter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4859593897279488/",
                    "content": "EditEngine still uses a legacy StarOffice format with SfxItemPool binary serialization for copy/paste operations. This is a maintainability problem and the only user of SfxItemPool serialization outside of the table auto-formats. This should be replaced by using the ODF filter (xmloff) for copy/paste operations. The legacy format is used if we edit inside some text in Draw/Impress/Calc and copy a selection to the clipboard.The project involves modifying various modules like editeng, xmloff, svl, sfx, dtrans and applications like Draw/Impress/Calc to accommodate clipboard changes. Proper text selection needs to be handled before sending the data to the export filter. New comprehensive unit tests are also required to prevent regressions. This project will make LibreOffice better and more efficient.",
                    "projectCode": "https://github.com/varundhall/Google-Summer-of-Code"
                },
                {
                    "title": "Revamp the Customization Dialog",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5027011722477568/",
                    "content": "The Tools > Customization dialog lacks today on supporting means. For instance, it is not possible to search for a particular function. It also has an interface with focus on technical facts rather than the work-flow. With a redesign, the functionality should remain as it is, but updated so that average users are able to customize their program. Initial mockup: https://user-prompt.com/how-to-make-libreoffice-customization-usable/",
                    "projectCode": "https://gist.github.com/mrkara/a65fc6a92fc94fc9595b57131d79b743"
                },
                {
                    "title": "Solving Most Annoying Bugs for LibreOffice Android Viewer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6733490812878848/",
                    "content": "The proposed work will focus on Android Viewer’s most annoying bugs listed on Bugzilla. I grouped them into bugs, feature requests, and my own ideas. For each one, I provided details as to how to implement and where to go for help.",
                    "projectCode": "https://gist.github.com/uznomis/da8e5e893e469f38406d2101577b4492"
                },
                {
                    "title": "Usability of Special Characters",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6007196944957440/",
                    "content": "Special Characters are an integral part of LibreOffice. Its usability should be improved by providing new methods of interaction from the end-user perspective. A lot of new enhancements are required to make this feature at par with other competitive office suites. This project focuses on the recommendations of the design team and implementing it in the source code.",
                    "projectCode": "https://akkidevblog.wordpress.com/2017/08/21/gsoc-2017-work-product/"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "java"
            ]
        },
        {
            "title": "libvirt",
            "orgLink": "http://libvirt.org/",
            "projects": [
                {
                    "title": "Ease creation of containers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5915720986656768/",
                    "content": "Creating containers for libvirt LXC driver is a pain since there is no simple way to setup the root file system. A new workflow around container images is presented in http://bosdonnat.fr/system-container-images.html. This project is about moving the virt-bootstrap tool further, that is add more features to it and integrate it with virt-manager and virt-install for a smooth user experience.",
                    "projectCode": "https://www.redhat.com/archives/virt-tools-list/2017-August/msg00248.html"
                }
            ],
            "techStack": [
                "kvm",
                "xen",
                "hypervisor"
            ]
        },
        {
            "title": "Liquid Galaxy Project",
            "orgLink": "https://github.com/LiquidGalaxy/liquid-galaxy/wiki",
            "projects": [
                {
                    "title": "Fly Over Your Big Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6074492237381632/",
                    "content": "The aim this project is to develop a system that, making use of the Liquid Galaxy capacity to display information over an interactive map obtained from a big data analytics and mining process.\nFirstly, the data will be gathered from public data APIs and stored in a database to be processed later. This information will be related to historical weather conditions, water and energy reservoirs, earthquakes and other weather related information.\nSecondly, the data will be analysed under some kind of data analysis algorithm such clustering with K-Means algorithm or Regression Models making use of a Spark Uni-Node System running on the cloud and Python ( pySpark library).\nThe conclusions obtained from this data analysis will be shown on a external interface, such a website running in a server connected to the Liquid Galaxy.\nThis website will offer to the end-user, the possibility to seamlessly display the chosen information into Liquid Galaxy. Then the system will automatically send the corresponding KML files to Liquid Galaxy in order to display this information  in a descriptive and visual way, for example percentual polygons, polylines, etc.",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/FlOYBD/blob/master/docs/GSOC17.md"
                },
                {
                    "title": "SAVT (Smart Agro Visualization Tool)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6707810934980608/",
                    "content": "SAVT will be a software engine to visualize data of crop fields to Liquid Galaxy, allowing you to track his state.\nThis image data, collected by drones, planes or satellites, can be among others : vegetation map, vigor map, nitrogen map, irrigation sectors, dose of fertilizer and variability map.We plan to have access also to data collected by drone, and by different IoT (Internet of Things) platforms, with sensor arrays on the crop field. We'll also use the platform to visualize this data overlaid on the maps and with explanations in almost real time, such as temperature, hygrometry, wind, and others upon availability.The management interface will have the ability to show the analyzed data from a specific client, land or area.\nLikewise, it will also be possible to collect data from various sources and import images with their coordinates to show them to Liquid Galaxy where each crop field will show a pop-up balloon with all the information about it.Another functionality is the system integration with google assistant using actions SDK to make voice requests and having a conversational UI experience.",
                    "projectCode": "https://github.com/calv00/SAVT-Dashboard/blob/master/docs/GSOC17.md"
                },
                {
                    "title": "Wikimedia Data Liquid Galaxy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5863566930345984/",
                    "content": "Mainly the project has the purpose of showing some data in Liquid Galaxy (different options to choose by the user). The presentation will be so visual in the Liquid Galaxy monitors, and the information will be represented in a bubble and different shapes. There will also be the possibility to make a tour according to which is the chosen option. There will be many options, and the user interaction will be so funny and interesting.The point of communication between the user and the application will be necessary to develop a fluid interface. This interface will handle the connection with the API to obtain the data (SPARQL queries), then the treatment of data and classifying them according to the type, and at last sending to the Liquid Galaxy (KML file) to visualize the data in a map point.An important point is to know the data to be treated from the Wikimedia API. The data will have to be processed and save the values that will be useful. There are different use cases and according to these, we will work with some types of data or with others. At the end, the important is that the Liquid Galaxy visualization of the data will be simple and so the user obtains what he has requested.",
                    "projectCode": "https://github.com/LiquidGalaxyLAB/WikimediaDataProject/blob/master/docs/GSoC17.md"
                }
            ],
            "techStack": [
                "javascript",
                "ros",
                "gis",
                "cesiumjs"
            ]
        },
        {
            "title": "LLVM Compiler Infrastructure",
            "orgLink": "http://www.llvm.org",
            "projects": [
                {
                    "title": "Building bash-completion for clang",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6028167256997888/",
                    "content": "Shell completion is a function which developers use everyday. Typing \"ls -\" and pressing [tab] will return a list of probable options, and typing \"sudo apt ins\" and pressing [tab] will complete the last argument (in this case \"install\"). Since each command takes different arguments, shells need to be taught how to complete arguments for each command.The aim of this proposal is twofold:",
                    "projectCode": "https://docs.google.com/document/d/1ivQ3fkj5QmkFfwL4rTt2vDzo1WivegrJYemUCXZPols/edit?usp=sharing"
                },
                {
                    "title": "Clang-based C/C++ diff tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5575260673933312/",
                    "content": "I want to implement a structural diff tool atop of clang APIs that finds changes to the AST between two versions of a file. This would enable better visualizations of changes as well as semantic-aware merge tools.",
                    "projectCode": "https://github.com/krobelus/clang-diff-playground"
                },
                {
                    "title": "Enable Polyhedral Optimizations in XLA through LLVM/Polly",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4648576248446976/",
                    "content": "TensorFlow is a popular machine learning and deep learning framework developed by Google. Despite its recent launch in late 2015, it has been widely adopted both in industry and academia. The TensorFlow community recently (in Jan ’17) open sourced a JIT Compiler for linear algebra computations (XLA) to improve speed of execution and reduce memory usage of the program.The LLVM and Polly Labs community has developed an optimization tool, Polly, that works on Polyhedral representations of programs, performing automatic parallelization and data locality optimizations. Polly directly extracts this polyhedral representation of the program and then performs a number of loop optimizations, including tiling and vectorization.The problem statement I am proposing is, to enable Polly's optimizations for XLA. It is well understood that Polly's optimizations work especially well on programs involving deeply nested array update codes like stencils, dense linear algebra kernels, etc, and hence, have applicability in a machine learning library like TensorFlow.",
                    "projectCode": "http://pollylabs.org/gsoc2017/Enable-Polyhedral-Optimizations-in-XLA-through-LLVM-Polly.html"
                },
                {
                    "title": "Enabling Julia to target GPGPUs using Polly",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4839028788559872/",
                    "content": "Polly can now automatically offload suitable kernels to GPUs in the form of Polly-ACC, saving a lot of developer time and effort. Julia, a modern language built just for scientific computing from scratch, has much to gain from the productivity offered by Polly’s GPU offload capabilities which makes it appealing to seasoned researchers and novice programmers who’d want to leverage a GPU’s computational power with the least amount of effort. This project aims to integrate Polly-ACC into Julia and ensure it is able to accelerate compute-intensive parts of Julia programs by focusing on a set of representative benchmarks. It also aims to better optimise code using cues from run-time parameters, leveraging the opportunities that JIT compilation has to offer. This could be a stepping stone into making an LLVM powered language a preferred platform to program heterogeneous systems.",
                    "projectCode": "http://hpc-thoughts.blogspot.in/2017/08/wrapping-up-my-gsoc.html"
                },
                {
                    "title": "Improved Loop Execution Modeling in Clang Static Analyzer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6071606019358720/",
                    "content": "The current implementation of modeling a loop is quite simple in the Clang Static Analyzer. This simple approach results a loss of coverage, which indicates false negatives. There is already an implemented loop widening method in the Clang Static Analyzer.[1] However, it comes at the price that (almost) all of the MemRegions values will be invalidated. Hence, the false positive rate is relatively high in these paths. That is the reason it is not turned on by default but hidden behind a flag.\nMy project would aim to improve the simulation of the loops in general. Moreover, it would provide an extensible and incremental way of loop widening in which only the relevant regions are invalidated, and thus can be turned on by default.[1] https://reviews.llvm.org/D12358",
                    "projectCode": "http://lists.llvm.org/pipermail/cfe-dev/2017-August/055259.html"
                },
                {
                    "title": "ISL Memory Management Using Clang Static Analyzer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6018159446327296/",
                    "content": "Maintaining consistency while manual reference counting is very difficult. Languages like Java, C#, Go and other scripting languages employ garbage collection which automatically performs memory management. On the other hand, there are certain libraries like ISL (Integer Set Library) which use memory annotations in function declarations to declare what happens to an object’s ownership, thereby  specifying the  responsibility of  releasing it as well. However, improper memory management in ISL leads to invocations of runtime errors. Hence, my proposal is to employ a robust static analyzer in clang which raises warnings in case there is a possibility of a memory leak, double free, etc.",
                    "projectCode": "https://docs.google.com/document/d/1oC3qxh_q-Ly8DVsijcb4U5H8pkcA-19OR8NCeYthBN8/edit?usp=sharing"
                },
                {
                    "title": "ThinLTO Optimizations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6604432145907712/",
                    "content": "I would like to work on ThinLTO to improve and tune performance. This will require some analysis to determine what optimizations to add, as well as implementing some known optimizations that haven’t been included yet. Specifically, I would like to add more attributes to the ThinLTO indexes’ global variable and function summaries to increase performance.",
                    "projectCode": "https://gist.github.com/charles-l/d764ba4b4da9868cc92c400d9f701944"
                },
                {
                    "title": "Warn if virtual calls are made from constructors or destructors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4512343912349696/",
                    "content": "In C++, virtual functions let instances of related classes have different behavior at run time. Pure function called from constructors and destructors will make the C++ program crash and virtual function called from constructors and destructors may not do what you expect. This proposal is about implementing a path-sensitive checker to find virtual calls  made from constructors and destructors.",
                    "projectCode": "https://docs.google.com/document/d/1OL4w0HrvjgPY-zQb_p4yTMFDrYcjvxu0frcAjedLJs8/edit?usp=sharing"
                }
            ],
            "techStack": [
                "llvm",
                "clang"
            ]
        },
        {
            "title": "lowRISC",
            "orgLink": "http://www.lowrisc.org",
            "projects": [
                {
                    "title": "CMSIS-DSP on PULPino",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5520055446011904/",
                    "content": "I will implement ARM CMSIS library on PULPino using proposed priority, then i will port the implementation to its DSP core and compare results.",
                    "projectCode": "https://github.com/misaleh/CMSIS-DSP-PULPino"
                },
                {
                    "title": "Implementation of core lock step in the lowRISC SoC for use in cubesats.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5232658514706432/",
                    "content": "The upgraded role of cubesats, fueled by technological advances in the aerospace industry, that lower launch costs, has opened access to space for a wider audience. \nSpace is a harsh environment for microelectronics. Radiation induced Single Event Upsets can trigger bit flips in memory that could have catastrophic consequences rendering a cubesat useless. Current state of fault tolerance is to either use Rad-Hard electronics that their cost makes it suitable only for high profile missions or the use of Commercial off-the-shelf electronics that offer little protection.My proposal is to modify the lowRISC SoC, employing the Core Lock Step fault tolerant technique in minion cores by integrating a CLS assist unit, in order to be suitable for use in a cubesat mission.",
                    "projectCode": "https://nchronas.github.io/GSoC-2017/"
                },
                {
                    "title": "ORAM interface for RISC-V systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4566057310224384/",
                    "content": "Memory access is one of the most important operation done in modern processors thus it plays an important role in implementation of trusted execution environment. Recent secure processors and trusted environment encrypt memory contents to protect those important memory operations. However, sometimes just encrypting data is not enough since there are intelligent attackers who can see where the memory access goes to and infer where the real important data lies in. Those important data includes the private data, key, or OS fingerprint and else. These kind of attacks lead to concept of “memory obliviousness” to secure memory address itself. ORAM refers to Oblivious memory which can leverage obliviousness using specialized data structures and obfuscate memory access so even an attacker see or probe the memory access itself, he never learns about where important data lies on or even where the memory requests are headed to. Initially proposed by Goldreich and Ostrovsky, ORAM obfuscates memory access using random permutation, shuffling and encryption of contents. In this proposal, I’ll implement ORAM interface to support obliviousness on RISC-V’s trusted execution environment.",
                    "projectCode": "https://docs.google.com/document/d/1B6yjYxzuO0twFXVi-18TmCd6UkHh8DVzfFNctgMqz-Y/edit?usp=sharing"
                },
                {
                    "title": "RISC-V Simulator for education",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6309390843904000/",
                    "content": "This project aims to support the use of RISC-V in education by providing a simulator to step through assembly programs. This is a similar concept to how MARS (http://courses.missouristate.edu/KenVollmar/mars/) is currently used in education. By making a simulator that supports RISC-V, educators will have more variety in what they can teach leading to better learning outcomes of the students and will provide a path into working with RISC-V rather than simply working with MIPS.The first steps that will be taken to make this simulator will be surveying existing simulators to find pitfalls and potential strengths early. Additionally, the survey could potentially find an existing codebase that can be built upon easily to support RISC-V and allow this project to support more features.",
                    "projectCode": "https://github.com/TheThirdOne/rars/releases/tag/v1.0"
                }
            ],
            "techStack": [
                "verilog",
                "chisel",
                "risc-v",
                "linux"
            ]
        },
        {
            "title": "LuaRocks",
            "orgLink": "http://luarocks.org",
            "projects": [
                {
                    "title": "Social Enhancements for LuaRocks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4764164690018304/",
                    "content": "LuaRocks is a package manager for Lua modules, it's the home of hundreds of modules and a place where developers find and host them.Currently, LuaRocks doesn't offer features to allow users to have much interaction as a community besides  following modules. There are some examples over the Internet of platforms that host code but also gives a social experience to the users, giving them the opportunity to better interact with the community and the code, which ends up encouraging users to be more participative and contribute.",
                    "projectCode": "https://randstructure.wordpress.com/2017/08/23/gsoc-17-the-last-week/"
                }
            ],
            "techStack": [
                "lua",
                " lua",
                "luarocks"
            ]
        },
        {
            "title": "MariaDB",
            "orgLink": "https://mariadb.org",
            "projects": [
                {
                    "title": "Transformation of IN predicate into IN subquery based on implementation of table value constructor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4816368004235264/",
                    "content": "Now in MariaDB if in a query [NOT] IN predicate is used with a long list of values, SEL_TREE structures are built to check if the range access based on this predicate can be used. Building SEL_TREE structures takes a huge amount of memory. In this case it will be better to transform the predicate into [NOT] IN subquery with \n built over the list of values in its FROM list.This project includes addition of \n to SQL of MariaDB and implementation of the above-mentioned transformation.",
                    "projectCode": "http://gsocmariadbshagalla.blogspot.ru/2017/08/gsoc-2017-final-evaluation.html"
                }
            ],
            "techStack": [
                "mariadb",
                "mysql",
                "c",
                "c++",
                "java"
            ]
        },
        {
            "title": "Matrix.org",
            "orgLink": "https://matrix.org",
            "projects": [
                {
                    "title": "Bridging the gap between user and VoIP calls on Riot iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6323334589448192/",
                    "content": "The aim of this project is to improve the overall user experience of using VoIP calls in Riot iOS client by adding support of CallKit framework for iOS 10 and above, improving call alert view for users below iOS 10, adding new features and fixing current bugs.",
                    "projectCode": "https://gist.github.com/morozkin/b82381b60d6b88ef2a9316ba0feac707"
                },
                {
                    "title": "Cool enhancements and an advanced feature set for Riot iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4701182081630208/",
                    "content": "The purpose of this project is to implement some of that missing features as well as functionality that will be unique to the iOS client. Various advanced features will be implemented like CallKit, 3D Touch, Onboarding tooltips, etc.",
                    "projectCode": "https://gist.github.com/aramsargsyan/4d302e4c541b621d8c762be2d1909f90"
                },
                {
                    "title": "Improving Riot (+Analytics) and Matrix Discoverability",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6077083444838400/",
                    "content": "I've been personally using Riot and Matrix daily for months at this point and have seen many issues thrown around in the development rooms between the core developers. I have made it my task to alleviate some of these, Analytics for one, the devs have been driving blind as far as how people use the app so providing fully anonymous analytics is very important. Discoverability is currently another issue, Riot is a completely frontend application so spidering it is near-impossible, this can be solved through making a read-only server generated view for spiders to work on. Time permitted I will also touch on making a slightly more involved bridging library and look forward until federation stabilises so that I can make an S-S bridge (no HS needed)",
                    "projectCode": "https://bit.ovh/2017/08/24/GSoC-Wrapup-2017-Matrix-org/"
                }
            ],
            "techStack": [
                "react",
                " android",
                "ios",
                "golang",
                "nodejs"
            ]
        },
        {
            "title": "MBDyn",
            "orgLink": "http://www.mbdyn.org/",
            "projects": [
                {
                    "title": "Flight Dynamics Module, interaction with Flight Gear",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5367918577582080/",
                    "content": "Development of a MBDyn interface from-and-to Flight Gear, that easily lets to get current values of any arbitrary field from the Flight Gear Property Tree, or impose them in order to control Flight Gear using MBDyn as flight-dynamics model.\nThe interface must allow MBDyn-users to communicate with Flight Gear without the need to manage:",
                    "projectCode": "https://drive.google.com/drive/folders/0B-cxhr5OSUMMMlZuX3ZRaGk1cnc"
                },
                {
                    "title": "Improve Blendyn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5518252901924864/",
                    "content": "This project deals with improving and updating the capabilities of Blendyn, a post-processor for MBDyn.\nSome of the major deliverable for this project are:",
                    "projectCode": "https://medium.com/@janga1997/blendyn-the-post-processor-for-mbdyn-1e1d8e33695d"
                }
            ],
            "techStack": [
                "c++",
                "python"
            ]
        },
        {
            "title": "MetaBrainz Foundation Inc.",
            "orgLink": "http://metabrainz.org",
            "projects": [
                {
                    "title": "Add Rating System in CritiqueBrainz",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4845590961717248/",
                    "content": "Rating facility is a fundamental part of any review system. So, the idea of the project is to add the rating feature to the present review system in CritiqueBrainz. The implementation of the idea is in accordance with discussions on CB-244 (JIRA) and IRC.\nThe project will provide users ability to rate entities on a scale of 10. Furthermore, it will also allow to review just via rating i.e no text needed (CB-247).",
                    "projectCode": "https://blog.musicbrainz.org/?p=6428"
                },
                {
                    "title": "Add statistics and graphs to ListenBrainz",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5654870979772416/",
                    "content": "ListenBrainz has recently undergone a big overhaul and is now getting ready to stream its data to Google BigQuery for analysis and statistics generation. Right now, the user does not get any information from her data other than a flat list of listens. My proposal involves adding statistics and visualizations to ListenBrainz that would be informative and helpful to the user.",
                    "projectCode": "https://blog.musicbrainz.org/?p=6546"
                },
                {
                    "title": "Directly accessing MusicBrainz database in CritiqueBrainz",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5645658006487040/",
                    "content": "Presently, CritiqueBrainz uses python-musicbrainzngs to show search results and fetch information of selected entities. python-musicbrainzngs then uses the XML Web Service which returns the requested results. This is not very slow but some pages on CritiqueBrainz require a lot of MusicBrainz data, which takes very long time to retrieve. My project aims to speed up CritiqueBrainz by using the MusicBrainz database directly to fetch the entity information.",
                    "projectCode": "https://blog.musicbrainz.org/2017/08/28/gsoc-2017-directly-accessing-musicbrainz-db-in-critiquebrainz"
                },
                {
                    "title": "Picard v2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6524665476415488/",
                    "content": "Picard is going to be receiving a complete make-over code/feature/UI wise for v2.0. A part of the v2.0 plans is porting the existing code to PyQt5/Py3 to allow for future support and better encoding compatibility along with new features of Qt5(such as High DPI scaling, better widget and networking support and better cross-platform compatibility) and along with all the bug fixes that come with PyQt5 which will help clean up the code-base for Picard.This GSoC proposal aims to do a bare port of the Picard to Py3 and Qt5 along with setting up the foundation for v2.0. The port will be based off stable v1.4.1 code.",
                    "projectCode": "https://sambhavkothari.blogspot.in/2017/08/500-commits-of-summer-my-story-of-foss.html"
                },
                {
                    "title": "Search for Entities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6185857249705984/",
                    "content": "Search function for all entities (similar with the current edit search)",
                    "projectCode": "http://users.utu.fi/ttmart/gsoc/"
                }
            ],
            "techStack": [
                "postgres",
                "perl",
                "python",
                "javascript",
                "bigquery"
            ]
        },
        {
            "title": "Metasploit",
            "orgLink": "http://metasploit.com",
            "projects": [
                {
                    "title": "Add vulnerabilities to Metasploitable3, reduce Bugs, work on enhancements and customisation feature",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5563877265768448/",
                    "content": "Not everyone could setup Metasploitable 3 with ease (as mentioned in Github issues: https://github.com/rapid7/metasploitable3/issues). This is because the installation cannot be resumed from where the error occurred. I would like to do the following:",
                    "projectCode": "https://gist.github.com/Chan9390/cc011f85bae3909c9410f39845421eb4"
                },
                {
                    "title": "Improving stager payloads especially on non-Windows platforms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4749387720818688/",
                    "content": "Hi, I’m a computer science university student from Japan.  I’m interested in binary exploitation and reverse engineering. I like software development, especially security tools. Metasploit is most famous exploitation tool in world, of course I often use it and, want to contribute it. Therefore, I’m most interested in this GSoC project. I have good experience with C and Ruby programming and debugging, exploiting. I can solve these tasks.",
                    "projectCode": "https://github.com/rapid7/metasploit-framework/commits/master?author=tkmru"
                }
            ],
            "techStack": [
                "ruby",
                "c",
                "asm"
            ]
        },
        {
            "title": "Microkernel devroom",
            "orgLink": "http://www.microkernel.info/",
            "projects": [
                {
                    "title": "Make Redox Self-hosting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6599330798501888/",
                    "content": "In order to build Redox on Redox, Rustc has to be ported, along with Cargo, and any dependencies (such as LLVM). Additionally, the build process currently requires make and a Bourne-compatible shell, which will have to be ported, or a way to build without them provided.LLVM seems to assume it is running under Windows or Unix. So the code in lib/Support/Unix and lib/Support/Windows likely needs to be reimplemented for Redox.",
                    "projectCode": "https://redox-os.org/news/gsoc-self-hosting-final/"
                },
                {
                    "title": "Porting LwIP to the GNU/Hurd",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4564115985006592/",
                    "content": "The Hurd is the kernel of the GNU system. It consists on the GNU Mach microkernel and several user-space servers that offer most of the functions that usually a kernel offers, one of these functions is a TCP/IP stack. Currently, in the Hurd this stack if offered by the pfinet server, a port of the Linux 2.2 TCP/IP stack. This stack should be replaced since it is obsolete and lacks important features like PPP support. In this project, we will port LwIP TCP/IP stack to the Hurd to replace pfinet.",
                    "projectCode": "http://lists.gnu.org/archive/html/bug-hurd/2017-08/msg00035.html"
                },
                {
                    "title": "Porting MINIX3 to Raspberry Pi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5859737430130688/",
                    "content": "The MINIX3 has already supported ARM-based platforms such as BeagleBoard. The goal of this project is port the MINIX3 to the RaspberryPi. The task requires changing booting process, because it doesn't allow have more than one platform.\nAlso, some of RaspberryPi drivers such as USB, SDCard, SPI, I2C, etc. must be implemented.",
                    "projectCode": "http://wiki.minix3.org/doku.php?id=soc:2017:portrpi"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "rust",
                "arm",
                "x86"
            ]
        },
        {
            "title": "Mifos Initiative",
            "orgLink": "http://mifos.org",
            "projects": [
                {
                    "title": "Android Field Officer v4",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5969571823484928/",
                    "content": "The current android app (v3) for Bank Staff Officers has several features. However, there is a vast scope of improvements and feature enhancements compared to the web-app counterpart, ranging from some providing more features like Collection sheets features to implementing a better UX to adding Summary and Reports. This project deals in updating the current version on the android client and provide even more and better features so as to make the task of the field officers easier than what it is now. I’m proposing the below deliverables ordered by priority, among which implementation of Collection Sheets feature will be my highest and first priority. I’ve also added some features/modules which I’d like to finish if I get some time after finishing the high priority tasks.",
                    "projectCode": "http://tarun-mudgal.blogspot.in/2017/08/gsoc-2017-experience.html"
                },
                {
                    "title": "AngularJS Web App Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5668834455322624/",
                    "content": "The community-app (AngularJS Web app) is the standard application which is built on top of the Fineract platform and provides all the core functionality for the most common methods of financial inclusion and products and services. In this project, I propose to make further enhancements in the user interface and performance of the community-app by ensuring the following things(1) Implementing Wizard UI (2) Improve collection sheet UI (3) Redesign loan and summary savings pages (4) Implement UI for workflows & data table entity checks",
                    "projectCode": "https://docs.google.com/document/d/1YWSP2ek2gNdTufpPkFCVD1fHC7fNVgfHo6fUd6QvM8M/edit?usp=sharing"
                },
                {
                    "title": "AngularJS Web App Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5261241253625856/",
                    "content": "The AngularJS Community App is the standard application on the Mifos X distribution that provides all the core functionalities for the most common methods of financial inclusion and products and services.I propose to make additional UI enhancements.",
                    "projectCode": "https://gist.github.com/Anh3h/ad945ffeb2064dc31f103e150879f0c6"
                },
                {
                    "title": "Browser-Based Offline Access",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5784180365459456/",
                    "content": "Browser-Based Offline Project aims to run the Mifos Community web app offline. User can access the web even without any internet connection but they need to cached the data by traversing through it. This Project uses Service workers API ,it's libraries and various progressive web app features to make it a progressive web app. This project aims to target more users where internet is not so good or not so easily available 24*7.",
                    "projectCode": "https://gist.github.com/mbj36/105c47ccc10890cc4c71582ad63cff23"
                },
                {
                    "title": "Mobile Wallet Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5863386004848640/",
                    "content": "This project aims to create a mobile wallet framework based on top of Fineract and clean architecture. This mobile wallet framework will provide a powerful tool that nicely compliments the Apache Fineract back-end. The project will have a core wallet module with all the use cases, data and domain layers and there will be front end apps based on top of this module. The project contains an India specific app that integrates the core wallet module with the UPI (Universal Payments Interface)",
                    "projectCode": "https://github.com/openMF/mobile-wallet"
                },
                {
                    "title": "Self Service app Version 2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4979766276915200/",
                    "content": "The development phase of Self Service app 2.0 includes :-",
                    "projectCode": "https://medium.com/@dilpreet2028/my-gsoc-journey-with-mifos-initiative-a9d0834f347f"
                },
                {
                    "title": "Self Service Web App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4636272777756672/",
                    "content": "The self-service web app needs to be developed from scratch, A set of API are available for the smooth development of the project. The proposal defines a set of features that need to implemented, along with clear implementation details which maintain the Mifos coding standard also there are attached mockups. The proposal contains a specific timeline for when a feature set will be implemented and gives a detail in depth understanding for the self-service app that would be achieved during the Google Summer of Code.",
                    "projectCode": "https://docs.google.com/document/d/1ZOA4ZiV2uEbn4Q8Sj-wf3YFYvZP7U20XWm5L0EtNXQk/"
                },
                {
                    "title": "Self Service –USSD Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5608016376233984/",
                    "content": "Even with a very basic mobile phone, the solution allows the users to gain direct control to their finances and perform basic banking activities of viewing account transactions, outstanding balances of loans etc.\nBy the end of the project, I hope to build a USSD banking application which supports the banking needs of the poor community, thereby contributing to the Mifos foundation and its mission to fight poverty.",
                    "projectCode": "https://docs.google.com/document/d/1cZ9tkLbcUMUTAGpgaJYEALkFQHEcXTEKloMRFolv2ro/edit?usp=sharing"
                },
                {
                    "title": "Self-Service - Android App Version 2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4920774095798272/",
                    "content": "Though Mifos recently released a client facing API to enable clients to interact with their own data through self service channels. Previously all client operations were performed by a back office staff. Last year, Mifos built a self-service android application which enables clients to authenticate themselves, view and edit their account details, make repayments or transactions between their own accounts. This application is a major breakthrough as it puts direct mobile banking in the hands of microfinance clients who use Mifos.\nAs with every great product, there is a lot of room for improvements or enhancements.",
                    "projectCode": "https://gist.github.com/vladimirfomene/37bd38a289d0e9a0570b132735002868"
                },
                {
                    "title": "Two-Factor Authentication for Mifos",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5125657726025728/",
                    "content": "Fintech software requires strong overall security as there is a lot of sensitive information stored. All aspects of the solutions have to be secure. Passwords are single points of failure as they are the only obstacle that an attacker has to overcome to be granted access to private information.The goal of the project is to implement Two-Factor authentication for Fineract and add support for 2FA to the community-app and the Android client. With two-factor authentication enabled the system administrator will have the ability to configure how one time passwords are sent to the user - either via Email or SMS. The integration of two-factor authentication would improve the security of Fineract and its users.",
                    "projectCode": "https://gist.github.com/MegaAlex/1d03f19680981d4146276aa4f91ff945"
                }
            ],
            "techStack": [
                "java",
                "android",
                "angularjs",
                "spring",
                "mysql"
            ]
        },
        {
            "title": "MIT App Inventor",
            "orgLink": "http://appinventor.mit.edu/",
            "projects": [
                {
                    "title": "Background-powered Components",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5007150451523584/",
                    "content": "Components are the building blocks of app inventor. They can be visible i.e. they are part of UI interface or they can be non visible i.e they are not part of the UI screen but provide access to built-in functions of the device. All components in app inventor are part of some screen or activity which means that if the screen is not visible or the screen is destroyed by the Android system, the components stop running. An example of this is the Pedometer component which stops running when the phone screen is off. Ideally, a pedometer app would want to keep running once started in the background until the user of the app explicitly stops it. To enable such behavior it is necessary to run such components in a background process and re-start the process every time the system kills it.",
                    "projectCode": "https://github.com/JoyMitra/appinventor-sources/blob/joy_dev/My_GSOC_Contribution.md"
                },
                {
                    "title": "IoT: Android Things Integration on the MIT App Inventor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5159698563072000/",
                    "content": "Internet of Things (IoT) is a fast growing field of where sensors are monitoring appliances, actuators, and machines, as well as controlling them remotely, over the Internet. It has helped to create pervasive smart things that integrate computation into everyday environments and link them through Web and Cloud applications. This evolution is impacting our lifestyle and thus quickly and easily creating applications to leverage full potential is of paramount importance. This project is an effort to realize that goal, by integrating the Android Things SDK on the MIT App Inventor platform.",
                    "projectCode": "http://thilankam.github.io/android-things/"
                },
                {
                    "title": "Menu Options for App Inventor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5300616976924672/",
                    "content": "With this project, we will be able to provide one of the most sought out feature i.e menu options in applications developed from App Inventor. In current days android applications, menu options is one of the critical feature to provide your users, easy access to some of the basic features such as Search, Log out, About us, FAQ’s, Settings, Help, etc. As hundreds of applications has been developed using App Inventor on the daily basis, it would be high time to provide the menu options to App Inventor community.",
                    "projectCode": "https://medium.com/@vishwajeetsrivastava/final-report-gsoc17-with-mit-app-inventor-475ceb47e118"
                },
                {
                    "title": "Visualization components for App Inventor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6571566519287808/",
                    "content": "A new component of App Inventor for users to display charts on Android device. I discussed the general idea as well as some details of implementation in this proposal.",
                    "projectCode": "https://github.com/kirliavc/blog/blob/master/gsoc17.md"
                }
            ],
            "techStack": [
                "java",
                "javascipt",
                "app",
                "google app engine",
                "gwt"
            ]
        },
        {
            "title": "Mixxx DJ Software",
            "orgLink": "http://mixxx.org/",
            "projects": [
                {
                    "title": "Crate Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6536228870553600/",
                    "content": "-Create hierarchical structured crates [https://bugs.launchpad.net/mixxx/+bug/671632]\n-Add search filters [https://bugs.launchpad.net/mixxx/+bug/1402133]\n-Implement smart crates",
                    "projectCode": "https://mixxx.org/wiki/doku.php/crate_enhancements"
                },
                {
                    "title": "Multi-broadcasting for Mixxx",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5942841154994176/",
                    "content": "Implement several features potentially useful for users willing to broadcast live with Mixxx :",
                    "projectCode": "https://www.mixxx.org/wiki/doku.php/multi-broadcasting"
                }
            ],
            "techStack": [
                "qt",
                "c++",
                "c++11",
                "midi",
                "hid"
            ]
        },
        {
            "title": "mlpack",
            "orgLink": "http://www.mlpack.org/",
            "projects": [
                {
                    "title": "Better Benchmarking for mlpack Libraries",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5967819476828160/",
                    "content": "There are many mlpack methods that have been added since the previous benchmarking system was build and they need to be benchmarked. These include ANN, Decision Trees, Hoeffding Tree and more. \nThere are many Machine Learning libraries like mrtp,annoy, Tensorflow, spark-Mllib, astroML in Python and libraries like CARET, randomForest, e1071,etc in R and dlib-ml in C++ and Accord.Net also which have not been benchmarked. There are some implementations in sklearn which need to be upgraded to add more options and some need a change in the value of the default parameters to support the latest version of sklearn. So if chosen to work on this project my aim would be to implement Machine Learning algorithms in some of the libraries not benchmarked as well as upgrade the current codes to support latest version of these libraries.",
                    "projectCode": "http://mlpack.org/gsocblog/benchmarking-mlpack-libraries.html"
                },
                {
                    "title": "Cross-Validation and Hyper-Parameter Tuning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4812231682293760/",
                    "content": "Solving a problem with machine learning algorithms is often a tedious process that requires many experiments before things start to work. The project aims to add to mlpack essential tools automating this process - tools to validate and tune hyper-parameters - to help you find one of the best configurations for a machine learning algorithm.",
                    "projectCode": "http://mlpack.org/gsocblog/cross-validation-and-hyper-parameter-tuning-summary.html"
                },
                {
                    "title": "Deep Learning Modules",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5410328963710976/",
                    "content": "Implementation of RBM, ssRBM, GAN and stacked GAN",
                    "projectCode": "http://mlpack.org/gsocblog/deep-learning-modules-summary.html"
                },
                {
                    "title": "Frank-Wolfe Algorithm for Sparse Optimization and Regularization of Atom Norms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6108214575759360/",
                    "content": "It is known in Jaggi's paper that the traditional OMP algorithm for sparse optimization problems could fit into FW type algorithm. This generalized the usage of FW algorithm to unconstrained optimization problem with sparse solution. I would implement the variants of FW type algorithm, including the unconstrained case using different atom norms, and unify them into the same code structure.Furthermore, it is easy to add regularization on atom norms for this unconstrained FW type algorithms. The benefit of doing this is twofold, Firstly, it can give faster convergence speed in optimization. Secondly, the freedom of adding different regularization parameters usually gives better results in applications. I will add this functionality in the code and compare the performance in these 2 aspects.Moreover, I will try real world problems such as dictionary learning that will call this FW solver, to give a further demonstration and comparison of the usage of the solver I implemented.",
                    "projectCode": "https://github.com/mlpack/blog/blob/master/content/blog/ChenzheSummary.md"
                },
                {
                    "title": "GSoC '17 \"Augmented RNNs\" project proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4583913502539776/",
                    "content": "I am applying to work on the GSoC 2017 Augmented RNNs project.\nI am currently a first-year Software Engineering student from Astrakhan State University (Astrakhan, Russia). I have already taken some coursework on machine learning. For example, I have finished the Machine Learning and Data Mining specialization on Coursera (Russian-language specialization from Moscow Institute of Physics and Technology, certificate link: http://bit.ly/2nnuh03). I also passed Artificial Intelligence course at UC Berkeley (on edX, certificate link: http://bit.ly/1K6B2sR). \nI’m already fairly familiar with deep learning. For example, recently I implemented optimality tightening from “Learning to play in a day” (https://arxiv.org/abs/1611.01606) for the AgentNet (“Deep Reinforcement Learning library for humans”, https://github.com/yandexdataschool/AgentNet). Here is the merged pull request: https://github.com/yandexdataschool/AgentNet/pull/88.\nI am interested in this project because it offers me a challenge while sharpening my knowledge of machine learning.",
                    "projectCode": "http://mlpack.org/gsocblog/augmented-recurrent-neural-networks-summary.html"
                },
                {
                    "title": "GSoC-2017: Build testing with Docker and VMs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6043647661309952/",
                    "content": "The objectives of the project are as:",
                    "projectCode": "https://github.com/mlpack/jenkins-conf"
                },
                {
                    "title": "Neural Evolution Algorithms on NES games",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6671506918604800/",
                    "content": "The goal of my project is to implement multiple neural evolution algorithms ie.\n● NEAT - Neural Evolution through Augmented Topologies\n● Hyper-NEAT - Hyper Neural Evolution Through Augmented Topologies\n● CNE - Conventional Neural Evolution.\n● CMA-ES - Covariance Matrix Adaptation - Evolution Strategy\nWith added features, to write tests and finally using various tasks as benchmarking tool\nto compare all four algorithms and make a research paper.",
                    "projectCode": "https://github.com/kartik-nighania/Google_Summer_of_Code_2017"
                },
                {
                    "title": "Neural Turing Machines",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6637623116300288/",
                    "content": "One of the gems dug up by Deep Mind in the field of neural learning is Neural Turing Machines. By extending the capabilities of a simple neural network by attaching a memory to it, neural networks are able to learn simple algorithms such as copying sorting and etc. The project involves implementing a Neural Turing Machine in the current ANN framework and testing it with the preliminary algorithms.In addition, I will also implement batch normalization and GRU cell as part of my project. Batch normalization is an effective technique which has become an essential component in stabilizing the deep network learning. GRU cells are essentially simple forms of LSTM cell, yet for some tasks have been proven to converge faster. Also, GRU cells have lesser parameters, making them more prone to overfitting and stable towrds training.",
                    "projectCode": "https://gist.github.com/sumedhghaisas/a214fedab1123863b7f337bb60c1c8fa"
                },
                {
                    "title": "Parallel stochastic optimization methods",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6110309311840256/",
                    "content": "The free lunch is over and with the ever increasing amounts of data to be analyzed and processed by learning algorithms, we need to find methods for harnessing the processing power available in the form of increasing number of threads in modern CPUs. Optimizers are integral parts of modern machine learning algorithms, forming the backbone of the training infrastructure. Recent research in methods of optimization has revealed a few interesting algorithms for scaling the performance of sequential optimizers over multiple threads. This project proposal looks over the implementation of two primary approaches to parallelizing stochastic optimization algorithms in mlpack.",
                    "projectCode": "http://mlpack.org/gsocblog/profiling-for-parallelization-and-parallel-stochastic-optimization-methods-summary.html"
                },
                {
                    "title": "Reinforcement Learning Framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4800276775043072/",
                    "content": "This projects will implement a framework for double deep Q-Learning and some asynchronous methods for DeepRL including asynchronous one-step Q-learning, asynchronous one-step Sarsa, asynchronous n-step Q-learning and asynchronous advantage actor-critic. It will also refactor the existing neural network components to make it more compatible with DeepRL.",
                    "projectCode": "http://mlpack.org/gsocblog/deep-reinforcement-learning-methods-summary.html"
                }
            ],
            "techStack": [
                "c++"
            ]
        },
        {
            "title": "Mobile Robot Programming Toolkit (MRPT)",
            "orgLink": "http://www.mrpt.org/",
            "projects": [
                {
                    "title": "Algorithm improvements to KD-Tree module: applications to ICP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6710140954738688/",
                    "content": "Nanoflann is a C++ library provided by MRPT for building KD-Trees. The library is a fork of the widely-used FLANN C++ library and is mostly optimized for lower dimensional point clouds. Most ICP algorithms for robot SLAM and localization require finding nearest neighbor in 2D/3D point clouds. Support for dynamic point clouds and nearest neighbour query in non flat spaces are two paramount features which are missing in the current nanoflann library.",
                    "projectCode": "https://gist.github.com/pranjal-rai/307e178d023b9a4b5455ca9ca8383344"
                },
                {
                    "title": "GUI app to benchmark image feature detectors and descriptors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5222489240109056/",
                    "content": "Computer Vision-based application for robotics rely on extracting meaningful features from images which can be used to perform many tasks like place recognition, place categorization, tracking, Visual Odometry, SLAM, object detection, object recognition, etc. All these tasks rely on a set of key-points and descriptors that describe them. Each of the features/key-points are associated with some sort of key signatures (called descriptors of those key points). Many existing methods for detection/description of these features exists, each descriptor has certain properties that are suitable for certain vision applications. Some of the existing methods include SIFT, SURF, BRISK, FAST, ORB,AKAZE, LATCH, LSD/BLD (lines), etc. Some of the detectors already provide descriptors but some of them do not, so different combinations of descriptors can be used. In this project a GUI application is built which evaluates these descriptors/key-points. The app also provides a means to benchmark these features for certain vision tasks like Visual Odometry, Tracking and Place Recognition. A second mini project of extending the MRPT ROS package to playback MRPT Datasets in ROS RViz is also implemented.",
                    "projectCode": "https://github.com/MRPT/GSoC2017-discussions/issues/3"
                },
                {
                    "title": "MVSim development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5296787476709376/",
                    "content": "Many contemporary robotic applications need precise simulation and prognosing of system dynamics. Making a lightweight application that is tailored to analysis of vehicle dynamics and accurate simulation of typical robot will allow developers simple workflow with simulated robotics systems.",
                    "projectCode": "https://github.com/MRPT/GSoC2017-discussions/issues/2"
                },
                {
                    "title": "New GUI app to visualize and edit robot-made maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5244103260372992/",
                    "content": "I would like to develop a new GUI application based on Qt 5.5 or next version that should be able to load data in the simplemap format and visualize it as a set of different metric maps. Also, it should allow editing robot poses to fix errors in automatic SLAM algorithms.\nI want to integrate my application in CMake main project of MRPT.",
                    "projectCode": "https://gist.github.com/LisGein/1ad3951ecc8a67d4915a59ae042b9f45"
                }
            ],
            "techStack": [
                "qt",
                "c++",
                "opengl",
                "wxwidgets",
                "ros"
            ]
        },
        {
            "title": "Mono Project",
            "orgLink": "http://www.mono-project.com/",
            "projects": [
                {
                    "title": "A ccache tool for managed languages",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6644152808767488/",
                    "content": "After looking at the tool that is available for C/C++ i can say for sure that we can implement this in Mono. Thanks to the deterministic inputs from Roslyn this won't be a pain in the back and we can simply port the libraries from C++ or make our own.",
                    "projectCode": "https://gist.github.com/dcalance/1c00325484abbff4e4dfcf422d12d0f4"
                },
                {
                    "title": "Clang Sanitizers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5976305258463232/",
                    "content": "Unlike proposed, I will evaluate Clang's ThreadSanitizer as well as the AddressSanitizer as these two sanitizers seem more pressing to the Mono community. First, I will look into ways to inject these sanitizers into the Mono runtime and get a feeling for the feedback that they provide. Depending on the feedback, I will then try to fix races / overflows myself or - at least - file bug reports and discuss those issues with the community. Besides working on the races and overflows themselves, I plan to write two articles for the website; one of the articles should explain using the ThreadSanitizer in combination with the Mono runtime and the other one should explain the AddressSanitizer.",
                    "projectCode": "http://www.mono-project.com/community/google-summer-of-code/reports/2017/clang-sanitizers/"
                },
                {
                    "title": "CppSharp / Maintenance & Improvement tasks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4950860073271296/",
                    "content": "An introduction to myself to the Mono team and a planning about the CppSharp / Maintenance & Improvement tasks\nproject. I tried to explain the way that i am thinking of working on the tasks and i am willing to implement as many as i can.",
                    "projectCode": "https://gist.github.com/ktopouzi/4eea6da89b1277c451d4358a55510298"
                },
                {
                    "title": "CppSharp / Maintenance & Improvement tasks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4836388860067840/",
                    "content": "CppSharp is a tool and set of libraries which allows programmers to use C/C++ libraries with high-level programming languages (such as C#). It is a tool that takes C/C++ header and library files and generates the necessary glue to surface the native API as a managed API. Such an API can be used to consume an existing native library in your high-level code or add scripting support to a native codebase. The supported target languages at present are C# and C++/CLI. It can also be used as a library to parse native code into a syntax tree with a rich declaration and type information model. This, thus, demands a lot of improvements and maintenance tasks as per the feedback from the users over the course of time. So, I'll try to fix as many bugs as I can and add as many new useful features that I can.",
                    "projectCode": "https://gist.github.com/mohtamohit/0f25af3fdc6633af8d51d19f5281f99f"
                },
                {
                    "title": "Import Some Synchronization Primitives from CoreRT into Mono",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6462738356240384/",
                    "content": "The goal is to replace Mono's BCL implementation of System.Threading.EventWaitHandle, System.Threading.Mutex and\nSystem.Threading.Semaphore synchronization primitives by CoreRT ones. This would allow us to get closer to .NET Core code quality and behaviour.System.Threading.EventWaitHandle – class allows threads to communicate with each other by signaling and by waiting for signals. Event wait handles are wait handles that can be signaled in order to release one or more waiting threads. After it is signaled, an event wait handle is reset either manually or automatically.System.Threading.Mutex  – one of the synchronization primitive that is an implementation of synchronization mechanism for enforcing limits on access to a resource in an environment where there are many threads of execution.System.Threading.Semaphore – one of the synchronization primitive used to control access to a common resource by multiple processes in a concurrent system such as a multiprogramming operating system.",
                    "projectCode": "https://github.com/mono/mono/pull/5054#issue-236569175"
                },
                {
                    "title": "Import System.IO.Pipes.PipeStream from CoreFX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4850405351620608/",
                    "content": "Mono is a open source development platform based on the .Net Framework and allows developers to build cross-platform applications. Mono's .NET implementation is based on the ECMA standards for C# and the Common Language Infrastructure. It includes both developer tools and the infrastructure needed to run .NET client and server applications on Linux, Microsoft Windows, Mac OS X, BSD, Sun Solaris, Nintendo Wii, Sony PlayStation 3, Apple iPhone and Android.The implementation of Pipe Streams in Mono doesn't support some functionalities such as parallel builds on msbuild. CoreFX is the foundational libraries for .NET Core. The implementation of Pipe Streams in CoreFx fixes the previous problems. So, the goal of the project was to import System.IO.Pipes.PipeStream from CoreFX to Mono. Doing this, new features are offered by Mono.",
                    "projectCode": "https://gist.github.com/Geotha/cdf874466248e4230439923ea24bb4d0"
                },
                {
                    "title": "Lambda support in debugger expression evaluator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4995744360562688/",
                    "content": "I’d like to add a lambda support in Immediate Pad. There are roughly 2 tasks: Task1. Compile lambda expression locally using Roslyn API along with the current context of debuggee\n  Task2. Add a new wire protocol command type for bytecode for the lambda expression. The debugger agent registers the bytecode in Mono Runtime and sends back its handle to the debugger.We have to compile the body of a lambda expression and resolve some difficulties such as variable references and substitutions in the body. Then, compiled bytecode should be sent to the debugger agent with the protocol for lambda. A challenging thing of this project would be injecting new bytecode which either refer or change variables in the debuggee’s context.",
                    "projectCode": "https://docs.google.com/document/d/1OFOPZu8uDrZPxyrVuw7QADznypkX1sOIvTG4OmcAmW4/edit?usp=sharing"
                },
                {
                    "title": "Overhaul MonoDevelop C/C++ Addin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5874545135190016/",
                    "content": "Addin system of MonoDevelop/Xamarin Studio (http://www.monodevelop.com/download) is very flexible and allow the developers to add or extend any feature in the IDE .CBinding addin allow the developers to use C/C++ for writing the solution. However, there are still many features that are missing, some of them are :-1) Ability of the CBinding to use compilers present on Windows (GCC/MSVC/MinGW32), this will also require support for CMake as that's the only project format CBinding currently has .2) Implement support and switching between various Toolchains available in CMake.3) Detect missing dependencies (libclang, CMake etc) and prompt the user to install them.4) Adding various refactoring features .There are many other things that can be done to make it even more better like improving project and file templates, improving code completion, adding a test suite etc . Since old \"MD1\" project system is no longer supported so it can also be removed.Main purpose of this proposal is to come up with an idea to implement some of these features and make changes to the existing ones.",
                    "projectCode": "http://monosoc.blogspot.com/2017/08/student-post-monodevelop-cc-extension.html"
                },
                {
                    "title": "QtSharp - Mono/.NET bindings for Qt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6266305476820992/",
                    "content": "I would like to complete the QtSharp project which aims to provide Mono/.NET bindings for Qt.",
                    "projectCode": "https://gist.github.com/ddobrev/7f75b5685f652c091a13643bcbe5ec9e"
                }
            ],
            "techStack": [
                "c#",
                ".net",
                "f#",
                "c"
            ]
        },
        {
            "title": "Moodle",
            "orgLink": "https://moodle.org/",
            "projects": [
                {
                    "title": "Improve End-to-End Testing in the Mobile App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5514133491417088/",
                    "content": "The project aims to enable the Moodle Mobile App with fully automated End-to-End testing capabilities with SauceLabs and Travis CI using latest upgraded versions of Node, Protractor, Gulp, Appium, Selenium with latest Moodle Mobile App v3.3.0 [~15/5/2017].Integrating SauceLabs and TravisCI enables a completely automated build on Travis along with End-to-End testing on SauceLabs’ Browsers, Mobile/Tablet Android Emulators, Mobile/Tablet iOS Simulators [and Real Devices exclusively for premium users]. In case of any failure in Travis build, debugging can be easily done as SauceLabs provides the actual video and screenshot logs of all the tests for 30 days [only metadata & screenshots after that] and TravisCI restores the build log for the lifetime of a repository.",
                    "projectCode": "https://github.com/moodlehq/moodlemobile2/pull/1126"
                }
            ],
            "techStack": [
                "php",
                "jquery",
                "mysql",
                "postgresql",
                " javascript"
            ]
        },
        {
            "title": "MovingBlocks",
            "orgLink": "http://www.terasology.org",
            "projects": [
                {
                    "title": "Anatomy System and Genome integrations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5304929124089856/",
                    "content": "Currently, Terasology has a simple HP bar for a character's health and no anatomy. This project aims to add anatomical body parts (like head, arms, legs etc.) to creatures and implement a Dwarf Fortress style health system which has effects on specific body parts (like a broken leg from falling) instead of an overall HP system. Another part of this project would be to integrate the Genome module for genetics effects with other modules like SimpleFarming and WildAnimals.",
                    "projectCode": "http://arpan98.github.io/2017/08/23/gsoc-wrap-up-post.html"
                },
                {
                    "title": "API(s) for out-of-game interaction with Terasology server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4624709383618560/",
                    "content": "The main goal of my project is implementing an HTTP/WebSocket server running inside the game server process that will allow access to Terasology functionalities for players and server admins (for example kicking players, teleporting, changing game properties, adjusting game time, etc - according to user permissions) through those protocols, and appropriate user-friendly clients to interact with the service.",
                    "projectCode": "https://gist.github.com/gianluca-nitti/80cef8062b0cc15a734c28943943676a"
                },
                {
                    "title": "Behavior Trees",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4934034270453760/",
                    "content": "[from the proposal's synopsis]For my Google Summer of Code project, I want to complete Terasology’s behavior tree AI implementation, to the point where it is easily usable by module authors and generally whomever wants to give their mobs behavior of any kind.The end result would be a well documented behavior system living in the Behaviors module with pre-defined behaviors, behavior nodes, easy hooks from a behavior node to check an Actor’s status, or communicate with other Actors. \nThe project would also include tutorials, predefined behaviors and example creatures using the system.",
                    "projectCode": "https://dkambersky.github.io/tera/2017/08/24/google-summer-of-code-2017-final-report.html"
                },
                {
                    "title": "Better blender md5 exporter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4912248854151168/",
                    "content": "Improving the current md5 exporter for blender which is better suited to the needs of Terasology. The script will automate most of the tasks while providing an easy to use GUI for the blender environment. Features like automating triangulation of faces, separating faces, exporting multiple animations, creating a prefab file for specific AI animations and GUI development will be implemented during this project. Using the bpy library for blender script will be written in python.",
                    "projectCode": "https://kartikey0303.github.io/GSOC-wrapup"
                },
                {
                    "title": "Destination Sol Resurrected",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6754962965004288/",
                    "content": "Started back in 2015 as a demo, Destination Sol is a Space Shooter that gives the player a chance to be the captain of his own fantasy ship, fighting enemies and looting gold. After the initial hype settled down, the developers who originally made the game drifted off to other projects, and Destination Sol came to be managed by Moving Blocks. However, the game has gone too long without updates, the associated tools that were once used to create assets for the game are no longer functioning, and a lot of features just leave the player discontent. This proposal aims to change all that, and more.",
                    "projectCode": "http://forum.terasology.org/threads/gsoc-2017.1896/#post-15188"
                },
                {
                    "title": "Exploration World- Improved gameplay",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4610784562774016/",
                    "content": "Add WildAnimals, Puzzles, Exploration and other content to create a new gameplay module.\nThe new gameplay module would pack together the best of whatever is created yet, to create a new gameplay setting that would add meaning and purpose for the end user.",
                    "projectCode": "http://nihal111.github.io/2017/08/15/GSoC-wrap-up.html"
                },
                {
                    "title": "Physics-based Combat System",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5617791721799680/",
                    "content": "Currently, Terasology lacks a proper Physics-based combat system. Basic combat, based entirely on proximity and angles, can be simulated currently but creating a combat system that could use high velocity projectiles and reacts with environment much more dynamically(bouncing off surfaces) will be an important addition to the gameplay. The proposed project aims at restoring much of the functionality of old branch of the legacy combat system while also improving the Combat based AI for computer controlled characters. The project also aims at defining the characters in anatomical way with different body parts and susceptible to disease.",
                    "projectCode": "https://gist.github.com/0shine0/aba355bbc437b57b3c5d8aaeaa2a0296"
                },
                {
                    "title": "Sectors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5120865616265216/",
                    "content": "The focus of this project is to add sectors to the Terasology engine. Sectors are a level of entity storage between block-scope and world-scope, which allows entities that would usually be put in the global scope to be split into multiple groups. Each of these groups can be run on a separate thread, or even on a separate server node.Sector-level entities are still loaded when their chunks are unloaded, allowing simulations to continue when the player is away, but they can be stopped if a whole sector is unloaded to increase performance.",
                    "projectCode": "https://vizaxo.github.io/permalinks/gsoc2017/"
                },
                {
                    "title": "Telemetry System for Terasology",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6620829257302016/",
                    "content": "Telemetry System for Terasology has two goals: to gather players' gameplay information and to gather their error logs enriched with system details. Telemetry for Terasology will help developers know better about player's experience and improve the game. NOTE that the whole telemetry stuffs depends on user's options.This project requires both work on client side and on server side. On client side, the snowplow tracker lib is used to track metrics and the Logstash appender is used to report errors. On the server side, ELK stacks and snowplow tools are used to collect metrics, analyze and visualize data.",
                    "projectCode": "https://gabrielxia.github.io/gsoc2017Final.html"
                },
                {
                    "title": "Terasology Scenario Creation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5756370854871040/",
                    "content": "The inspiration for this proposal is from elements of Minecraft along with some pre-existing suggestions and ideas within Terasology. The concept of Scenarios has been suggested in the past and would be very important in order to properly develop any notion of “static” worlds such as what would exist for Light & Shadow. In addition, it would provide assistance to creation of exploration worlds such as the suggested Maze world.The implementation of scenarios can be thought of as basically creating a “game maker” style engine built into Terasology.As additional smaller, but very important goals attached to this idea, I intend to extend the currently existing tools for creation which mostly include BlockPicker and StructureTemplates both of these tools work well at what they do, but both are still limited for large creations as they require placing everything by hand. This is where the brush tool I propose can come in handy. The brush tool is designed to allow for “brush-strokes” being made using blocks to quickly create large structures and terraforming. These brush tools would allow for the following interactions.",
                    "projectCode": "https://thompsontyler.github.io/gsoc/2017/08/25/scenario-gsoc.html"
                }
            ],
            "techStack": [
                "java",
                "opengl",
                "blender",
                "json",
                "gradle"
            ]
        },
        {
            "title": "Mozilla",
            "orgLink": "https://www.mozilla.org/",
            "projects": [
                {
                    "title": "about:telemetry redesign",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5253441056145408/",
                    "content": "about:telemetry is present on all builds of Firefox as a way for users to view the data being stored and sent via Telemetry. It was built before Firefox had multi-process Telemetry and without a clear design. This has resulted in a confusing HTML UI and barely-comprehensible JS.The redesign will allow any users to understand what telemetry is and what data is sent, but it will also make it possible for developers to access the data faster, and in a more simple way.",
                    "projectCode": "https://gist.github.com/flyingrub/f0922b898347ba0bc59a687872a7c40b"
                },
                {
                    "title": "Adding Collaboration Features to Thimble",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4603459227615232/",
                    "content": "The audience of Thimble largely consists of teachers, educators and students. One of the most requested feature in thimble is collaboration. \nRight now only a single user can work on a project. \nThe aim of the project is to allow multiple users to edit the same code at the same time.\nThe project would also include adding other features like chat, comments etc. that promote Collaboration.",
                    "projectCode": "https://medium.com/@harkiratsingh_17231/collaboration-in-thimble-formerly-thimble-and-remote-mentorship-7d8645763850"
                },
                {
                    "title": "Boost Session Restore Performance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5361967900393472/",
                    "content": "Session Restore is important as a key feature of Firefox. Many people rely on it to re-open a tab from the past or recover from an unfortunate power outage. This project's goal is to make the process snappy and blazing fast.",
                    "projectCode": "https://beekill95.github.io/GSOC-final-evaluation/"
                },
                {
                    "title": "Canvas for Study Group Event Page",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4929299337445376/",
                    "content": "The current page of  Study Group Event needs enhancement as to provide information about Study Group Programs and Events. Through this page, people learns about events at individual Study Group globally.  During my internship, I would like to import the details of the event, add features to the website and provide statistics i.e, activities on the Study Group page and from all of the forks of the Study Group. The main purpose of the project is to provide visualization and automation.",
                    "projectCode": "https://github.com/mozillascience/studyGroupStats"
                },
                {
                    "title": "Convert XUL to HTML",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4902015960350720/",
                    "content": "Lightning has traditionally been using XUL for its user interface. To modernize, we would like to convert dialogs, tab content and other parts of the user interface to HTML. The new components should use web standards as much as possible, avoiding extensive use of third party libraries.",
                    "projectCode": "http://gsoc17-convert-xul-to-html.herokuapp.com/"
                },
                {
                    "title": "Firefox Developer Tools: CSS Grid Inspector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6321798064898048/",
                    "content": "I will be adding and refining existing features to Firefox Devtools' CSS Grid Inspector tool. One major feature I will be working on is the grid outline tool. This tool allows for developers and designers to interact with a CSS grid layout highlighted by the CSS Grid Inspector. It gives users the ability to visualise grid cells, areas, positioning, and line names in an intuitive way. This feature will be shipped inside the new layout panel with Firefox Developer Tools.I initially implemented this feature as part of the Undergraduate Capstone Open-Source Program for an applied studies course during the Spring 2017 semester. Although it has come a long way, it still needs polishing.",
                    "projectCode": "https://tigleym.github.io/GSoC-Work-Submission/"
                },
                {
                    "title": "GitHub Issue Parser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6251557632868352/",
                    "content": "The purpose of this project is to create a software tool that is capable of parsing popular online version control repositories, like GitHub, via their public APIs in order to detect open issues of projects, classify them based on several predefined configurable criteria and serve them via a public RESTFul API.A complimentary web application will also be created in order to consume this API and visualize the results of this service in an elegant and useful way.",
                    "projectCode": "https://medium.com/@razat249/google-summer-of-code-2017-report-4a86370b2b71"
                },
                {
                    "title": "Implementing some of the WebExtension APIs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6641819030913024/",
                    "content": "We will be implementing browsingData and contextMenu APIs of WebExtension (a cross-browser system) for android firefox. There are some bugs related to web-extension, which will also be resolved under this project. Detailed overview can be found at https://wiki.mozilla.org/Community:SummerOfCode17/AndroidWebExtensions.",
                    "projectCode": "https://shatur.github.io/gsoc_report.html"
                },
                {
                    "title": "Improve bug filing interface for bugzilla.mozilla.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6530427040825344/",
                    "content": "At present, bugzilla.mozilla.org uses enter_bug.cgi to file bugs. This is particularly unwieldy due to a lot of reasons like two hop db access, backend template rendering and multiple views. This project aims at improving the current bug filing scenario by creating a new single page interface to file bugs, thereby increasing the overall performance and usability",
                    "projectCode": "https://medium.com/@sebastinsanty/google-summer-of-code-2017-report-8f3958b610a8"
                },
                {
                    "title": "JSON in Sqlite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4562196939931648/",
                    "content": "JSON is a nice format to store data and it has become quite prevalent. If we are not overwhelmed by the diversity of JSON now, we soon will be. There will be more JSON, of more different shapes, as the number of connected devices and the information they generate continues to increase. Unfortunately, databases do not handle it well, often a human is required to declare a schema that can hold the JSON before it can be queried.Created a Python SQLite connector to store JSON documents in SQLite so that they are accessible via SQL(using JSON Query Expressions). This will serve a basis for a general document-relational map(DRM), and leverage the database’s query optimizer. It is also responsible for making the schema and changing it dynamically as new JSON schema are encountered and to ensure that the old queries against the new schema have the same meaning.There is a test suite to confirm the expected behaviour: testing a variety of JSON forms and the queries that can be performed on them. Most tests are further split into three different output formats: list, table and cube. There is also a connector for Elastisearch and these two will be merged sometime in future.",
                    "projectCode": "https://github.com/mozilla/jx-sqlite"
                },
                {
                    "title": "Livelog Proxy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4596748609650688/",
                    "content": "TaskCluster workers are hosted on services such as EC2 and currently expose ports to the internet to allow http-clients to call API endpoints. This setup may not be feasible in a data center setup. Livelog proxy aims to mitigate this problem by allowing workers to connect to the proxy over an outgoing websocket connection and exposing API endpoints to the internet. Any incoming requests will be reverse proxied to the worker over its outgoing connection. This is implemented as a distributed system to handle high amounts of traffic.",
                    "projectCode": "https://ckousik.github.io/gsoc/2017/07/19/Final-Work-Product.html"
                },
                {
                    "title": "Matrix Protocol Support for Instantbird.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6565953802338304/",
                    "content": "Matrix is an open, decentralized protocol for instant messaging (and more!) It has bridges to many other networks and protocol, e.g. IRC, Slack, and more. Initial support for Matrix was added in bug 1199855, but there's a lot to do still :\nSupport more features from the Matrix SDK (video/audio calls, room topics, typing notifications, read receipts and a lot more.)\nSupport one-on-one conversations.\nAdd tests specific to Matrix.\nImprove the Matrix JS-SDK that Instantbird and Thunderbird depend on.\nImproving and expanding shared code and APIs used by all JavaScript protocol plugins (IRC, XMPP, Yahoo and Twitter).\nImproving documentation of the process for adding a protocol to Instantbird/Thunderbird.\nUsing the Matrix protocol on a day-to-day basis to dog-food the code.",
                    "projectCode": "https://drive.google.com/open?id=0B44DN8uUf9JOZUJ5MEVzQ0VQU00"
                },
                {
                    "title": "MDN Documentation Tester WebExtension",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5889065882746880/",
                    "content": "Note: This is one of Mozilla proposed SubjectRewrite the MDN doc tester add-on as a (well-tested, modern, documented) WebExtension that runs in Firefox, Chrome, Opera, and possibly Edge. Ideally reach feature parity with the existing Add-on SDK add-on and if time allows work on new test ideas that run against the MDN documentation.",
                    "projectCode": "https://github.com/mdn/doc-linter-webextension/wiki/Google-Summer-of-Code-2017"
                },
                {
                    "title": "Migrate Balrog’s Admin API to OpenAPI-Specification",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4914423181344768/",
                    "content": "Balrog is the software that runs the server side component of the update system used by Firefox and other Mozilla products. It helps ship updates faster and with much more flexibility than it's predecessor AUS (Application Update Service). However, Balrog's Admin API is mostly hand-written code, with some usage of wtforms for validation. It largely works, but it has some rough spots and inconsistencies. The move to an OpenAPI Specification will have multiple benefits including less code maintenance, multiple UI and backend bug fixes, better documentation and easier for clients to visualize and interact with API’s resources. Connexion, a framework designed for flask-based applications, will be used to handle HTTP requests based on OpenAPI Specification of the API to map the endpoints to the Balrog’s existing methods for serving the requests.",
                    "projectCode": "https://gist.github.com/aksareen/1546b0028a2a486650ea609849c65b95"
                },
                {
                    "title": "Mozilla Science Lab: science.mozilla.org phase 2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5957547123015680/",
                    "content": "This project is about implementing a bunch of features from phase 2 of science.mozilla.org",
                    "projectCode": "https://gist.github.com/arush0311/2cc23a584276ec5922a9036bfd1a7eec"
                },
                {
                    "title": "Off-main thread HTML parsing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4601125449760768/",
                    "content": "The goal of this project is to fully implement off main thread, speculative HTML parsing. Performing HTML parsing on a separate thread gives rise to the following performance gains:",
                    "projectCode": "https://cynicaldevil.github.io/blog/2017/08/24/async-html-parsing-in-servo.html"
                },
                {
                    "title": "Rust Language Server (RLS)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5225094271991808/",
                    "content": "The aim of this project is to improve the Rust developer experience via the Rust Language Server by introducing few notable improvements. The scope includes supporting more workspace configurations (multiple targets and active crates) as well as popularly requested IDE features, such as implementing code action mechanism on the server side, e.g. used for refactoring or running specific tests, or improving diagnostic data required for better code navigation. Providing good out-of-box IDE experience will substantially help with widespread adoption of Rust and support writing not only quality self-contained libraries, but also incentivize writing advanced end-user oriented applications.",
                    "projectCode": "https://xanewok.github.io/gsoc/2017/wrapping-up-work-for-gsoc/"
                },
                {
                    "title": "SemVer compatibility tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6563424871907328/",
                    "content": "The goal of this project is to develop and implement a scheme to verify a library crate's adherence to the semantic versioning specification in the Rust language. This would allow to simplify the process of stabilizing and releasing libraries on crates.io, as many mistakes can be automatically guarded against.",
                    "projectCode": "https://github.com/ibabushkin/rust-semverver/blob/master/doc/gsoc.md"
                },
                {
                    "title": "Servo Custom Element Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6610955932794880/",
                    "content": "The custom element API allows javascript authors to create reusable web components. The author can create custom element constructors and setup callbacks for when various reactions occur on the element such as when its attributes are mutated. While this was possible in the past with non-standard elements, this API allows authors to have more functionality and ensures that these custom elements will not be broken by future changes to the web platform. While this is a new API, new web frameworks such as A-Frame and Polymer are built using custom elements. As the usage of custom elements increases, it will be important that Servo supports this API.",
                    "projectCode": "https://github.com/cbrewster/gsoc2017"
                },
                {
                    "title": "Streams API in PDF.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4984791925522432/",
                    "content": "This project aims to implement Streams API polyfill for PDF.js, and use it for networking and rendering purpose. PDF.js current uses xhr for networking to fetch data, but it is inefficient in terms of memory as it has to buffer all the response. As xhr is an ever growing buffer, it stores all the data in its internal buffer, this uses lots of memory. Using Streams API, we can use the response incrementally and pass it for parsing and rendering as soon as it is received, hence there is no need to buffer the whole response. For rendering purpose, PDF.js makes chunks of data by parsing pdf commands in worker thread. After chunking the whole data, it is passed to the main thread for painting. Buffering the entire data in the worker thread uses a huge amount memory, and main thread also has to wait for the entire data to be parsed. This creates inefficiency in terms of memory and speed. Using Streams API, we can send the chunks from worker thread to main thread as soon as they are created, reducing the memory usage and increases speed. Since Streams API is a new technology, using it in PDF.js will test Firefox's implementation.",
                    "projectCode": "http://mukulmishra.me/blog/GSoC-Final-Submission/"
                },
                {
                    "title": "View Details of Performance Test Results on Perfherder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4930051225157632/",
                    "content": "Perfherder is the dashboard which monitors and analyses performance tests run against Mozilla\nproducts. Currently, Perfherder provides aggregated results and graphical visualization of various\ntest suites, but not for the individual test numbers that are used to generate them. For tests where there is a large natural variation in these individual numbers, it can be difficult to determine if there is a regression when the summarized values change because there could be many different underlying reasons for that. For these cases, a detailed view of the individual test results would be extremely helpful.The project will be about creating an easy-to-use web interface for visualizing this data that integrates well with the existing Perfherder views.",
                    "projectCode": "https://github.com/mozilla/treeherder/commits?author=SJasoria"
                }
            ],
            "techStack": [
                "js",
                "rust",
                "html/css",
                "c++",
                "python"
            ]
        },
        {
            "title": "MuseScore",
            "orgLink": "https://musescore.org",
            "projects": [
                {
                    "title": "Improving the Accessibility of MuseScore for Visually Impaired Musicians",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5691957217067008/",
                    "content": "The goal of the project is to improve keyboard accessibility so that visually impaired users can use MuseScore for score creation as well as score reading. Particularly, the aim is to make score editing possible through the use of keyboard only, eliminating the need for the mouse. This will allow blind users to use MuseScore for score editing, and will also benefit sighted users who feel that using the keyboard is more efficient.",
                    "projectCode": "https://musescore.org/en/user/930801/blog/2017/08/26/gsoc-2017-work-product-accessibility"
                },
                {
                    "title": "Start-Up Wizard for MuseScore",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6552515386540032/",
                    "content": "The project idea that I would like to implement is a start-up wizard for MuseScore. This idea stems from the idea of implementing keyboard layouts and shortcut management. Every MuseScore user has a different profile. At the beginning of the program, we could ask users different questions to help configure MuseScore better for their use. Some of these questions include a user’s language, keyboard layout or their level. We could then use this information to toggle settings and set up MuseScore in a way that enhances their process of writing scores. The wizard will be available to users after setting up in the form of an easy-to-use configuration panel that can aid users in their score writing process.",
                    "projectCode": "https://musescore.org/en/user/1214841/blog/2017/08/26/gsoc-2017-final-work-product-submission"
                },
                {
                    "title": "Timeline Navigator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5830531652517888/",
                    "content": "The timeline is a possible alternative to the existing navigator tool. It would display an abstract view of the score, distilling it down to measure numbers, key signature, time signature, and tempo changes, as well as a list of the instruments. These would be displayed in a grid format. The user can select a spot on the grid and be automatically placed there in the scroll. Many features would exist to help the user navigate the timeline and understand the abstraction.",
                    "projectCode": "https://gist.github.com/JoshuaBonn1/906556e3fa93578b9fc5e1912355e6c7"
                }
            ],
            "techStack": [
                "c++11",
                "qt5",
                "qt",
                "breakpad"
            ]
        },
        {
            "title": "National Resource for Network Biology (NRNB)",
            "orgLink": "http://www.nrnb.org/gsoc.html",
            "projects": [
                {
                    "title": "Adding support for PSIMI-TAB format to the Disease Variant Impact (DV-IMPACT) Database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6329480956084224/",
                    "content": "The goal of the project would be to add support for PSIMI-TAB format to the admin tools of the DV-IMPACT database and allow the upload and download of PPI network data in the same format.\nCurrently, the data upload can only be performed by the database admin. The objective is to create registration and user profile system that allows users to register and upload their own data independently without the need of the database admin to be involved in the upload process.The summarized goals would be:The Project fulfills all these issues by:Link to the evaluation task: http://dvimpact.herokuapp.com/Github Repo: https://github.com/jajodiaraghav/DV-IMPACT",
                    "projectCode": "http://jajodiaraghav.github.io/gsoc/"
                },
                {
                    "title": "Cytoscape app for GraphSpace (CyGraphSpace)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5197057262354432/",
                    "content": "The overall goal of the project is to create a Cytoscape app (CyGraphSpace) for syncing networks from Cytoscape to GraphSpace and vice-versa. Conceptually, the app will be similar to the CyNDEx app, which syncs Cytoscape networks with NDEx.Currently, users can sync between Cytoscape and GraphSpace manually by following the given steps:\nCytoscape to GraphSpace: First, export a network and its accompanying style file in Cytoscape to JSON files. Then upload these JSON files to GraphSpace using its web interface.\nGraphSpace to Cytoscape: Download a graph’s JSON and style JSON files from GraphSpace and then import these files into Cytoscape.CyGraphSpace will allow users to upload graphs and their styles directly from Cytoscape to GraphSpace without manual intervention and saving of files thus enabling a Cytoscape user to seamlessly share their networks on the web via GraphSpace. A user can also quickly import GraphSpace graphs into Cytoscape, analyze them with other Cytoscape apps, possibly make modifications, and then re-upload them to GraphSpace. This project will also require creating a well-documented Java library that interfaces with the GraphSpace REST APIs.",
                    "projectCode": "https://rishabhsethi.com/blog/2017/08/26/google-summer-of-code-final-report/"
                },
                {
                    "title": "Cytoscape.js Extension for Querying Large Networks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5725721968246784/",
                    "content": "Traversal-based graph algorithms are good at extracting “subgraphs of interest” when applied to large networks. However, applying known algorithms may not be enough every time to extract the useful information. Some specialized queries may be helpful in this sence to extract more useful or more specific information. Actually, these types of queries are already implemented inside the PATIKAweb software that is a result of the study done by Doğrusöz et al. in Java programming language. The aim of this project is to move these implementations into the common use of developers by making an extension to Cytoscape.js, which is a commonly used graph drawing library written in Javascript. Cytoscape.js already includes some basic graph traversal algorithms such as DFS, BFS, Dijkstra, Bellman-Ford, Kruskal etc., but I believe that these specialized queries will provide a good functionality to be used in not only in biological networks, but also in other types of networks. With the advantage of compound node support in Cytoscape.js, these specialized traversal algorithms will also be easily applied to the large networks with compound node content.",
                    "projectCode": "https://docs.google.com/document/d/1Le_tQxiBct3Z6wIvD7azYkh5XjpCOvYEaEb-rV1ifSI/edit?usp=sharing"
                },
                {
                    "title": "cyTRON: a Cytoscape app for the visualization of evolutionary trajectories in cancer progression",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5141157457690624/",
                    "content": "TRONCO is an R package that implements state-of-the-art algorithms for the inference of cancer progressions with the ultimate goal of understanding the evolutionary trajectories driving tumor evolution. In such a multidisciplinary domain, where computer scientists actively cooperate with biologists, being capable of visually understanding the data is crucial to both parties. cyTRON is a Cytoscape app that was designed for this purpose, i.e., mapping the features provided by the TRONCO R package to a user-friendly and accessible interface.",
                    "projectCode": "https://github.com/BIMIB-DISCo/cyTRON/blob/master/README.md"
                },
                {
                    "title": "Develop a Synthetic Biology Publication Workflow that Leverages the Synthetic Biology Open Language",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5878091972870144/",
                    "content": "A large goal of both the SBOL and synthetic biology communities is to develop a useful and comprehensive workflow from experiment to publication. Many SBOL-compliant tools already exist which perform distinct and useful functions ranging from component design, modeling, composition, simulation, figure creation, storage, sharing, and publication. In 2016, ACS Synthetic Biology recommended that all authors submit genetic designs using SBOL. An example workflow for doing so was published in 2016 (Hillson), and each of the parts of the workflow can be fulfilled by extant tools, but the integrations between tools can be made more robust.  For example, the SynBioHub service allows for storage and sharing of SBOL parts, VisBOL allows for creation of SBOL visual images from SBOL files, and iBioSim and SBOL Designer allow for creation and composition of SBOL parts. SBOL Designer and iBioSim allow for upload of parts to an instance of SynBioHub, but there are many opportunities to improve this workflow with authentication, security, and sharing capabilities.",
                    "projectCode": "https://medium.com/sbol-workflows/latest"
                },
                {
                    "title": "Develop a web service which provides simulation / steady state analysis / parameter estimation with SBML models",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4634484729184256/",
                    "content": "In systems biology, it is very important to formalize the model for biological phenomenon and analyze based on this model basically constructed by ordinary differential equation(ODE). The model is normally described by SBML and there are several software tools to create the model easily. Regarding the analysis, this is considered as simulation, steady state analysis and parameter estimation. These methodologies are mathematically formalized and the library to analyze already exists. However, establishing the environment of analysis is difficult for biologists. Therefore, this is the obstacle to analyze ODE model easily. This project implement the web application to execute these analysis solving this problem. Web application does not require complicated establishment of analysis environment for users. This project removes the barrier for users to analyze ODE model.",
                    "projectCode": "https://docs.google.com/document/d/1w79CfEBhsOZvShZw-yDWfA2o2ZOUkmkUO9mk0midilQ/edit?usp=sharing"
                },
                {
                    "title": "Developing a Cluster Computing Framework for Dynamical Modeling",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4700839692206080/",
                    "content": "Integrating the existing Tellurium project with Apache Spark and by which the computations or simulations can be run in parallel. Developing an API for running different scenarios like parameter scanning, parameter fitting, sensitivity analysis etc.",
                    "projectCode": "https://medium.com/@s.asifullah7/a-never-ending-journey-58b33da05409"
                },
                {
                    "title": "Developing a web interface for DoMo-Pred",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4664231135805440/",
                    "content": "The aim of this project is is to develop a web interface for DoMo-Pred which can help to simplify the analysis of protein-protein interactions in yeast, or, if possible, in all kinds of organisms.Just upload or input pairs of protein IDs and run then the web interface will return the result and researcher can easily share the result with their colleagues and visualize the network of those interactions with significant scores.\nAlso, the result after sort with significant scores can be used for performing other analysis.",
                    "projectCode": "https://gist.github.com/ankanch/2fd83be30010470a15a08a603ad3a19a"
                },
                {
                    "title": "Extending the IBW Biocompilation Interface with SBOL and SBML Import/Export Capabilities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4988269775290368/",
                    "content": "The Infobiotics Workbench (IBW) is a synthetic biology design tool with three major functionalities: stochastic simulations, which mimic the procession of complex biological pathways; verification of simulation rulesets; and biomatter compilation. Its simulations are driven by designs written in the domain-specific Infobiotics Language (IBL), which contains data that is then sent to the Biocompiler to be built into a Biocompiler Model internal structure.\nCurrently, IBW offers limited support for two standard biological languages, the functionality-based Systems Biology Markup Language (SBML) and the design-based Synthetic Biology Open Language (SBOL), a common medium of exchange for synthetic devices. While SBML is made use of by the simulation aspect of IBW, the design-based SBOL is used by the Biocompiler as a format to write its compiled design into. This project aims to enhance the Biocompiler’s ability to export and import SBOL and SBML. If IBW’s capacity to work with these two biological modelling standards is improved, its accessibility to computational biologists around the world would increase dramatically. Hence, this project will enable this integration.",
                    "projectCode": "https://github.com/BoyDun/IBW_SBML_SBOL_Export"
                },
                {
                    "title": "Implement GeneMANIA in Julia for High-performance Computing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6478670940078080/",
                    "content": "The aim of the project is to Implement GeneMANIA in Julia to optimize netDx for high-performance computing.The current Java-based implementation of GeneMANIA scales poorly on compute clusters because of the interaction Java's memory management with the architecture of these systems. Removing this bottleneck would allow netDx to handle datasets on the order of 10K-100K patients, 100-1000X larger than the size of current datasets.Julia is a high-level programming language, with syntax similar to Matlab and Python. It provides efficient matrix representation and built-in parallel execution capabilities, making it better suited for high-performance computing (HPC). In addition to optimizing netDx for HPC, the network integration algorithm will be tuned for problems specific to netDx, such as having relatively fewer nodes and more networks.",
                    "projectCode": "http://memoiry.github.io/ModMashup.jl/dev/GSoC.html"
                },
                {
                    "title": "Implement Network Quantity Information measure in CentiScaPe #64",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5576937992880128/",
                    "content": "CentiScaPe is a Cytoscape application used to calculate a number of different node centralities of an optionally weighted network, both directed and undirected, as well as plot the results by using real and normalized values in different plots. Several centrality measures are available: degree, average shortest path, eccentricity, closeness, betweenness, centroid, stress, radiality, eigenvector, edge betweenness, bridging centrality, etc.This project aims to implement a brand new centrality measure based on Shannon entropy called Network Quantity Information. This measure aims to quantify the entropy of a given network, by firstly calculating the entropy of its nodes and edges which can then be observed as a type of centrality measure. Once all the node and edge centralities are obtained, we can derive from them the complexity of the whole network, which provides us not only with an interesting “one-value” description of the network, but also gives us the ability to compare multiple networks, or multiple parts of the same network.",
                    "projectCode": "https://github.com/ibestvina/centiscape-net-quantity-information.git"
                },
                {
                    "title": "Implementation of a Python Library for GraphSpace RESTful APIs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6114016405487616/",
                    "content": "In this project, we would be aiming to implement a python library for the GraphSpace RESTful APIs. Implementing such a library will be boon for the GraphSpace users as they can integrate it directly in their Python based applications. A well organized documentation will also be maintained. Furthermore, we plan to document the RESTful APIs themselves using RAML and also generate a test suite for testing the RESTful APIs documented in RAML.",
                    "projectCode": "https://summerofcode17.wordpress.com/2017/08/25/my-journey-with-graphspace-through-gsoc-2017-final-submission/"
                },
                {
                    "title": "Improvements in Tool for Curating Biological Maps in SBGN",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5082708053065728/",
                    "content": "SBGNViz is a Cytoscape.js based library for viewing biological maps in Systems Biology Graphical Notation (SBGN) notation. ChiSE is a library based on SBGNViz to add editing  facilities  for  construction  of  SBGN  maps  or  modification  of  existing  ones. The aim of this project  is  to  design  and  implement  new  features  for  the  ChiSE editor library as well as improving existing ones.",
                    "projectCode": "https://docs.google.com/document/d/15o8IdyfAtjLDhsBFRGPCoykA-vDae2FxckyFachZaak/"
                },
                {
                    "title": "Interconversion of the SBML and SBGN Modelling Languages using Semantics of Logic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6428665978028032/",
                    "content": "Systems biology researchers study the network of molecular interactions within a biological system and publish the deduced models in a diagram format. Many XML variants were developed to represent diagrams, including SBML and SBGN. However, SBML can represent much more complex models than SBGN. For example, the SBML qual extension package can mechanistically describe events in its models, such as the relationship that A activates C, B activates C, but A and B cannot activate C at the same time. The SBGN Activity Flow language can describe a similar relationship, but the relationship is represented visually only, and therefore is not stored in its model. The incompatibilities between SBML and SBGN prevent direct comparison between the models.In this project, I will build tools to support bidirectional conversion between SBML and SBGN, which acts as a machinery to map between SBGN-specific and SBML-specific information. SBML Layout package will be used to represent SBML diagrams, and the SBML qual package used to store the logic model.Blog: http://haleyyew-gsoc.blogspot.ca/Repository: https://github.com/NRNB-GSoC2017-SBML2SBGNML-Converters/SBML2SBGNML",
                    "projectCode": "https://github.com/NRNB-GSoC2017-SBML2SBGNML-Converters/SBML2SBGNML/tree/GSoC_2017_final_submission"
                },
                {
                    "title": "libGPML library to read and write GPML files",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4563894257319936/",
                    "content": "Currently it is required to include the whole PathVisio core module which is much bigger and already contains PathVisio specific visualization aspects, also with the current data model it is difficult to find out the connections between two elements in the pathway. This automatically makes any graph algorithms which could be used to analyse the pathway very inefficient.A general GPML library should only contain the data model, the functionality to read and write GPML files and relevant importers and exporters to other often used file formats so it can be easily integrated in other applications.The main goal of this project is to create a separate GPML library to read and write GPML files in Java which can be used by PathVisio, the WikiPathways app for Cytoscape and many other applications.",
                    "projectCode": "https://github.com/PathVisio/libGPML/blob/master/gsoc2017.md"
                },
                {
                    "title": "Notification system for GraphSpace",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4654282246717440/",
                    "content": "GraphSpace is an user-friendly web-based platform that collaborating research groups can utilize for storage, interaction, and network sharing. A GraphSpace user can import graphs created in Cytoscape, upload them through a REST API, interact with them by customizing and saving layouts, share them within and between groups of collaborators, search for different graphs, and organize them using tags. The goal of this project is to build a notification system for GraphSpace which will allow a user to track important activities on GraphSpace via notifications, the purpose being to keep users on par and current with their GraphSpace activity. In doing so, there will three type of notifications: Group, Owner and Watching.",
                    "projectCode": "https://gist.github.com/melvin15may/2ae50b6904844a8fa390030321394a3f"
                },
                {
                    "title": "OpenGL-accelerated Renderer for Cytoscape 3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5315142019448832/",
                    "content": "Cytoscape is an open source software platform for visualizing molecular interaction networks and biological pathways. It integrates these networks with annotations, gene expression profiles and other state data. Visualizing a complex network requires a great deal of calculations, thus takes a long time to render large networks with original software-based engine. This project aims to replace the original Cytoscape-2D engine with one taking advantage of high speed GPU calculation and delivering much better efficiency.\nThe proposed project’s goal is to build an optimized renderer that works faster with rendering a large network, has the ability to draw more nodes and can be displayed better on high-resolution screens based on previous work. Additionally, as the low level of Cytoscape System, the new renderer should be compatible with the system while easy to maintain and test.",
                    "projectCode": "https://github.com/ZhangMenghe/PokeMeow-Renderer"
                },
                {
                    "title": "PiType: A Protein Interaction Prediction Cytoscape App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5058485242822656/",
                    "content": "PiType is an already existing protein-protein interaction classifying tool created by my mentor.  It currently exists as both a web app and a standalone software package.  PiType is designed to classify proteins within a network into different categories: Mutually Exclusive (ME) vs Simultaneously Possible (SP) and Obligate (O) vs Non-Obligate (NO).  To do this, PiType takes a series of proteins within a network, analyses them to determine which of the above categories they fit into, and outputs that information as a table.  Because of the current input and output format, it is difficult for biologists to analyze and interpret the data. Cytoscape is open source software that provides numerous modules for studying and visualizing protein networks, and as such is the perfect tool to use for PiType. My project over the summer will thus be to create a Cytoscape plugin app using PiType’s already existent algorithms, to create a visualization tool that provides an intuitive interface for biologists.  By taking the base features of PiType, and implementing them as a Cytoscape plugin, my project will widen the number of potential users, and the utility of the app.",
                    "projectCode": "https://github.com/fgoebels/PiType2.0"
                },
                {
                    "title": "Roadmap to create a WebApp for the Enrichment Map Using Cytoscape and RESTful services",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6503415320412160/",
                    "content": "The Projects goal is to use opencpu and cytoscape.js in order to remove the difficulty for Biologists to tackle with the hassles    of using R code or cytoscape for enrichment analysis. This will be achieved by leveraging the opencpu RESTful services API to create an R package of our own and use opencpu to create an API and use it to generate the same plots one would  generate while using cytoscape.",
                    "projectCode": "https://github.com/bhaveshsunny/enrichmentmap"
                },
                {
                    "title": "WikiPathways Pathway Presenter",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5336316745089024/",
                    "content": "WikiPathways is an open and collaborative platform for sharing biological pathway information. It features an interactive diagram that aids the user in understanding the pathway. However, the educational capabilities of these diagrams can be improved. Studies show that when information is given in steps, with dynamic visual\naids, audience attention and understanding increases dramatically. Ideas presented graphically, as a “story\", are far easier to comprehend and remember than static information. Thus, step-by-step presentations of pathway diagrams would dramatically enhance the educational capabilities of WikiPathways.In this proposal, a new \"Pathway Presenter\" is outlined that will enable biologists to create dynamic presentations of the pathways in WIkiPathways. This will allow for the creation of succinct and easily comprehensible diagrams that can be shared and embedded across multiple platforms.",
                    "projectCode": "http://jcbwndsr.com/gsoc-final-overview/"
                }
            ],
            "techStack": [
                "java",
                " javascript",
                "python",
                "php",
                "c++"
            ]
        },
        {
            "title": "Netfilter project",
            "orgLink": "http://www.netfilter.org",
            "projects": [
                {
                    "title": "Development of nft-sync tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5580791383851008/",
                    "content": "I would like to work in the, currently halted, development of nft-sync tool.",
                    "projectCode": "https://gist.github.com/pablombg/02cd222c50590442f27065bc7bb7f529"
                },
                {
                    "title": "Missing features in nftables.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5698623274745856/",
                    "content": "I'm interested in proposed Task 1 : Implement missing features in nftables.",
                    "projectCode": "https://gist.github.com/mysticTot/0c3651f473cb0885d809d5ab63848592"
                }
            ],
            "techStack": [
                "linux",
                "kernel",
                "c"
            ]
        },
        {
            "title": "Nmap Security Scanner",
            "orgLink": "https://nmap.org/",
            "projects": [
                {
                    "title": "Nmap Feature Creeping, Optimizing and developing NSE scripts (Vulnerability and Exploitation specialist)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6429409410023424/",
                    "content": "I will be working in several areas like adding new features, optimizing existing scripts and developing new scripts for Nmap.In nutshell during this whole period of 3 months my overall focus will be on developing NSE scripts for the latest vulnerabilities and optimize some of existing modules which consume lot of time for scanning. When it comes to writing new vulnerability scripts I will follow the CVE and CWE updates carefully and will craft them perfectly within no time. I will also add new features to Nmap which will be very helpful to both the basic and advanced Nmap users.",
                    "projectCode": "https://medium.com/@rewanthcool/gsoc-2017-with-nmap-security-scanner-80d9bd54a97a"
                },
                {
                    "title": "NMAP Scripting Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4675630515879936/",
                    "content": "Nmap has become my fascination ever since I started actively using it. It is undoubtedly one of the best security tools. My project Idea is \"Vulnerability and Exploitation Specialist\" and I would be spending my summers looking for the vulnerabilities that would be suitable to be added to Nmap Scripting Engine and will implement them. I will also be working on some web scanning scripts.",
                    "projectCode": "https://docs.google.com/document/d/1ShbRCvbYjqUweKJHKC6pRcgmkQJcLTJaZfxtfQpRYkQ/edit?usp=sharing"
                },
                {
                    "title": "Nmap Scripting Engine—Script Developer (Vulnerability and exploitation specialist)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6490082936619008/",
                    "content": "I will seek to research on the newest vulnerabilities that have been made public and either a) translate the existing PoC into a NSE Lua script or b) implement the thing myself on Lua, if no existing PoCs exist yet and the vulnerability is widespread enough.The metric which I will benchmark myself against is 1 high-impact/high-difficulty script per week, as if time allows I will implement other scripts as well.",
                    "projectCode": "https://gist.github.com/wongwaituck/9dc2ba2cf0e265df88fb2f39feedba87"
                },
                {
                    "title": "Nmap SSH Support & Ncrack Module Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5021291094474752/",
                    "content": "This proposal describes the plan to merge the SSH support branch to the nmap project. Also, Ncrack modules will be developed for the MsSQL, MongoDB, Oracle, LDAP, SMTP, SVN and rlogin protocols while the Winrm module will be extended to support more authentication methods.",
                    "projectCode": "https://gist.github.com/edeirme/0f59b190580eb8d2724c7478c0a3d874"
                }
            ],
            "techStack": [
                "c/c++",
                "lua",
                "python",
                "c",
                "c++"
            ]
        },
        {
            "title": "NumFOCUS",
            "orgLink": "http://www.numfocus.org/",
            "projects": [
                {
                    "title": "2d Color Maps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6396963482238976/",
                    "content": "All of the color mapping in Matplotlib is currently derived fromScalerMappable which as the name suggests maps scalers from R^1 ->R^4 RGBA color space.  It is common to want to map a vector tocolors, for example to control the alpha based on a second value in ascatter plot or to show the orientation of a field.",
                    "projectCode": "https://github.com/matplotlib/matplotlib/pull/8738"
                },
                {
                    "title": "Develop assembly of finite element forms on quadrilateral and hexahedral meshes [FEniCS]",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6408302195900416/",
                    "content": "One of the first steps in the finite element method (FEM) is splitting the domain on which the partial differential equation (PDE) is solved into small parts, called cells, which in sum make a mesh. FEniCS has always supported meshes consisting of simplex cells (e.g. triangles and tetrahedrons), but has limited support for meshes consisting of quadrilateral (quad) and hexahedral (hex) cells. Finite element problems solved on quad/hex meshes often have better approximation properties and better robustness to cell distortion than those solved on simplex meshes. The project idea aims at being able to assemble and solve the simplest PDE, a Poisson's equation, in 2D (quad mesh) and 3D (hex mesh) in FEniCS.",
                    "projectCode": "http://nbviewer.jupyter.org/gist/IvanYashchuk/48bff62b155e31f85de975b24b23e4cb"
                },
                {
                    "title": "Develop XDMF format for visualisation and checkpointing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6379340962988032/",
                    "content": "XDMF is a file format which is designed for very large simulation datasets. \nThe main file is XML, but there is provision for the \"heavy data\" to be stored in HDF5 using \nMPI-IO in parallel. Datasets may be hundreds of GB in size. In FEniCS we have used XDMF to produce \nvisualisations, but it is also highly desirable to use for checkpointing, i.e. saving the current \nstate of a simulation and reading it back in later. The data structures in FEniCS do not map \ndirectly onto the data structures expected by the current implementation of XDMF. We would like \nto be able to save FEniCS data structures directly in XDMF, and still be able to visualise the data.",
                    "projectCode": "https://github.com/michalhabera/gsoc-summary/blob/master/README.md"
                },
                {
                    "title": "Extend Variational Inference Methods in PyMC3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5985582387822592/",
                    "content": "Variational inference is a great approach for doing really complex, often intractable Bayesian inference in approximate form. Common methods (e.g. ADVI) lack from complexity so that approximate posterior does not reveal the true nature of underlying problem. In some applications it can yield unreliable decisions.Recently on NIPS 2017 OPVI framework was presented. It generalizes variational inverence so that the problem is build with blocks. The first and essential block is Model itself. Second is Approximation, in some cases $log Q(D)$ is not really needed. Necessity depends on the third and forth part of that black box, Operator and Test Function respectively.Not only ADVI and Langevin Stein Operator VI are applicable with OPVI framework. Normalizing, Householder Flows fit well for it.",
                    "projectCode": "https://ferrine.github.io/blog/2017/08/24/final-report/"
                },
                {
                    "title": "Gensim : Gensim integration with scikit-learn and Keras",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6145041907056640/",
                    "content": "Gensim[1] is a topic-modeling package in Python for unsupervised learning. This implies that to be able to usefully apply it to a real business problem, the output generated must go to a supervised classifier. Presently, the most popular supervised learning packages are scikit-learn[2] (for simpler data analysis) and Keras[3] (for artificial neural networks). Hence, the objective of this project is to create wrappers for scikit-learn and Keras around all Gensim models for seamless integration of Gensim with these libraries.",
                    "projectCode": "https://drive.google.com/file/d/0B2iiuXZtfXQ_c0g0cXQtUThPblE/view"
                },
                {
                    "title": "Matplotlib Serialization & PythreeJS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6362677832056832/",
                    "content": "Serialization is the process in which a data structure or object is translated\nand stored in the format of a file compatible in memory then reconstructed\nin another environment.The following link will bring you to a Matplotlib Enhancement Proposal\nconcerning the serialization of Matplotlib figures and widgets.\nMEP25: SerializationJupyter Notebook allow coders to compute data in an web - based interactive\nenvironment.  Ipywidgets is a module that extends Jupyter Notebooks and\nIpython Kernel in that a coder has the ability to create interactive\nHTML - based widgets.  PythreeJS is an extension of Ipywidgets, as it is a\nbridge between Python widget creation and HTML widgets with the incorporation\nof the Javascript 3-D graphics library, ThreeJS.What if we had the ability to serialize data from matplotlib figures to json\nobjects then render the data in a PythreeJS widget?",
                    "projectCode": "https://katierose1029.github.io/jekyll/update/2017/08/29/Final-Submission-of-Work.html"
                },
                {
                    "title": "Port to pytest",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5971269140873216/",
                    "content": "Testing is crucial to the development of any software and MDAnalysis currently uses nose to test their code. Unfortunately, nose is no longer under active development so the community has decided to shift over to pytest. Another problem is the performance of the current testsuite in terms of execution time. Currently the TravisCI build takes around 45 minutes (50 min. being the cap). This causes builds to fail because they are terminated on exceeding the maximum execution time. The objective of this project is to implement this shift in a way that existing development work is not affected and to improve performance of the existing test cases and to make it more maintainable in general.",
                    "projectCode": "http://utkarshbansal.me/blog/The-Journey/"
                },
                {
                    "title": "Python and Julia Interface for Data Retriever",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5402340592975872/",
                    "content": "Data Retriever automates the tasks of finding, downloading, and cleaning up publicly available data, and then stores them in a local database or as .csv files. Simply put, it's a package manager for data. This allows data analysts to spend a majority of their time in analysing rather than in cleaning up or managing data.The Data Retriever is written in Python. It currently has a command line interface (CLI) and can also be used through an associated R package that wraps this CLI. Adding a native Python interface and a Julia package wrapping the CLI would provide access to the tools provided by the Data Retriever in the three major open source languages for data oriented computing.",
                    "projectCode": "https://medium.com/data-retriever-gsoc17/data-retriever-final-report-95ef1d6acc59"
                },
                {
                    "title": "Single Precision Support and Gaussian Process Functionality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6297500092727296/",
                    "content": "PyMC3 contains a rich suite of building blocks for probabilistic modeling and inference.  This proposal contains two parts:  first is finishing support for single precision, and second involves finishing Gaussian Process functionality.  I have already submitted a proposal about exploring alternative computation engines, and am open to working with the mentors on mixing and matching projects from each, for example, evaluating PyTorch in addition to the projects in this proposal.",
                    "projectCode": "https://github.com/pymc-devs/pymc3/pull/2444/commits"
                },
                {
                    "title": "Training and Topic Visualizations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6231784408743936/",
                    "content": "Knowing about the progress and performance of a model, as we train them, could be very helpful in understanding it’s learning process and makes it easier to debug and optimize them. It could also help us affirm the results from our models or inspect them in case of counterintuitive behaviors. Hence, I aim to provide a step-by-step process of visualizing training statistics for people, who want to keep a tab on learning processes of their gensim models, and want to optimize it through experimentation with hyperparameters.The next phase of my project would aim to introduce and build a visualization module based on Gensim models and features. This would allow the interactive exploration of applications based on Gensim and would also enable users to do a qualitative assessment of their models and analyze the results. I aim to focus on implementing a visual framework for the exploration of topic models, taking cues from TMVE, pyLDAvis, and add more options to visualize data attributes and compare across the different topic models.This work can naturally be extended to various other features in Gensim and to the upcoming ones, to have an associated visualization.",
                    "projectCode": "https://rare-technologies.com/paruls-gsoc-2017-summary-training-and-topic-visualizations-in-gensim/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "r",
                "c/c++"
            ]
        },
        {
            "title": "Open Bioinformatics Foundation",
            "orgLink": "https://www.open-bio.org/wiki/Main_Page",
            "projects": [
                {
                    "title": "Adding Python 3 compatibility and improving mypy support for cwltool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6701160580775936/",
                    "content": "The goal of this proposal is to enhance support and usability of cwltool by:",
                    "projectCode": "https://gist.github.com/manu-chroma/8e10ea9fd728356a4363b5af1f0d8aaa"
                },
                {
                    "title": "antiSMASH Migration to Template System",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5688096846774272/",
                    "content": "antiSMASH, a python-based tool to mine micro-organisms genomes, currently uses pyQuery to generate static HTML pages. Consequently, several difficulties are found when improvements/changes need to be performed. This library is commonly described as too verbose, implying most of the times, string concatenations and mixed code for both presentation and logic. Subsequently, it is not much intuitive. In addition, recent patch update from 1.2.9 to 1.2.10 resulted in a backward compatibility break, and as a minor patch should not raise compatibility issues, the trust in this library is somehow compromised.\nTemplate Engines overcome the majority of the issues related to output generation. They are powerful tools that allow the developers to speed up their work in an easier and much cleaner way.This project proposes moving antiSMASH to jinja2, a well known, widely used and developer-friendly templating language for Python. With this migration, we intend to facilitate the future development of antiSMASH as well as the onboarding of new developers to the team. Moreover, considering jinja2 enormous user-base and applications, a backwards compatibility break in a minor version is unlikely.",
                    "projectCode": "https://bitbucket.org/antismash/antismash/pull-requests/116/gsoc-2017-move-antismash-to-jinja2-a/diff"
                },
                {
                    "title": "Bionode-Watermill - A Streaming Workflow Engine for Bioinformatics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5883245933625344/",
                    "content": "This project started in last GSoC but is still missing core functionality",
                    "projectCode": "https://github.com/bionode/GSoC17"
                },
                {
                    "title": "Common Workflow Language reference implementation modernization- Making cwltool and schema-salad, Microsoft Windows compatible and providing complete Python 3 support for cwltool and schema-salad",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4952969170649088/",
                    "content": "Cwltool is a reference implementation of the Common Workflow Language. It provides comprehensive validation of CWL files and include tools related to working with CWL.\nCWL is a specification which is used to describe command line tools and workflows, providing benefits like flexibility, scalability and portability.\nCurrently cwltool is developed for Linux and OS X and not for Windows Operating System.\nAlso, cwltool and schema-salad targets python 2.7.The aim of this proposal is to enhance cross platform compatibility and usability of cwltool and schema-salad by:",
                    "projectCode": "https://gist.github.com/kapilkd13/309f9893ebf5657f33c823b154555212"
                },
                {
                    "title": "ETE/Tree matcher",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5709813409382400/",
                    "content": "TreeMatcher is a subproject of ETE3. Target of TreeMatcher is to perform search on phylogenetic trees using tree patterns that allows relax connection between tree nodes in newick format mimicking regular expressions' functionality.",
                    "projectCode": "https://dpliakos.github.io/gsoc2017_overview/"
                },
                {
                    "title": "GeneNetwork Genome Browser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5014950649004032/",
                    "content": "Modify GeneNetwork to embed the BioDalliance genome browser in it. BioDalliance (henceforth BD) would be integrated into GeneNetwork (henceforth GN); not only should it be possible to view data from GN using BD, but the BD interface should be extended to allow on-the-fly fetching of data from the server as the user works with the browser, as well as add functionality for visualizing various types of data, such as QTLs and underlying genotypes.The goal would be to have the browser embedded in GN, and sufficiently and seamlessly integrated with the backend, so that the browser would be a valuable and useful tool in the GN environment.",
                    "projectCode": "https://chfi.se/posts/2017-08-25-gsoc2017-summary.html"
                },
                {
                    "title": "Implement algorithms for the generation of high-resolution isotope patterns",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6722516903002112/",
                    "content": "In mass spectrometry the isotope pattern of an unknown molecule consists a powerful analytical tool to identify its molecular formula. Modern technological advancements led to a resolution increase in mass spectrometers. This enables mass spectrometers to distinguish parts of a molecule's isotopic fine structure.To determine whether a presumed molecular formula is observed within a mass spectrum the theoretical isotope pattern of the formula needs to be calculated.Ιt proposes an algorithm that belongs in the class of polynomial multiplication methods and two algorithms that consist variations of the Fourier transform methods.",
                    "projectCode": "https://pati-ni.github.io/2017/08/26/final-submission-post.html"
                }
            ],
            "techStack": [
                " python",
                "perl",
                "java",
                "c++",
                "c/c++"
            ]
        },
        {
            "title": "Open Chemistry",
            "orgLink": "http://www.openchemistry.org",
            "projects": [
                {
                    "title": "cclib Project: Implement New Writers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5051218426593280/",
                    "content": "The project aims to bridge the AIMALL and Molden programs with cclib by adding support for writing wfx/wfn files and Molden format files.Molden program supports reading input from GAMESS, Gaussian and MOPAC and some user written scripts add support for some other programs. cclib being the largest parsing library for QM program outputs could provide a one stop solution for making Molden files.Bader's Atom in Molecule is a popular method to characterize individual atomic contributions to the electron density to much more intuitive atoms and bonds. AIMALL is the go-to program for doing AIM analysis. Having a wfx/wfn writer within cclib would bridge the two programs.As stretch goals, I propose implementing either updating write support for .cube files which can be used with Henkelman group’s fast implementation for Bader charge integration or start building a parser for Molcas. The former is in-line with cclib's attempt to include modules for advanced analysis of quantum chemistry data, while support for the latter is a requested in cclib's github repository.",
                    "projectCode": "http://gaursagar.github.io/gsoc-cclib-2017.html"
                },
                {
                    "title": "Computational Chemistry Web repository",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5044640952614912/",
                    "content": "This project aims at creating a framework consisting of following modules :",
                    "projectCode": "https://medium.com/@nitish6174/google-summer-of-code-with-open-chemistry-7c998e2442ed"
                },
                {
                    "title": "Intelligent LC/MS Feature Detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5238154999103488/",
                    "content": "This project aims at developing efficient algorithm to analyze complex 3D data obtained from the Liquid Chromatography Mass Spectrometry (LCMS). The algorithm is optimized for direct processing of the data by overcoming redundant parameters such as user defined parameters. Moreover, it is also intended to make an algorithm adaptive and compatible with existing mass spectrometry software.",
                    "projectCode": "https://github.com/msdk/msdk/tree/master/msdk-featdet/msdk-featdet-ADAP-3D"
                },
                {
                    "title": "MSDK-IO library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4863665526276096/",
                    "content": "There are many file formats in use for mass spectrometry data. For interoperability of algorithms in Java-based processing workflows, there is an urgent need for a high-performance Java library that would provide support for reading and writing these common formats. In the past, several projects have developed custom parsers for various formats, however, none of the existing libraries provide a high-performance, random access to the data with multi-threading support and caching.",
                    "projectCode": "https://adhi1419.github.io/msdk-gsoc-17/"
                },
                {
                    "title": "RDKIt - 3Dmol.js integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6332750499938304/",
                    "content": "Although RDKit is a widely used extremely versatile chemoinformatics software package, it still lacks efficient 3D molecule visualization capability. In this circumstance, 3Dmol.js is easy to use and an excellent molecule visualization library that works in web browser. Another important platform is jupyter that allows communication with python from web browser through notebook like interface. Jupyter has also made the codes easily readable with clean output by dint of markdown. So, keeping python as operational core engine that expectedly works as interface of RDKit while utilizing support from jupyter notebook and 3Dmol.js should be a very good combination to ensure high productivity in drug discovery settings. In this project, I would like to turn these combination to more viable solution by binding 3D molecule visualization (protein-ligand complex), ligand editing panel, conformer scrolling system, and channel for sending ligand from jupyter interface to force field that exists in RDKit for energy minimization. Needless to say, I would like to use openbabel for file format conversion and molecular data extraction system.",
                    "projectCode": "https://github.com/malithakabir/RDKitGSoC2017"
                },
                {
                    "title": "Visualization of MD trajectory files using Google cardboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6504792394301440/",
                    "content": "Virtual reality has become a rage with Oculus Rift VR headsets and Google Daydream View headsets hitting the markets. More importantly, with the introduction of google cardboard, even a smartphone can now be used to visualize stereoscopic images and videos for literally no extra cost. This has potential applications in the field of education as well. The idea is to extend 3dmol.js to be able to project stereoscopic images so that it can be viewed using a phone browser through any low cost cardboard headset. Stereoscopic rendering will make the visualization of simulation results much clearer, especially while explaining interesting atomic scale phenomena such as bonds breaking or denaturation of proteins etc. to students in class. The users can download any of their simulation data using 3dmol.js, which will convert their files to a pair of side-by-side images providing a stereoscopic effect.",
                    "projectCode": "https://gist.github.com/Manohar-94/3149fd43eb2bcd4b3759c057f0e752b0"
                }
            ],
            "techStack": [
                "python",
                "c++",
                "opengl",
                "javascript",
                "java"
            ]
        },
        {
            "title": "Open Data Kit",
            "orgLink": "https://opendatakit.org",
            "projects": [
                {
                    "title": "Collect - Improved user experience",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6496885627944960/",
                    "content": "User Interface is considered as the most crucial success factor for any software. As we already know, the user interface of the current app is outdated (not updated since 2008) and not at all according to the expected standards of users. So the community feels that through this project the complete UI/UX of the app can be revamped so that it could provide a fresh experience to the users and make the task of collecting data easier and more intuitive.",
                    "projectCode": "https://medium.com/@shobhitagarwal1612/gsoc-2017-with-opendatakit-5448f927409"
                }
            ],
            "techStack": [
                "android",
                "java",
                "python",
                "javascript",
                "ruby"
            ]
        },
        {
            "title": "Open Detection",
            "orgLink": "http://opendetection.com",
            "projects": [
                {
                    "title": "Adding CNN based classifiers and Detectors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5511542283960320/",
                    "content": "Adding CNN based classifiers and dectors to the OpenDetection framework. This requires implementation of training methods and detection methods for both classifiers and detectors with Caffe backend. The main deliverables are:",
                    "projectCode": "https://gist.github.com/gautamMalu/8b4168380d870c416b11d310ea94d961"
                },
                {
                    "title": "Opendetection - Improving the Framework for CNNs for 2D Detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6391784288550912/",
                    "content": "Open Detection is a standalone open source project for object detection and recognition in images and 3d point clouds. In this proposal, I first make a short report of the state-of-the-art detection/recognition techniques. To improve the framework for CNNs for 2D detection, I mainly focus on two key tasks that remain to be addressed.  The first one is to implement OD interface for training and testing neural network architectures with CNN and RNN. The second is to add several recognition/detection algorithms to OpenDetection. To this end, I decompose each task into several small tasks and propose my solutions respectively, aiming to perfect the project in an elegant way. I also create milestones for each small tasks. I can work on this project full-time during this summer and I’ve equipped myself with prior knowledge and programing experiences in object detection and deep learning, which makes me competent to this project.",
                    "projectCode": "https://github.com/Patrickcxt/opendetection/tree/gsoc17-cxt"
                }
            ],
            "techStack": [
                "c++",
                "caffe",
                "pcl",
                "opencv"
            ]
        },
        {
            "title": "Open Genome Informatics",
            "orgLink": "http://gmod.org/wiki/GSoC",
            "projects": [
                {
                    "title": "Development of a Statistical Framework to Identify Similar Nodes in InterMine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6703800509267968/",
                    "content": "InterMine is a large graph containing entities(Genes, Transcription Factors etc. ) with important relationships between them. The main aim of the project is to leverage the huge amount of data lying in InterMine and create an ensemble of algorithms specific to Biological Networks using Graph Theory and Unsupervised Machine Learning Algorithms to identify similar entities in InterMine. The results obtained by the framework will be used to build an efficient Recommendation System for the user based on their selection criteria.",
                    "projectCode": "https://samyadeepblog.wordpress.com/summary/"
                },
                {
                    "title": "Expansion of functionality and creation of detailed and exciting bioinformatics R demos for InterMineR package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5554092793397248/",
                    "content": "InterMine constitutes a data warehouse framework, which provides the ability to access, retrieve and analyze rapidly a variety of biological data (http://intermine.org/). With intuitive tools, like targeted searches, customized queries, and predefined templates which incorporate popular queries for specific type of biological data, InterMine attempts to facilitate access, retrieval and analysis heterogeneous biological information. Aiming to expand the functionality of InterMine framework, an R package, InterMineR, has been developed that provides access to InterMine instances through the R programming environment (https://github.com/intermine/interminer). However, for InterMine resources to be fully exploited with R language, it is necessary to develop detailed, easy-to-access tutorials, that demonstrate the integration of InterMineR in routine R bioinformatics analyses. In the context of Google Summer of Code program, this proposal describes in detail the steps that can be followed in order to 1) create detailed, bioinformatics R demos for InterMineR, 2) expand the functionality of InterMineR by integrating enrichment analysis, and 3) publish InterMineR to CRAN and Bioconductor.",
                    "projectCode": "https://intermineorg.wordpress.com/2017/08/18/interminer-package/"
                },
                {
                    "title": "InterMine Registry",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6434386606030848/",
                    "content": "The InterMine Registry will allow users to obtain and search, by consuming a RESTful API, basic information about existing InterMine instances. This information includes instances names, URLs, versions, sizes, descriptions and principal data-types with their fields brief descriptions. Furthermore, the API is going to give the possibility to create and administer the registry entries.",
                    "projectCode": "https://github.com/intermine/intermine-registry"
                },
                {
                    "title": "iOS InterMine app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5801530422722560/",
                    "content": "InterMine has an Android application and is looking to make it available on iOS as well. Native iOS application will allow researchers to have access to InterMine data using fast, reliable and intuitive interface.",
                    "projectCode": "https://joystate.github.io/intermine-ios/"
                },
                {
                    "title": "Pan-Genome Module for the Genome Context Viewer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6280625434656768/",
                    "content": "With the number of sequenced and annotated genomes continuously increasing, there is a need for new algorithms and tools for comparative analyses both at the nucleotide and genic levels. The Genome Context Viewer (GCV) is an OSS tool that enables comparative genomics by using gene families as a unit of search and comparison. It currently uses Chado as a reference implementation for its data services and can be integrated with other GMOD components via a service layer/API. This work will create an extension module that will integrate new and existing pan-genomics algorithms into GCV while leveraging the existing UI for visualization purposes. This will help to serve communities facing the challenges of having multiple reference genomes within a single species, as well as improving GCV’s utility for clade-oriented resources.",
                    "projectCode": "https://docs.google.com/document/d/13lIITV_ND3Dj9pjvx5Q59045iSMOfF2BPZIKJQvy4RA/edit?usp=sharing"
                },
                {
                    "title": "Performance and user-centric upgrade to Afra",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5965290546397184/",
                    "content": "The primary goal of the project is to upgrade Afra's annotation editing code, to provide it performance upgrade. Afra's annotation editor is built using JBrowse and WebApollo, is completely browser based. Afra is unique in the way it addresses the challenges of biocuration. The community needs this kind of tool to grow. This goal will be achieved in following steps",
                    "projectCode": "http://www.hiten.io/blog/articles/gsoc-17/"
                },
                {
                    "title": "Prototype a new RESTful API querying Neo4j database",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5484312191303680/",
                    "content": "InterMine is an open source data warehouse which is used to store complex biological data. It is currently using PostgreSQL as the database. This project aims to develop a prototype of InterMine which is based on Neo4j, a graph database.",
                    "projectCode": "https://gist.github.com/yasharmaster/cfa18e7bac00d7ed0a93d74f4946efc7"
                },
                {
                    "title": "Stand-alone Reactome server in a Docker image",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5551066452066304/",
                    "content": "The goal of this project is to produce a Docker image that contains everything that an end-user needs to run Reactome on his/her own workstation. Provisions will be made to update the database in the image with the latest centralized database of Reactome.",
                    "projectCode": "https://ayushyachitransh.wordpress.com/gsoc-2017-reactome-container/"
                }
            ],
            "techStack": [
                "python",
                "java",
                "javascript",
                "nodejs",
                "gwt"
            ]
        },
        {
            "title": "Open States",
            "orgLink": "https://openstates.org",
            "projects": [
                {
                    "title": "Open Civic Data Admin Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5077606705659904/",
                    "content": "",
                    "projectCode": "https://gist.github.com/hiteshgarg14/7a8bc91dbe700edc10f91d173bbc1bc4"
                }
            ],
            "techStack": [
                "python",
                "django",
                "javascript",
                "postgresql"
            ]
        },
        {
            "title": "Open Technologies Alliance - GFOSS",
            "orgLink": "http://www.gfoss.eu",
            "projects": [
                {
                    "title": "Adding Greek support for the Open Source Font “Eczar”",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5618313426108416/",
                    "content": "I would like to contribute by adding Greek support for Eczar, including polytonic, for all 5 weights.Eczar is designed by Vaibhav Singh, produced by David Březina, and published by Rosetta Type Foundry - [https://github.com/rosettatype/Eczar] [https://fonts.google.com/specimen/Eczar].As a typeface, Eczar has a strong personality, with five weights from Regular to Extra-Bold and can be used to set text from body copy to display. At the moment, only six Serif fonts that support Greek are available from Google Fonts and –in my opinion– do not provide this flexibility. Eczar already supports Latin and Devanagari. Devanagari are designed with an axis mirrored in relation to the Latin. This is a significant start regarding the addition of Greek glyphs, since one has a glimpse of the designer’s original aesthetics and design intentions; it also provides a good basis for certain letterforms that could be transferred into the Greek design, rendering a balanced outcome for all the supported scripts.",
                    "projectCode": "https://github.com/eellak/gsoc17-Eczar"
                },
                {
                    "title": "Diavgeia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5408540915138560/",
                    "content": "Diavgeia is the open governance initiative which forces greek public administrative units to publish their acts and decisions online.This project aims to enhance Diavgeias' transparency in the following ways:1.Through the use of the Bitcoin blockchain, we force government data to remain immutable. While decisions and actions are currently signed, citizens or even the government institutions, who do not own an immediate signed document (that is a short time after the document was uploaded), have no guarantee that this document was not altered some time after the upload. Thus, in order to limit the time span in which a document can be altered, Diavgeia is forced to store a log in Bitcoin Blockchain, at predefined time intervals.",
                    "projectCode": "https://github.com/eellak/gsoc17-diavgeia"
                },
                {
                    "title": "DonationBox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6032084267171840/",
                    "content": "The main target of the project is to modernize the so called donation boxes, to keep pace in the new digital era.\nThis will achieve by implementing all the necessary infrastructure to create ultimately a decentralized (from specific donations boxes) network, where all donation boxes are interconnected and can be managed from a central node.",
                    "projectCode": "https://github.com/eellak/gsoc17-donationbox"
                },
                {
                    "title": "Implementation of a New Re-encryption Mix-net for Zeus",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5469134313750528/",
                    "content": "I'm interested in the implementation of a new mix-net for Zeus because the current mix-net is not very sufficient. The open source community would greatly benefit from a mix-net that's easy to use and maintain. I aim to implement and deploy a new re-encryption mix-net prototype. I think I'm suitable for this position because I've contributed on Zeus in the past and I have plenty of coding experience using python.",
                    "projectCode": "https://github.com/eellak/gsoc17module-zeus"
                }
            ],
            "techStack": [
                " php",
                " java",
                " mysql",
                " virtuoso",
                "python"
            ]
        },
        {
            "title": "OpenAstronomy",
            "orgLink": "http://www.OpenAstronomy.org",
            "projects": [
                {
                    "title": "Astropy : A mixin protocol for seamless interoperability",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4778482366152704/",
                    "content": "Astropy has emerged as an integration of several independent packages (PyFits, asciitable), each responsible for an individual task in the storage, reduction and analysis pipeline of the astronomical data sets. It has mostly unified the interface in order to make these entities coalesce. However, the need for Astropy to shine as a single package and not just a collection of functionally independent modules, calls for seamless interoperability between the three special and powerful constituents of Astropy: coordinates, time and units and the underlying Astropy table writers. We seek to develop a protocol that allows their storage, the mixin columns, in FITS and ASCII ECSV, while still ensuring \"round-tripping\". Abiding by the rules set by the FITS standard, requires mapping of the special Astropy objects, with extensive associated metadata, to the standard keywords. We thus want to achieve the ideal goal of preserving complete information, while still going hand in hand with the defined standard.",
                    "projectCode": "https://aaryapatil.wordpress.com/2017/08/28/a-mixin-protocol-for-seamless-interoperability/"
                },
                {
                    "title": "Casacore Testing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6393703333625856/",
                    "content": "This project aims to improve python-casacore infrastructure, making the codebase cleaner, modern, maintainable and adding more unit tests.",
                    "projectCode": "http://www.techievirus.com/Gsoc-Final-report"
                },
                {
                    "title": "Drms module for JSOC Downloads",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5644701705175040/",
                    "content": "The SunPy JSOC Client is a very rudimentary client to JSOC's export data CGI. The drms module provides a more complete implementation of the DRMS protocol. The drms module needs testing, and some other packaging improvements to automatically run the tests. This might involve adoption of some of the Astropy packaging code such as astropy_helpers, if necessary.\nOnce the drms package has been well tested, CI added and a conda package created, the SunPy JSOC client could be improved and extended to enable use of the majority of the drms functionality through the unified search API of SunPy. While the SunPy implementation would not need to provide all the features of the drms library, it would strive to provide a simple API for most queries supported by drms.",
                    "projectCode": "https://medium.com/@nitinkgp23/gsoc-coming-to-an-end-d20afa843940"
                },
                {
                    "title": "HiPS client for Python",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5440053895495680/",
                    "content": "Design and create a Python client for Hierarchical Progressive Surveys (HiPS). The package will enable users to view astronomical figures in an interactive environment. Currently, similar clients exist, such as Aladin and Aladin Lite, but they are written in Java and JavaScript, respectively. The goal of this project is to provide similar functionality using Python. The current decision is to work only with HiPS images, but if this gets done before the deadline, support for HiPS catalogues will be added as well.",
                    "projectCode": "https://adl1995.github.io/gsoc-final-evaluation-report.html"
                },
                {
                    "title": "IRIS Data Class",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6313559243882496/",
                    "content": "The project will enable users to use IRIS class objects IRISRaster and IRISSji and its tools to calibrate, visualise and analyse different IRIS data. The class also has a IRISObservation class which will contain IRISRaster and IRISSji object and this class will be able to open level 3 files. This observation class will help users to associate IRISRaster and IRISSji data. This project helps to increase the user-base of the IRIS data, since the younger generation of scientists are trained in Python and the current software is written in IDL, where everyone cannot afford a licence.",
                    "projectCode": "https://medium.com/@ankit_b/gsoc-2017-fce66e75341"
                },
                {
                    "title": "Porting the IDL Astronomy User's Library to Julia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4935757223428096/",
                    "content": "Hello. As a part of Google Summer Code of 2017, the main task that I intend to take up is to increase the number of the functions present in the AstroLib.jl package, chiefly by porting an extensive portion of the IDL Astronomy User’s Library procedures not present in the package.The project involves translating the code from IDL - Interactive Data Language - to Julia, a relatively new high-level dynamic programming language designed to address the needs of high-performance numerical analysis and computational science. This will greatly increase the range of utilities present in the AstroLib.jl package, making it much more useful for users.A sample of what this project will entail can be seen through the following pull requests on Github -  #10 and #13",
                    "projectCode": "https://medium.com/@prasunk2/and-so-the-curtain-falls-on-this-gsoc-journey-69f1e4d0e4ca"
                },
                {
                    "title": "Sun, Right now!",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4506490677231616/",
                    "content": "The Sun releases large amounts of magnetic energy in the form of X-rays, EUV (Extreme ultraviolet), radio waves and high energy particles regularly. This kind of radiation bursts can threaten space and ground based technological infrastructure. Hence it is important to monitor solar activity to be prepared for potential threats.The main purpose of this project is to provide near real-time information on solar activity and active regions. It will be completely powered by SunPy, and will be accessible to a wide variety of users. It will serve, among other things, active region information, full solar disk images etc.",
                    "projectCode": "https://github.com/Punyaslok/sunrightnow/pull/2"
                },
                {
                    "title": "SunPy Website Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6126231292477440/",
                    "content": "SunPy website is a platform that introduces the SunPy open-source software package for solar physics based on Python. Its main elements are an about section for introduction of both the software and the team, a blog for the latest updates, astronomy events, and news, a documentation for the developers use, and a gallery for tutorials. However, there are some problems with the website such as the inconsistency between home page and documentation, and also the out of date look of its design. My proposal will include redesigning each components of the website from stratch by following material design guidelines to enhance the general view, and using the latest web technologies and frameworks to make it more scalable, fast, secure, and responsive. Moreover, I will explain my approach to the implementation of extensions in this project and propose some new features that will undertake the project to a high standard.",
                    "projectCode": "https://duygukeskek.github.io/SunPy_Website_Improvements/"
                }
            ],
            "techStack": [
                "python",
                "julia",
                "qt"
            ]
        },
        {
            "title": "OpenCV",
            "orgLink": "http://opencv.org",
            "projects": [
                {
                    "title": "A Model Zoo for Tiny-dnn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6426968660639744/",
                    "content": "Tiny-dnn is a lightweight dependency free library. It is extremely easy to get your first boilerplate code running as it requires nearly no additional setup. Since it is specifically suited for Mobile and iOT devices, or broadly speaking, devices with low compute capability, it is implied that the focus of library is more on inference rather than training huge models.\nThat said, there is a need of shipping some standard models, while paying specific attention to ease of loading pre trained weights in them. This project aims to build a Model Zoo for tiny-dnn, providing pretty standard CNN architectures such as AlexNet, VGG, Inception etc. Moreover, the goal is to make transfer learning easily understandable and implementable with tiny-dnn, as one might need to fine tune a huge model on a low end hardware device.",
                    "projectCode": "https://github.com/tiny-dnn/tiny-dnn/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Akarandesai-96%20created%3A%3C2017-08-31"
                },
                {
                    "title": "API for Facial Landmark Detector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4919219854508032/",
                    "content": "Facial landmark detection is a useful algorithm with many possible applications including expression transfer, virtual make-up, and facial puppetry. This project aims to implement a scalable API for facial landmark detector. Alongside the API, 2 kinds of algorithms will be implemented including active appearance model and regressed local binary features which able to work at 3000fps. As the documentations and tutorials will be provided, it will give a lot of benefit for both of OpenCV developers and users.",
                    "projectCode": "https://gist.github.com/kurnianggoro/74de9121e122ad0bd825176751d47ecc"
                },
                {
                    "title": "Documentation Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4630773877440512/",
                    "content": "Using gathered complaints in forums and discussions I propose a project of documentation improving and restructuring, which is intended to improve the user experience.Goals:In the end, the community will find it easier to implement algorithms, taking a greater advantage of the OpenCV’s potential, boosting the number of users and improving results.",
                    "projectCode": "https://docs.google.com/document/d/1jndiomVBe8Ax-SVERTMJ86WfG_-AsKodKNFpBE4_Mrg/edit?usp=sharing"
                },
                {
                    "title": "End to End text detection and recognition",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6212343507714048/",
                    "content": "End-to-end scene text recognition is usually divided in two different sub tasks: word detection and word recognition. Currently OpenCV text detection does not use state of the art deep network(s), this proposal is to implement a deep network for text detection. The current text recognition uses a big network, another proposal is to modify the existing network to calculate PHOC representation, which will make the network lexicon independent and also reduce the network size considerably.",
                    "projectCode": "https://gist.github.com/sghoshcvc/d955c743bade4415f532d07f4cef919f"
                },
                {
                    "title": "Face alignment with opencv",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5334461319217152/",
                    "content": "Face alignment is a computer vision technology for identifying the geometric structure of human faces in digital images. Given the location and size of a face, it automatically determines the shape of the face components such as eyes and nose.The main aim of the project  is an implementation of an excellent paper from this year's Computer Vision and Pattern Recognition Conference:\nOne Millisecond Face Alignment with an Ensemble of Regression Trees by Vahid Kazemi and Josephine Sullivan",
                    "projectCode": "https://github.com/opencv/opencv_contrib/pull/1199"
                },
                {
                    "title": "GPU enabled deep learning framework",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5398765569572864/",
                    "content": "GPU are very suitable for deep learning (DL) purposes, providing significant (sometimes almost two orders of magnitude) speedups  compared to CPU. Currently, most of deep learning frameworks support GPU both for training and inference.\nHowever, those frameworks are pretty heavy and have many dependencies. I propose to add GPU support to a simple DL framework with a small amount of dependencies.",
                    "projectCode": "https://groups.google.com/d/topic/opencv-gsoc-2017/nsnlvGqIMXU/discussion"
                },
                {
                    "title": "Implementing and extending DynamicFusion (Newcombe et al 2015)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5263789645627392/",
                    "content": "Recent research has produced impressive methods of 3D reconstruction of scenes containing non-rigid deformations using a RGB-D camera, however there is no open source code available for the described solutions. The aim of this project is to extend an available implementation of KinectFusion (Newcombe et al 2011) to implement the method described in the DynamicFusion (Newcombe et al 2015) paper, and possibly extend it to support more than a single deformable model.",
                    "projectCode": "https://gist.github.com/mihaibujanca/5c4123a604d0e4ea7cd356d0c3981ada"
                },
                {
                    "title": "Improve and Extend the JavaScript Bindings for OpenCV",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5183490937061376/",
                    "content": "Web is the most vibrant open computing platform. With huge multimedia contents available on web, web developers are in need of wide array of image and vision processing algorithms in JavaScript to build innovative applications, such as facial detection in live WebRTC streaming. And this requirement is even more essential for emerging usages on web, such as Web Virtual Reality and Augmented Reality (WebVR). The OpenCV is the de-facto standard C/C++ library for image and vision processing extensively used by computer vision community. But OpenCV is unavailable to web applications today. Thanks to OpenCV.js, an open source project initiated in Parallel Architectures and Systems Group at UC Irvine, by utilizing Emscripten LLVM-to-JavaScript compiler, it makes the first step to prove OpenCV can be exposed to web with high performance. This proposal aims to merge OpenCV.js into official OpenCV repository which makes JavaScript as one of the language bindings of OpenCV. So it requires refactoring the structure, addressing several shortcomings and code optimization of existing OpenCV.js.",
                    "projectCode": "https://gist.github.com/pancx/2778b72090782b6e5b47af13a32b0d7d"
                },
                {
                    "title": "Improve Background Subtraction with Aggregated Saliency",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5780182153560064/",
                    "content": "In this proposal, a new approach for background subtraction by using multiple saliency methods and saliency optimization frameworks is proposed. Two proposed bottom-up saliency methods use low level cues such as boundary connectivity, local contrast of the image areas to their surroundings and sliding window approach. The other proposed top-down saliency method uses high level cues pretrained on ImageNet. Three proposed saliency methods are all better than current OpenCV saliency module. With the result from multiple saliency methods,  background subtraction can be performed by using exponentially decaying method or aggregated saliency optimization framework. The proposed approach tend to be more robust when the background is highly dynamic or the camera is in motion compared with current OpenCV Background Subtraction module.",
                    "projectCode": "https://gist.github.com/Masterqsx/f63c2627873c2cdf7be9cb520c7060a7"
                },
                {
                    "title": "Improvement of the background subtraction algorithm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6453014550282240/",
                    "content": "I would like to work on improving background subtraction algorithm. In particular, I want to implement algorithm from the following article:\nBackground Subtraction using Local SVD Binary Pattern, Guo et al. (2016)It is based on LSBP feature descriptors and achieves state-of-the-art performance on the CDnet 2012 dataset.\nLSBP descriptors are particularly good in regions with illumination variation, noise and shadows. So, this algorithm has better performance in this kind of regions.In addition, this algorithm has another pleasant trait: after extraction of LSBP descriptors it processes frames pixel-wise (i.e. independently). This is the common trait among all the consensus-based background models. It means, that implementation can leverage the parallelism inside OpenCV. Furthermore, implementation could be fully parallelized and implemented on both CPU/GPU.\nThus, this algorithm will be fast enough for the realtime processing even on mobile devices.",
                    "projectCode": "https://github.com/opencv/opencv_contrib/pull/1211"
                },
                {
                    "title": "Learning compact models for object detection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4777010266112000/",
                    "content": "A compact Convolutional Neural Networks based model will be developed to detect known objects in an image in real time taking inspiration from SqueezeNet, SqueezeDet and using tiny-dnn deep learning library. Regression based model of YOLO (You Only Look Once) is incorporated to localize for objects in the image and generate bounding boxes. Fully connected layers at the end of the pipeline of YOLO are replaced with a single convolutional layer \"ConvDet layer\" for generating bounding boxes. Further Deep Compression will be implemented which includes methods like Network Pruning, Quantization and Huffman Coding to reduce the size of the model even further while still maintaining the baseline performance.",
                    "projectCode": "https://gist.github.com/kvmanohar22/192ee561be2093a48341066d53e27220"
                },
                {
                    "title": "Photometric Calibration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4562707772604416/",
                    "content": "Camera calibration is always an important part of almost every vision applications. As the direct method of SLAM developed in recent years, only geometry calibration is not enough. Photometric calibration of a camera, which takes the camera response function, dense lens attenuation factors (vignetting effect) into account and recover the irradiance images, plays a key role in direct method SLAM. As I have tested on TUM Monocular Visual Odometry Dataset, camera pose tracking with photometric calibration has much smaller scale drift than without photometric calibration using Direct Sparse Odometry and LSD-SLAM. So I think it’s necessary to provide an out-of-the-box tool kit to photometrically calibrate users’ cameras.",
                    "projectCode": "https://github.com/opencv/opencv_contrib/pull/1219"
                },
                {
                    "title": "Recurrent Neural Networks on tiny-dnn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6734489526992896/",
                    "content": "RNNs are now central to many applications, from speech recognition to Computer Vision. Some examples are Image captioning, Visual Question Answering (VQA), autonomous driving, and even Lip reading. Thus, it would be of high interest that tiny-dnn incorporates these features. The proposed implementation makes use and extends the already existing graph representation to create input, and loss nodes that can represent sequences, and create new layers for RNNs, and LSTMs. All the new code and modifications will be unit tested and documented. Examples on video recognition will also be provided.",
                    "projectCode": "https://prlz77.github.io/gsoc2017/"
                },
                {
                    "title": "Speeding-up AKAZE features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5730699164254208/",
                    "content": "AKAZE features are scale-invariant binary features. They are licence-free and currently available in main OpenCV repository. AKAZE features show for many applications better accuracy than widely used ORB features (also implemented in OpenCV) [0]. However currently the implementation of AKAZE features in OpenCV is 4-5 times slower than implementation of ORB features and the implementation of AKAZE features misses GPU acceleration. I’d like to address both issues with current implementation of AKAZE features.",
                    "projectCode": "https://github.com/opencv/opencv/pull/9444"
                },
                {
                    "title": "The Fast Bilateral Solver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6379759588081664/",
                    "content": "Objective:\nTo implement ‘the fast bilateral solver’ in OpenCV, which can be generally taken as an efficient bilateral filter.\nTo implement diverse tutorial examples with ‘the fast bilateral solver’, e.g. de-noising, colorization and stereo.Introduction:\nThe bilateral solver is a novel algorithm for edge-aware smoothing that combines the flexibility and speed of simple   filtering  approaches with the accuracy of domain-specific optimization algorithms. This algorithm was presented by   Jonathan T. Barron and Ben Poole as an ECCV2016 oral and best paper nominee. Algorithm details and applications   can be found in https://arxiv.org/pdf/1511.03296.pdf [1]Significance:\nThe naive bilateral filtering functions in OpenCV are generally computationally expensive and often insufficient for  solving more challenging computer vision tasks. By contrast, the bilateral solver is 10-1000× faster than existing  domain-specific approaches with comparable accuracy, and produces higher-quality output than lightweight filtering  techniques with comparable runtimes.",
                    "projectCode": "https://thukey.github.io/The_Bilateral_Solver/html/The_Fast_Bilateral_Solver.html"
                }
            ],
            "techStack": [
                "vision",
                " deep learning",
                " c++",
                " python"
            ]
        },
        {
            "title": "OpenMRS",
            "orgLink": "http://www.openmrs.org/",
            "projects": [
                {
                    "title": "Add Ons Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6317855821791232/",
                    "content": "This project aims at making certain changes to the existing OpenMRS Add Ons infrastructure thereby making it fit as a complete replacement for the existing OpenMRS modulus. The main motive behind this project is to be able to completely retire OpenMRS modulus whose codebase has become tough to maintain. OpenMRS Add Ons also supports OWA’s which is a vital feature that Modulus lacked. The developer is now free to host his module in any of the supported hosting sites while Add Ons does the job of adding it to the OpenMRS module index . Add Ons also gives the freedom of choice of hosting location in hands of the module developer . Add Ons is built on a light framework and hence is hopefully easier to maintain as compared to Modulus.",
                    "projectCode": "https://medium.com/@reubenvarghese1/gsoc-2017-add-on-index-enhancements-gist-of-work-done-33caea6c5dd9"
                },
                {
                    "title": "Anonymous Patient Registration Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6008500333314048/",
                    "content": "Hospitals often encounter with patients delivered while in unconscious. These patient are registered and treated as unknown patients and later re-registered with their own identity once it is known. OpenMRS currently supports this anonymous patient registration process as it is mandatory in any EMR system. But it is not yet associated with the OpenMRS platform. Instead it  is implemented in external modules. \nProject suggests to move the anonymous patient registration feature in to the OpenMRS platform. Therefore the developers can use the feature when developing their own systems using OpenMRS as a platform. Throughout the project's timeline, analyzing of an efficient and effective way of moving the feature to the core will be designed ad implemented.",
                    "projectCode": "https://gist.github.com/nipunthathsara/95b7c7c18a4cac31c0cd3d8c564af543"
                },
                {
                    "title": "Built-In Reports for Reference Application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6268985536413696/",
                    "content": "Create new reports which are out of the box for currently available reports. This would be shipped with the reference application of OpenMRS as a default OWA(Open Web App) module. Project consists of creating a openmrs module to keep the server side metadata and logic. At the same time OWA to render those reports in the reference application.",
                    "projectCode": "https://medium.com/@jude.niroshan11/google-summer-of-code-with-openmrs-76ecb476f9d0"
                },
                {
                    "title": "DHISReport Reporting Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5765199025930240/",
                    "content": "OpenMRS-DHIS2 integration is a really helpful integration in the community. The present DHISReport module being used to automate the process of running sql queries against an OpenMRS instance and posting the results to DHIS2 instance.  This project is about mapping the report indicators created in OpenMRS Reporting module with DHIS Dataelements.",
                    "projectCode": "https://choxmi-gsoc.blogspot.com/"
                },
                {
                    "title": "FHIR Module Enhancements  Project Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6477411709353984/",
                    "content": "FHIR is a well known standard which rapidly gets popular among community. The purpose of this project is to expand the capabilities and functions of the OpenMRS FHIR module. OpenMRS has recently undertaken a commitment to implement FHIR in order to ensure better interoperability between healthcare systems. The OpenMRS FHIR module was developed as part of these efforts. FHIR specification is continuously subjecting to several development iterations which improves the usability. This project aiming to upgrade the FHIR module to newest version of standard.",
                    "projectCode": "https://talk.openmrs.org/t/gsoc-2017-fhir-module-enhancements-final-presentation/13080"
                },
                {
                    "title": "FHIR OAuth Smart Apps Integration and OAuth Module Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6229265678860288/",
                    "content": "This is a draft proposal.",
                    "projectCode": "https://mavrk.github.io/GSOC-2017-final/"
                },
                {
                    "title": "Generic Tagging Mechanism",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5589961675898880/",
                    "content": "Creating a generic mechanism that allows users to annotate domain objects with text labels/tags. It has several uses such as, for grouping data and generating work-queues.",
                    "projectCode": "https://jtatia.wordpress.com/2017/08/26/final-report-gsoc-2017-generic-tagging-mechanism/"
                },
                {
                    "title": "Improved REST API Documentation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4787965653942272/",
                    "content": "Improve and optimize OpenMRS REST API Specification",
                    "projectCode": "https://www.linuxdeveloper.space/gsoc-2017-work-summary/"
                },
                {
                    "title": "More Metadata Management in AdminUI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4710352373678080/",
                    "content": "The goal of this project is to ensure that one can comfortably run the reference application without requiring the legacyUI module for metadata management in OpenMRS. Some initial work was done to move metadata management to the adminUI module for the reference application and there is still some more functionality that needs to be moved over.It's required to move Encounters, Observations, Scheduler, Programs, Triggered State Conversions, System Information, and Modules Management in the AdminUI module. I believe this project would be a perfect opportunity for me to get familiarized with the Open MRS Platform, focusing on the Operation Theater Module.",
                    "projectCode": "https://medium.com/@suthagar23/more-metadata-management-in-adminui-gsoc-2017-project-d9c42a68fea3"
                },
                {
                    "title": "OpenMRS Android Client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4773888495976448/",
                    "content": "During GSoC 2016, the Android app was improved with features including Forms and Patient Registration. For GSoC 2017, I will focus on bringing feature parity with the web client and making the client more useful for actual implementations. This includes various UI improvements and adding proper analytics tools to keep track of the user.",
                    "projectCode": "https://talk.openmrs.org/t/gsoc-2017-android-client-final-presentation/13064?u=defcon"
                },
                {
                    "title": "OpenMRS Android Client Feature Parity and Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4669708561285120/",
                    "content": "The project features new attributes designed towards usefulness and perfection. Implementing the Provider Module can improve doctor and patient management. In this proposal,  Feedback / Bug Report System, Vitals, Visual Improvements and Scheduled Queries will be discussed as well as a projected timeline for the project.",
                    "projectCode": "https://medium.com/@hao555sky/google-summer-of-code-2017-with-openmrs-79abeb6fb504"
                },
                {
                    "title": "OpenMRS Data Integrity Module Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5580448994426880/",
                    "content": "The objective of this proposal is to present a way to improve the OpenMRS Data Integrity Module. \nIt is not always possible to check the validity of the data received from different sources input taking process, hence the Data Integrity Module is very helpful to check the integrity of the data and alert the staff if something wrong entered in database.It also includes a timeline along with objective. Apart from that, it includes my previous work experience and projects.",
                    "projectCode": "https://medium.com/@shivtej/gsoc17-data-integrity-module-78a0ca58dcf1"
                },
                {
                    "title": "OpenMRS OWA Generator Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5141664800702464/",
                    "content": "OWA generator is a tool that uses Yeoman to scaffold an OpenMRS webapp. Scaffolding here represents almost the same meaning as it does in case of buildings i.e designing a framework on which buildings are constructed (webapps in this case).\nThe main goal of this project is to make it as easy as possible for a developer having some knowledge of javascript / angularJs  to design/build a webapp over the OpenMRS platform.\nPascal Brandt (my mentor) has done a remarkable job in developing the OWA Generator tool keeping in mind the user’s comfort and ease of access and it’s my honour that I got the opportunity to contribute to this project as a part of GSoC 2017.",
                    "projectCode": "http://techvenomgsoc.blogspot.in/2017/08/week-12-gsoc-final-evaluations.html"
                },
                {
                    "title": "Operation Theater Module Workflow Enhancements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5973432193777664/",
                    "content": "This proposal considers performing modifications to the existing Operation Theater module to migrate it to the latest OpenMRS platform. The other main goal is to complete the workflow data capturing part along with scheduling to complete the OT module.It discusses",
                    "projectCode": "http://blog.chanukawijayakoon.me/2017/08/gsoc-2017-operation-theater-module-workflow-enhancements-fp/"
                },
                {
                    "title": "Patient Matching 2.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6510740655570944/",
                    "content": "Patient Matching Module is an application where it tries to identify records that belong to the same patient among different number of data sources.",
                    "projectCode": "http://www.lahirujayathilake.com/2017/08/gsoc-2017-final-report.html"
                }
            ],
            "techStack": [
                "java",
                "javascript",
                "html/css",
                "hibernate",
                "mysql"
            ]
        },
        {
            "title": "OpenStreetMap",
            "orgLink": "http://www.openstreetmap.org/",
            "projects": [
                {
                    "title": "3D Model Repository for OpenStreetMap",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6733916283076608/",
                    "content": "This proposal consists of the implementation of a 3D model repository for OpenStreetMap, improving upon the basic system offered by the Simple 3D Buildings tags. By allowing 3D models to be used in OSM 3D visualizers, the quality and ease of creation of the rendering can be improved. To implement this repository by the proposed deadline, I have decided to use the Django/Python framework, with PostgreSQL as the database backend, and for the front end Bootstrap was chosen. The OpenLayers library will also be used to render slippy maps to the user. The repository includes an user interface allowing uploading models from an authenticated OSM account through the OAuth mechanism, and an API for 3D visualizers to use, so that they can query the repository for models. Finally, while there were a plethora of interesting features that could be included in the deadline checklists, I have opted for only having the essential features required for a 3D repository as deliverables, with the rest as extra features, to be added if time allows it.",
                    "projectCode": "https://gitlab.com/n42k/3dmr"
                },
                {
                    "title": "[JOSM] UI enhancements and Main menu refactoring",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5206850593095680/",
                    "content": "JOSM is a great editor for OpenStreenMap. It provides a rich set of functionality to allow its users a fluent way of managing data. \nCurrently, some parts of the core of JOSM are not written efficiently and expose ambiguous GUI that could be improved to provide the users of JOSM more intuitive way of interacting with the application, and as the result, to make their workflow more productive.\nI propose to refactor the core elements within JOSM, like search, download dialogs and the main menu. I expect to remove redundancies in the code, fix the documentation and add new features.",
                    "projectCode": "https://wiki.openstreetmap.org/wiki/User:Bafonins"
                },
                {
                    "title": "Enhancement of the pt_assistant plugin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6744213332951040/",
                    "content": "During last year's GSoC, the pt_assistant plugin has been developed by Darya Golovko. My goal is to further develop the plugin making small fixes and adjustment of what is already, as well as adding new major features. Two main features are: making it compatible with bicycle, foot and horse routes and implementing a specialized version of the relation editor for public transport routes.",
                    "projectCode": "https://wiki.openstreetmap.org/w/index.php?title=Google_Summer_of_Code/2017/AcceptedProjects/pt_assistant&oldid=1502764"
                },
                {
                    "title": "libosmscout: Implementation of an opengl renderer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4659017582379008/",
                    "content": "Currently there exists a great variety of OSM map rendering libraries, but a fast offline OpenGL based library is needed. libosmscout offers offline rendering and routing functionalities based on OpenSreetMap data. Right now libosmscout implements renderer based on libagg, cairo, DirectX, Qt. An OpenGL (ES) renderer would offer the possibility of fast rendering on desktop and also on mobile devices. In this proposal I describe a possible method for rendering OSM map data with the help of OpenGL.",
                    "projectCode": "https://www.openstreetmap.org/user/fannymonori/diary/42144"
                },
                {
                    "title": "Public transport - Web editor for public transport routes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5666315725438976/",
                    "content": "This is the proposal for the project idea shared on OSM wiki page https://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2017/Project_Ideas\"Suggested By - ZverikSummaryTo increase a number of public transport routes in OSM, we need a simple to use web-based editor. It would need to download stops and route relations, edit tags and relation members, keep nodes connected to ways, know about stop positions and platforms. See this write-up. The criteria for finished work will be a functioning and error-free web editor for stops and route relations. Way editing is not required (though it would be an interesting problem).Skills Required - JavaScript (+leaflet, +packaging, +xml processing, +some framework), HTML+CSS, OSM data modelDifficulty - MediumPossible Mentors - ZverikNotesComments\"",
                    "projectCode": "https://github.com/dkocich/osm-pt-ngx-leaflet"
                }
            ],
            "techStack": [
                "postgis",
                " java",
                " ruby",
                " javascript"
            ]
        },
        {
            "title": "openSUSE",
            "orgLink": "https://opensuse.org/",
            "projects": [
                {
                    "title": "Hosted Version of OSEM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5288625428234240/",
                    "content": "Currently OSEM is a self hosted solution to organize conferences by various organizations developed in Ruby on Rails. Conference organizers all over the world host the application on their own servers to manage their conferences. The idea is to implement multi tenancy so that once hosted, the hosted version can be used by multiple organizations across the globe to manage their conferences.",
                    "projectCode": "https://lifeinoss.wordpress.com/2017/08/27/gsoc-final-submission-blog/"
                },
                {
                    "title": "Integrate callstats.io into Jangouts",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5375181635715072/",
                    "content": "Audio, video or data packets transmitted over a peer-connection can be lost, and experience varying amounts of network delay. Therefore, a web application like Jangouts, implementing WebRTC expects to monitor the performance of the underlying network and media pipeline. As a solution to this problem, I propose to integrate callstats.io into Jangouts. callstats.io is a SaaS service that helps WebRTC services detect and diagnose media and network quality issues. This project aims to give an option to companies and individuals deploying Jangouts to use this service in a user-friendly way. This task can be completed by sending WebRTC events and measurement data from the Jangouts application and the Janus media server in real-time to callstats.io. The idea is to integrate the callstats.io REST API with the WebRTC components in Jangouts and Janus. The Jangouts app will send endpoint stats and Janus will send the stats related to the WebRTC gateway.",
                    "projectCode": "https://code-master5.github.io/Aug-22-2017"
                },
                {
                    "title": "Make the Travel Support Application useful for more organizations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6133468983459840/",
                    "content": "TSP is a Ruby on Rails based application to manage the requests and reimbursements from travel help programs of free software organizations. Originally developed for the openSUSE Travel Support Program it was adopted recently by the KDE e.V. Travel Cost Reimbursement initiative.However currently its lacks some features and is less flexible. This project is about making the tool more useful for KDE e.V. and possible future adopters. The new features such as adding an event organizer to manage the events, a feature to send email to the event participants. It also include migrating the UI framework Bootstrap to the latest version and to move the DSL from the models to the configuration files.",
                    "projectCode": "http://blog.nikhilgupta.me/gsoc-final-evaluation/"
                },
                {
                    "title": "Printable tickets & better check-in process for OSEM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4775222217539584/",
                    "content": "The current implementation of registration process in OSEM has become much more configurable recently with the addition of online ticket payment feature. However, there is still no way to generate and download a pdf printable ticket after registering for a conference. This printable ticket can be very useful as it can contain information about the conference (name, logo, location, date, etc.), user (name, email, etc.), the ticket type, a custom description and a QR code. Currently to do the check-in someone has to mark as present in the conference one by one every user by looking for its name or email. This can be tedious and impractical even for small number of attendees. The QR code in the ticket can really help in making the check-in process a lot more efficient.",
                    "projectCode": "https://siddhantbj.wordpress.com/2017/08/24/osem-gsoc17-final-evaluation/"
                },
                {
                    "title": "Revamp Jangouts User Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6489126635307008/",
                    "content": "Jangouts (for “Janus Hangouts”) is a videoconferencing tool based on WebRTC and Janus Gateway that provides a self-hosted open source alternative to Google Hangouts. It supports video, audio, screen sharing and textual chat, which are organized into unlimited conference rooms with a configurable number of participants. The major issue of this tool is that the current UI does not fully address the needs of the community. Therefore, the objective of this project is to improve Jangouts so it becomes more user-friendly. This problem can be solved by reaching out to the community members to identify and understand UX issues that will lead to the improvement of the UI.",
                    "projectCode": "https://github.com/aniabui/jangouts/releases/tag/v0.4.6-redesign"
                }
            ],
            "techStack": [
                "ruby on rails",
                "javascript ",
                "docker",
                "linux",
                "angular.js"
            ]
        },
        {
            "title": "OpenWISP",
            "orgLink": "http://openwisp.org",
            "projects": [
                {
                    "title": "AirOS backend for OpenWISP2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6117042746818560/",
                    "content": "This project will extend the capability of the netjson-config utility by adding support for the AirOS firmware. AirOS is the base firmware for enterprise grade hardware used in wireless networking. It is also used by wireless community network distributed over long distance.",
                    "projectCode": "https://edoput.github.io/openwispgsoc/about/"
                },
                {
                    "title": "Building a Javascript Based Configuration UI for OpenWisp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5846773071347712/",
                    "content": "The openwisp project used netjson, a json schema standard, control network configurations. This requires a means for a user to edit these configurations graphically as well have the possibility in editing configurations in an advanced as a user with much experience. Thus this required the availability of a Visual editor for editing and validating netjson easily. \nThe aim of this project is to make available a fully independent netjson editor library which can be integrated into any netjson project. This library will make available both the basic and the advanced editing modes as well as validation of user configurations against the netjson schema provided at any point in time",
                    "projectCode": "https://medium.com/@gastonche/building-a-javascript-based-configuration-ui-for-openwisp-5eab15088a55"
                },
                {
                    "title": "Django-radius",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6360344054202368/",
                    "content": "Implement a reusable Django app which allows managing the main freeradius database tables.",
                    "projectCode": "https://delucafiorella2602.blog/2017/08/28/google-summer-of-code-2017-django-freeradius/"
                },
                {
                    "title": "OpenWISP 2 Network topology",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4878404511858688/",
                    "content": "One of the use case scenarios of OpenWISP 2 is mesh networking. In these scenarios being able to collect and visualise topology information is crucial. This app, in substance, will be a web interface to setup the collection of network topology data from mesh networks as well as a mesh network visualizer and very basic monitoring system. This app aims to implement a django reusable app named openwisp-network-topology which has many features such as muti-tenancy, saving daily snapshots of network topology, switcher to go back in time and see one of the previous daily snapshots all in the admin panel.Technologies used: Python, Django, Django-Rest-Framework, JavaScript, NetJSON",
                    "projectCode": "https://medium.com/@rohithasrk/openwisp-2-network-topology-gsoc-17-4765008ccba"
                },
                {
                    "title": "Raspbian backend for OpenWISP 2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6704162360262656/",
                    "content": "The project will require to implement a backend for OpenWISP 2. The backend must generate Raspbian compatible configuration files (i.e. etc/resolv.conf, etc/network/interfaces, etc/hostapd/hostapd.conf, etc ) from NetJSON Device Configuration. The backend must also be capable of generating NetJSON Device Configuration from the Raspbian configuration files. The backend must atleast conver General, NTP Settings, Wireless Settings, Wireless Settings, DNS Server, DNS Search Domains, Static Routes, Files, etc. The test coverage of the library must be above 95%. The backend will be documented inside python-sphinx docs directory contained in the netjsonconfig repository.",
                    "projectCode": "https://medium.com/@ritwickdsouza/gsoc-openwisp-raspbian-backend-for-openwisp-2-61ff91843362"
                }
            ],
            "techStack": [
                "python",
                "django",
                "javascript",
                "openwrt",
                "raspberry pi"
            ]
        },
        {
            "title": "Oppia Foundation",
            "orgLink": "https://www.oppia.org",
            "projects": [
                {
                    "title": "Integrating and applying machine learning to the code interaction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6364054905946112/",
                    "content": "The aim of this project is to create necessary infrastructure so that machine learning algorithms can be efficiently trained and prediction can be done effectively. The project also requires implementing code classifier which will  allow creators to train a classifier for code interaction input. This will allow Oppia to give feedback more efficiently whenever an input fails to classify in any of the hard rules specified by creator, rather than giving default outcome feedback.Basically there are 3 things to do in this project:The infrastructure to be used by Oppia for training of algorithm is called Oppia-ml. It provides Machine learning - as - a - service infrastructure for Oppia. Moreover prediction should be done in the frontend, in users computer so that there is no need of internet connection for giving feedback to the user. The outcome of this project is complete integration of machine learning framework and make it available to end user in production environment.",
                    "projectCode": "https://prasanna08.github.io/GSoC-17-with-Oppia/"
                },
                {
                    "title": "Learner Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6395491382198272/",
                    "content": "The primary goal of this project is to engage the learners in a long term learning relationship with Oppia by providing them with their personal learning space - the 'Learner Dashboard'. The dashboard will keep track of the explorations and collections completed by learners, the explorations and collections that are currently in progress, the creators to whom the learner has subscribed to and the list of feedback threads which he/she needs to read or respond to. In addition, learners can also create their own curated list of explorations and collections which they may want to play later.The learner dashboard will help provide an enriching learning experience and will bridge the gap between learners and creators. It'll be at the heart of the learning process and help the learner learn faster. In addition, this project will create the foundation for implementing a rich set of features like recommending the right next courses for individual learners and many other such exciting possibilities. This project, I believe, would mark a major milestone in accomplishing Oppia's mission - 'to help anyone learn anything they want in an effective and enjoyable way'.",
                    "projectCode": "http://arunabh98.github.io/gsoc-2017.html"
                },
                {
                    "title": "SiteWide ACL Refactor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6618149197709312/",
                    "content": "The project is about replacing the current pseudo Role based Access Control System of oppia and replace it with Action based Access Control System",
                    "projectCode": "https://researchweb.iiit.ac.in/~yogesh.sharma/GSOC17-with-oppia.html"
                }
            ],
            "techStack": [
                "python",
                "google app engine",
                "angularjs",
                "javascript",
                "css"
            ]
        },
        {
            "title": "OSGeo",
            "orgLink": "http://www.osgeo.org/",
            "projects": [
                {
                    "title": "3D OSM Plugin API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6446195887046656/",
                    "content": "The goal of this project is to create a plugin API to display OpenStreetMap (OSM) data on NASA Web WorldWind (https://github.com/NASAWorldWind/WebWorldWind) virtual globe in three dimensions. The API fetches the OSM data in real time based on a bounding box, or uses a local file or the data itself in GeoJSON format. The project focuses on the performance of the visualization of 3D OSM buildings, and for this purpose creates triangle meshes based on the footprint available in OSM database. Height to the buildings can be assigned using the OSM database, a property in a GeoJSON file or an arbitrary value. The API can also create a heatmap based on the heights of the buildings. The API also offers caching and sectorizing (tiling) to improve the performance.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2017-August/003844.html"
                },
                {
                    "title": "Adding Audio/Video and SOS input support in the MapMint4ME",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5784917489221632/",
                    "content": "MapMint4ME is an android application which allows its users to record alphanumeric data, photo and GPS locations. The data can be recorded even when there is no internet connectivity. When the user returns to a location with the internet connectivity, the data is uploaded to the database. MapMint4ME is very close to MapMint web software which is built on the ZOO-Project. The ZOO-Project is an SDI manager providing the capability to built map and web applications.In this project, I plan to add audio and video data recording facility to MapMint4ME. The main idea is to include SOS input support to MapMint4ME which will enable recording of sensor data directly within the app. The sensor data will be obtained from the sensors embedded on the Android platform. This project will help lots of GIS users, geologists, geographers et cetera who wish to retrieve data from remote areas (where it is not possible to reach) by accessing sensor data directly through the app. Certainly, more functions with extended capabilities could be added in future. I believe that by following a strict timeline as mentioned in the proposal, I will be able to finish the project successfully.",
                    "projectCode": "https://github.com/omshinde/MapMint4ME/wiki/Final-Report:-GSoC-2017"
                },
                {
                    "title": "Educational games add-on for gvSIG Batoví/Educa",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6319623737704448/",
                    "content": "The main idea behind this project is to develop an add-on which allows to create/play educational games. Also generate documentation specially oriented to users without any programming knowledge.The code will be mainly developed in Jython, an implementation of the Python programming language written in Java, through the scripting module of the gvSIG desktop 2.x branch.The developed tools will be used in geography and maps learning.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2017-August/003840.html"
                },
                {
                    "title": "GRASS GIS Locations Created From Public Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5871436652609536/",
                    "content": "Novice GRASS GIS users often have difficulty with the complexities of re-formatting data, solving map projection issues, and working with centralized data organization. Existing solutions often require users to create their own custom scripts geared towards a specific use-case and are generally incompatible with other data sources or coordinate projection systems. My project will focus on creating scripts that convert widely-used open data sets into standardized formats for a given location or projection.Users will be able to download multiple data sets and appropriately format the data according to a user-defined location. Automated formatting will allow users to more efficiently utilize information and create ready-to-use data sets available for download. Furthermore, the underlying framework generated by my project will allow users to develop their own scripts for a given service and/or location.",
                    "projectCode": "https://github.com/zkwurst/GSoC2017-GRASS-GIS"
                },
                {
                    "title": "Implement Connected Components Algorithms for pgRouting by the Boost Graph Library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5135673321324544/",
                    "content": "Connected components algorithms are used to analyze graph and solve problems (like 2-satisfiability problem). There are three parts of connected components algorithms in the Boost Graph Library (BGL),I am proposing to add those BGL functionalities to pgRouting during this GSoC period.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2017-August/003843.html"
                },
                {
                    "title": "Improving IstSOS Web API and finalizing IstSOS Javascript Core Library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4982617598328832/",
                    "content": "My proposal consists of making some crucial changes (event handling, authentication...) to the IstSOS JavaScript core library, that will solve the most important issues of the IstSOS Web API (GSoC 2016 project). As a result, plan is to publish the library to the npm. Also, IstSOS Web Widget Creator is going to be rewritten and extended with some additional functionalities using modern JavaScript framework, specifically ReactJS. Final result, should be a modernized, completely functional and easy-to-use IstSOS Web API.",
                    "projectCode": "https://luka-g.github.io/istSOS-Web-API/"
                },
                {
                    "title": "Integrating istSOS as a data store in MapMint",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6140850555846656/",
                    "content": "The idea of integrating istSOS as a data store in MapMint is able to provide a platform for data visualization which can be used as near real time, analysis such as interpolation analysis, conversion such as vector and raster data, and publish as maps and OGS standard services such as WMS, WFS,WMTS and WPS by utilizing the data from istSOS.",
                    "projectCode": "https://github.com/niroshansb/mapmint/wiki"
                },
                {
                    "title": "Integration of Bikeshare Information into an Open-source Transportation App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5552538552107008/",
                    "content": "The General Transit Feed Specification (GTFS) has revolutionized multi-modal information and open transit data. Started as a simple way to represent fixed route transit systems by TriMet in Portland, Oregon and Google in 2005, GTFS data is now shared publicly by over 1,500 transit agencies worldwide, according to Transitland.There are exciting new developments in the world of bike share that could potentially mirror the success of the GTFS data format. The General Bikeshare Feed Specification (GBFS) was launched by the North American Bikeshare Association (NABSA) in 2016 as a standardized way for apps to access information about the availability and location of rental bikes, as well as the capacity of racks where bikes can be returned.This Google Summer of Code project will help accelerate the adoption and utilization of the GBFS format by implementing open-source tools to consume the data format and visualize it in an existing open-source transportation app:Integrate GBFS data in OpenTripPlanner\nVisualize GBFS data in the OneBusAway mobile app",
                    "projectCode": "https://github.com/OneBusAway/onebusaway-android/pull/776/"
                },
                {
                    "title": "istSOS-Data analysis and statistical tools suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4902267350155264/",
                    "content": "istSOS has gone through a lot of improvements since 2009. This has somehow affected the simplified interaction with measurements and SOS service settings. \nThe aim of my project primarily is to create OAT extension in RESTFull Web api and OAT extension having data analysis and statistical tools for istSOS which will be used to automate the creation of statisticat documents using OAT library and harvesting the data from an istSOS server and then publishing the result on Open Data Portals(CKAN).The data analysis and statistical tools suite will cover all the features of OAT.Methods. Further I will create data analysis and statistical tools suite suite for istSOS.",
                    "projectCode": "https://github.com/rahulworld/Data-analysis/blob/master/examples/GSoC.md"
                },
                {
                    "title": "NASA WebWorldWind - MarkerCluster Plugin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5602094421639168/",
                    "content": "Creating a Marker Cluster Plugin for NASA Web World Wind with the following features:",
                    "projectCode": "https://simonebt92.github.io/NASA-WWW-MarkerCluster/"
                },
                {
                    "title": "QGIS Web API and remote control Plugin (for Notebook integration)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4854198344613888/",
                    "content": "The goal of this project is to create a QGIS Desktop plugin which provides a web service API that exposes QGIS' data processing and canvas drawing functionalities. The plugin provides a way to include QGIS in the data processing workflow of other (‘mapping-deficient’) programming languages over a HTTP interface which mirrors the existing QGIS API, without precluding the ability to make use of its interactive editing components. The project also covers the generation and documentation of automated geospatial analysis workflow examples using Jupyter notebooks for both Python and R. The example notebooks will integrate data obtained from Open Data repositories with use cases of the QGIS Web API as well as other OSGeo geospatial libraries to demonstrate the potential of automatic report generation for open source GIS analysis.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2017-August/003841.html"
                },
                {
                    "title": "Rewrite for Turn Restricted Shortest Path Algorithm in PgRouting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4730835743801344/",
                    "content": "In graph theory, the shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. In real life scenario, the road network is modeled as a graph where the graph's vertices correspond to road junctions and the edges correspond to road segments, each weighted by the positive length of its road segment.A turn models a movement from one edge element to another. Often in the real world scenario, turn restrictions such as no-left-turn, no-right-turn etc. are imposed on the road network.The aim of the project was to come up with a solution for calculating the shortest path from a given source node to a destination node in the graph containing turn restrictions.",
                    "projectCode": "https://lists.osgeo.org/pipermail/soc/2017-August/003846.html"
                },
                {
                    "title": "SOS tools in GRASS GIS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4761529861799936/",
                    "content": "GRASS GIS doesn’t have any module to work with Sensor Observation Service (SOS). SOS is an Open Geospatial Consortium (OGC) standard and it is useful to implement modules to work with this standard into GRASS. \nIntended modules would enable the user to create a vector with or without the observation values, create a raster for each queried day and create a space time vector or raster dataset. One module would also allow the user to convert a space time vector dataset into a raster dataset. The user should be also allowed to get the capabilities to get info about sensors from these modules and filter the results.",
                    "projectCode": "https://github.com/pesekon2/GRASS-GIS-SOS-tools/tree/gsoc2017"
                }
            ],
            "techStack": [
                "c++",
                " python",
                " c",
                " sql",
                "java"
            ]
        },
        {
            "title": "oVirt",
            "orgLink": "http://www.ovirt.org",
            "projects": [
                {
                    "title": "Configuring Backup storage for Ovirt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6180741675220992/",
                    "content": "",
                    "projectCode": "https://github.com/shubham0d/Gsoc-2017-ovirt/blob/master/GsocFinalReport/FinalReport.md"
                },
                {
                    "title": "Implement oVirt integration tests using Lago",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6285779395411968/",
                    "content": "Complete the ovirt-system-tests with the necessary tests",
                    "projectCode": "https://gist.github.com/vmakarova/62c2941d4723bc2673427db22cf72a29"
                }
            ],
            "techStack": [
                "java",
                " python",
                "kvm"
            ]
        },
        {
            "title": "ownCloud",
            "orgLink": "http://owncloud.org",
            "projects": [
                {
                    "title": "Dropbox API v2 Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4844054437167104/",
                    "content": "This project aims to integrate the Version 2 of the Dropbox API in OwnCloud which currently uses the v1 of the Dropbox API which has been deprecated by Dropbox and all the endpoints will be turned off on June 28, 2017. The project will include swapping out the v1 PHP SDK with v2 but since Dropbox have not launched any official PHP SDK for the API v2 one of the Community SDK (as mentioned on the Dropbox Developer Documentation here ) can be used for the same.",
                    "projectCode": "https://github.com/owncloud/files_external_dropbox/pull/1"
                },
                {
                    "title": "ownCloud as a backend for web apps",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5166409181036544/",
                    "content": "The aim of this project is to make support for cross-origin API access in ownCloud using OAuth2 verification AND ​write a JavaScript API Client library making it easy for the developers to communicate with existent ownCloud APIs.",
                    "projectCode": "https://gist.github.com/noveens/381b12c830d1b77b99877943f90ebb1b"
                },
                {
                    "title": "Security App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6178886249349120/",
                    "content": "ownCloud Security app. It hardens ownCloud security with several new features including brute force protection, 404 detection and strong password enforcement.",
                    "projectCode": "https://gist.github.com/karakayasemi/99dce25f33afcf15ddc2622272d5066b"
                }
            ],
            "techStack": [
                "php",
                "qt",
                " android",
                "ios",
                "javascript"
            ]
        },
        {
            "title": "P2PSP.org",
            "orgLink": "http://p2psp.org",
            "projects": [
                {
                    "title": "Implementation of a REST WebService for the P2PSP media sources",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5795608468127744/",
                    "content": "At its current state, the Splitter - which handles the team of peers - needs to be connected using an IP and Port which must be either fixed or previously agreed for both streaming video and peer connection. Which we want to accomplish here is to have a wrapper Web Service that can manage the native splitters and communicate to clients through HTTP request-responses or any other way that can easily get through NATs-, create an Splitter instance and redirect the video to it, assigning a 'friendly URL' to it that can be easily shared. When this URL is visited, it will reply with the IP and port that the peers need in order to connect to the Splitter.",
                    "projectCode": "https://gist.github.com/agauniyal/3274b2adc8d9073b260e344ede8b9fa0"
                },
                {
                    "title": "The P2PSP virtual room application",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4831647216173056/",
                    "content": "P2PSP.org is a nonprofit organization that develops the P2PSP protocol, an application layer protocol designed for the real-time streaming of multimedia content over the Internet. I would like to contribute to the idea of Virtual Room this summers and be a part of the community. Recently I have been involved with a lot of real time applications .The hidden motivation behind choosing this project is mainly due to an application I recently developed, Latch for a hackathon. It is a Location based chat application, using Django as the primary backend server and Node.js for real time data handling. I already had an idea of developing a similar video based application which introduced me to WebRTC. I saw this project of Virtual Room in P2PSP, and the idea of an open source real time video streaming application fascinated me a lot. I believe that it could be very useful and can create an impact on the community.",
                    "projectCode": "https://gist.github.com/jainamritanshu/6d6e737e83099cc42825926bd2bee454"
                }
            ],
            "techStack": [
                "c++",
                "python",
                "qt",
                "sockets",
                "webrtc"
            ]
        },
        {
            "title": "PEcAn Project",
            "orgLink": "http://pecanproject.github.io/",
            "projects": [
                {
                    "title": "Dockerization & New Instance Setup",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5070788713512960/",
                    "content": "Currently the PEcAn stack is distributed using the VM’s. The Aim is to replace the current VM distributions technique with the docker containers and Also to modularize it into smaller independent parts like PEcAn, Postgresql & Bety so it will become easy to maintain. Also to add a Setup/Admin web UI so it can support many features like setup Unique machine id, Sync between the database, automatically update bety and PEcAn (Or notify user when new update available if this feature is turned off), Setup new instance etc.",
                    "projectCode": "http://amanskywalker.github.io/gsoc-2017/"
                },
                {
                    "title": "Model Benchmarking in PEcAn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6195340537495552/",
                    "content": "PEcAn is an ecological modelling toolbox with the capability to automate, preserve, and repeat model runs. One functionality still in the early stages is benchmarking, or comparing models to empirical data. My project aims to add data ingest and cloning functionality to the benchmarking module of PEcAn to make it applicable to a wider range of models and regions and more robust in its ability to benchmark multiple models.",
                    "projectCode": "https://gist.github.com/annethomas/c603c13f12f17d10c6234b99d5354ae2"
                },
                {
                    "title": "Scientific Visualization Project for PEcAn",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5785439193530368/",
                    "content": "The PEcAn (Predictive Ecosystem Analyser) project is an open source system for ecosystem modelling and forecasting. With huge amount of climatic and environmental data available, the PEcAn software tries to utilize it for providing users vital statistics and interactive visualizations for modeling and forecasting. Integration with Google Maps interface provides helpful information to the user and it becomes very handy to select a site. PEcAn already has an interface with Shiny (R) for visualizations and the main aim of this project would be to work upon the existing Shiny apps as well as developing other powerful visualizations to convey the right amount of information as well as clear understanding to the users on the platform. For me, an important component of this project is to understand what kind of visualization would give an intuitive sense to any user given the data and to present them in a very clear and effective manner. Otherwise, the user could not draw inferences that we want to show them. This is the most interesting thing I like and it is my motivation to work on this project to master this art of visualization.",
                    "projectCode": "https://docs.google.com/document/d/1JKeePbZQMKwv651VjflBe4AZ3AK1ax0pAKoLHq4rfmw/edit?usp=sharing"
                }
            ],
            "techStack": [
                "r",
                " php",
                "postgresql",
                "javascript ",
                "c"
            ]
        },
        {
            "title": "Performance Co-Pilot",
            "orgLink": "http://pcp.io",
            "projects": [
                {
                    "title": "Custom Graphs in Vector",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5832694705422336/",
                    "content": "Vector currently provides us with a set number of widgets which are generally used to monitor performance of the system. The idea is to extend the web application by adding a new feature that enables the user to add a new blank widget and then add metrics to a custom graph.",
                    "projectCode": "https://gist.github.com/suvigyavijay/23fc3da2df3016edddc20b7e5f2a7959"
                },
                {
                    "title": "Device Mapper statistics for PCP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4890125209174016/",
                    "content": "It is a project to make the data provided by dmstats available to PCP tools by use of creating PCP PMDA in order to provide flexible IO statistics for Device-mapper.The goal of each stage is",
                    "projectCode": "https://gist.github.com/4ge32/6de49f941be9fc34e1e052258beac61a"
                },
                {
                    "title": "Implement a PCP Instrumentation API in Rust",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4793296782098432/",
                    "content": "The primary goal of this project is to build a native PCP MMV instrumentation library in Rust with a high-level API that developers can use in their applications to report arbitrary metrics at runtime. Metrics will be written out in the Memory Mapped Values format v1/2, which can then be read by a Performance Metric Domain Agent. Sub-goals include building a Rust API and command line utility to dump metrics from an MMV file, and examples of embedding the MMV instrumentation library inside popular Rust projects (such as Iron and Hyper).",
                    "projectCode": "https://github.com/performancecopilot/hornet/commits/master?author=saurvs"
                },
                {
                    "title": "Performance Co-Pilot Project Proposal: Blocked process detection and reporting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5338172170960896/",
                    "content": "When analyzing performance, especially in systems that have multi-core processors, it is important to be able to study how each process performs. To do this we use measures such as total processing time, I/O waiting time, and blocked time. In order to understand better the inner workings of the process scheduling algorithm used and their performance we also need to know why certain processes get blocked, what causes them to be blocked and when they are blocked. The purpose of this project is to integrate these measuring tools into Performance Co-Pilot’s pcp-pidstat utility.",
                    "projectCode": "https://kalperen.github.io/pcp-description-page.html"
                },
                {
                    "title": "Prometheus Metric Exporter / Importer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6543048204877824/",
                    "content": "With this proposal, I propose to implement a bridge between Prometheus and\nPerformance Co-Pilot which would enable these systems to be able to import and\nexport metrics across each other. The Performance Co-Pilot would be able to collect\nthe metrics from application supporting Prometheus endpoint and pushing metrics\nfrom Performance Co-Pilot into Prometheus.",
                    "projectCode": "https://jronak.github.io/pcp/"
                }
            ],
            "techStack": [
                "python",
                "javascript",
                "c",
                "linux",
                "windows"
            ]
        },
        {
            "title": "Pharo Consortium",
            "orgLink": "http://pharo.org/",
            "projects": [
                {
                    "title": "Advancing in Pharo Code Quality Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6133050358366208/",
                    "content": "Pharo and Smalltalk in general always encouraged a good quality of code [Kent Beck “Smalltalk with style”; Refectoring Browser; SmallLint; CriticBrowser]. \nNonetheless there are still many features lacking from the quality-assistance in Pharo.",
                    "projectCode": "https://github.com/myroslavarm/Pharo-Project"
                },
                {
                    "title": "Enhancing Pharo Command Line Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5927132983197696/",
                    "content": "Command line is the most flexible and powerful platform. It is also the fastest way to work compared to a GUI. Also, the command line will give scope for automation and scripting.\nCurrently, the command line handler framework in Pharo is used. Pharo comes with many built-in handlers. ​ There is also Scale​ repository which is also used to write scripts. Due to the increased use of scale, the complexities in\nPharo has been raised to a higher level leading to core problems in Pharo. I wish to solve these problems, thereby improving the command\nline management.",
                    "projectCode": "https://vineetreddy.wordpress.com/2017/08/28/google-summer-of-code-2017-final-report-pharo-consortium-rajula-vineet-reddy/"
                },
                {
                    "title": "Improve FastTable and extend its possibilities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4906184360329216/",
                    "content": "FastTable was integrated into Pharo 5.0 to solve two main problems that the old lists implementations were facing, first the performance issue, old list’s data source was limited to a couple of hundreds of rows only and second the lack of extensibility since old lists don’t handle complex element morphs very well.\nSince their integration, FT and their subclasses have known several improvements allowing them to render multi cells tables, expandable trees and draggable lists but the development is still in its early stage and there are still a lot of work ahead.\nThe goal of this project is to target the needed improvements and extensions to build a better FT family widgets that could fulfill much bigger variety of applications.",
                    "projectCode": "https://github.com/SamTheDev/Morphic-Widgets-FastTable"
                },
                {
                    "title": "Improving the VM Profiler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4865388479250432/",
                    "content": "The current VM profiler is a sampling profiler cadenced at 1.3GHz tracking down where the time is spent in the C code of the VM (for the interpreter and the GC) and in the machine code zone (for the code generated by the JIT).\nThe VM profiler cannot track down precisely where the time is spent when executing the code generated by the JIT. It can track down in which methods the time is spent, but it cannot track down in which part of those methods the time is spent.By making sure the UI stays independent and by patching all the uses of the library OSProcess to make it work in both Squeak and PharoBy using the JIT API to map machine code instruction pointer to bytecode program counter, to be able in the end to show in which bytecode range of methods the time is spent instead of only in which methods the time is spent",
                    "projectCode": "https://gist.github.com/sophie-kaleba/d0e9a10b7c7b66271f6a3bfbc9aff625"
                },
                {
                    "title": "Tabular Data Structures for Data Analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5126844210741248/",
                    "content": "Bringing the functionality of Pandas to Pharo",
                    "projectCode": "https://github.com/PolyMathOrg/DataFrame"
                }
            ],
            "techStack": [
                "smalltalk",
                "roassal",
                "polymath",
                "pharo"
            ]
        },
        {
            "title": "phpBB Forum Software",
            "orgLink": "https://www.phpbb.com",
            "projects": [
                {
                    "title": "Advertisement management extension",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5441173539782656/",
                    "content": "The ability to easily handle advertisements in phpBB is often requested. Latest pool for next official extension results in Advertisement Management being tightly at the second position, while it’s extension request topic is far more active (with 126 replies and almost 8000 views) than pool’s winner Paypal Donations (which already exists). EXreaction’s modification is 9th most downloaded MOD with more than 66000 downloads. Clearly, there is a big demand for this extension.My goal will be creating an advertisement management extension that allows admins to add HTML/JS advertisement code to number of locations in the template. If time allows, many additional features will be implemented, i.e. end date, hide ad for specific groups, adblocker friendly message, ad priority, views and clicks counting, ad owners, banner uploads, extensible and/or additional template locations and PHP event hooks for other extensions to further enhance usage experience.",
                    "projectCode": "https://blog.phpbb.com/2017/08/24/google-summer-of-code-2017-advertisement-management/"
                },
                {
                    "title": "Implementation of storage service",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4922106072530944/",
                    "content": "My goal is to split the filesystem service into one additional storage service to allow developers to create extensions which change the storage engine, to store all upload files and backups in cloud storage services like Amazon S3, Azure, ftp, etc.",
                    "projectCode": "https://gist.github.com/rubencm/1ebb24781a643523a506fc31b7bc8abd"
                }
            ],
            "techStack": [
                "php ",
                "mysql",
                "javascript",
                "symfony",
                "css"
            ]
        },
        {
            "title": "phpMyAdmin",
            "orgLink": "https://www.phpmyadmin.net",
            "projects": [
                {
                    "title": "Enhancements collection",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4854940837085184/",
                    "content": "phpmyadmin currently has a large number of open issues (~210 at time of writing this). To maintain and improve phpmyadmin core project the numbers of issues should be lower down. This project aims to resolving the major issues and improvements to be done in phpmyadmin. I have selected a list of issues on which I will be working this summer.",
                    "projectCode": "https://goo.gl/wHfQjS"
                },
                {
                    "title": "Enhancements collection for phpMyAdmin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6426335958269952/",
                    "content": "The project aims at enhancing phpMyAdmin by implementing several features. The following is the list of enhancements:\nNew UI for Multi-table query generator,\nDefault options for transformations,\nAllow designer to show other Databases, \nGoogle Authenticator,\nConsolidate tablesorter libraries, \nFacilitate drag and drop of columns between tables,\nSetup improvements.",
                    "projectCode": "https://raghuramvadapalli.wordpress.com/2017/08/24/closing-gsoc-final-code-submission/"
                },
                {
                    "title": "Improving phpMyAdmin's Selenium testsuite and Error Reporting Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6246403672113152/",
                    "content": "phpMyAdmin has been around for more than eighteen years now. Over all these years, a variety of new features have been added to it. In wake of new features being implemented and the existing bugs being fixed, it becomes increasingly important to not break existing functionality of commonly used features. Although, unit testing helps in preventing some of breakages, a consistent and robust selenium test-suite is as imperative to ascertain that none of the commonly used flows are broken.This project aims to fix the project’s currently broken selenium testing, so that the complete suite can be run on every commit and also add to the existing set of tests to cover more features and related flows.Additionally, it also involves improving phpMyAdmin’s error reporting server by implementing a set of new features, that would be useful for the developers in maintaining the project better.",
                    "projectCode": "https://devenbansod.wordpress.com/2017/08/26/google-summer-of-code-17-with-phpmyadmin-summary/"
                }
            ],
            "techStack": [
                "php",
                "mysql",
                "jquery",
                "javascript",
                "cakephp"
            ]
        },
        {
            "title": "Physical Web Project",
            "orgLink": "http://physical-web-project.github.io/",
            "projects": [
                {
                    "title": "Geographical Memories",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6203506612502528/",
                    "content": "Geographical Memories is a social platform to share travelling memories. By using Physical Web users are able to showcase their thoughts about different places in the world by simply getting nearby.",
                    "projectCode": "https://github.com/zurfyx/memories/wiki/GSoC-2017"
                },
                {
                    "title": "Hospital Routing using Physical Web Beacons",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4861610652860416/",
                    "content": "This project aims at building a solution wherein a user can easily navigate inside hospitals using an application in his/her smartphone. The application will show the indoor map of the hospital with the position of the user highlighted and updated as he/she move within the building. This solution does not require GPS but uses BLE beacons for positioning.",
                    "projectCode": "https://github.com/vipinraj/pw-hospital-routing"
                },
                {
                    "title": "My meteorological station",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6696000311787520/",
                    "content": "My meteorological station is a project that consists of building a homemade meteorological station using physical web beacon and raspberry pi.The raspberry pi will have connected many weather sensors to get data. Likewise, will receive weather data from various external API in order to complete all weather information.The beacon broadcast the URL with information about the meteorological station provided by raspberry pi.\nThe beacon will have a fixed URL that will point to another, using the technique URL redirection.As we have access to Google Liquid Galaxy technology in our LAB, also I will develop a visualization layer of this meteo information on the LG.In other way to access the system, the user will communicate with the system by voice using a google assistant, allowing to have a conversational ui in natural language. The assistant agent will serve a request, receiving data from the raspberry pi using a webhook. This webhook will receive the data from the raspberry and return to the user the proper information.The actual tests will be carried out in buildings of the PCITAL (Parc Cientific i Tecnologic Agroalimentari de Lleida), like Cedico, H2, and Magical Media.",
                    "projectCode": "https://github.com/gerard87/my-meteorological-station/blob/master/docs/GSOC17.md"
                },
                {
                    "title": "Physical Web Museum Backend",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4972384704528384/",
                    "content": "The aim of this project is to implement a backend for museums & exhibits that utilizes Physical Web technology. The backend will allow visitors to access information about exhibit pieces without the need to install any apps. Physically, this will be accomplished using Eddystone beacons located near each piece. We focus on developing the software used with the beacons.To achieve this, we will create an Android App that allows museum curators to configure Physical Web beacons they want to deploy and upload the content that will be served. The app will support combinations of text, images, audio and video - it will use Google Drive for its storage backend. The app will also allow the curators to create a map of the exhibition & beacons - also stored on Drive.Once activated, the beacons will direct visitors to the URI of a webapp that we will also develop. The webapp will run on a server that connects to the Google Drive folder created by the Android app. This webapp, run on the museum’s servers, will use the map along with Web Bluetooth technology to learn the user’s location (by listing nearby beacons and their signal strength) and display to the user the content most relevant.",
                    "projectCode": "https://kayali.io/blog/gsoc-part-2/"
                },
                {
                    "title": "Smartphone Auto Settings Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6640033398259712/",
                    "content": "The primary principle of the project is to allow the user the ability to switch to any setting on his/her phone based on location (identified by beacons). However, I plan to provide the users with a more pleasant experience through flexibility, by providing them with a wider array of choices, while making the entire process as simple as possible.I am proposing a solution which would perform actions when a set of conditions provided by the user are met. Such an occurrence will be known as an \"event\". An example of an event would be if I am in my car (which would be recognised by the identification of the BLE beacon) and my headset is connected to the AUX cord, then open Google Play Music and play music.The entire process would only require a simple one time set up and would provide the user with the ease of his/her simple day to day tasks being automated.",
                    "projectCode": "https://github.com/Savidude/smartphone-auto-settings"
                }
            ],
            "techStack": [
                "beacon",
                "web bluetooth",
                "physical web",
                "bluetooth"
            ]
        },
        {
            "title": "Plone Foundation",
            "orgLink": "https://plone.org",
            "projects": [
                {
                    "title": "Improve the Theme Editor UX and Functionality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5238580469301248/",
                    "content": "The overall goal is to make it possible for editors of themes to feel comfortable working directly with the theme editor. Allowing users to search for text within files and name of files, easily upload and move files with the HTML 5 grab and drop feature, and improve the user interface are the main goals for this project.",
                    "projectCode": "http://b4oshany.blogspot.com/2017/08/google-summer-of-code-2017-wrap-this.html"
                },
                {
                    "title": "Improved listing customization using Plone Mosaic",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4986106722385920/",
                    "content": "This project proposal is based on the “Improve the Customization of Plone Listings” -idea listed on project ideas gathered by the Plone community. As stated in the suggestion, Plone Mosaic add-on currently lacks a way to display customized listings on pages. Customizable listings and search pages are stated to be two often requested features. My proposal is to start solving this problem by allowing users to customize the content of tiles with same WYSIWYG-functionality as already used in mosaic.",
                    "projectCode": "http://mikkohugsoc.blogspot.fi/2017/08/improved-list-customization-using.html"
                },
                {
                    "title": "Improving plone.org",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5899788402819072/",
                    "content": "Abstract:\nplone.org is the main website of the Plone community where all the generic addons, plone releases and hotfixes are listed. Currently, there is no useful add-on listing and the process of updating the listings is not optimal. \nThe goal of this project is to create functional prototypes of add-ons to:\n1) display a useful listing for addons.\n2) automate the process of updating plone.org with new add-ons, releases and hotfixes.\n3) notify the user (Site admin) with information about vulnerabilities and available updates.",
                    "projectCode": "https://github.com/plone/ploneorg.addonlisting/wiki/Final-Submission-Report---GSoC-2017"
                },
                {
                    "title": "Plone as a Progressive Web App",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5020104609759232/",
                    "content": "The objective is to develop an Ionic 2 app which in turn will be using Angular 2 that will implement the PWA behavior. It will retrieve the contents from the Plone site using the Plone REST API. Going ahead with Ionic 2 will give us code re usability, we will get apps for Android, IOS and Windows simultaneously. Ionic already has a lot of inbuilt UI components, i.e material design for android, so styling will be easier.",
                    "projectCode": "https://github.com/collective/collective.experimental_angular_pwa"
                }
            ],
            "techStack": [
                "python",
                " javascript",
                "html/css"
            ]
        },
        {
            "title": "PMD",
            "orgLink": "https://pmd.github.io/",
            "projects": [
                {
                    "title": "Bringing Object-Oriented Metrics to PMD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6505217864499200/",
                    "content": "Object-Oriented (OO) metrics synthesize characteristics of OO entities (classes, methods) and of their relations, and if combined efficiently, can reveal to the programmer some of the design antipatterns that are specific to OO-systems. This project aims to provide PMD rule developers with straightforward utility methods that calculate metrics, thus enabling them to target systemic design flaws, through the creation of a dedicated metrics framework.",
                    "projectCode": "https://gist.github.com/oowekyala/819016d5cc9509f88034bbd6bcb986c9"
                },
                {
                    "title": "Complete type resolution for Java",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5987510559703040/",
                    "content": "Currently, PMD's support for type resolution with the Java language is limited. This severely restricts the code inspection rules which could be implemented. This project aims to fix this by finishing the implementation and providing complete type resolution for all AST nodes of interest.",
                    "projectCode": "https://github.com/pmd/pmd/commits/master?author=WinterGrascph"
                }
            ],
            "techStack": [
                "java",
                "javacc",
                "xml",
                "antlr",
                "xpath"
            ]
        },
        {
            "title": "Polly Labs",
            "orgLink": "http://www.pollylabs.org",
            "projects": [
                {
                    "title": "Maximal static expansion for efficient loop parallelization on GPU",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5511723209457664/",
                    "content": "Polly is a high-level loop and data-locality optimizer and optimization infrastructure for LLVM based on the polyhedral model. This project aims to implement a mechanism of static expansion in Polly in oder to parallelize loop that can not be directly parallelized because of data dependencies.",
                    "projectCode": "http://pollylabs.org/gsoc2017/Maximal-static-expansion-for-efficient-loop-parallelization-on-GPU.html"
                }
            ],
            "techStack": [
                "llvm",
                "integer set library",
                "ppcg",
                "pencil",
                "polly"
            ]
        },
        {
            "title": "Portland State University",
            "orgLink": "http://wiki.cs.pdx.edu/psu-gsoc",
            "projects": [
                {
                    "title": "Aligning Faces Using OpenCV",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5283823117926400/",
                    "content": "Aim of the project is to implement the state of the art technique on Face Alignment i.e. \"One Millisecond Face Alignment with an Ensemble of Regression Trees\" by Vahid Kazemi using OpenCV version 3.2.",
                    "projectCode": "https://github.com/sakshamgupta006/face_align"
                },
                {
                    "title": "Book Description extension for Inform 7",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5227181089226752/",
                    "content": "Interactive Fiction programs have been around for a while, http://www.ifiction.org/ is a website that holds many of the classics released for DOS, Atari, Amiga, among other computing and videogame systems from the seventies and eighties. Inform7 is a modern platform that lets the user create their own text-based games, or interactive fiction stories to be shared with others. Inform7 displays an easy to use graphical interface that is intuitive and lets users without programming experience to develop their own stories.The purpose of this project is to enhance the experience by finishing the book description extension developed by Bart Massey, already available for download in the inform7 website.This proposal is based on the ideas list set by the organization found here [http://wiki.cs.pdx.edu/psu-gsoc/ideas.html]",
                    "projectCode": "https://gitlab.com/andrralv/i7-books/commits/master"
                },
                {
                    "title": "Creation of an NLP Toolbox for Indian Languages",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6139887946301440/",
                    "content": "Creation of an NLP Toolkit to deal with Indian languages. I shall start with Hindi first and then follow it up with Bengali over the course of summer. The basic features which I want to implement in both these languages isThe proposed timeline is to complete Hindi over the course of summer. Bengali is a future/additional deliverable.",
                    "projectCode": "https://github.com/djokester/sangita"
                },
                {
                    "title": "Double Bottom USB Stick (USB Flash Drive with possibility to conceal information)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5906524656369664/",
                    "content": "I propose to create a USB Flash Drive with the possibility to conceal the fact that the flash drive contains hidden information. I mean that hidden folders will not be displayed if the USB drive is connected to a computer.\nThe microcontroller of the USB drive will carry the process of encryption and concealment of files. That is why the only solution to break protection will be to physically read memory from the memory component and break the encryption algorithm to get the plain data.",
                    "projectCode": "https://github.com/Lrakulka/Double_Bottom_USB_Stick"
                },
                {
                    "title": "driveraker",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6520078451343360/",
                    "content": "Static Page Site Generator with Google Drive as a Content Management System. Using Pandoc, Google Drive via the drive go client, and Hugo to create a static HTML page website from placing documents into a specific google drive folder. GitHub repo",
                    "projectCode": "https://github.com/gatlinnewhouse/driveraker"
                },
                {
                    "title": "SVG Digital Halftoning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6452015836168192/",
                    "content": "Digital halftoning refers to the process of converting a continuous-tone image or photograph into a pattern of black and white picture elements for reproduction by a binary display device such as an ink jet printer, which can only choose to print or not print dots. The human visual, acting like a low-pass filter, blurs these printed and not printed dots together to create the illusion of continuous shades of gray. Typical halftoning algorithms produce bitmaps as output. However, there are cases when scalable halftone patterns would be useful.Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation and thus obvious choice for scalable graphics. The project aims to create SVG equivalents of standard halftone patterns. These would allow a lower resolution grayscale image to be approximated by an infinite resolution monochrome vector image.",
                    "projectCode": "https://github.com/abhishek-sehgal954/Inkscape_extensions_for_halftone_filters"
                },
                {
                    "title": "VoteChain",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6146004516601856/",
                    "content": "For the last few years we've seen an ongoing debate around the security of voting: Be it the incident in Florida[1] during 2000's election or the controversy around Donald Trump's election[2] - taking into account that it might have even interfered with candidates of his own party[9] -  as well as other international events[3], society's trust on voting methods has never been a matter of consensus. Voter confidence - the trust voters have that their vote is being counted correctly in an election - is one of the most fundamental aspects of any election and therefore democracy itself. How can we use recent tech advancements to enhance transparency and increase security during elections for millions of people around the globe who trust electronic voting for electing representatives? More than that - how can we provide better transparency and security for decision taking processes in general, be the final user a human or a machine?  Also, how can we do that without requiring extensive social and political efforts, so that we could deploy a solution by the end of the summer?",
                    "projectCode": "https://github.com/teogenesmoura/votechain"
                }
            ],
            "techStack": [
                "open hardware",
                "language-agnostic"
            ]
        },
        {
            "title": "PostgreSQL",
            "orgLink": "https://postgresql.org",
            "projects": [
                {
                    "title": "Add errors handling and parallel execution to COPY",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6196688620355584/",
                    "content": "Using PostgreSQL (PG) on the daily basis for years I found that there are some use-cases when you need to load (e.g. for a further analytics) a bunch of not well consistent records with rare type/columns number mismatches. Since PG throws exception on the first error, currently the only one solution is to preformat your data with any other tool and then load to PG. Frequently it is easier to drop certain records instead of doing such preprocessing for every data source you have.The naive solution here is to wrap up an insert of each record into subtransaction, however, it will ruin COPY performance and burn transaction IDs (XIDs) very rapidly.Parallel execution may help both to boost COPY performance on multi-core systems and to catch errors via running the separated worker processes.",
                    "projectCode": "https://gist.github.com/ololobus/249432b663e29d111f36b12458e3f30a"
                },
                {
                    "title": "Eliminate O(N^2) scaling from rw-conflict tracking in serializable transactions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6731854698774528/",
                    "content": "To provide strict serializable isolation among transactions, PostgreSQL needs to track read-write conflicts (rw-conflicts for short in the following context) executed concurrently at runtime. PostgreSQL uses a double-linked list in the shared memory to record all conflicts of each transaction. Based on the list structure, the rw-conflict tracking has a time complexity of O(N^2). The designer assumed that the list is short so that the overhead can be ignored. However, some benchmarks reported that the conflict-tracking took up to half the CPU time at high concurrency levels, where searching the list becomes a bottleneck. There are five static functions existing in the project to manage the rw-conflicts. We intend to rewrite these functions by replacing linked list with other data structures to support faster search. There are two possible replacements. Hash table is the first choice because there is an existing implementation of hash table (HTAB) in shared memory in PostgreSQL. Skip list is the other choice as it is similar to the linked list.",
                    "projectCode": "http://liumx10.github.io/2017/08/20/Speedup-RW-conflict-tracking-in-PostgreSQL/"
                },
                {
                    "title": "Explicitly support predicate locks in index AMs besides  btree",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4737486098006016/",
                    "content": "Currently, only B+-trees support page level predicate locking.For other indexes, it acquires relation level lock which can lead to unnecessary serialization failure due to rw dependency caused by any insert into the index. So, the main task of this project is to support page level predicate locking for remaining indexes.",
                    "projectCode": "https://sites.google.com/view/shubham-gsoc-2017/home"
                },
                {
                    "title": "Foreign Keys for Array Elements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6341409154007040/",
                    "content": "My proposal is to target the performance issue regarding the foreign keys for the array index. Any UPDATE or DELETE statement on a Primary Key table would trigger an IR constraint violation check on the Foreign Key table which can only be accomplished by a sequential search. This renders the feature unusable for large tables. I plan to make the array GIN-indexable. Since GIN-Indexes seem very reasonable since GIN is primarily used to search for element values (PK values) that appear within composite items (FK array).  This would greatly decrease the computation time since we can utilize the GIN class operator “<@” (included in). I found some statistics that support the GIN vs. Sequential scan, they are included in the proposal.",
                    "projectCode": "https://www.postgresql.org/message-id/CAJvoCuuEgQ%2Bpjv02rjvQN4o9s4_H3HJMdZdQwss2b0c0-xagEw%40mail.gmail.com"
                }
            ],
            "techStack": [
                "postgresql",
                "c",
                "perl",
                "sql"
            ]
        },
        {
            "title": "Public Lab",
            "orgLink": "https://publiclab.org",
            "projects": [
                {
                    "title": "Bot for Publiclab",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5622907296284672/",
                    "content": "Being an active and welcoming open source community, Publiclab requires a chatbot for a variety of purposes, including the automation of some critical but uninteresting jobs.Some examples include:",
                    "projectCode": "https://publiclab.org/notes/ryzokuken/08-23-2017/getting-to-know-plotsbot"
                },
                {
                    "title": "Developing Image Sequencer as a library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5875287627661312/",
                    "content": "Image Sequencer is a non-destructive image processing library built with JavaScript which creates a new image at each step in a sequence of steps.\nImage Sequencer is in early-development phase. The core functionality is being implemented. There are a few modules present. Calculations aren’t GPU accelerated. As a result, there is a lag when images larger than 700KB are handled. Also, Image Sequencer works only for browsers currently as it uses a browser dependency (the JavaScript Image Class). Image Sequencer currently supports only one image at a time.The aim of my Project is to expand the module library by implementing powerful processing modules (As listed at the end of this proposal) followed by enabling GPU-backed calculations for browser based clients and hence enhance performance, reliability and speed. And, ultimately, to develop Image Sequencer as an importable library for image manipulation and publish it on NPM. Also, support for Node.js based clients and JSON input/output will be generated.",
                    "projectCode": "https://publiclab.org/notes/ccpandhare/08-23-2017/gsoc-2017-final-work-product-of-image-sequencer-project"
                },
                {
                    "title": "Email Notification Overhaul",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5746692280287232/",
                    "content": "I would love to work on email notification overhaul. The project was opened in 2014 and nobody has ever since taken up the issue. Some of the features that I would love to work on include:",
                    "projectCode": "https://publiclab.org/notes/stella/08-24-2017/gsoc-2017-final-report?_=1503922959"
                },
                {
                    "title": "Map of Projects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5807053213794304/",
                    "content": "There can be a browseable map to display all of the projects of PublicLab nearby on a piece of map. There will be markers on the place of events, which when clicked will tell about the details of the project, people involved, etc. . We can also link the markers to the page showing the requirements for the project and all about it. You could even have options such as interested so that other people can see the same. We can directly link these maps to the wikis using power tags and let the author input some details regarding the same.The resultant repository will be a package like the publiclab.Editor (https://www.npmjs.com/package/publiclab-editor) which will be integrated to plots2 repo.",
                    "projectCode": "https://publiclab.org/notes/mridulnagpal/08-23-2017/gsoc-submission-for-map-of-projects?_=1503864746"
                },
                {
                    "title": "Wiki Discussion",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5778981307547648/",
                    "content": "Public lab wikis are used for collecting information, documentation and instructions on projects. And nature of wikis are that they can be edited by any logged in user. Just editing a wiki is not enough. There are times that other users would like to make comment on wikis. And there are occasions that others users would like to make suggestions on wikis. Sometimes they may need to comment or make suggestions for a part (for a paragraph) of the wiki. Currently wikis does not have any mechanism to make comments or suggestions. So implementing the ability of commenting and making suggestions on wiki pages would make them more interactive and discussion-oriented. And implementing these per paragraph basis will make wikis more alive.",
                    "projectCode": "https://publiclab.org/notes/Ashan/08-23-2017/introducing-inline-commenting-for-wiki-pages"
                }
            ],
            "techStack": [
                " javascript",
                " ruby",
                "ruby on rails"
            ]
        },
        {
            "title": "Python Software Foundation",
            "orgLink": "https://www.python.org",
            "projects": [
                {
                    "title": "Adding more types of Convolution Operations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6066914170241024/",
                    "content": "The convolution operation is a core part of the Theano code base. Several variants of the basic convolution operation exist, and more are always being introduced through research papers. Adding new types of convolution operations built-in to Theano will minimise coding coding effort and increase efficiency.The new features to be added are :In addition to these, the 'meta-optimizer' will be finished.",
                    "projectCode": "http://vikramnitin.wordpress.com/2017/08/27/and-so-it-ends/"
                },
                {
                    "title": "Adding Proper Dependency Resolution to pip",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5797394100781056/",
                    "content": "pip does not resolve dependencies correctly when there are conflicting requirements. The lack of dependency resolution has caused hard-to-diagnose bugs/failures due to the installation of incompatible packages. The lack of proper dependency resolution is also a blocker for various other features - adding an upgrade-all functionality to pip and properly determining build-time dependencies for packages are two such features.This project would resolve this issue by implementing a backtracking dependency resolver in pip; refactoring a critical component of pip's codebase in the process.",
                    "projectCode": "https://pradyunsg.github.io/gsoc-2017/submission/"
                },
                {
                    "title": "Extend usage of optimized GPU libraries in Theano",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6537700970594304/",
                    "content": "The goal of this project is to integrate and implement functions from libraries that are optimized to take advantage of modern GPUs into Theano. I hope this project will bring performance improvements to a fundamental library that powers the field of deep learning.",
                    "projectCode": "https://gist.github.com/joaovictortr/ef9f313f3fda3283dd89a30594f594dd"
                },
                {
                    "title": "Faster Stingray",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6149354054221824/",
                    "content": "My proposal is about going through the library's essential files, conducting performance tests. Identifying bottlenecks.\nDocumenting all the analysis done. Discussing solutions.\nStart implementing the changes.\nDocumenting the process.",
                    "projectCode": "https://gist.github.com/omargamal8/053ed014f4356fea43350fc1a23475a3"
                },
                {
                    "title": "Hydrus and a Simulation to demonstrate the capabilities of the Hydra Draft",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5327114643439616/",
                    "content": "The proposed project is to create a set of Python based tools for easier and efficient creation of Hypermedia driven REST-APIs.The other part is an application that simulates the movements of a flock of drones that have as objective to detect the presence of fires or abnormal heat spots in a given geographical area using an infrared sensors to demonstrate the capabilities of Hydrus and the Hydra Draft.",
                    "projectCode": "https://xadahiya.github.io/Gsoc-Summary/"
                },
                {
                    "title": "Hydrus: A Hydra based server and ‘smart’ client to demonstrate the Hydra draft",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5120503765270528/",
                    "content": "The project is a demo for the Hydra draft proposed by the W3C. It aims to build a smart client and server that is able to exchange information in an efficient manner over a RESTful API using a Hydra based vocabulary. A smart client is able to communicate with the server even without previously knowing the supported methods of the server. This is made possible using Hydra's API documentation method. Hydra is a push towards the idea of semantic web and it's potential as a mean of communication is demonstrated in this project. This project lays the foundation for a larger project that showcases Hydra's full potential.",
                    "projectCode": "https://gsocchrizandr.wordpress.com/the-book-of-hydrus/"
                },
                {
                    "title": "Italian Mars Society (IMS): Biometric Signal Sensor’s Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5429362916589568/",
                    "content": "This project covers the development of a Tango Control’s Device Server(s) for the purpose of reading and configuring biometric signal sensors.The project  is part of the current studies on the simulation of an Astronaut’s Health Monitor system.",
                    "projectCode": "https://medium.com/@dipankar1995/google-summer-of-code-final-report-9b07029ca8a9"
                },
                {
                    "title": "Italian Mars Society (IMS): BIOMETRIC SIGNAL SENSOR’s INTERFACE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5406621870063616/",
                    "content": "When astronauts travels to Mars, or even other planets, they will be exposed to a number of hazards e.g. radiation, microbes in the spacecraft, planetary surface toxic dust.\nThis project mainly revolves around configuring biometric signal sensors.The project has an initial phase of surveying the commercial sensors available, and selecting one, or many, after extensive research. The sensors are selected such that they read the biometrics like Heart Rate, Accelerometer data,  Respiration rate, body temperature, Pulsioximetry data,Respiratory Volume, ECG, etc.The second phase involves developing the Device Server itself in Tango, for these selected sensors.\nThis project is part of the current studies on the simulation of Astronaut’s Health Monitor Systems.",
                    "projectCode": "http://abhijithc.blogspot.in/2017/08/google-summer-of-code-2017-finale.html"
                },
                {
                    "title": "Italian Mars Society(IMS): Vision based Terrain Traversability Estimation for Planetary Robots and Astronauts",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5473430891659264/",
                    "content": "Implementing a vision based terrain traversability estimator for planetary rovers and astronauts to eliminate heavy hardware used in current techniques. Some of the rovers predict the slip from Wheel odometry but it would be more efficient to be able to predict it in advance if a terrain might be slippery, so as to make more intelligent path planning decisions and to reduce the hardware needed. Classified view of the terrain in front based on their traversability proves to be useful for the rover to take an optimum path and for an astronaut being a helping hand to suggest safest path that could be taken.",
                    "projectCode": "https://gist.github.com/yvtheja/4026740dbd708f15d56a5979e64c938f"
                },
                {
                    "title": "Italian Mars Society: Space Weather Monitoring for A Virtual Reality Simulation of A Martian Settlement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4748645228347392/",
                    "content": "Radiation is the transmission of energy in the form of waves or sub-atomic particles.In space missions the major concern is the particle radiation.Energetic particle radiation passing through human body could damage the cells or DNA causing an increased risk for cancer. Especially when out of Earth's magnetic field protection, astronaut's are exposed to ionizing radiation with doses in the range from 50 to 2,000 mSv(milli Sievert). The evidence of cancer risk from ionizing radiation is extensive for radiation doses that are above about 50 mSv.\nHence it is important to forecast the radiation events and train crew members to tackle the issue of radiation effectively in simulated environments(Mars city project).The aim of the project is to build a reliable system(Tango server) to :1) Alert crew about the incoming SEP event if the radiation level is above the SWPC set threshold.2) Issue the “all - clear” signal once the event has passed Mars.",
                    "projectCode": "https://github.com/nivedn3/Radiation_Forecating_Server"
                },
                {
                    "title": "Jython: Develop Windows version of JyNI and ideally support all extensions currently workable on POSIX (e.g. ctypes, NumPy)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4706794798579712/",
                    "content": "JyNI is a compatibility layer with the goal to enable Jython to use native CPython extensions like NumPy or SciPy. So far it was developed on Linux and some additional effort was spent to let the core part work properly on OSX. In principle the current version of JyNI is workable on POSIX platforms. I propose to create a proper Windows version of JyNI. A fully accurate implementation of this proposal includes to establish workability of all extensions and features that are currently supported on POSIX platforms.",
                    "projectCode": "https://github.com/search?q=author%3AStewori+repo%3AStewori%2FJyNI+committer-date%3A2017-05-30..2017-08-29&s=committer-date&type=Commits"
                },
                {
                    "title": "Kivy: Plyer, a platform-independent API",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5453075162595328/",
                    "content": "This proposal is based on description of Plyer, one of the sister projects provided by Kivy Organization. The goal of the project will be to extend the support of currently existing APIs for other platforms and provide new stable and platform independent APIs to the users for allowing them to access the features of their desktop and mobile devices.",
                    "projectCode": "https://github.com/malverick/GSoC-2017_Kivy"
                },
                {
                    "title": "Mailman: Encrypted lists",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5914461755932672/",
                    "content": "This project aims to design and implement support for encrypted mailing lists into GNU Mailman using PGP/MIME and GNUPG.",
                    "projectCode": "https://gitlab.com/J08nY/pgpmailman-proposal/blob/master/final.md"
                },
                {
                    "title": "Maximum Likelihood Estimation for count data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6246765523107840/",
                    "content": "The goal of this project is to implement maximum likelihood models for different distribution. Each model require log-likelihood function, first and second derivatives(score and hessian), fit and predict functions,  documentation and tests. I’ll plan to implement generalized, zero inflated and zero altered models for count data distributions.",
                    "projectCode": "https://gist.github.com/evgenyzhurko/c1f0cf1b94aceb067b1ccd24c06a9ad7"
                },
                {
                    "title": "Mercurial: Release notes Extension",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5633738666934272/",
                    "content": "The project is about building an extension for tagging commits with a release note area which can be used to produce release notes and can be integrated with existing commands to improve UX. It will be about polishing this extension so that it can be shipped with core and can help other organisations in producing release notes. It also involves linking hgweb to release notes and implementing methods that would allow displaying these notes when using commands like pull, push, incoming and outgoing.",
                    "projectCode": "https://medium.com/@rishabhmadan/working-with-mercurial-gsoc17-145be9a54838"
                },
                {
                    "title": "MNE-Python: Hilbert beamformer for source reconstruction of neural oscillations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4824409525190656/",
                    "content": "Beamforming is among the most widely used source localization techniques for MEG and EEG data in neuroscience. This project aims at porting an updated version of the five-dimensional beamformer to analyze time-frequency data in source space (Dalal et al., 2008; implemented in MNE-Python as “tf_lcmv”). \nThe update adopts the Hilbert transform to obtain a continuous amplitude and phase time series per frequency band, in contrast to the previous method that utilizes discrete time windows and does not retain phase information. It also adds a weight normalization option to the LCMV beamformer (neural activity index and unit noise gain), which will be available for other LCMV versions as well.\nFurthermore, statistical testing of the Hilbert beamformer output using the Wilcoxon rank sum test will be implemented to complete the new Hilbert beamformer pipeline. Due to the size of the MEG data and intensiveness of the calculations, the code will be developed with memory efficiency and parallelization in mind.\nInteractive visualization of source-localized time frequency representations will complete the Hilbert beamformer routine.",
                    "projectCode": "https://brittas-summerofcode.blogspot.de/2017/08/google-summer-of-code-2017-final-report.html"
                },
                {
                    "title": "MyHDL: Fixed-point Compiler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4804968624160768/",
                    "content": "This project is aimed to provide a fixed point compiler backend for the fixbv type defined in MEP-111 of MyHDL project.When the project finishes, MyHDL should have a complete implementation of fixbv and its compiler backend with complete documentation, include tutorials and reference.",
                    "projectCode": "http://discourse.myhdl.org/t/gsoc-1-work-product-summary/218"
                },
                {
                    "title": "New module for the creation of spectra for TARDIS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6243763743621120/",
                    "content": "The goal of this project is to finish the implementation of the formal integral approach for generating spectra which was started during last years ESO Summer of Code in Space (SoCiS). The current implementation will be rewritten in C and features that enable the use of this method for popular configuration settings will be added. Lastly the whole method will be integrated fully into tardis by providing configuration options to control it.",
                    "projectCode": "https://tardisdevloggsoc2017.wordpress.com/2017/08/28/final-evaluation-recap-summary/"
                },
                {
                    "title": "PySAL: Explicitly spatial unsupervised learning (regionalization)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5264132035051520/",
                    "content": "clusterpy is a Python module which offers various clustering algorithms. The goal of this project is to make these algorithms easily usable together with PySAL and geopandas. Besides that a key requirement is Python-3 compatibility which clusterpy currently does not offer. Once these goals are attained, additional clustering algorithms can be implemented.",
                    "projectCode": "https://gist.github.com/yogabonito/713d3e9177480e6a8ca7b486b57c1fb3#file-gsoc_2017_with_pysal___regionalization-ipynb"
                },
                {
                    "title": "Reading Simulation from file",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6578975069437952/",
                    "content": "Currently , Tardis has the capability to store the state of model to an HDF5 file. This project , is mainly concerned , to be able to restore that Simulation Object , back from HDF5 file , which is identical to the object used to produce the file.\nAlso, It should be possible to analyse or continue simulation on the restored Simulation Object.",
                    "projectCode": "https://github.com/vg3095/gsoc_report/blob/master/README.md"
                },
                {
                    "title": "Rework and fix WebOb’s handling of HTTP Accept headers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5164075403182080/",
                    "content": "This is a proposal to rework and fix WebOb's handling of HTTP Accept,\nAccept-Language, and (if necessary) Accept-Charset and Accept-Encoding\nheaders; check that this handling is well-tested and conforms to relevant RFCs\nwhere appropriate; and if possible, help fix a longstanding, related issue in\nPyramid of unpredictable Accept handling during view lookup.",
                    "projectCode": "https://github.com/whiteroses/gsoc-2017/blob/master/index.md"
                },
                {
                    "title": "Scipy: Large-scale Constrained Optimization",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5272617816686592/",
                    "content": "The project consists of implementing in Scipy an interior-point method for nonlinear problems. The main goal is to implement a constrained optimization algorithm able to deal with a large (and possibly sparse) problems for which the constrained optimization methods currently implemented in Scipy (namely SLSQP and COBYLA) are largely inappro- priate to deal with. Implement benchmark problems and integrate quasi-Newton (namely BFGS, SR1 and L-BFGS) and finite differences (using graph coloring schemes to deal with sparse structures) approximations to the method are also part of the project.",
                    "projectCode": "https://antonior92.github.io/posts/2017/24/GSoC-submission/"
                },
                {
                    "title": "Scrapinghub (dateparser) : Integrate unicode CLDR database with dateparser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6571450286735360/",
                    "content": "Currently dateparser supports parsing in some languages and the data used for conversion has been contributed by the community. However the languages supported by dateparser is merely a fraction of the languages used across the world. Also the languages are used differently on the basis of the territory they are used in and thus parsing dates in a language also varies according to the territory. The complete information for parsing dates taking in account both language and territory can be obtained by using locales. Currently dateparser lacks a mechanism of defining and working with locales. This project aims to extend support for all locales in Unicode Common Locale Data Repository(CLDR) which is a standard repository of locale specific data.",
                    "projectCode": "https://sarthak-gsoc2017.blogspot.in/2017/08/gsoc-2017-work-summary.html"
                },
                {
                    "title": "ScrapingHub: adding the support for finding and parsing dates in the large texts to dateparser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4851089862033408/",
                    "content": "Implement a function which will receive a text and return tuples of found date substrings and parsed datetime objects for languages currently supported by dateparser.",
                    "projectCode": "https://codinglena.blogspot.ru/2017/08/gsoc-2017-final-evaluation.html"
                },
                {
                    "title": "Scrapy benchmarking suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5661366178283520/",
                    "content": "I intend to work on the scrapy benchmarking suite project. I would like to create  benchmarks that reflect real-life cases as well as component-specific micro benchmarks.--profile uses cProfile for profiling and the feature is currently undocumented. I intend to investigate other profilers to be used with scrapy and try to improve the performance of the spiders based on the results.",
                    "projectCode": "https://medium.com/@vermaparth/parth-gsoc-f5556ffa4025"
                },
                {
                    "title": "Statsmodels: Survey methods and adding weights to existing methods",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5033667042738176/",
                    "content": "This project aims to provide support for survey methods in StatsModels. In particular, survey summary statistics, adding probability weighting to existing methods such as mixed effect models and Cox models, and inference for complex surveys are primary goals. Additionally, I plan to extend GEE such that the weights are allowed to be non-constant within groups and also implement Weighted Multilevel models. I will write unit tests for all implemented approaches, testing against R and Stata.",
                    "projectCode": "https://github.com/statsmodels/statsmodels/pull/3762"
                },
                {
                    "title": "Sub org: Peragro :- Implementation of plug-in for audio feature extraction.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4757346026782720/",
                    "content": "Peragro-at has a plug-in system that searches for an appropriate plug-in that can analyze or transcode a given file. One of my major work this summer is to implement a plug-in that can extract audio features such as mood, gender, genre, tempo, global key etc.\nMy other part of work will focus on improving the modules by fixing numerous bugs and dockerizing the project.",
                    "projectCode": "http://summerofcodewithsagar.blogspot.in/2017/08/final-report_29.html"
                },
                {
                    "title": "Theano:Add more convolution operations and update meta-optimizer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4941014263398400/",
                    "content": "This proposal will add more convolution operations to aid the users rather than implementing these operations on their own.These operations would be a great addition to not only Theano but also the libraries that are built using theano like Keras and Lasagne.This project will also implement a meta-optimizer on the new gpu-backend which will choose the fastest convolutions from the many available, thus running these operations as fast as possible.",
                    "projectCode": "https://affanmd.wordpress.com/2017/08/25/gsoc-summary/"
                },
                {
                    "title": "Timelab Technologies : A library of Time Series Methods",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6548443757543424/",
                    "content": "Library of Time Series Methods aims to implement various time series methods for astronomical X-ray data. A lot of data is being collected by X-ray satellites set up by astronomers that is in form of time series. Time series analysis of this data is extensively done by astronomical researchers to reach at useful discoveries. Unfortunately, there is no dedicated tool that provide reliable and tested time series analysis methods for astronomical data. Stingray is an effort by open-source community that aims to provide a python package for time series analysis of X-ray data that hopefully would be a go-to package for astronomical community to carry out their research on time series data.",
                    "projectCode": "https://medium.com/@haroon.rashid235/stingray-a-library-of-time-series-methods-f0ad0e294fb0"
                }
            ],
            "techStack": [
                "python"
            ]
        },
        {
            "title": "QEMU",
            "orgLink": "http://qemu.org/",
            "projects": [
                {
                    "title": "Generic PCIE-PCI bridge",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6004304418701312/",
                    "content": "Nowadays QEMU doesn't have any PCIE-PCI bridge except DMI-PCI i82801b11 bridge, but as DMI is a proprietary Intel bus, it can be used only on x86 targets, besides, it isn't hotpluggable. \nThat is why the goal of this project is to create generic PCIExpress-PCI bridge, which will be able to be used by different target architectures and OSes and the bridge will be natively (in terms of PCIExpress) hotpluggable, which involves SHPC usage. \nAs a result , after finishing PCIE-PCI bridge device QEMU PCI subsystem can be moved to QOM model.",
                    "projectCode": "http://lists.gnu.org/archive/html/qemu-devel/2017-08/msg04260.html"
                },
                {
                    "title": "Hypervisor.framework Support for QEMU",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5320295980204032/",
                    "content": "The idea of the project is to add support for macOS’s native hypervisor through the Hypervisor.framework API. This API exposes to user applications the processor's Virtual-Machine Extensions (VMX), which allows fast and transparent virtualization in user space by allowing guest software to execute directly and unmodified on the processor, avoiding costly and complicated emulation.\nHypervisor.framework is part of Mac OS frameworks since OS X Yosemite (version 10.10).",
                    "projectCode": "https://github.com/Sergio889/gsoc_2017"
                },
                {
                    "title": "Implementing I/O throttling and write notifiers into filter Block Drivers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4532831443222528/",
                    "content": "I/O throttling is currently hard-coded in QEMU. A request is checked for throttling directly in block-backend.c instead of having a filter driver process every I/O request for throttling during the walk in the BlockDriverState graph. Throttling can become modular by being utilised with a filter block driver.Add before write notifying (bdrv_add_before_write_notifier: which is used in backup_run for backups) is also hard-coded.",
                    "projectCode": "https://lists.nongnu.org/archive/html/qemu-devel/2017-08/msg05371.html"
                },
                {
                    "title": "Virgl Windows driver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6005267028246528/",
                    "content": "3D acceleration is non-existent on Windows guests. The goal for this project is to bring a support for OpenGL. For the host part, we will use Virgl, but on the guest side, we must provide a complete user and kernel OpenGL driver.",
                    "projectCode": "https://gist.github.com/Keenuts/199184f9a6d7a68d9a62cf0011147c0b"
                }
            ],
            "techStack": [
                "c",
                "python"
            ]
        },
        {
            "title": "Qubes OS",
            "orgLink": "https://www.qubes-os.org/",
            "projects": [
                {
                    "title": "Making Anti Evil Maid protection of Qubes OS resistant against shoulder surfing and video surveillance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5258028081217536/",
                    "content": "Observing the user during early boot should not be sufficient to defeat the protection offered by Anti Evil Maid (AEM). Using time based one-time passwords instead of simple static secret text helps avoid screen observation based attacks. Installation of the improved AEM on removable media along with usage of Linux Unified Key Setup (LUKS) key files deters keyboard observation, as an attacker would also need to seize the boot media. These enhancements are then made even stronger by adding revokable TPM assisted anti-replay protection for AEM secrets.",
                    "projectCode": "https://github.com/QubesOS/qubes-antievilmaid/pull/20"
                },
                {
                    "title": "Qubes MIME Handlers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6673641785786368/",
                    "content": "Users are required to manually open untrusted files through a right-click dialog each time they want to access them in a Disposable Virtual Machine. This not only places a high amount of responsibility on the user, it also poses a security risk if they accidentally open the file locally, calling for a shutdown of the Virtual Machine in order to eliminate any potential damage caused by the file's execution.In this proposal a more convenient and less error-prone method of opening untrusted files is presented. By allowing the user to mark a folder, file or file type as untrusted, the need for a user to constantly keep themselves in check is eliminated, and unnecessary actions that must be frequently repeated during the course of working with sensitive or semi-trusted data are discarded.These features and implementations are discussed in detail along with possible future developments should there be excess time towards the end of the event. The proposal concludes with a complete timeline as well as a description of myself, my community experience and various methods of keeping in contact.",
                    "projectCode": "https://blog.amorgan.xyz/gsoc-weekly-progress-report-9---final.html"
                }
            ],
            "techStack": [
                "c",
                "python",
                "shell",
                "xen",
                "linux"
            ]
        },
        {
            "title": "R project for statistical computing",
            "orgLink": "https://www.r-project.org/",
            "projects": [
                {
                    "title": "A stochastic variational inference framework for probabilistic modeling toolbox in R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5802103666638848/",
                    "content": "Stochastic variational inference is a powerful tool for analyzing probabilistic models, especially for large scale problem. In this project, our goal is to implement a generic algorithm based on stochastic variational inference for a large family of probabilistic models, including latent Dirichlet allocation (LDA), hidden Markov models (HMM), and Bayesian mixture models (BMM) and etc. We describe the design and the implementation plan of our project and propose a timeline for our development.",
                    "projectCode": "https://github.com/mathczh/SVI"
                },
                {
                    "title": "Active Set Based Second-order Algorithm for Sparse Learning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4518280094023680/",
                    "content": "For sparse learning problems, such as sparse generalized linear models and sparse undirected graphical model estimation, the current R packages still have a lot of room for improvement in terms of speed and robustness, especially in high dimensional settings or when there’s multi-colinearity among features in the data. We aim to build an R package that can achieve state-of-the-art performance on three model classes (1) sparse generalized linear model estimation, (2) sparse nonparametric generalized linear model estimation and (3) sparse undirected graphical estimation under a novel active-set based second-order optimization algorithmic framework. Statistical inference, such as post-regularization p-value computation, will also be implemented as an important feature in our package.",
                    "projectCode": "https://github.com/sparseML/ActiveSparseML"
                },
                {
                    "title": "Advancing_factorAnalytics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5629063058161664/",
                    "content": "The project plan represents a very significant step forward for the factorAnalytics package by adding advanced methods to the fundamental factor models (FFM's) and to the time series factor models (TSFM's) functionality of the factorAnalytics package developed in the GSoC 2016 project. Furthermore the project includes the addition of Risk Budgeting (RMRB) and Monitoring Active Managers based on work of Mentor Dr. Tom Philips (see references), with his guidance.The overarching of the FFM development part of this plan is to replicate a large proportion of the non-proprietary models and model fitting and analysis methodology that is contained in commercial portfolio construction and risk management products such as MSCI Barra, Axioma, Northfield, etc. As such factorAnalytics will provide a platform for empirical research on the use fundamental factor models for improved portfolio performance and risk management, as well as providing a good stepping stone to the use of such a commercial product.",
                    "projectCode": "https://github.com/chindhanai/factorAnalyticsAddons"
                },
                {
                    "title": "Animated Interactive Plots (animint)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5059957342863360/",
                    "content": "animint package in R allows animated data visualization which is a useful tool for obtaining an intuitive understanding of patterns in multivariate data sets used extensively in data related environments. It uses the ggplot2 syntax and is based on the widely accepted Grammar of Graphics. This project aims to build upon the already existing animint package by adding new useful features all the while making it more portable.Overview of tasks:",
                    "projectCode": "https://faizan-khan-iit.github.io/gsoc17/"
                },
                {
                    "title": "Bayesian Hierarchical Hidden Markov Models applied to financial time series.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4669385096560640/",
                    "content": "The goal of this project is to replicate research in Hierarchical Hidden Markov Models (HHMM) applied to financial data. This model is a generalization of Hidden Markov Models (HMM), which in turn is part of the Dynamic Bayesian Networks (DBN) family. I identified three academic works with interesting ideas and application that do not provide data and code. Replication will allow future readers to assess the credibility of the results and program improvements on top of fully working code. Ultimately, published code can be integrated into current research code (for example, for backtesting) and will be proposed as a Case Study to the Stan Development Team.The concept of hidden states could enrich many trading strategies. A detailed replication that provides literature review, reproducible code and solid documentation will allow future readers to implement HHMM logic into existing trading frameworks (for example for covariates, signals and benchmarks). Published code for this GSoC 2017 may be leveraged in future work to provide a generic implementation of hidden state models to already existing R Packages for trading analysis.",
                    "projectCode": "https://github.com/luisdamiano/gsoc17-hhmm"
                },
                {
                    "title": "bigPint: Big multivariate data plotted interactively",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6520497076436992/",
                    "content": "Parallel coordinate plots, scatterplot matrices, and replicate line plots are useful visual tools to understand the relationship between variables in datasets. However, these plots are not typically effective when working with large multivariate datasets due to computational time constraints and overplotting problems. Here, we propose to develop an R package that provides tailored versions of these plots that can effectively be used with large multivariate datasets, and we aim to achieve this by leveraging interactivity, linking, and summarization techniques. These new methods could be useful for RNA-sequencing analysis, factor analysis, principal component analysis, and discriminant analysis. Once the new methods have been tested on large multivariate datasets across different fields, they will be combined into an R package called bigPint for the R community.",
                    "projectCode": "https://gist.github.com/lrutter/e033b524971d3950bb02d8a128905423"
                },
                {
                    "title": "Biodiversity Data Cleaning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5296425625714688/",
                    "content": "Data cleaning is a process used to determine inaccurate, incomplete, or unreasonable data and then improving the quality through correction of detected errors and omissions. The process may include format checks, completeness checks, reasonableness checks, limit checks, review of the data to identify outliers (geographic, statistical, temporal or environmental) or other errors, and assessment of data by subject area experts (e.g. taxonomic specialists). These processes usually result in flagging, documenting and subsequent checking and correction of suspect records.\nValidation checks may also involve checking for compliance against applicable\nstandards, rules, and conventions.",
                    "projectCode": "https://github.com/AshwinAgrawal16/BiodiversitydatacleaningGSoC17"
                },
                {
                    "title": "Constrained Hierarchical Agglomerative Clustering",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6177118333435904/",
                    "content": "Constrained HAC is useful in various application fields like ecology and bioinformatics.This project aims to build an efficient constrained HAC package to improve the clustering for massive datasets as a part of GSoC 2017.",
                    "projectCode": "https://gist.github.com/rewee/4e08e076515056235b64af944061f49a"
                },
                {
                    "title": "Control Systems Toolbox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5098416224862208/",
                    "content": "This project proposes to develop a control-systems package for R. For many years, R has been used extensively for several data-related tasks. With the growing popularity of the language, I believe it could perform better with greater diversification. Diversifying R to serve large applied scientific fields would boost the language's overall performance. \nThe purpose of a control package for R is enable the present and future R community carry out the design, modeling and analysis of dynamic systems using control theory. \nControl theory is a branch of maths/engineering that deals with the modeling, design and analysis of dynamic systems including feedback systems. Applications are wide, ranging from electronics, process control, machine design, physiology, and economics to ecosystems, climate modeling, electrical power devices and systems, and several others. The transfer function and state-space systems are math representations of the dynamic system and would be explored significantly within the project.\nThe object of this project is to create a control toolbox for R language based on RLabplus and submitting it to CRAN as a package. Testing and documentation are part of the scope.",
                    "projectCode": "https://github.com/benubah/control"
                },
                {
                    "title": "Distributional Assessments with Q-Q Plots",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5601770956914688/",
                    "content": "Quantile-quantile plots (Q-Q plots) are a powerful way of visually diagnosing distributional assumptions of random variables. Q-Q plots have been implemented in various forms in R, starting with qqplot and qqline functions in the base package. However, the functionality within the ggplot2 package is restricted to the function geom_qq, which is a geom object only concerned with the placement of points in a Q-Q plot following a certain distribution. The main objective of this project is to provide ggplot2 add-ons that enable the functionality for the drawing of a Q-Q line, different confidence regions methods, and the rotation of the Q-Q plot, all in the form of geoms. The expected outcomes are: (1) an R package with the said add-ons implemented as ggplot2 geoms, well documented and fully functional; (2) a set of examples, documented in a vignette, and (3) a Shiny app interactvely highlighting the functionalities of the implementations, to be embedded in the vignette documentation.",
                    "projectCode": "https://github.com/aloy/qqplotr/wiki/GSoC-2017"
                },
                {
                    "title": "Efficient SMC Algorithms in Rcpp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4630470948028416/",
                    "content": "Sequential Monte Carlo (SMC) methods are powerful alternatives to standard Markov chain Monte Carlo (MCMC) for sampling from the posterior of complex static Bayesian models. SMC is naturally adaptive, parallelisable and capable of dealing with complex and multimodal targets. However, SMC is generally seen as more difficult to implement than MCMC. R packages like RcppSMC could help to make these methods more accessible.An estimate of the marginal likelihood (normalising constant or evidence) can be obtained as a by-product of SMC (see e.g. Del Moral et al (2006)). Adjusting the current RcppSMC package to allow for estimation of the marginal likelihood would be useful for model choice and for exact-approximate methods such as particle MCMC (Andrieu et al., 2010).There is a plethora of choices for advanced SMC implementations since this is an active area of research. Some of the possibilities have been described in more detail in the timeline below.",
                    "projectCode": "https://github.com/LeahPrice/rcppsmc/wiki/RcppSMC-GSoC-Project"
                },
                {
                    "title": "Estimating the Empirical Cluster Tree",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5919718795902976/",
                    "content": "The aim of this project is to provide a standalone, scalable, and extensible R package that unifies existing methodologies for estimating the empirical cluster tree.In 1975, John Hartigan established a statistical definition of a high-density cluster. High-density clusters are defined on a population with density f in r dimensions to be the maximal connected sets of form { x : f(x) >= lambda }, for any lambda > 0. Varying this density level lambda across all possible density thresholds forms a hierarchy of density level sets known as the cluster tree.In 1981, the asymptotic behavior of various linkage criteria were studied by by Hartigan in the context of the cluster tree. During this effort,  a notion of consistency---now often referred to as \"Hartigan consistency\"---was introduced. In the same seminal paper, single-linkage was proven by Hartigan to be inconsistent for dimensions r >= 2.It was not until 2010 that the first computationally tractable and provably consistent algorithm for estimating the cluster tree for  r >= 2 was proven. These results have undoubtedly played a large role in rekindling a number of recent research efforts related to the cluster tree.",
                    "projectCode": "https://github.com/peekxc/clustertree"
                },
                {
                    "title": "FireData: Connecting R to Firebase",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4892259539484672/",
                    "content": "R is one of the strongest players in data science. The aim is to connect its strength in data analysis with the actual data. By making it easier to directly connect R to the inputs of IoT devices or other applications such as websites/shiny, it will open new possibilities for open source developers around the world. Firebase offers the right features to enable those possibilities, and APIs for most languages\n other than R are already built.The final product of this project, the FireData package, will connect the two great environments with each other. When we succeed, R users will have a new stable & intuitive database option and lots of projects can build on top of it.",
                    "projectCode": "https://github.com/Kohze/fireData"
                },
                {
                    "title": "Graphical Models for Mixed Multi Modal Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5695514792165376/",
                    "content": "In this project, we propose a new package to make graphical models for mixed multi-modal data readily available to a wide audience. The proposed package will allow for fitting, simulating from, and visualizing mixed graphical models. We anticipate that having an easy-to-use R package will increase adoption of these powerful new models.",
                    "projectCode": "https://xia-zhang.github.io/MixedGraphs/"
                },
                {
                    "title": "Improved functionality for higher order comoment estimation in PerformanceAnalytics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5992312870010880/",
                    "content": "In this project I aim to improve estimation of the higher order comoment matrices currently implemented in the R packages PerformanceAnalytics and PortfolioAnalytics in three ways. First, the implementation of the existing estimators will be optimised, resulting in a significant speed gain. This will make the methods usable for higher dimensions, as required by many practitioners. Second, I will add a full range of state-of-the-art higher order comoment estimators, currently not available for the community. Since these estimators greatly improve the accuracy of estimating the skewness and kurtosis of linear combinations of random variables, all functions in PerformanceAnalytics and PortfolioAnalytics depending on these moments will be more reliable. This is in particular important for risk or performance measures depending on higher order moments in the package PerformanceAnalytics, as well as certain objective functions or constraints in the package PortfolioAnalytics.",
                    "projectCode": "https://cdries.github.io/GSoC2017/"
                },
                {
                    "title": "Integrated Oversampling for Time Series Classification",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4637744877797376/",
                    "content": "A significant number of learning problems involve the accurate classification of rare events or outliers from time series data. For example, the detection of a flash crash or rogue trading from financial markets data, or heart arrhythmia from an electrocardiogram. Due to the rarity of these events, machine learning classifiers for detecting these events may be biased towards avoiding false positives because any potential for false positives is greatly exaggerated by the number of negative samples in the data set.  This project will focus on the improvement of the imbalance time series classification algorithm based on structure preserving oversampling, and the implementation of it to a stable R package. The algorithm will be tested with various learning algorithms undersampling techniques. And the R package will be tested with the real world dataset.",
                    "projectCode": "https://github.com/lweicdsor/OSTSC"
                },
                {
                    "title": "Integrating biodiversity data curation functionality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5343574702948352/",
                    "content": "The importance of data in the biodiversity research has been repeatedly stressed in the recent times and various organizations have come together and followed each other to provide data for advancing biodiversity research. But, that is exactly where the main hiccup of biodiversity research lies. Since there are many such organizations, the data aggregated by these organizations vary in precision and in quality. Further, though in recent times more researchers have started to use R for their data analyses, since they need to retrieve, manage and assess data with complex (DwC) structure and high volume, only researchers with extremely sound R programming background have been able to attempt this. So we propose to create a R Package that will function as the main data retrieval, cleaning, management and backup tool to the researchers",
                    "projectCode": "https://github.com/thiloshon/Biodiversity"
                },
                {
                    "title": "Interactive Genome Browser in R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6249294453538816/",
                    "content": "The project intends to provide an interactive and user-friendly way to visualizing track-based genomic data by wrapping the flexible TnT javascript libraries into R.For more detail, see http://tnt.marlin.pub/ .",
                    "projectCode": "https://github.com/Marlin-Na/TnT"
                },
                {
                    "title": "Interactive trajectory tool for rpostgisLT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6593752038637568/",
                    "content": "The goal of the project is to build an interactive trajectory analysis extension for the R package rpostgisLT, that was developed during the GSoC 2016. The new extension will provide a user-friendly interface to create, manage and explore trajectories (pgtraj) that are stored in a PostgreSQL database. The emphasis is put on fine scale trajectory analyses, environmental data viewing and data extraction.",
                    "projectCode": "https://github.com/mablab/rpostgisLT/wiki/GSoC-2017"
                },
                {
                    "title": "Markov Switching GARCH models (MSGARCH) in R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5210774314156032/",
                    "content": "Modeling the volatility of financial markets is central in risk management. A seminal contribution in this field was the development of the GARCH model by Bollerslev (1986) where the volatility is a function of past asset returns. The GARCH model is today a widespread tool in risk management. However, recent studies show that estimates of GARCH models can be biased by structural breaks in the volatility dynamics (Bauwens et al., 2010; Bauwens et al., 2014). These structural breaks typically occur during periods of financial turmoil. Estimating a GARCH model on data displaying a structural break yields a non-stationary estimated model and implies poor risk predictions. A way to cope with this problem is provided by Markov-switching GARCH models (MSGARCH) whose parameters vary over time according to some regimes. These models can quickly adapt to variations in the unconditional volatility level, which improves risk predictions (see Ardia, 2008).",
                    "projectCode": "https://drive.google.com/drive/folders/0Bzb_udhCb_sNeGRJMDZGZVlOaGM?usp=sharing"
                },
                {
                    "title": "Markovchain package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6750949586501632/",
                    "content": "This project aims to extend the current functionality and capabilities of the R package ‘markovchain’ in order to provide statisticians a more functional tool to perform analysis of stochastic projects related to Markov chains (MCs). Optimization (in terms of coding performance and algorithms) of existing package is also included in the project’s scope. The project targets to implement functions related to different ideas. These include adding more functionalities to already implemented continuous time Markovchains (CTMCs) (reference -https://arxiv.org/pdf/1611.05796.pdf ,https://arxiv.org/pdf/1702.07150.pdf ) , adding functionalities to Higher Order multivariate markovchains, building important graphics features and some general functions that include number-of-visits for finite-state Markovchains. I also intend to implement ideas from the paper https://arxiv.org/pdf/1608.03257.pdf for implementing stability of markovchains. Along with this it is proposed to implement the idea referred from http://www2.math.uu.se/~takis/L/McRw/mcrw.pdf. These additions would bring a significant change to the markovchain package.",
                    "projectCode": "https://gist.github.com/vandit15/88fc76dea9b8c1723c5ee39893875760"
                },
                {
                    "title": "metawRite:Meta analysis update package, LSR (Living systematic review)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6675178310336512/",
                    "content": "Living systematic reviews have been proposed as a new approach to deal with the main problem of  traditional systematic reviews. Systematic reviews can rapidly become out of date and updating is often delayed by the publication model.metawRite package have the objective to rapid updating of systematic reviews as new research becomes available, while also ensuring a transparent process and reproducible review.Three main tasks are needed to have an effective living systematic review; the ability to produce dynamic reports, availability online with an interface that enables end users to understand the data and the ability to efficiently update the review(and any meta-analysis) with new research seamless.\nmetawRite will cover these three task integrated in a friendly web based environment for the final user.One of the main functions of this package will display a modern web-based application for update a living systematic review.  To do that I plan to combine three powerfull R packages, shiny, knitr and ggplot2 .",
                    "projectCode": "https://github.com/natydasilva/metawRite"
                },
                {
                    "title": "Native R API for Tensorflow",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5498707176849408/",
                    "content": "R does not have a high-level modeling language for designing neural networks. Tensorflow, an open source python library, is a great tool for this functionality. In this project, I hope to create an R language binding for Tensorflow, through a wrapper over the existing C API, with the help of Rcpp. The C API directly exposes the core of Tensorflow, which is implemented in C++.",
                    "projectCode": "https://github.com/wazeerzulfikar/rtensorflow/tree/gsoc"
                },
                {
                    "title": "NIMBLE Ecology Package",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6156020111900672/",
                    "content": "The goal of this project is to build a new R package providing high-level user interfaces to many kinds of ecological models and implementing the analyses internally using NIMBLE.  The project has two primary motivations.  The first is to provide better tools for widely used ecological models.   There are many individual R packages and other software that fit specific ecological models, but they lack flexibility in terms of the type of models and available Markov Chain Monte Carlo (MCMC) algorithms.  The second, perhaps equally important, is to showcase how NIMBLE can serve as a computational engine “under the hood” of an R package, and to develop extensions to NIMBLE that will support its use in this way.  The proposed package, called nimbleEcology, will provide a unified framework that allows users to model a variety of ecological process with a simple specification of the model structure, and estimate them using efficient and customizable MCMC samplers.",
                    "projectCode": "https://github.com/clewisbe/nimbleEco"
                },
                {
                    "title": "Noninvasive source code formatting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5410482240356352/",
                    "content": "A coherent coding style greatly simplifies collaborative work. \nThis is easiest enforced by an automatic code formatter, but existing solutions to code formatting have various deficiencies. The new styler package (work in progress) aims at providing non-invasive code formatting, using the AST provided by R. So far, styler gets the spacing around operators right, but there are many more rules to be implemented. \nThe author proposes to extend the R package styler to fully support the tidyverse style guide and make the package ready for production. The package will support formatting entire R packages, formatting entire R source trees, and checking consistent formatting. In the first place, the author wants to extend styler regarding indention. As a distinguishing feature, styler is not supposed to operate on hard-coded formatting rules, but on a set of rules that can changed to support various coding conventions.",
                    "projectCode": "https://lorenzwalthert.github.io/gsoc2017/"
                },
                {
                    "title": "Operator Based Machine Learning Pipeline Construction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5417148298035200/",
                    "content": "The package mlr is a comprehensive machine learning toolkit for R, providing a standardized interface to over sixty machine learning R packages, in combination with a wide range of features related to visualization, data manipulation, model evaluation and selection, and parameter tuning. Even though mlr offers the possibility of performing automatic data preprocessing when applying a machine learning algorithm, the current implementation is relatively limited in scope and functionality. This project seeks to extend mlr's capability in this regard, by developing a supplementary package mlrCPO with an API that gives more flexibility to the user, and by providing access to a wider range of preprocessing methods. The project introduces a first-class CPO (\"Composable Preprocessing Operator\") object that represents a particular data transformation procedure, and which can be organized in pipelines using a composition operator %>>%. Many CPO classes implementing the most popular and widely used preprocessing methods are implemented.",
                    "projectCode": "https://github.com/mlr-org/mlrCPO/"
                },
                {
                    "title": "Parser and Crawler for Biodiversity checklists",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5265884381708288/",
                    "content": "Compiling taxonomic checklists from varied sources of data is a common task that biodiversity informaticians encounter. Data for checklists usually occur within textual formats and significant manual effort is required to extract taxonomic names from a given text into a tabular format. Textual data in sources such as research publications and websites, frequently also contain additional attributes like synonyms, common names, higher taxonomy, and distribution. This project aims to facilitate a quick extraction of textual data into tabular lists from various sources including given files in different formats, as well as biodiversity websites which have an iterative subpage structure. It realizes an easy aggregation of biodiversity data in a structured format that can be used for further processing and upload onto data aggregation initiatives and help in compiling biodiversity data.",
                    "projectCode": "https://github.com/qingyuexu/bioparser"
                },
                {
                    "title": "Portfolio Construction and Risk Management with Unequal Returns Histories",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4915959705894912/",
                    "content": "The goal of this project is to implement the three methods in an “Unequal Histories” package that: (1) facilitates use of the methods in portfolio optimization and risk analysis applications, and (2) supports the comparative study of the efficacy of the three different methods - Multiple Imputation, Factor Model Monte Carlo and Combined Backfilling.",
                    "projectCode": "https://github.com/spushpak/UnequalReturnHist"
                },
                {
                    "title": "Risk and Performance Measure Standard Errors for Serially Correlated Returns",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5619269727420416/",
                    "content": "This project is focused on developing a Risk/Performance Standard Errors (RPSE) package that implements a new methodology based on statistical influence functions and generalized linear model with elastic net for gamma distributions GLM-GAM/EN for the reliable computation of finite sample standard errors for risk and performance measure estimators for serially correlated returns. The RSPE package will be integrated into the PerformanceAnalytics package in such a way that the user will have the option to use the new standard errors methodology for the risk and performance measures in PerformanceAnalytics.",
                    "projectCode": "https://github.com/chenx26/glmnetRcpp"
                },
                {
                    "title": "Sentometrics: An integrated framework for text based multivariate time series modeling and forecasting",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5539503057928192/",
                    "content": "This project leads to the creation of the Sentometrics package that is designed to do time series analysis based on textual sentiment. Time series modeling using sentiment from text requires its own package because of the intrinsic challenge that for a given text we can compute sentiment in hundreds of different ways, as well as the large number of possibilities to pool sentiment across text and time. This additional layer of manipulation does not exist in standard time series analysis. The package aims to derive the optimal sentiment extraction and aggregation for the forecasting task. Aggregation can be optimized across several dimensions, for example word term weighting schemes or time lag structures. The package created therefore integrates the qualification of sentiment from text, the aggregation into different sentiment measures and the optimized forecasting based on these measures. No such integrated textual sentiment forecasting approach exists in any R package. The goal is to provide an automated means to measure the impact of sentiment in texts on a given variable, obtaining readily interpretable and useful outputs and an object to play with, when using this package.",
                    "projectCode": "https://drive.google.com/open?id=0B4zbdJSExeXBT09xNVI4bnpJMVU"
                },
                {
                    "title": "Sparse matrix automatic conversion in RcppArmadillo",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4871573232156672/",
                    "content": "This project is aimed to complete the integration between R Matrix package and Armadillo Package. During this project, I am going to do such things:",
                    "projectCode": "https://binxiangni.github.io/blog/2017-08-20-gsoc-2017-report/"
                },
                {
                    "title": "Speed optimizations for iregnet",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4534893027524608/",
                    "content": "The iregnet package is the first R package to support four types of censoring and elastic net (L1 + L2) regularization. Though it is already useful for making predictions in data sets with possibly censored observations, the current code is too slow for large data sets. After this GSOC project, its model fitting code will be even faster. The iregnet package will get better performance in large data sets.",
                    "projectCode": "http://rovervan.com/post/gsoc/gsoc-summary"
                },
                {
                    "title": "Tidy data structures and visual methods to support exploration of big temporal-context data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5915213643644928/",
                    "content": "This new package aims to fit into the tidyverse and grammar of graphics suite to support and facilitate temporal-context data analysis and visualisation. A new class tbl_ts will be defined and provided for representing regular time series in a tidy data structure. Some common verbs from the dplyr package, such as filter, summarise, and mutate, will be inherited to transform temporal data more easily and intuitively. New calendar-based arrangements created using linear algebra tools will be developed to display temporal data in a format that captures people’s daily schedules. A new faceting system that attempts to reflect a nested structure will be experimented, which would provide a visualisation framework for hierarchical and grouped time series data.",
                    "projectCode": "https://github.com/earowang/sugrrants#google-summer-of-code-2017"
                }
            ],
            "techStack": [
                "r-project",
                "c",
                "c++",
                "fortran",
                "javascript"
            ]
        },
        {
            "title": "radare2",
            "orgLink": "http://radare.org",
            "projects": [
                {
                    "title": "Proper Windows platform support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6390031941894144/",
                    "content": "The main goal of the task is to add more support on Windows platform.",
                    "projectCode": "https://gist.github.com/xarkes/b617706fbf97ae4523ca924434790e77"
                },
                {
                    "title": "Remote debugging with gdbserver",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4939755435327488/",
                    "content": "The current radare2 remote GDB debugging has a few issues. Having a GDBServer implementation inside radare2 that we understand well, will help improve the GDB client too, since it will be easier to test them against each other. Also, having our own re-usable GDBServer implementation will make remote debugging, with the standard GDB remote serial protocol, available on any platform that radare2 is ported to in the future.",
                    "projectCode": "https://gist.github.com/SrimantaBarua/e216b557aa1ecbcc7c2963cd35827098"
                },
                {
                    "title": "Timeless Debugging Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6168904745353216/",
                    "content": "Add support for timeless debugging in r2. This requires r2 to create tracing session and read, write memory at any moment in tracing sessions. Same for registers.\nAdd new reverse execution commands, like ‘dsb’, that may read previous tracing sessions, and seek program counter to backward.\nAnd moreover, r2 should load recorded tracing sessions from tools like, rr or QIRA.",
                    "projectCode": "https://rkx1209.github.io/2017/08/27/gsoc-final-report.html"
                }
            ],
            "techStack": [
                "c",
                "rust",
                "python",
                "nodejs"
            ]
        },
        {
            "title": "ReactOS",
            "orgLink": "https://reactos.org/",
            "projects": [
                {
                    "title": "NTFS Driver Improvements for ReactOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5867762844958720/",
                    "content": "NTFS is a modern, elegant filesystem with support for many advanced features, such as fault tolerance, access control lists, hard links, data redundancy, journaling, transactions, the Common Log File System, compression, and encryption. It is the preferred filesystem for all Windows versions that came after Windows 2000.ReactOS still relies on the simple, limited FAT family of filesystems which are a holdover from the days of DOS. ReactOS has a driver capable of reading files from an NTFS volume, but this driver still lacks write support.My previous Google Summer of Code project improved the stability of the NTFS driver, and made significant advances toward write support. This project will continue adding write support and aims to make that support merge-worthy. This will be a major step towards ReactOS' goal of Windows compatibility, and it will be the kind of advancement end-users understand and get excited about. It will also open the door for the development of more advanced operating system features, like journaling and automatic fault-recovery. Having these features will aid development and make the operating system more practical.",
                    "projectCode": "https://reactos.org/blogs/gsoc-ntfs-2017-work-summary"
                },
                {
                    "title": "ReactOS App Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5828834335129600/",
                    "content": "This project is targeted to the end users. It will ease install process and help users getting free and open source software at one place.The app manager could also be used in Microsoft Windows to install and manage apps the same way. Spreading word about the ReactOS is a nice bonus.",
                    "projectCode": "https://reactos.org/blogs/rapps-enchancements-gsoc-2017-edition-final-report"
                },
                {
                    "title": "Taskbar Shell Extensions for ReactOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6622884130717696/",
                    "content": "The current shell in ReactOS lets user manage running applications, start other applications and manage files but nothing more. This idea is about implementing 3 small shell extensions for showing the state of the battery of the machine, for ejecting usb devices and implementing the quick launch toolbar. These are important requirements and they are much needed while presenting ReactOS in real hardware. Not knowing the state of the battery or not being able to eject a usb flash drive is a serious usability problem. The shell extensions would be developed and tested to work on Windows.",
                    "projectCode": "https://reactos.org/blogs/gsoc%E2%80%9917-project-taskbar-shell-extensions-reactos-final-report"
                },
                {
                    "title": "USBXHCI driver for USB 3.x controllers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5827081988472832/",
                    "content": "ReactOS currently ships with drivers for USB 1.x (OHCI/UHCI) and USB 2.x (EHCI) controllers only. More and more modern computers come with USB 3.x controllers (XHCI), so ReactOS should come with a driver for them rather sooner than later. This is a side project that can be implemented independently. \n    In order to support all the enhanced features afforded by USB3 specifications, a new generation of host controller is required. The implementation of this host controller standard is described in hardware by XHCI (Extensive host controller interface) which is quite complex and different from previous generations with its difficult terminology and modeling.",
                    "projectCode": "https://reactos.org/blogs/gsoc-xhci-final-submission"
                }
            ],
            "techStack": [
                "c",
                "c++"
            ]
        },
        {
            "title": "Red Hen Lab",
            "orgLink": "http://redhenlab.org",
            "projects": [
                {
                    "title": "Audio embedding space in a MultiTask architecture",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5904382272995328/",
                    "content": "Auditory stimuli like music, radio recordings, movie soundtracks or the regular speech are widely used in research. While it is easy for a human to recognize the emotional load of Bach symphonies, how can it be done by a computer? Currently, algorithms are able to analyze low level features like signals energy. Those features are far from capturing how does the stimuli actually sound to us, and the best we can do is to ask a human subject to judge.\nThe following project aims to bridge the gap between human- and machine-like sound understanding by building an audio embedding space. Such embeddings have been proven extremely successful for texts (word2vec) and images (image recognition, convolutional neural networks, vgg). The aim of this project is to offer similar insight into the nature of the audio stimuli. \nThe embedding space will be obtained by a machine learning model trained to perform on various audio task. Deliverables are: the architecture (data loading and preprocessing pipeline, deep neural network for universal feature extraction and classifiers train separately for each task), ready-to-load optimized parameters, and a use case tutorial (github repository).",
                    "projectCode": "https://github.com/RedHenLab/multi-modal-emotion-prediction/wiki"
                },
                {
                    "title": "Audio Visual Speech Recognition System based on Deep Speech",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4582190549565440/",
                    "content": "Current Red Hen Lab’s Audio Pipeline can be extended to support speech recognition. This project proposes the development of a deep neural-net speech to text module for the pipeline, based on the paper Deep Speech.\nThe aim is to use both audio and visual modalities for achieving speech recognition.The initial goal is to extend current Deep Speech model (audio only) to Red Hen lab's TV news videos datasets. The next goal is to develop a multi-modal Speech to Text system (AVSR) by extracting visual modalities and concatenating them to the previous inputs.I plan to develop four versions of Speech to Text during 12 weeks time.",
                    "projectCode": "https://pandeydiveshnotgeek.wordpress.com/2017/08/28/google-summer-of-code-work-submission/"
                },
                {
                    "title": "Large-scale Speaker Recognition System for CNN News",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5851575381655552/",
                    "content": "This project aims to build a large-scale speaker recognition system for tagging speakers in CNN news recordings upon the existing Red Hen audio processing pipeline. The current speaker recognition system of the pipeline although fully functional, is not yet ready for processing news videos archived in the NewsScape. The main reason is lack of training data from relevant speakers to enroll into the system. Manually extracting such training data by human experts is inefficient, time-consuming or even infeasible at large scale. On the other hand, for a significant part of the archive (videos recorded over a decade since 2007), there are transcripts (the tpt files) that contain caption and speaker information saved along with the videos. These transcripts can potentially be used to automatically extract speaker training data, if they are accurately aligned with the audios. Therefore, the core idea of this proposal is to establish a workflow in the current audio pipeline from Gentle alignment to accurate timestamps of speech boundaries, then to speaker training data, and finally to identified speakers.",
                    "projectCode": "http://redhenaudio.blogspot.de/2017/08/week-12-final-report.html"
                },
                {
                    "title": "Learning Embeddings for Laughter Categorization",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6110691832365056/",
                    "content": "I propose to train a deep neural network to discriminate between various kinds of laughter (giggle, snicker, etc.) A convolutional neural network can be trained to produce continuous-valued vector representations (embeddings) for spectrograms of audio data. A triplet-loss function during training can constrain the network to learn an embedding space where Euclidean distance corresponds to acoustic similarity. In such a space, algorithms like k-Nearest Neighbors can be used for classification. The network weights can be visualized to glean insight about the low- and high-level features it has learned to look for (pitch, timbre, unknowns, etc.) I also propose to obtain visualizations of the embedding space of laughter sounds using dimension reduction techniques like Principal Components Analysis (PCA) and t-distributed Stochastic Neighbor Embedding (t-SNE). I will also apply these same techniques techniques directly on the high-dimension audio spectrograms. All techniques proposed here have been applied previously on related problems in audio and image processing.",
                    "projectCode": "https://gist.github.com/ganesh-srinivas/15181ee1b2f0a829031ed18fac58db1b"
                },
                {
                    "title": "Multilingual Corpus Pipeline",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6671164529180672/",
                    "content": "This project aims to build a pipeline for a searchable corpus on multiple languages. We will be using NewsScape data for the project and tools like SyntaxNet for dependency parsing and PoS tagging.",
                    "projectCode": "https://github.com/RedHenLab/multilingualpipeline"
                },
                {
                    "title": "Multimodal Emotion Detection on Videos using CNN-RNN, 3D Convolutions and Audio features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5064191643746304/",
                    "content": "This is a deep learning approach which uses both image and audio modality from the videos to detect emotion and characterize it. It uses a combination of CNN-RNN (Convolutional-Recurrent Neural Network), 3D convolutions (C3D) and audio features, as shown in the winning solution of EmotiW 2016 competition. A special RNN called LSTM (Long Short-Term Memory) is used to learn the motion by taking the individual features of each image frame, extracted by the CNN. The 3D convolutional network, works in a way such that it takes care of the image as well as flow of the video (appearance and motion). For extracting the audio features, it uses the OpenSmile toolkit. The EmotiW dataset is used for training this network. The goal of this project is to give an API which will take a video from the user and returns the output regarding the characteristics of emotion. This API will be fully tested, documented with examples and will be deployable in the HPC.",
                    "projectCode": "https://bitbucket.org/skrish13/gsoc17-krish"
                },
                {
                    "title": "Multimodal television show segmentation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5441354465280000/",
                    "content": "I aim to build a general system that detects natural boundaries of TV shows. This task has long been under the realm of manual approach by skilled workers, but the recent development in machine learning may offer a new opportunity where the system uses the multimodal cues of videos like humans would. The final product will be a Python-based classifier that takes video data as input and produce as output for each decision unit (1 second of frames) whether there has been a change of show (from one program to another). The performance of the system will be measured against test data for which the show boundaries had been annotated by manual efforts. The performance benchmark will be whatever best detector the Red Hen Lab provides (e.g. cc-keyword-spacing). As a corollary to solving the main task, I aim to develop a system that automatically generates meta information (indexing/tagging), the subtask noted in the original problem description.",
                    "projectCode": "https://github.com/dhfromkorea/digital-silo"
                },
                {
                    "title": "Neural Network Models to Study Framing and Echo Chambers in News",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5582091953635328/",
                    "content": "An interesting study is to construct a model of the media representations of the world, considering features from social discourse such as crime, race, and so on. In other words, we generate “interpretive frames” that introduce selected media biases and predispose the system to look at the world in a certain way. Therefore, any data that is presented to this system will be viewed through this lens where certain outcomes are anticipated, and the communicative effects will depend on the associated inferences.We propose a few models and studies:With the help of these, we may conclusively demonstrate real world phenomena that highlight issues of media bias, framing, echo chambers, and the wisdom of the crowd. Such an analysis may shed some light on the political climate and how crowd consensus comes to be.",
                    "projectCode": "https://ahaldar.github.io/blog/summer-2017-5/"
                },
                {
                    "title": "Sentiment Analysis of Social Media Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5399338813489152/",
                    "content": "Whilst crime in general has been falling for decades, hate crime has gone in the other direction. Especially after the US election 2016, it has risen to a new level against minorities- colored people, muslims, jews, LGBT community. The perpetrators often share their threats blatantly before committing the crime. If we can figure out the credible threats by automatically analyzing the text patterns, then we can save lives. In this project, we will decompose the overall detection problem into detection of sensitive topics, lending itself into text classification sub-problems. We will scrape data from social microblogs to build our corpus and then we will experiment with different classifiers.",
                    "projectCode": "https://github.com/RedHenLab/ControversyDetection"
                }
            ],
            "techStack": [
                "high performance computing",
                "machine learning",
                "opencv",
                "audio processing",
                "multimodal analysis"
            ]
        },
        {
            "title": "RoboComp",
            "orgLink": "http://robocomp.org",
            "projects": [
                {
                    "title": "Domain Specific Language for programming the Learnbot educational robot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5324479815221248/",
                    "content": "The Learnbot is a small robot which is used to teach to the children the world of robotics. This robot is designed to run simple programs. These programs are created by children, thus the code of these programs should be simple. So, I am interested in desing a Domain Specific Language (DSL) and a parser to this DSL that will translate the program in Learnbot DSL in python code.\nAlso, I  want make a GUI to add more funtions to Learnbot DSL.",
                    "projectCode": "https://ibarbech.github.io/IDE-for-programming-the-Learnbot/"
                },
                {
                    "title": "Domain Specific Language for programming the Learnbot educational robot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5233140759003136/",
                    "content": "Project aims at designing a custom language for getting rid of the burden of textual programming and to provide abstraction and hide the underlying processes from the user and compress huge chunks of code into powerful purpose-specific commands. This set of commands is realized as Domain Specific Language and this language will eventually be translated to its Python equivalent for processing. The approach is event-based as well as state-based.",
                    "projectCode": "https://docs.google.com/presentation/d/1AN1_6moCLcTjmeyPX2aGd1fl6cLJwDTbMb8LpaXGcWE/edit?usp=sharing"
                },
                {
                    "title": "Graphic Deployment Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5404869523406848/",
                    "content": "The highlyUnstable branch of robocomp has an advanced rcmanager, which aids for creation of the xml files in a simple and illustrative way, through a GUI. However, there are a few problems associated with it, like cluttering of large components graphs, unavailability of GUI for editing components, no support for graph panning, no support for component debugging, as well as insufficient documentation of the new tools. I intend to solve these problems through my GSoC project, whose elaborately described solutions can be found in my proposal.",
                    "projectCode": "https://gist.github.com/Kmayankkr/61e52a764da1ec1dd96dd5ff366eb67e"
                },
                {
                    "title": "Introducing robust code generation techniques in Robocomp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5577900602425344/",
                    "content": "RoboComp is an open-source Robotics framework providing the tools to create and modify software components that communicate through public interfaces. It is based on DSL technology. In this proposal we seek to improve the robustness of the generated code using model checking techniques and good software engineering practices. The student will have to extend the current code generation tool, robocompdsl, to include verification points, asserts, parameter range control, etc independent of the specific functionality of the component. We expect that with this improvement the new generated components will be less prone to accidental crashes and easier to debug and maintain.",
                    "projectCode": "https://docs.google.com/document/d/1nCri4oe_ykMFzO3OaG7fQmZYHATM3ONYRBlgH92V-YM"
                },
                {
                    "title": "Javascript Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5971490868559872/",
                    "content": "This project aims to extend the current  DSL based component code generator to also generate RoboComp components that  can be run in the browser. The new components generated will be using javascript and as an html file should be able to be deployed in the browser and also to communicate with the non JS components already developed earlier (laser, keyboardcontroller, joystick etc.).  It is an interesting diversion from current robotics technologies based on C++/ python to use JavaScript to code some highly concurrent components.",
                    "projectCode": "https://gist.github.com/lovemehta/ca0799f36ad3a2436307f98773ddc404"
                },
                {
                    "title": "Learning useful Actions for efficient planning",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6257780235173888/",
                    "content": "Automated Planning involves taking actions to reach the goal. The problem is that most of the practical situations have lots of actions involved, and given a situation, some of these actions might be unnecessary for computing the plan. \nTherefore planning agents take a lot of time for computing plans because they might be considering redundant actions while planning.The first part of this project is to use Machine Learning algorithms to learn which actions can be useful for computing the plan. Therefore the idea is to train our learning algorithms on many such instances, and given a planning problem, output a probability distribution over all the actions (which indicates the relevance of each action).We'll be applying following learning algorithms for getting the probability distribution over actions:The second part of the project is to improve AGGLEditor. For this part, we’ll resolve bugs that are present in the current version of the editor. Documentation and tutorials for AGGLEditor will also be added.",
                    "projectCode": "https://gist.github.com/jainlashit/e017f7fa1bf1a319c82bd92ca640ec96"
                },
                {
                    "title": "Redesign of Learnbot to improve its features and functionalities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4841577180561408/",
                    "content": "One proposal to redesign Learnbot to solve current problems and make the robot more attractive and expressive",
                    "projectCode": "https://github.com/brickbit/web/blob/master/gsoc/2017/brickbit/My%20progress.md"
                },
                {
                    "title": "Social Navigation with RoboComp",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4821890795307008/",
                    "content": "The aim of this project is to integrate social behaviors into the RoboComp navigation agent. Mobile robots that encounter people on a regular basis must react to them in some way or the other. Traditional robot control algorithms for path planning and obstacle avoidance treat all sensor readings identically, as foreign objects that must be avoided. However, for a mobile robot that operates around people, these traditional algorithms may not follow the social norms. Even simple conventions like move to the right when a person is encountered might not be honored by these algorithms. However, people would want to, or rather tend to perceive robots-particularly assistive robots, as human like. So catering to this need social behavior will be implemented via certain cost functions.",
                    "projectCode": "https://yohanmr.github.io/"
                },
                {
                    "title": "Social navigation with Robocomp​",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5351511802511360/",
                    "content": "The project idea I would like to contribute to robocomp platform as a part of Google Summer of Code is a new component - or set of new RoboComp components - that allows robots to navigate in an environment with human(s) with social skills.",
                    "projectCode": "https://aracelivegamagro.github.io/SocialNavigation_GSOC17/"
                }
            ],
            "techStack": [
                "c++",
                "cmake",
                "python",
                "openscenegraph",
                "qt"
            ]
        },
        {
            "title": "Rocket.Chat",
            "orgLink": "https://github.com/RocketChat/Rocket.Chat",
            "projects": [
                {
                    "title": "Improve implementation of  End-to-End encryption with Signal protocol",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4948773256036352/",
                    "content": "End-to-End encryption is a highly important feature in chat clients, allowing users to talk to each other securely without fear of message interception or surveillance. The current implementation of OTR in Rocket Chat has a number of limitations, including no support for offline chats. In this project, I will improve Rocket Chat functionality by integrating the Signal protocol, which provides confidentiality, integrity, authentication, forward secrecy and asynchronicity, among other security features, with Rocket Chat.",
                    "projectCode": "https://github.com/RocketChat/Rocket.Chat/pull/7181"
                },
                {
                    "title": "Integrated Personal Email Gateway",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5821551278555136/",
                    "content": "The project titled \"Integrated Personal Email Gateway\" aims at facilitating users with an ability to reply  messages by directly replying to emails they received whenever they are away. This allows them to interact with their fellows and provide support to the community even offline. \nThus providing community with another great feature to boost communication.",
                    "projectCode": "https://github.com/RocketChat/Rocket.Chat/pull/7342"
                },
                {
                    "title": "Rocket.Chat iOS SDK",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5514615735713792/",
                    "content": "To create an SDK for iOS to include Rocket.Chat in any app who's going to allow users making conversations seamlessly without leaving their app with a merely little configuration to get all the features Rocket.Chat have.",
                    "projectCode": "https://github.com/RocketChat/Rocket.Chat.iOS/commits/sdk?author=legendecas"
                },
                {
                    "title": "To Create a PWA Client",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4951183537995776/",
                    "content": "To create an Angular 4 based Progressive Web App (PWA) lite client that would be able to used as an alternative of native clients like Rocket.Chat.Android or Rocket.Chat.iOS client.",
                    "projectCode": "https://gist.github.com/InsaneNaman/0afc3810be187491efdea2039769aaf6"
                }
            ],
            "techStack": [
                "javascript",
                "meteor.js",
                "mongo",
                "webrtc"
            ]
        },
        {
            "title": "Rspamd",
            "orgLink": "https://rspamd.com",
            "projects": [
                {
                    "title": "Corpus Testing and Automatic Symbol Score Generation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5704107411111936/",
                    "content": "This project will use Artificial neural networks to re-score the symbol weights automatically to reduce the false positives and false negatives in the classification of spam and ham.",
                    "projectCode": "https://gist.github.com/cpragadeesh/fad4da2ce46302c7018a61ad8c8823e7"
                }
            ],
            "techStack": [
                "c",
                "lua",
                "cmake"
            ]
        },
        {
            "title": "RTEMS Project",
            "orgLink": "https://www.rtems.org/",
            "projects": [
                {
                    "title": "Beagleboard BSP projects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5607590906036224/",
                    "content": "This project aims to improve the Beaglebone Black  BSP support on RTEMS. Project intends to add the following supports to the Beaglebone Black BSP: I2C support, USB device support, Wireless network card support,wireless protocol 802.11 support. The wireless network support make the RTEMS can apply on many scene application such as the four rotor unmanned aerial vehicle. makes RTEMS more attractive for the user community.",
                    "projectCode": "https://sichenzhao.blogspot.jp/2017/08/work-product-submission.html"
                },
                {
                    "title": "Improve Coverage Analysis Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4925375616385024/",
                    "content": "This project will switch the RTEMS Source Builder from QEMU to Couverture-QEMU. It will integrate Couverture-QEMU and the scripts driving it into RTEMS Tester framework, converting the scripts to Python. The coverage report tool Covoar written in C++ will then be modified to generate XML output.",
                    "projectCode": "https://cillianodonnell.github.io//rtems,/gsoc/2017/08/27/final-report.html"
                },
                {
                    "title": "POSIX Compliance",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5264092575039488/",
                    "content": "POSIX Compliance allows developers the maximum flexibility in creating application software that can be port on to the other execution environments. Before POSIX, application written on one version can not be used on other version. Solution to this problem, POSIX was introduced. It is an interface standard defined by IEEE. It is an Open API, for this we need to implement header files and methods related to the header files. It includes a porting of function from FreeBSD as well as NetBSD for various file system including NFS and FAT file System. It pertains the OS, not the file system specifically, but a part of this API is used to access file system.",
                    "projectCode": "https://posix4rtemsandnewlib.wordpress.com/"
                },
                {
                    "title": "Utilizing full power of RISC-V architecture via usage of RTEMS on top of SiFive FE310 processors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4780624749527040/",
                    "content": "This project aims to provide the RTEMS community with a new capability of utilizing the power of SiFive FE310 processors. The main objective of this project is to implement a simple board support package which will allow to switch tasks, to use console and clock drivers. The outcome of this project is an easy-to-use alternative POSIX-compliant real-time operating system for processors with a modern architecture. The outcome for the RTEMS community is a new processor architecture supported, which will bring new developers to the project.",
                    "projectCode": "https://embeddedden.blogspot.com/2017/08/gsoc-2017-results-rtems-for-hifive1.html"
                }
            ],
            "techStack": [
                "c",
                "python",
                "posix"
            ]
        },
        {
            "title": "Ruby on Rails",
            "orgLink": "http://rubyonrails.org/",
            "projects": [
                {
                    "title": "Long Running Ruby and Rails Benchmarks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4860189823991808/",
                    "content": "Finding out about regressions months in development cycle can often incur a massive cost, fixing bugs early on is cheap. Usually the longer we wait the more expensive it is to fix. RubyBench have been already launched but it needs to be polished and refined.Last year, during GSoC, student Saurabh Shah did some work regarding this project. Since project goals stayed the same, Saurabh’s work needs to be continued.This year goal is to create comparison graphs in order to measure overhead with libraries like Active Record or Sequel.",
                    "projectCode": "https://gist.github.com/bmarkons/78d7568dbccf2b79263965860c78762e"
                },
                {
                    "title": "Refactor Rails' Cookie Implementation and Improve Signing with Expiry and Purpose",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6745169634263040/",
                    "content": "The main goal of this project is to add expiry and purpose to cookies so that cookies won't last forever and trying to use a cookie for something it wasn't meant for will fail. The project also focuses on backwards compatibility.",
                    "projectCode": "https://gist.github.com/assain/fed04b9b610b8c190566a1956f523cc1"
                }
            ],
            "techStack": [
                "html",
                "ruby on rails",
                "ruby"
            ]
        },
        {
            "title": "Ruby Science Foundation",
            "orgLink": "http://sciruby.com/",
            "projects": [
                {
                    "title": "Creating the fastest math libraries for Ruby by using the GPU through OpenCL and ArrayFire.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5200694831218688/",
                    "content": "Few people realise it, but even the modest computers today, including mobile phones, have powerful GPUs. And these GPUs can be used serially and in parallel to CPUs, potentially delivering awesome performance.In this project I want to make it possible to combine the beauty of Ruby with transparent GPU processing so that software developers can easily use that power when available, and farm out computations transparently to GPU and CPU. This will work both on client computers and on servers that make use of TESLA's and Intel Xeon Phi solutions.",
                    "projectCode": "http://www.prasunanand.com/arrayfire/cuda/opencl/ruby/2017/08/28/gsoc17-project-report.html"
                },
                {
                    "title": "Make Daru more integratable with modern web frameworks of Ruby",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5052986342506496/",
                    "content": "Daru is a Data Analysis Library in Ruby - whose user base would definitely increase by making it friendly enough to integrate with modern Ruby web frameworks such as Rails, Sinatra, etc.",
                    "projectCode": "https://athityakumar.github.io/blog/posts/GSoC_2017_-_Final_Work_Submission/"
                },
                {
                    "title": "Make Daru more ready for integration with modern Web framework - GSoC 2017- Shekhar Prasad Rajak",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5267803426783232/",
                    "content": "DaRu (Data Analysis in RUby) is a library for storage, analysis, manipulation and visualisation of data. Currently it is doing good job for scientific usage(in IRuby notebook), but if user want to visualize  some data for integration into existing web application, then Daru methods have to output result/chart/graph/datatable such a way that output is directly usable into web application (in html file). Also Daru must have better import/export technique so that new importers/exporters can be defined easily. Mostly modern web application will use NoSql database, that is easy to scale. It will be very useful if Daru can connect with relational or non-relational database and make query operations easy. This project aims to make Daru more powerful for web application to use it as data analysis and visualisation tool, by working on above issues.",
                    "projectCode": "http://shekharrajak.github.io/gsoc_2017_posts/"
                }
            ],
            "techStack": [
                " ruby",
                "science",
                "web",
                "data",
                "gpu"
            ]
        },
        {
            "title": "Sage Mathematical Software System",
            "orgLink": "http://www.sagemath.org",
            "projects": [
                {
                    "title": "Expanding the Functionality of Dynamical Systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5032997027840000/",
                    "content": "As a member of the sage-dynamics community, researchers have compiled a wishlist for algorithms and functionality they would like added. I would like to shorten the wish list for us.For my project I will be completing some desired additions to SAGE from the Sage Dynamics Wiki. I will implement Well’s Algorithm, strengthen the numerical precision in cannonical_height, as well as implement reduced_form for higher dimensions.",
                    "projectCode": "http://lifebynumber.org/life-by-blog/gsoc-final-post"
                },
                {
                    "title": "Implementing matroid classes and plotting improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4988116498644992/",
                    "content": "This project seeks to implement several common matroid classes in SageMath, along with algorithms for their display and relevant computations. The graphic matroid class in particular will be implemented with a representative graph with methods for Whitney switching and minor operations. This will be accompanied by improvements to the graph theory library, with methods relevant to matroids enabled to support multigraphs. Other modules for this project include improved plotting of rank 3 matroids to eliminate false colinearities, computation of a matroid's automorphism group using SageMath's group theory libraries, and faster minor testing based on an existing trac ticket.",
                    "projectCode": "https://picturesofmatroids.wordpress.com/2017/08/21/summer-summary/"
                },
                {
                    "title": "Improvement of Complex Dynamics in Sage",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5608589620150272/",
                    "content": "There are three major things that I would like to implement to improve the functionality of Sage in the area Complex Dynamics.  By the conclusion of my project, I will have implemented the functionality to plot the following objects in Sage efficiently:",
                    "projectCode": "https://benbarros.wordpress.com/2017/08/29/gsoc-2017-final-report/"
                },
                {
                    "title": "Linear-time Implementation of Modular Decomposition of Undirected and Directed Graphs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6539255211884544/",
                    "content": "This project is aimed at providing linear time implementation for modular decomposition of graphs and digraphs. Modular decomposition is decomposition of graph into modules. A module is a subset of vertices and it is a generalization of connected component in graph. Let us take for example a module X. For any vertex v ∉ X it is either connected or not connected to every vertex of X. Another property of module is that a module can be subset of another module. There are various algorithms which have been published for modular decomposition of graphs. The focus in this project is on linear time complexity algorithms which can be practically implemented. The project further aims to use the modules developed for modular decomposition to implement other functionality like skew partitions. Skew partition is partition of graph into two sets of vertices such that induced graph formed by one set is disconnected and induced graph formed by other set is complement of the first. \nModular decomposition is a very important concept in Graph Theory and it has a number of use cases. For instance it has been an important tool for solving optimization and combinatorics problems.",
                    "projectCode": "http://coolconceptz.blogspot.in/2017/08/gsoc-modular-decompositionundirected.html"
                },
                {
                    "title": "Modular Decomposition of graphs and digraphs",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4572723367903232/",
                    "content": "Modular decomposition of (di)graphs is a generalization of the concept of the decomposition of (di)graphs into connected components. Its current implementation in Sage relies on badly broken abandoned C code, and badly needs to be replaced by something that works and is not too slow. However, the only open-source implementations of some of these procedures are either in Java or in Perl, and thus aren't really useful for Sage.",
                    "projectCode": "https://mariannaspyrakou.github.io/"
                }
            ],
            "techStack": [
                "python",
                "cython",
                "c++",
                "c"
            ]
        },
        {
            "title": "Samba",
            "orgLink": "https://www.samba.org/",
            "projects": [
                {
                    "title": "SAMBA libcli/dns participation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4652559293743104/",
                    "content": "Asynchronous DNS framework parser and libraries in C. Incorporates GSS-TSIG authentication protocol.",
                    "projectCode": "https://wiki.samba.org/index.php/SoC/2017"
                }
            ],
            "techStack": [
                "c",
                "python"
            ]
        },
        {
            "title": "Scala",
            "orgLink": "http://www.scala-lang.org",
            "projects": [
                {
                    "title": "Auto-completion and type information in Scastie",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4904902178373632/",
                    "content": "Scastie is an online Scala programming environment which, unfortunately, does not provide such common features as automatic code completion and ad hoc type information. The problem is that most of the developers got used to this kind of support from the tools and expect to see it in Scastie as well, since it would allow them to write bug-free code faster. Therefore, it is absolutely crucial to implement these features, and that is the ultimate goal of this project.",
                    "projectCode": "https://dimart.github.io/gsoc17"
                },
                {
                    "title": "Case classes a la carte with scala.meta",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5793198186168320/",
                    "content": "case classes are a very useful feature of the scala language, but can be limiting. For example, there is no way to modify the internal representation of a case class, leading to heap usage problems for larger applications that generate hundreds of millions of instances. And this projects aims to make case classes more flexible and optimized, in the same time giving a developer way to turn on/off all the options thus adjusting case classes for his needs.",
                    "projectCode": "https://github.com/fommil/stalagmite/commits/master?author=vovapolu"
                },
                {
                    "title": "CBT IntelliJ IDEA‎ plugin",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6272763362803712/",
                    "content": "Add an IntelliJ IDEA‎ support for the CBT by writing a plugin or extending an exciting Scala plugin.",
                    "projectCode": "https://github.com/cvogt/cbt/blob/master/doc/intellij-gsoc.md"
                },
                {
                    "title": "Connecting potential contributors with Scala projects via Scaladex",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5858412969590784/",
                    "content": "This project's main goal is to make it easy for potential contributors to use Scaladex to find Scala projects they can work on. This will involve researching common difficulties potential contributors face when trying to find an open-source project to contribute to, designing potential solutions to those problems and implementing those solutions. Reaching out to the Scala community to learn about problems they've faced and their thoughts about potential solutions will be an integral part of this project.",
                    "projectCode": "http://www.scala-lang.org/blog/2017/08/28/gsoc-connecting-contributors-with-projects.html"
                },
                {
                    "title": "Enforcing type safety in Dottydoc code examples",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5866459456602112/",
                    "content": "This project aims to extend the Dotty documentation compiler (alias \"Dottydoc\") to make code examples found in comments type safe, with the purpose of ensuring that documentation does not become out of date. This will be done by compiling and running each example as the documentation is being generated, alerting the user if errors are found. Each line of the code examples on the generated documentation page will then be annotated with the output of its expression, in the same style as the scala REPL.",
                    "projectCode": "https://vlthr.github.io/gsoc-2017/"
                },
                {
                    "title": "Implementation of concurrent java library for Scala Native",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4667298279325696/",
                    "content": "Scala Native is the a new Scala compiler under development. This compiler will permit Scala users to compile directly Scala code to binary and use many functionalities of the C language such as memory allocation and most of the standard libraries. Since this compiler's target isn't Java Bytecode, the java libraries can't be used as is like for standard Scala, thus part of the work of Scala Native team is to write a Scala implementation for the Java libraries. This project aims to implement java.util.concurrent.* library for the Scala Native compiler.",
                    "projectCode": "https://korf74.github.io/projects/GSoC/"
                },
                {
                    "title": "Reimplement the JDK in Scala Native",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5688607679447040/",
                    "content": "Scala Native is a new target for Scala. It uses llvm to compile Scala to native assembly code, instead of compiling it to JVM bytecode. However, as compiling Java to llvm is not supported, there is a need to reimplement parts of the JDK. As it is currently work in progress, I could help contributors to achieve this goal. One of the most important milestones is implementing JDK API to support concurrency in Scala Native. This would be the core part of coding during the GSOC program. If finished before the end of the program, together with my mentor and the rest of contributors, I would look for other parts of the JDK API to implement.",
                    "projectCode": "https://docs.google.com/document/d/1QbR64n12P7JhJ0MfzS1MSFh7XPEKBOHNoGfYTVTrcpk/edit?usp=sharing"
                },
                {
                    "title": "Slick bug and feature hunt",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5713811621281792/",
                    "content": "This is a project to tackle as many issues as possible open in the Slick issue tracker with a priority on resolving long standing bugs and implementing features upvoted by the community.",
                    "projectCode": "https://gist.github.com/trevorsibanda/f7b152c068fb748a4c679897c7212421"
                }
            ],
            "techStack": [
                "scala",
                "jvm"
            ]
        },
        {
            "title": "Scilab",
            "orgLink": "http://www.scilab.org",
            "projects": [
                {
                    "title": "Machine Learning features in Scilab",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4877103942074368/",
                    "content": "Machine learning has been implemented in all major software languages( C++, Java, Python, MATLAB) , with each having their individual set of libraries to support and improve existing numerical analysis and computation.This project aims to develop machine learning features in SCILAB, which will be available to the end-user as a toolbox or direct function calls. The proejct has been divided into two sections:[1] all major machine learning algorithms will be implemented through Scilab code.[2] an integration approach will be followed to adapt popular ml library Tensorflow for SCILAB.ml libraries to be adapted from python to Scilab-",
                    "projectCode": "https://github.com/mandroid6/machine-learning-Toolbox-SCILAB"
                },
                {
                    "title": "Matlab MEX-Files management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4882600426471424/",
                    "content": "The main aim of this project is to provide a wrapper of Matlab MEX-Files headers on the current API Scilab. By using the MEX-Files wrapper the toolboxes in Matlab will be very easy to port to Scilab and also existing libraries using Matlab MEX could be directly used in Scilab. A module - mexlib module already exists in Scilab which is compatible with the Matlab-Mex API. Extending the current module and writing tests for each extension will be the major part of the project. Adding tests and a working demo for the already existing MEX functions will be included.",
                    "projectCode": "https://wiki.scilab.org/siddhartha.gairola18%40gmail.com"
                },
                {
                    "title": "OpenFOAM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4720873164505088/",
                    "content": "The main objective of this project is to connect OpenFOAM solver to Scilab. This will give the user a better interface to use computational fluid dynamics(CFD) analysis in Scilab and setup meshes easily. Currently, there are ways to solve a flow equation(using ode) but there is no CFD solver toolbox or module in Scilab. This project will benefit a large fraction of Scilab users as CFD analysis is significant in vast areas like industries, research purpose, etc. The major work will include porting elbow flow demo in OpenFOAM to scilab which will include wrapping the functions in icoFoam solver of OpenFOAM to scilab.",
                    "projectCode": "https://github.com/aashay201297/OpenFOAM-toolbox/tree/1.0"
                },
                {
                    "title": "OpenModelica Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6706348901269504/",
                    "content": "Modelica is an object-oriented and declarative language specification for description/modeling of dynamic systems (mechanical, electrical, thermal, mixed, etc.). Scilab uses it inside Xcos to describe more complex blocks/components, taking advantage of existing compiler/translator implementations to generate correspondent C code for actual simulation.For now, Modelica in Scilab is managed by an out-of tree compiler developed by LMS released under the GPL license, which is not actively maintained and support only a subset of the current language specification. The idea of this project is to allow the usage of OpenModelica’s OMCompiler (omc) as an alternative. Being a more up-to-date solution, omc integration would provide Scilab/Xcos the ability to use more advanced features, and avoid bugs, issues and maintenance burden of the current modelicac compiler.Adapting Xcos blocks to support the FMI2 API standard would allow not only omc-generated code to be called but also any other FMI2-compliant applications to be easily integrate in the future.",
                    "projectCode": "http://bitiquinho.github.io/2017-08-24-almost_there/"
                },
                {
                    "title": "Xcos Profiler",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6069519202123776/",
                    "content": "Since Scilab is an open source, various practitioners use it to simulate real-time applications and systems. However, Simulation cannot be achieved in zero time. Knowing execution time is a key to develop an accurate simulation in real-time areas. Precise measurement of execution time is important in area about life safety, such as military equipments, automotive and aerospace industries.\nAs we known, Matlab has a Profiler function which could measure where a program spends time. By using Matlab Profiler, we could evaluate and improve performance of programs. What I want to do is to make a similar function for Scilab.\nWe use Xcos to make models that have many blocks. In some cases, we want to know execution time of these blocks. A variety of literatures introduce the way of measuring execution time but they did not present directly time to users. Therefore, in this project, I will measure time and present time to users.",
                    "projectCode": "https://github.com/Rui517/do_profile_superblock42"
                }
            ],
            "techStack": [
                "c++",
                "java",
                "python",
                "c",
                "opengl"
            ]
        },
        {
            "title": "ScummVM",
            "orgLink": "http://www.scummvm.org/",
            "projects": [
                {
                    "title": "Porting Mission Supernova",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4976553104506880/",
                    "content": "“Mission Supernova” is a science-fiction point ‘n’ click adventure, developed by Thomas and Steffen Dingel in 1994 for MS-DOS. You play as the chef Horst Hummel of the spaceship “Supernova” who awakes alone in his room after an accident on the ship.\nMy goal is to port the game to the ScummVM ecosystem with the help of Eugene Sandulenko as my mentor and translating it from German to English. Language barriers or bad translations were often reasons for games not finding a larger audience or make “All your base are belong to us”. By providing the first “international” version and further extending the free games section, I hope previously excluded groups will be able to enjoy the game just as much as the original and contribute to ScummVM’s increasing popularity.",
                    "projectCode": "https://joefish-gsoc.blogspot.de/2017/08/summary-of-gsoc-2017.html"
                },
                {
                    "title": "Sludge Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4640631095820288/",
                    "content": "SLUDGE is a 2D adventure game engine created during the development of the game \"Out Of Order\" by Hungry Software and my mission is to integrate this engine into ScummVM.\nAs \"Out Of Order\" received \"Game of the Year\" awards from Adventure Gamers and The Crow's Nest in 2003, it will be quite favorable to add full support for this game as it is highly acclaimed and also, was released for free to showcase the SLUDGE engine.\nIn addition, while testing games with the engine, a sound card initialization problem occurring occasionally has been noticed, I think it will be an advantage if we are able to fix it in ScummVM.",
                    "projectCode": "http://yinsimei.wordpress.com/2017/08/28/gsoc-2017-summary/"
                }
            ],
            "techStack": [
                "c++",
                "sdl",
                "opengl",
                "assembly"
            ]
        },
        {
            "title": "Shogun Machine Learning Toolbox",
            "orgLink": "http://shogun-toolbox.org/",
            "projects": [
                {
                    "title": "Data Project - Patient Monitoring and Decision Support using Health Data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5414039815454720/",
                    "content": "For GSoC2017, I intend to use the Shogun library on health data and show the usefulness of machine learning in applications that could save people's lives and benefit society. More specifically, I want to focus on analyzing health data for applications such as clinical decision support and mortality prediction. The dataset I will work with is the MIMIC database, which is comprised of information relating to patients admitted to the ICU at a large hospital. The data mainly includes demographic, administrative, and clinical data from over 45,000 critical care patients. The project will be divided into two parts: In the first part, I plan to perform data cleaning and apply various machine learning algorithms on the MIMIC dataset for mortality prediction, predict the risk of developing certain diseases, determine the effectiveness of certain drugs, and more. In the final part, I will explore more novel methods like LSTMs to exploit the time-series data. Recent research has shown good results of using deep learning on electronic health records.",
                    "projectCode": "https://gist.github.com/olinguyen/510f29a2dfeeca1aa30ac9bc2b474580"
                },
                {
                    "title": "Fundamental Machine Learning Algorithms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5614168380014592/",
                    "content": "Shogun implements dozens of machine learning and related algorithms, however many of them are not properly benchmarked and the library suffer from a lack of documentation and examples. The project objective is to benchmark  basic machine learning algorithms against other libraries and rewrite their code where needed, extend their documentation and unit test coverage and provide more real world examples.",
                    "projectCode": "https://gist.github.com/micmn/e47c3d8528643ddba27928bea3ca5db0"
                },
                {
                    "title": "Shogun Detox II: Codebase improvements and finalization of the new Tags and Serialization frameworks.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4708113621975040/",
                    "content": "The Shogun Toolbox is a well-established machine learning project that provides efficient algorithms implementations that can be used in a wide range of applications and with multi-language support (thanks to SWIG magic).\nUnfortunately, since it was built by many hands for many years, its code has become not easily maintainable or extendable and it does not use many new programming techniques and components that have appeared since the Shogun foundation. The time has come to blow some fresh air (and some new fresh code) into Shogun's depths. This project aims to correct and update the codebase and to complete the integration of many new features that will make it more modular and easy to use. My efforts will be focused on: integrate the new Tags and serialization frameworks, substitute old-style macros with brand new C++11 smart pointers, enable premature stopping of ML algorithm and, last but not least, implement a useful (and beautiful) progress bar to show a visual representation of algorithm’s execution.",
                    "projectCode": "https://gist.github.com/geektoni/6fa8ab3beb2c8593df1ddb64a89771c0"
                },
                {
                    "title": "The Shogun Detox2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5488325569806336/",
                    "content": "Every line of code in SHOGUN has a long history and have gone through many brains and hands. This made SHOGUN what it is today: a powerful toolbox with a lot of features. But most of the code has been written by researchers for their studies. Usually the focus is on \"getting things done\", proving awesome ideas and optimize them \"as fast as possible\".\nAs a drawback, people didn't care too much about software engineering aspects. In addition, lots of new technologies have shown up since some parts of the code have been written, which allows us to do even cooler things with less code now. I expect to improve the maintainability, stability and beauty of Shogun by using C++1x feature and add more unit tests for it.",
                    "projectCode": "https://gist.github.com/MikeLing/fe0aeb41b04f0d16a6db7739eb5c781c"
                }
            ],
            "techStack": [
                "c/c++",
                "python",
                "swig",
                "machine learning",
                "cmake"
            ]
        },
        {
            "title": "Sigmah",
            "orgLink": "http://www.sigmah.org",
            "projects": [
                {
                    "title": "Easier project model management",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5758848111476736/",
                    "content": "Most appealing for me: Project idea#2: Easier project model management.\nI am already familiar with customer requirements related to the idea. The idea is interested for me and I have practical experience and knowledge to implement the requirements. So I’ve applied fix for issue #1046 as well as I’ve also implemented on my local development environment fix for issue #1058 . During testing of implemented solution I discovered that related to the fixed issue functionality also can be improved. \nDetailed calendar plan is described in my Project proposal document.Equally interesting for me: idea 1: Full-featured calendars\nI am familiar with customer requirements  and I know how to implement some of them, other ideas also very interesting for me but require additional investigation to find solution (like an idea #824 Calendars export to other devices.Less interesting for me :  idea 3: Search\nI know how to implement #536 Dashboard project table extra searchable columns.\nAs for second requirement: #535 Full text search engine – this is very interesting task cause it is require a knowledge and experience with  Apache Solr.\nNevertheless I am ready to take the challenge.",
                    "projectCode": "https://gist.github.com/Seal98/1c8c9285c56cce0583f6484987136cfd"
                },
                {
                    "title": "Full-text search of database text and files, enforcing ACLs and search contexts.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5763644784640000/",
                    "content": "Sigmah has a lot of database text content that can be indexed and searched by keywords, providing a useful capability to users to fetch the actual entities (orgunits, projects) that correspond to such keywords.Users also upload files (Word, PDF, others) that have a lot of text. Here the search results may point to both the files themselves, and also to the entities owning those files where the search term was found.Entity access (view) permissions have to be enforced in both cases. Another challenge is to integrate both database search and file search under the same UI, provide users with helpful search features (similar terms, relevance rankings).",
                    "projectCode": "https://gist.github.com/indianauthority97/56c713f3e51741e206a865f1a996d4f6"
                }
            ],
            "techStack": [
                "gwt",
                "java",
                "postgresql"
            ]
        },
        {
            "title": "Software Product Data Exchange (SPDX)",
            "orgLink": "http://spdx.org",
            "projects": [
                {
                    "title": "GitHub Integration Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6328148979351552/",
                    "content": "Design, develop, and implement an application that, when provided with a GitHub repository's URL, generates SPDX (https://spdx.org/) documents based on that repository. These documents can be placed back into the repository or downloaded directly. In creating SPDX documents, repositories can be better understood with respect to OSS Community Health risk-related metrics (https://wiki.linuxfoundation.org/oss-health-metrics/metrics).",
                    "projectCode": "https://github.com/spdx/spdx-github/wiki/Google-Summer-of-Code-SPDX-GitHub-Project"
                },
                {
                    "title": "License Coverage Grader",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5801104952524800/",
                    "content": "There have been several talks about the need for a package level License Coverage Grade. This project will come up with an initial set of heuristics based on MIME types for what file types should have automatically detectable license identifiers. Then create a command line tool that will accept and parse an SPDX document and a pointer to sources that created it, and come up with license coverage \"grade\" for the package.",
                    "projectCode": "https://github.com/spdx/license-coverage-grader/wiki"
                },
                {
                    "title": "Online SPDX Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5578262453420032/",
                    "content": "Building an easy all-in-one portal  to upload and parse SPDX documents for validation, comparison and conversion and search SPDX license list by forming a Python-Java bridge for integrating various methods from the SPDX JAVA tools library.",
                    "projectCode": "https://github.com/spdx/spdx-online-tools/wiki/Online-SPDX-Tool,-Google-Summer-of-Code-2017"
                },
                {
                    "title": "Online Validation Tools",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6460361226059776/",
                    "content": "Software Package Data Exchange (SPDX) is “a set of standards for communicating the components, licenses, and copyrights associated with software”. You can find the latest (as well as the previous) standards at:https://spdx.org/specificationsOne idea is to accompany software with special files that hold certain meta information: authorship, copyrights, licenses, etc. These files currently come in two major formats: TAG and RDF. There are parsing tools available for these formats in Python and Go:https://github.com/spdx/tools-pythonhttps://github.com/spdx/tools-goThese tools do not support the latest SPDX-2.1 standard (instead, they can handle SPDX-1.2) which makes it logical to add support for the latest standard.However, personally I am not happy with the specification which is why I would rather develop an online validation tool with the license-expression [pyLE] library which heavily relies on the boolean.py library [BP].",
                    "projectCode": "http://all3fox.github.io/2017/08/23/gsoc17-at-spdx.html"
                }
            ],
            "techStack": [
                "rdf",
                "python",
                "java",
                " github",
                "c"
            ]
        },
        {
            "title": "STE||AR Group",
            "orgLink": "http://stellar-group.org/",
            "projects": [
                {
                    "title": "HPXCL – Asynchronous Integration of CUDA and OpenCL to HPX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6088528190504960/",
                    "content": "Massively parallel applications are in the dawn of our future. The scale of problems and the amount of data available have made it infeasible to solve a meaningful problem in a single computer. As such, in such a scale, it is imperative to combine CPUs and accelerator cards such as GPUs to achieve one unified computing source. HPXCL aims at unifying kernel launch and data transfer into HPX asynchronous graph through seamless integration. However, the current implementation of the system with CUDA fails to achieve the desired performance improvement metrics while running in a cluster of computers. The proposal is aimed at improving the performance of CUDA-based HPXCL applications through an ‘Event’ triggered mechanism. Appropriate tests are also to be written to ensure necessary functionality performs as required. Standard benchmarking algorithms (Floyd Warshall, FFT etc.) will also be implemented in HPXCL, OpenCL and CUDA to validate, measure and improve the performance of the existing system, while also keeping in mind the new functionality added.",
                    "projectCode": "https://madhavan001.github.io/GSoC-Final-Evaluation/"
                },
                {
                    "title": "Re-implementing hpx::util::unwrapped and unifying the API of hpx::wait and hpx::when",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6567254372122624/",
                    "content": "Currently the following important functions of the HPX API:only offer nonsatisfiable capabilities for nested hpx::future types inside homogeneous and heterogeneous containers.In order to fully support the requirements for accepting argument types described in #2456, #1404, #1400 and #1126 this proposal intends to extend the capabilities of the functions listed above to access nested hpx::future types as well as unwrapping such types. When the proposal is implemented, all the functions listed above should accept the same set of arguments (unification).",
                    "projectCode": "https://naios.github.io/gsoc2017"
                },
                {
                    "title": "Work on Parallel Algorithms",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5969954344009728/",
                    "content": "My proposal is to complete the implementation of the N4409 C++ STL parallelization standard algorithms in HPX. Since #1141 has mostly been resolved by implementing many of the algorithms, my main focus will be on resolving #1338. But I will first work on implementing the few remaining algorithms in issue #1141 then move onto issue #1338. So I will implement is_heap, partial_sort, partition, remove, merge, and unique.\nAfter this I will move on to #1338, which is about ensuring that these algorithms work seamlessly with distributed data structures like hpx::vector. I will extend as many of the remaining algorithms as possible in the timeframe. I will do this along with unit tests and performance tests. I will also ensure that the documentation and the tutorials are upto date with the new features. I will also update or add relevant examples to the hpx code base.",
                    "projectCode": "http://stellar-group.org/2017/08/gsoc-17-final-documentation-for-parallel-algorithms-1/"
                },
                {
                    "title": "Work on Parallel Algorithms for HPX",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4695078127796224/",
                    "content": "HPX is “The C++ Standards Library for Concurrency and Parallelism”. So, implementing C++17 parallelism like N4409 is very important. Most of parallel algorithms are already implemented. But, still some algorithms have not been implemented. My main objective is implementing as many as possible of the remaining parallel algorithms and adapt them to Ranges TS and add container versions of them. And I add unit tests and benchmark codes for them. Associated with mainly parallel algorithms, I also catch and suggest many issues and resolve them.",
                    "projectCode": "https://docs.google.com/document/d/1MpzWo2TJrxq8ycXN5kuwsfMxdMMM8iB_1zgnfyyTWpY/edit?usp=sharing"
                }
            ],
            "techStack": [
                "c++",
                "boost",
                "hpx",
                "c++17 parallel stl",
                "parallel algorithms"
            ]
        },
        {
            "title": "Stony Brook University, Biomedical Informatics",
            "orgLink": "https://bmi.stonybrookmedicine.edu/",
            "projects": [
                {
                    "title": "Deep learning with open health data",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5086443600871424/",
                    "content": "Use machine learning frameworks - ConvNetJs, Tensor Flow, or now also Google Cloud Machine learning engine - to recognize or forecast clinic outcomes, after training on open health clinical data available - from Statewide Planning and Research Cooperative System, National Cancer Institute’s Genomic Data Commons or listed in https://github.com/beamandrew/medical-data",
                    "projectCode": "https://github.com/avjgit/javascript-machine-learning"
                },
                {
                    "title": "Development of a deep learning framework to discover personalized genomic medicine for lung and breast cancer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6387141160468480/",
                    "content": "Development of a deep learning framework to discover personalized genomic medicine for lung and breast cancerI’d like to solve the above problem with supervised, unsupervised, deep, and wide models. Models I’d like to pay special attention to are recurrent neural networks and hidden markov models. I will read relevant papers for reference, and will implement based on them. I'd also like to apply some linear algebra techniques for better feature extraction. Some of the papers that I’d like to refer to are like the following:https://www.ncbi.nlm.nih.gov/pubmed/17069508\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC4965871/",
                    "projectCode": "https://github.com/TiffanyMin/GSOCApp"
                },
                {
                    "title": "RDMA-SparkGIS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4781368584175616/",
                    "content": "Processing large amounts of spatial data involves a lot of overheads, higher latency, lower bandwidth, high processing time and a well defined framework. All the issues addressed needs to be solved using different tools available in big data analytics. In this project, we will be focusing on solving these issues and combining the benefits of RDMA with SparkGIS framework to improve the overall performance in distributed computing. Our main goal is to understand RDMA and it’s deployment, configuring RDMA over Conventional Ethernet(RoCE), deploying RDMA-Spark on RoCE and finally deploying SparkGIS on RDMA-Spark. After all these deployments are done, we will shift our focus to optimizing SparkGIS for more accurate and faster results.",
                    "projectCode": "https://docs.google.com/document/d/1Iy-tNN3SV2FtvtClT1H9fk1Nt7lw_VLN-6itvAm0KFw/edit"
                }
            ],
            "techStack": [
                "big data",
                "apache spark",
                "matlab",
                "c++",
                "hadoop"
            ]
        },
        {
            "title": "strace",
            "orgLink": "https://strace.io",
            "projects": [
                {
                    "title": "\"Netlink socket parsers\" By Gabriel Laskar and Dmitry V. Levin, 2017",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6190091550588928/",
                    "content": "Netlink is a network protocol that is used to communicate between the\nkernel and the userspace. For example, iproute use netlink in order to\nconfigure the network stack (interfaces, addresses, routes, etc). It\nis also used by the kernel to report hotplug events to the userland.\nThe goal here is to add support in strace to decode netlink packet\nstructures in order to be able to debug and discover netlink messages.In 2016, the base ground work was done, now it can be extended to support\nmore netlink family protocols.",
                    "projectCode": "https://ppiao.github.io/2017/08/22/strace-gsoc-2017-netlink-socket-parser.html"
                },
                {
                    "title": "Advanced syscall filtering syntax",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4704631745675264/",
                    "content": "Current strace filtering syntax allows to debug simple applications. But it has no support for advanced filtering. For example, it is impossible to combine filters. Moreover, strace supports very few filters (syscall filtering, path filtering, number of invocation filtering). My implementation of a new filtering mechanism will include:",
                    "projectCode": "https://gist.github.com/n1kolasM/93da7c30a9b3cbe99a8e4c408d6c947d"
                },
                {
                    "title": "Advanced syscall information tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5658731350065152/",
                    "content": "Everyone accepts that strace is one the most useful program for developers. And to make the\noutput more understandable, I want to improve the informativeness of syscalls. Well, it occurred\nto me that there are two main approaches:\n1) Improve the informativeness of the existing strace output\n2) Write the complementary static query tool\nLet's see which one is more appropriate in the current state of affairs. Certainly, it seems like the\nfirst way is looking better, because just typing the following command\n$ strace %process_name% | asinfo\nwe will see the colorful and the informative output. However, parsing messages to make\nappearance more understandable is quite slow. Furthermore, an absence of the completed JSON\noutput makes the task unsolvable optimally. In the second case, we do not care about these\nproblems, just open one more terminal emulator and type the following command:\n$ asinfo [OPTIONS] write (just one example)\nTo sum up, the output is purposed for people and providing all information about syscall(syscall\nnumber, meaning of flags, etc) can significantly reduce the debug time.",
                    "projectCode": "https://edosedgar.github.io/gsoc2017/2017/08/27/work-product-submission.html"
                },
                {
                    "title": "Advanced syscall tampering and filtering with Lua/LuaJIT",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4930558568169472/",
                    "content": "A support for Lua-scriptable syscall tampering and filtering will be added. It will be\npossible to inspect syscall arguments (including structures/unions of arbitrary\ncomplexity, given that their definitions are provided), passed both by value and\nby pointer (and write modified values back in case of the latter) using LuaJIT's\nFFI library or a compatible one (there are currently a standalone implementation\nof FFI library abandoned since 2013 and its fork by Facebook).It will also be possible to perform fault/success/signal injection.A pull-style C API, as LuaJIT's FFI documentation suggests for minimizing\ncontext switching between C and Lua and thus maximizing performance, will be\nimplemented, but a helper library written in Lua will wrap it to provide a\nconvenient push-style one.Of course, everything added will be documented and tested well.",
                    "projectCode": "https://gist.github.com/shdown/b5b48834fde9e68aa541e952af03579a"
                }
            ],
            "techStack": [
                "linux",
                "c",
                "git",
                "shell script",
                "make"
            ]
        },
        {
            "title": "Sugar Labs",
            "orgLink": "http://sugarlabs.org",
            "projects": [
                {
                    "title": "Development of Sugarizer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6493818484424704/",
                    "content": "Sugarizer Deployment Tool is a tool for Sugarizer. He is for deploying Sugarizer on multiple device a keep it updated. Make the installation and updated easy for the user.Sugarizer is a way to use Sugar on any device using web technologies. Sugarizer can be deployed on many devices including Android phones and tablets. \nThe goal of this specific project is to create the \"Sugarizer Deployment and Management Tool for Android\".Expected resultsSugarizer Server Deployment and Management Tool is a GUI Tool working on GNU/Linux, Mac and Windows to deploy and configure Android devices using ADB (Android Debug Bridge).",
                    "projectCode": "https://github.com/llaske/sugar-deployment-tool-desktop"
                },
                {
                    "title": "Giving Sugar Labs Website a New Look",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6238603474632704/",
                    "content": "The proposal is for the project \"Giving Sugar Labs Website a New Look\". The basic requirement of the project is to provide \"www.sugarlabs.org\" a new look and the primary goals involve making the existing website more attractive and easier to explore for visitors/users. The proposal ensures that the primary goals are achieved and also proposes other major secondary goals that would further improve the website in many aspects. The proposal has been structured and presented in a neat way.",
                    "projectCode": "https://psramarajugsocblog.wordpress.com/2017/08/29/gsoc-2017-project-final-report/"
                },
                {
                    "title": "Maintaining ASLO",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5422543850700800/",
                    "content": "http://activities.sugarlabs.org/, often addressed as ASLO is the Sugar Labs app store, where activities are hosted and downloaded. It serves as main network for distribution of apps/activities available for the system and helps users find relevant and interesting activities, which would ultimately help them learn and grow. Main aim is to maintain and fix ASLO, adding new and meaningful features that help make ASLO easy to use both for developers and users, doing intended operation with as much minimal intervention as possible.",
                    "projectCode": "https://github.com/sugarlabs/aslo-v3"
                },
                {
                    "title": "Mind Math Activity",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5337794750709760/",
                    "content": "An activity that can help learners to calculate  (999989)^2  in 10 seconds. \nThe main objective is to make this web based sugar activity as a productive distraction for the students to play and learn vedic math tricks on self.",
                    "projectCode": "https://github.com/SanjayKumarr/MindMath/blob/master/README.md"
                },
                {
                    "title": "Say no to Gtk2",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6422687383552000/",
                    "content": "Sugar has been using GTK2  as its primary toolkit, for many years. But recently major changes have occurred in the sugar’s technology which includes an upgrade to a newer version of GTK+ i.e. the GTK3 toolkit and PyGI. Because of these changes in technology sugar is divided on these old and new distributions.This project is all about porting a dozen of major and minor activities of sugar which were based on “GTK2 and GST0”.10 to “GTK3 and GST1.0” in order for sugar to remain innovative stable and fully updated with newer technology.These are the 12 activities whose refactoring will be done :\nTurtleart, Record, Chat, Calculate, Colors, Stopwatch, Dots and Boxes, Slider-puzzle-branch, Classroom broadcast, Convert, Arithmetic, Pukllanapac.",
                    "projectCode": "https://zeeshanblogblog.wordpress.com/2017/08/26/gsoc-with-sugarlabs-final-evaluation/"
                },
                {
                    "title": "Sugar on Raspbery Pi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5069440630652928/",
                    "content": "This project aims at making Sugar run perfectly on the Raspberry Pi like it does on\nthe XO laptops and to create an image of Sugar which is suitable for inclusion on the\nRaspberry Pi organization's download page.Goals of the project:",
                    "projectCode": "https://sugaronraspberrypi.wordpress.com/2017/08/24/gsoc-final-project-report/"
                },
                {
                    "title": "Sugarizer Server Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6143741337272320/",
                    "content": "The project aims to create a \"Sugarizer Server Dashboard\" for teachers and deployment admin which can be used to control and manage the work of learners and analyze all various activities on a Sugarizer Server. Teachers won’t have to locally transfer journals from the learners’ device and would be able to launch each activity exactly like it was on the learner’s device. This project would have a great impact on the teachers as they would be able to manage their workflow in a more automated way which would also increase user engagement & product adoption by completing the loop which is missing right now. For the sugar labs community, it would be great as they could view all the statistics directly from the dashboard and work on improving the system in a fact-based way using the information presented in the dashboard.",
                    "projectCode": "https://github.com/tarunsinghal92/sugarizer-backend/wiki/Final-Submission"
                },
                {
                    "title": "Timbre Widget for Music Blocks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6578232576966656/",
                    "content": "My proposed project is inclusion of Timbre Widget to Music Blocks. Timbre is a character of a sound that distinguishes it from other sounds. With the addition of the timbre widget, users of Music Blocks can tweak timbre of a sound and have a real-time view of the parameters they are applying to a particular sound. The users can apply effects , change the attack,decay ,sustain and release(ADSR) envelope of the sound and can apply filters to the sound.When the users change the timbre of the sound, they can also visualise how the timbre is being actually changed with the help of pictorial representation such as graphs.",
                    "projectCode": "https://tabs16blog.wordpress.com/2017/08/27/gsoc17-with-sugar-labs-final-report/"
                },
                {
                    "title": "User Manual for Music Blocks",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5216031354126336/",
                    "content": "Music Blocks is a free and open-source, browser-based software, designed basically for students to learn music in fun and interactive way. To get started with “music blocks”, newbies need to have a fundamental understanding of the software, what are the things can be done and importantly how things can be done. To address this requirement, “music block” has a user guide. But the existing user guide lacks most of the important information about the software components,  how each building blocks in the software can be related to music and especially some examples of how to create music with the software. The objective of this project is to create a user manual which would be a simple and comprehensive guide while providing samples and related explanations. Deliverables of the project will be as follows:",
                    "projectCode": "https://dinukaasblog.blogspot.com/2017/08/gsoc-2017-diaries-with-sugar-labs-wrapup_27.html"
                }
            ],
            "techStack": [
                " python",
                "javascript",
                "gtk",
                "android"
            ]
        },
        {
            "title": "Sustainable Computing Research Group ( SCoRe )",
            "orgLink": "http://www.scorelab.org/",
            "projects": [
                {
                    "title": "Bassa - Dockerize and modify features.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4945706112516096/",
                    "content": "Bassa is an automated download queue which tries to minimize bandwidth wastage. It\nsolves the problem of wasting internet bandwidth by queuing requested download in high\ntraffic. Objectives of the project is  dockerize Bassa project to simply run the project without complex configurations and implement the update notification system.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Kaveesha_Baddage-Bassa_Dockerize_And_Modify_Features.md"
                },
                {
                    "title": "BellyDynamic: A scalable data structure to handle online and offline dynamic graph objects",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5997473138999296/",
                    "content": "A social network evolves over time through the creation or deletion of ties among a set of actors.The volatile nature of social ties provides a strong platform to identify the dynamic network structure. This change of structural patterns can be well represented by the existence of dynamic graph objects Further, they can be enriched with the temporal information of social ties to define the recurrent subgraphs of interest. This would yield important insights about the correlation between patterns of ties in a social network. Major contribution of our study is the proposal and implementation of a scalable data structure to handle online and offline dynamic network objects. Hence, it can be used for large scale graph modeling, analysis and visualization purposes.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Yasanka_Horawalavithana_BellyDynamic_A_Scalable_Data_Structure_To_Handle_Onlin_And_Offline_Dynamic_Graph_Objects.md"
                },
                {
                    "title": "DroLa",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6046674002640896/",
                    "content": "A ground station tool for monitor the locations of various kind of drones. Increase flying  range with monitoring through this system. Uniquely identify each drone with a known id.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Namal_Jayasuriya_DroLa.md"
                },
                {
                    "title": "Drone Comm",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5075293865771008/",
                    "content": "Drone Comm is community platform which is help to meet drone onwers and drone required people. using this platform drone required people can request drone from the community. And drone pilot who has drone can be hire their drones and can get income. In this case drone requester publish he/she task(purpose) description and request drone throught this community platform. These open task request forward to drone pilot and drone pilot bid for these task.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Amila_Karunathilaka_Drone_Comm.md"
                },
                {
                    "title": "DroneSym",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5864529539891200/",
                    "content": "The proposal outlines the approach and a tentative technological architecture of the solution I'm expecting to implement under the GSoC project idea of DroneSym.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Hasanga_Somaratne_DroneSym.md"
                },
                {
                    "title": "EtherBeat - Smart Contract Monitoring Service",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4739816117764096/",
                    "content": "With the growing popularity of BitCoin in the last couple of years, other blockchains have been in development for solving various problems that need distributed consensus. Ethereum blockchain is one example, that gives users to develop \"smart contracts\" that runs in the blockchain. This gives the ability to develop decentralized applications (or dApps).This framework has given many developers to write a decentralized application without much effort, without needing distributed systems or cryptography knowledge. Unfortunately, because the technology being used is bleeding edge it is inevitable that attacks or hacks will target these apps for monetary reasons.\nBecause of the immutability property of Ethereum after publishing even if developers identify a critical bug in the contract it is not possible to correct it.Thus, in order to fill the gap of not having a proper 'smart contract' compatible monitoring service, we propose to build a web application that can monitor other smart contracts in Ethereum and give the capability to safeguard its critical functions (Ether send and receive) and interact and visualize with smart contract functions in a much simpler way.",
                    "projectCode": "https://github.com/scorelab/EtherBeat"
                },
                {
                    "title": "Gocloud",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6634555972780032/",
                    "content": "gocloud is a standard library for Go that abstracts away differences among multiple cloud providers. The gocloud compute package is designed to make it easy to provision and work with VMs. Developing golang package for interacting with Google compute engine and AWS EC2 using a unified API.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Pratik_Dhanave_GoCloud.md"
                },
                {
                    "title": "Implementing an Android application for controlling Drones (DronePilot)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6170966329655296/",
                    "content": "This is a project that is intended to support Public Health Inspector (PHI) to find and investigate “Dengue(mosquito) breeding sites in a given location.” Breeding of mosquitoes is becoming a severe issue in Sri Lanka and it is difficult to investigate the breeding places in urban areas mainly due to the height of the buildings. Currently PHI’s are investigating such locations by themselves where possible.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Lasith_Niroshan_Implementing_An_Android_Application_For_Controlling_Drones.md"
                },
                {
                    "title": "Kute-Android app-A vehicle pooling solution",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6200671665651712/",
                    "content": "An app that allows users to pool vehicles during their daily up-down trips or other trips,this draft includes a smart algorithmic approach to \"Finding a match issue\" which may arise while suggesting pool trips with people not in friend list",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Nipun_Arora_Kute_Android_App_A_Vehicle_Pooling_Solution.md"
                },
                {
                    "title": "NodeCloud - unified API for cloud providers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6356148139589632/",
                    "content": "NodeCloud is an easy to use abstract API which will remove the burden of switching in between many libraries to use cloud related APIs. NodeCloud is a Node.js library which will integrate Google Cloud and AWS services under one hood. Even though the scope of the project is limited to Google Cloud and AWS, according to the flexible, plug-gable architecture it will be convenient to add more cloud providers in the future of this project.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Rajika_AbeyrathneNode_Cloud_Unified_API_For_Cloud_Providers.md"
                },
                {
                    "title": "OpenDF - Image annotation and describe module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6147934433312768/",
                    "content": "Nowadays, digital forensic tools are often used to investigate cyber crimes, which are becoming more and more frequent. OpenDF is a tool for forensic analysis of disk data. By having an image description module that automatically recognizes objects from the large amount of images that are available in a disk, it saves manual work for an investigator.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Shehan_Weerakkody_OpenDF_Image_Annotation_And_DescribeModule.md"
                },
                {
                    "title": "OpenIoE - Implement bidirectional publish-subscribe behaviour",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5999150457946112/",
                    "content": "OpenIoE is an open source project capable of retrieving and storing data from sensors with a web frontend to monitor and manage this sensor data.  Currently, OpenIoE cannot act as a publisher and therefore cannot send control messages to sensors so as to change their settings. Therefore a user of OpenIoE cannot trigger a data collection from connected sensors immediately or in the future. Extending OpenIoE to support bi-directional pub-sub will enable it to send data collection requests to sensors. With this feature, OpenIoE will able to actuate sensors as necessary and thus act as a central platform from which a user can control their sensors as necessary.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Priya_Pappachan_OpenIoE_Implement_Bidirectional_Publish_Subscribe_Behaviour.md"
                },
                {
                    "title": "OpenPub Publication Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5332693403303936/",
                    "content": "OpenPub is a publication manager for individuals and small research groups. OpenPub provides research's to upload and share their’s publications with others and get valuable feedbacks for their publications. It also allow users to easily find related resources in different areas and categories.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Achinthya_OpenPub_Publication_Manager.md"
                },
                {
                    "title": "Query parser for Senze language",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6618901085421568/",
                    "content": "In MySensors platform the application communicate each other using  Senzes language. At the moment there are no proper mechanism to generate and parse Senzes queries. From this project we will provide dynamic query generating and parsing library for Senzes language.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Kavindi_Query_Parser_For_Senze_Language.md"
                },
                {
                    "title": "Rewriting OpenDF frontend using React",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5377515413569536/",
                    "content": "Goal of this project is to rewrite the current OpenDF frontend using React and make the UI fully component based . Also will use ES6, SCSS and Gulp for development. Also do component testing for the new frontend.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Pasan_Ranathunga_Rewriting_OpenDF_Frontend_Using_React.md"
                },
                {
                    "title": "Stackle",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5081230047444992/",
                    "content": "Stackle is an web communication portal aimed at providing Open Source organizations a platform to have discussions on their GitHub projects and their issues. It provides GitHub integration which allows administrator of an organization to create a forum thread for the particular organization. Users signing in is able to view forums of the organizations they contribute to and engage in the forum discussions.",
                    "projectCode": "https://github.com/scorelab/GSoC/blob/master/GSoC-2017/Pasan_Gamaetige_Stackle.md"
                }
            ],
            "techStack": [
                "python",
                "java",
                "gcp",
                "android",
                "golan"
            ]
        },
        {
            "title": "SymPy",
            "orgLink": "http://www.sympy.org/",
            "projects": [
                {
                    "title": "Group Theory: Subgroups, Homomorphisms and Presentations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6337426108710912/",
                    "content": "SymPy currently has limited support for subgroups of finitely presented groups. For finite FpGroups, this can be greatly extended by defining an isomorphism to a Permutation Group since the latter has much more functionality already implemented. This calls for the general implementation of group homomorphisms which in turn requires implementation of rewriting systems for groups. Another issue is infinite FpGroups for which better treatment can be provided, in particular, there are certain techniques that allow to determine if a group is infinite before passing it to a function that wouldn't be able to terminate successfully while processing an infinite group.",
                    "projectCode": "https://github.com/sympy/sympy/wiki/GSoC-2017-Report-Valeriia-Gladkova:-Group-Theory"
                },
                {
                    "title": "Implementation of multiple types of coordinate systems for vectors",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6575124094386176/",
                    "content": "In my proposal I present idea of introducing different curvilinear coordinate system to vector package.\n My concept is based on Lame coefficient, which are scaling factor between curvilinear coordinate system.I present on examples how we can calculate gradient, curl and divergence using Lame coefficient\nand I propose possible structural solution for this problem.",
                    "projectCode": "https://szymag.github.io/post/report/"
                },
                {
                    "title": "Implementing a SymPy module for Integration of Polynomials over 2/3-Polytopes",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5455209492905984/",
                    "content": "This project is to implement a module in SymPy which will provide the ability to integrate arbitrary polynomials over 2D and 3D polytopes.\nUsing Generalized Stokes' Theorem and Euler's Theorem the integration over a given polytope is reduced to integration over it's faces and then edges. This technique avoids using a 3D quadrature which would otherwise be computationally expensive.",
                    "projectCode": "https://github.com/sympy/sympy/wiki/GSoC-2017-Report-Arif-Ahmed-:-Integration-over-Polytopes"
                },
                {
                    "title": "Implementing Solvers for SymEngine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4519758099644416/",
                    "content": "Solving equations and system of equations is a crucial feature of Computer Algebra Systems and Polynomial factorization is one of the fundamental tools to implement solvers. Currently, SymEngine has an implementation of Univariate Polynomials, MultiVariate Polynomials, Sets and Finite Fields.SymPy has a robust solvers module. I would like to port basic solvers like univariate solvers, trigonometric solvers and System of linear Equations to SymEngine. SymEngine's Set module is not matured enough, So I will also improve Sets to facilitate Solvers. In SymPy, Currently Major work is going around replacing solve with solveset. So, rather that porting solve, I would port solveset to SymEngine. After implementing basic solvers module, I would also implement some applications of solvers like eigenvectors and eigenvalues of a matrix.",
                    "projectCode": "https://gist.github.com/ranjithkumar007/1511475bcc2079ef77844c693a179aca"
                },
                {
                    "title": "Improved code-generation facilities",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5493001178578944/",
                    "content": "The code-generation facilities in SymPy are already in active use in the research community.\nThere are, however, still many exciting opportunities for further improvements.\nAs a CAS, SymPy has access to far more information than a compiler processing typical source code in languages such C/C++/Fortran. SymPy uses arbitrary precision\narithmetics which means that the size and precision of numbers represented are only\nlimited by the amount of memory the computer has access too.\nHowever, operations with arbitrary precision are inherently slow, which is why high performance code\nrelies on floating-point arithmetic (which has dedicated hardware in modern CPUs).\nTherefore, any code generation for a programming language which maps mathematical expressions to finite precision floating point instructions, would benefit greatly if\nthat code-generation was made in such a way to minimize loss of significance, risk of\nunder-/overflow etc.",
                    "projectCode": "https://github.com/sympy/sympy/wiki/GSoC-2017-Report-Bj%C3%B6rn-Dahlgren:-Improved-code-generation-facilities"
                },
                {
                    "title": "Improving SymEngine's Python Wrappers and SymPy-SymEngine Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5925654977576960/",
                    "content": "Speed is of the utmost importance for any Computer Algebra System.SymEngine, was initially developed with the aim of serving as an optional core for the SymPy CAS in the future. Over the years, it has matured enough to be used as a symbolic backend.\nUsing SymEngine can significantly increase speeds of various symbolic operations, and hence make SymPy an ideal choice for projects requiring fast manipulations, by giving them the option to switch over to SymEngine’s routines.On the other hand, this will also lead to the development of a number of features currently lacking in SymEngine and its Python wrapper, which would be ported over from SymPy in order to provide smooth wrappers for optional use.The rest of the details are explained in the project  proposal.",
                    "projectCode": "https://github.com/ShikharJ/GSoC-2017-Work-Report"
                },
                {
                    "title": "Rubi Integrator",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5411801063751680/",
                    "content": "A Rule based integrator nicknamed Rubi is an entirely new module in SymPy, Integrals. It is an implementation of more than 6000 rules to cover a wide variety of indefinite integration. Currently SymPy uses algorithms for indefinite integration which are too slow and presents results which are not simplified. Rubi utilizes a set of well defined rules which makes it smart to present the results in a more symmetric and simplified manner. The Pattern Matcher along with transformation rules plays an important role in making Rubi more robust and fast. As it works on the given set of rules, it can be modified easily to include more rules and cover more number of integrations.",
                    "projectCode": "https://gist.github.com/Abdullahjavednesar/5e5100296042a646b52c69b7ce79c6ea"
                },
                {
                    "title": "Rule Based Integration Module for SymPy",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5013988039458816/",
                    "content": "Rule based integration (Rubi) consists of ~10,000 transformation rules which have been tabulated since last two centuries. Computer Algebra System(CAS) can match the integrand with the right rule to directly solve the integration without using general integration algorithms.Adding Rubi to SymPy can be very helpful to SymPy's integration module since it frees developers of algorithms from having to worry about the annoying and trivial problems and the special cases, and instead focus on the genuinely hard and interesting problems.Reference:",
                    "projectCode": "https://parsoyaarihant.github.io/blog/gsoc/2017/08/28/GSoC17-Final-Report.html"
                }
            ],
            "techStack": [
                "python",
                "c++"
            ]
        },
        {
            "title": "Systers, an Anita Borg Institute community",
            "orgLink": "http://systers.org",
            "projects": [
                {
                    "title": "Automated Testing - Photo Language Translation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6550460513124352/",
                    "content": "",
                    "projectCode": "https://github.com/systers/language-translation/commits?author=adityathiru"
                },
                {
                    "title": "Hoppers App - iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5508656065937408/",
                    "content": "Proposal to develop the Hoppers iOS app, a companion to the Conference App. The Hoppers Apps will allow conference volunteers to view and manage their assigned shifts. It will also allow volunteers to trade shifts with each other. This proposal outlines the features to be developed to create an MVP and is designed with the Grace Hopper Celebration conference in mind.",
                    "projectCode": "https://github.com/systers/volunteers-iOS/compare/development@%7B05-31-17%7D...development@%7B08-29-17%7D"
                },
                {
                    "title": "Hoppers-app Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6532904297431040/",
                    "content": "Hopper App is a mobile application which helps manage the Hoppers at the Grace Hopper Celebration. Hoppers are volunteers. These volunteers work multiple shifts, up to eight hours, spread over the three days of the conference. They must commit to their assigned shifts, attend an orientation and be in the area during the conference week.",
                    "projectCode": "https://github.com/systers/volunteers-android/commits/develop?author=pandilladivya"
                },
                {
                    "title": "MACC: User Interface Brushup and Feature Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4989588598685696/",
                    "content": "Mobile Application Control Center (MACC), Peace Corps GSoC project, is a web application helpful for Peace Corps Volunteers to handle data for Malaria and FirstAide applications. It uses Python’s framework Django to handle the backend while bootstrap aides the frontend mechanism. The web application has the basic build up that includes interfaces for posts and contact information for both the aforesaid applications. The signup, login, post creating and editing pages have been given a decent makeup to start with. However, the code really needs a brush up as it is built using Django 1.6.5, having a somewhat messy structure that needs to be optimized and its user interface is lacking interesting features. One of the major motives of my GSoC would be to improve the existing code, to complete the things that are almost complete and to bring a sound and cogent change in the User Interface. Also, the new features I am adding aren't completely new, they are commonly used features only. By the end of GSoC, I want MACC to be production ready and available to use for a wider majority of people who can rely on its generic view to aide their own applications control.",
                    "projectCode": "https://github.com/GunpreetAhuja/macc/wiki/Gunpreet-Ahuja---GSoC-2017-Contribution"
                },
                {
                    "title": "Mobile Application Control Center (MACC)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5097417510748160/",
                    "content": "The purpose behind MACC is to provide a web application to manage content and provide APIs to manage data for the First-Aide Mobile App and the Malaria Prevention Mobile app. The current application suffers from various UI issues and incomplete features. I intent to complete all the existing features and recreate the UI for the entire application. The API end points needs to be made functional as well. I propose to add social media login/signup feature as well along with modifying Malaria and  FirstAide Post's structure by adding apt fields to them . I also intend to create a feature to segregate  basic user data from malaria prevention app into MACC and integrated the project with Sphinx and Travis CI .",
                    "projectCode": "https://github.com/systers/macc/commits/develop?author=yatna"
                },
                {
                    "title": "PC Prep Kit",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5900744704131072/",
                    "content": "This project implements a web application that will spread awareness on Malaria by completing fun activities and games.",
                    "projectCode": "http://systers-opensource.blogspot.in/2017/08/pc-prepkit-gsoc-2017-final-report-s-j.html"
                },
                {
                    "title": "PC-Prep-Kit",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6488604930998272/",
                    "content": "PC Prep Kit is a web application aimed at helping the peace corps volunteers with awareness about Malaria and its prevention techniques. The application uses various interactive activities to make the process effective.  The App focuses on causes, prevention and medication of Malaria.",
                    "projectCode": "http://systers-opensource.blogspot.in/2017/08/pc-prepkit-gsoc-2017-final-report.html"
                },
                {
                    "title": "PowerUp UI/UX & Graphics Update",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6427479493312512/",
                    "content": "A sleek, minimalist, and modern update for all the graphics in the game to bring it up to speed with other mobile games in the app store.",
                    "projectCode": "https://systers-opensource.blogspot.com/2017/08/kim-huynh-powerup-final-report-gsoc-2017.html"
                },
                {
                    "title": "PowerUp-Android",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6192013011582976/",
                    "content": "The PowerUp-Android is an Android application for empowering preadolescent girls between the ages of 12 to 14. The game is based on Social & Emotional Learning model to help girls to learn conflict resolution, negotiation & other social skills needed to build their confidence against tough situations. \nThe user creates a character and tours through different scenarios each dealing with the different subject of importance. These scenarios contain mini-games which are launched between the scenarios to keep user the engaged.",
                    "projectCode": "https://github.com/systers/powerup-android/pulls?page=1&q=is%3Apr+created%3A%3E%3D2017-05-04++author%3Acodingblazer&utf8=%E2%9C%93"
                },
                {
                    "title": "PowerUp-iOS",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5856735650643968/",
                    "content": "PowerUp is an educational mobile for adolescent girls. The game is based on Social & Emotional Learning model to empower young girls to take charge of their reproductive health and self esteem.I will be working on PowerUp-iOS during GSoC 2017, and I plan to achieve the following tasks.I will cut some redundant classes and view controllers as well as redesign the class structure and Storyboard segues. Future developers would benefit from the refactored code significantly due to the enhanced readability and flexibility.Mini game is a nice way to make a choose-your-own adventure game more interactive. I will implement three mini games during GSoC 2017.I will be working along with a UI designer, so I will be applying the newly designed UI assets to the project.",
                    "projectCode": "https://gist.github.com/casd82/b1f7710319161823f4f16ce038c720e0"
                },
                {
                    "title": "Systers Features for Mailman 3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6706691290693632/",
                    "content": "The project consists in porting Systers customized features to Mailman3. The main goal of the project has been to port :New features to be implemented in Systers Mailman3 :",
                    "projectCode": "https://drive.google.com/drive/folders/0Bz3Qq-vklUUZNFAzZ0ZwTlh5MFk"
                }
            ],
            "techStack": [
                "android",
                "ios",
                "python",
                "java",
                "javascript "
            ]
        },
        {
            "title": "TEAMMATES @ National University of Singapore",
            "orgLink": "https://github.com/teammates/teammates",
            "projects": [
                {
                    "title": "addressbook-level5",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6358234956824576/",
                    "content": "Adding new features to addressbook so that it can be more useful for CS2103T students morphing it for their own project.",
                    "projectCode": "https://gist.github.com/yamgent/66b2fc950624a42f44de4c4c8febbc0e"
                },
                {
                    "title": "Comments+",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5890064596860928/",
                    "content": "This project enhances current comments feature being used in the application, by implementing features :-1) Allowing student to submit their explanation on particular feedback response.2) Allow instructors to add comments from more places.3) Fixing other miscellaneous issues related to comments feature",
                    "projectCode": "https://docs.google.com/document/d/1hgjNYJkb3Y4Lt0Zkr8b7o_mNLd9tewsi4Rbq5hMUYKQ/edit?usp=sharing"
                },
                {
                    "title": "Keeping PowerPointLabs Well-maintained and Updated",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6467332226416640/",
                    "content": "PowerPointLabs is used by people around the world, and is being developed and maintained by students\nof National University of Singapore. These selected students take on the project as a school module or\ninternship project. While having a regular rotation of new developers provides creativity and multiple\nperspectives which helps improve PowerPointLabs, it may introduce some deviations in the coding style,\ntechnology used, and preferred workflow. These may accumulate and cause the project to become hard\nto maintain and its public release to stagnate. This proposal offers my suggested approaches to make\nPowerPointLabs more maintainable for its developers, while keeping it updated for its users.",
                    "projectCode": "https://github.com/PowerPointLabs/PowerPointLabs/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Ainitialshl"
                },
                {
                    "title": "Performance Hero",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6719712557793280/",
                    "content": "Improve the performance and scalability of TEAMMATES.",
                    "projectCode": "https://github.com/TEAMMATES/teammates/pulls?q=is%3Amerged+author%3Awhipermr5+created%3A%3E%3D2017-05-01"
                },
                {
                    "title": "Questions+",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5920919641915392/",
                    "content": "Improving the existing question types by implementing the most demanded improvements is the sole focus of the project. The project does not focus on adding new question types. Some of the major goals of the work to be done are -",
                    "projectCode": "https://gist.github.com/VamsiSangam/01a368256e8fb98c0a588a039e5527cc"
                },
                {
                    "title": "Reports enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4681153306951680/",
                    "content": "As part of this project, I want to add support for more variety of formats both for downloading data and for importing data into Teammates. Also, I will work on features, which give more granular control for reports customising.",
                    "projectCode": "https://github.com/TEAMMATES/teammates/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3ALimeTheCoder%20is%3Aclosed%20review%3Aapproved%20"
                },
                {
                    "title": "Student Data UI upgrade",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4943619295281152/",
                    "content": "The project aims to provide a hassle-free solution to the process of enrolling the student in a course by the instructor and provide end-users with a spreadsheet-like experience. Improving the overall UI  by implementing a spreadsheet like an interface for adding students in a particular course. The features that will be covered are -",
                    "projectCode": "https://docs.google.com/document/d/1wUg9DApb9mRLFJRm8jbuRQwFidoAOmNMoaF7TbOPnGk/edit?usp=sharing"
                },
                {
                    "title": "Usability Hero+ Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5117863836778496/",
                    "content": "My project involves fixing UI issues across the entire TEAMMATES platform, including overhauling the instructor help page, allowing respondents to submit each question on a feedback session individually, providing more contextual help and other improvements. The goal is to make the TEAMMATES platform even more user-friendly and accessible.",
                    "projectCode": "https://docs.google.com/document/d/10XdyCFbZdFVgbVp57zFCiidqaY8i7pQ4GNPpekLHu1s/edit?usp=sharing"
                }
            ],
            "techStack": [
                "java",
                " javascript",
                "google app engine",
                "css",
                "java ee"
            ]
        },
        {
            "title": "The Center for Connected Learning and Computer-Based Modeling",
            "orgLink": "http://ccl.northwestern.edu/netlogo",
            "projects": [
                {
                    "title": "Exporting and Importing State from NLW and NLD",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6207129954287616/",
                    "content": "I propose to implement the export-world and import-world methods to NetLogo Web. This will allow users to export and import their world state and have it seamlessly import and export between both NetLogo Web and NetLogo Desktop.",
                    "projectCode": "https://camdenclark.github.io/08-26-2017/GSoC-final.html"
                }
            ],
            "techStack": [
                "javascript",
                "scala",
                "html5"
            ]
        },
        {
            "title": "The CGAL Project",
            "orgLink": "http://www.cgal.org",
            "projects": [
                {
                    "title": "2D Arrangement Demo Enhancement with New Geometric Curves",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6217820933193728/",
                    "content": "By playing around with the 2D Arrangement demo, users can have a visual and direct experience on what functionalities to expect from this module before diving into official documentations.The present demo program supports several geometric objects such as line segments. The main goal is to add the support of Bezier and algebraic curves, which enriches the functionalities of the demo.",
                    "projectCode": "https://github.com/CGAL/cgal/issues/2367"
                },
                {
                    "title": "Hexahedral mesh extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5022034526470144/",
                    "content": "Hexahedral meshing has been proven to be significantly more efficient than tetrahedral meshing in the solving of most PDEs for physical simulations, they require only 10-25% the number of elements required buy tet meshes.  But hex-meshing is a hard problem and is often done by parameterizing tetrahedral meshes and extracting hexahedral meshes using certain heuristic rules. Numerical inconsistencies and extraction of non-hexahedral polytopes can be avoided at the extraction stage.\nThe algorithm to be implemented is delineated in the paper by Lyon et al: HexEx: Robust Hexahedral Mesh Extraction. My work is to incorporate the algorithm to create hexahedral meshes using combinatorial maps package in CGAL.CGAL has a generalized maps package, which generalizes representation of any oriented object of n-dimensions with n-dimensional subdivisions, each of which is stored as a set of darts and pointers that point to other darts, which could be thought of as an oriented edge or 1-cell. We use this data structure to hold the hexahedral subdivisions of the 3D object. The package has classes to define implementations of darts, cells, generalized maps, which will be used for the implementation.",
                    "projectCode": "https://github.com/CGAL/cgal/issues/2376"
                },
                {
                    "title": "Mesh and Shape smoothing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5465217303576576/",
                    "content": "Currently, CGAL's Polygon Mesh Processing package offers an incremental triangle-based isotropic remeshing algorithm to perform two-dimensional mesh smoothing. This project aims at enhancing this functionality by implementing the high quality compatible triangulations algorithm for mesh smoothing and the mean curvature flow for shape smoothing. The final objective is for the user to be able to choose among different mesh optimization methods depending on geometry parameters to achieve optimal result.",
                    "projectCode": "https://github.com/CGAL/cgal/issues/2377"
                },
                {
                    "title": "Variational Shape Approximation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6078869077491712/",
                    "content": "For many applications ranging from geometry compression to reverse engineering, finding the concise and faithful approximation of an excessively verbose 3D data (in particular, scanned meshes) is beneficial for subsequent processing and may reduce the computational cost dramatically. The proposed project aims to implement the Variational Shape Approximation (VSA) framework and extract the approximated mesh. Apart from approximation, it can be viewed as a package for simplification or shape discovery or a complement to current mesh segmentation package.",
                    "projectCode": "https://github.com/CGAL/cgal/issues/2368"
                }
            ],
            "techStack": [
                "c++",
                "git",
                "github"
            ]
        },
        {
            "title": "The Eclipse Foundation",
            "orgLink": "http://www.eclipse.org",
            "projects": [
                {
                    "title": "A Generic Editor Framework for JSON",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5760384636026880/",
                    "content": "This proposal references the EMF Forms goes Angular JS idea in the Eclipse wiki.JSON has become a de-facto standard for data exchange in web applications. Many development tasks require to create and modify JSON files based on a given JSON Schema. As the implementation of custom editors for every JSON schema is quite some effort, JSON files are often created with plain text editors. The goal of this project is to create a framework for the creation of tree-based editors for JSON files based on a given JSON schema. The schema defines which elements and attributes are supported by the editor and how the tree can be structured. This information is parsed by the framework and a running editor is created based on this information. If required, additional editor-related features can be specified, e.g. which icons are used in the tree. The implementation will be based on the existing open source framework JSON Forms.",
                    "projectCode": "https://docs.google.com/document/d/130uhopJUQk2jJTvV6AUAHujbX8TqjKm2XlNVpzImhBg/edit?usp=sharing"
                },
                {
                    "title": "A4MCAR: A Distributed and Parallel Demonstrator for Eclipse APP4MC",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6112006629228544/",
                    "content": "Distributing software effectively to multi core, many core, and distributed systems has been studied for decades but still advances successively driven by domain specific constraints. Programming vehicle ECUs is one of the most constrained domains that recently approached the need for concurrency due to advanced driver assistant systems or autonomous driving approaches. To answer the needs of automotive industry in this manner with an open-source approach, recent studies have been made such as the Eclipse-based APP4MC platform. Although APP4MC provides sufficient tooling in parallel computing for automotive domain, the demonstration and evaluation of its results would improve its performance and allow to investigate the optimization of goals such as resource usage and energy consumption. With the project, software distribution challenges for such automotive systems should be analyzed upon instruction precise modeling, affinity constrained distribution, and reducing task response times achieved by advanced software parallelization. Advanced software parallelization will be achieved on a remote controlled demonstrator car that will have a distributed and parallel architecture.",
                    "projectCode": "https://mozcelikors.github.io/a4mcar/content/intro.html"
                },
                {
                    "title": "Add support for Shapes Constraint Language (SHACL) for Eclipse RDF4J",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5345666620456960/",
                    "content": "Shapes Constraint Language (SHACL) is a data modelling language which is used to validate RDF graphs against a set of conditions.those conditions are represented as shapes and different other constructs in an RDF graph.The purpose of this project is to add support for Shapes Constraint language in Eclipse RDF4J.This new feature gives the users the ability to describe and constrain the content of RDF graphs using SHACL.Data against the shapes are validated inside the SHACL feature for example, if an input shape does not match with existing rules then it will be indicated.Shape validation process is optimised and tested using suitable test-cases to get the highest performance.This feature is a minimum useful subset of SHACL and it gives support to the shapes constraint language inside RDF4j framework.It will be built in accordance with W3C(World Wide Web Consortium) Recommendations and Eclipse Distribution License.",
                    "projectCode": "https://gist.github.com/heshanjse/a081be9902458e909b2e411fbb8bac82"
                },
                {
                    "title": "ChemClipse - Integrating R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4962628283662336/",
                    "content": "ChemClipse is a solution developed under The Eclipse Foundation to explore and visualize analytical data of Chemistry from more than one source applications. R programming language is mostly used by researchers for statistical and analytical applications. It leverages systems not only by providing statistical tests and models but also by strengthening with methods to manage and manipulate large amount of information. ChemClipse will benefit with this capability.During Google Summer of Code-2017, I intend to systematically introduce fundamental R capabilities to ChemClipse. My plan is to utilize RJ open source library and provide interactive console as well as scripting windows for users. I am going to additionally support it by building a prototype of GUI, for users with non-programming skills, which will be based on the pipeline laid out for interactive console window.The users will require programming skills in R language for using interactive console. This risk can be mitigated by extending console functionalities and enhancing prototype of GUI. Thus, users not having programming skills can also benefit.",
                    "projectCode": "https://medium.com/@hitesh.gaur/google-summer-of-code-2017-final-report-6003c4bc982e"
                },
                {
                    "title": "Eclipse CHE: Data Source plugin for Eclipse Che 5",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6197195963367424/",
                    "content": "Rewriting the Data Source plugin for Eclipse Che 5 using the previously used plugin used in Eclipse Che 3",
                    "projectCode": "https://medium.com/@sudarakayasindu/gsoc-2017-data-source-plugin-for-eclipse-che-5-743235de3f6c"
                },
                {
                    "title": "Eclipse CHE: Java Plug-Ins for code assist/checkers",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4568930374909952/",
                    "content": "This document have an description about who I am and one brief description about the project Eclipse CHE: Java Plug-Ins for code assist/checkers which consists in a implementation plan of the plug-ins on this IDE.",
                    "projectCode": "https://github.com/saravidinha/Che-JavaPlugins/blob/master/GSoC2017.md"
                },
                {
                    "title": "Eclipse Kapua: IoT gateway simulation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6399202233942016/",
                    "content": "The goal of my project is to create a data model close enough to the reality, manage to interface it with an existing gateway simulation (that would be the Kura simulator of the Kapua project)  and finally make the data available through the Kapua Cloud platform. Afterwards, a GUI interface is to be implemented to give the possibility to visualise data and change the parameters of the model as desired.",
                    "projectCode": "https://github.com/arthurdeschamps/kapua-iot-gateway-simulation"
                },
                {
                    "title": "Eclipse OMR: Teach memcheck which regions of memory are accessible",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5762172684599296/",
                    "content": "Garbage collector does the job of allocating the objects in memory heap, checking them if they are alive i.e., if they are referenced from any other alive object and finally removing them if they are no longer alive.  Valgrind is a memory checking tool that detects memory problems such as leaks. However, it is unable to understand which areas of our JVM memory are accessible (such as identify user space). My goal is to teach it which regions are available thereby detecting memory issues more accurately.This is done by using memcheck API to tell memcheck about allocated memory pool, inform it when new regions are added and destroyed and inform it of individual objects created and destroyed in the those regions (in the pool). Garbage collector also doesn't track individual objects that memcheck needs to know while freeing, and this project also solves that problem by storing them globally on allocation and removing them on free. This is implemented across all GC schemes in OMR.Code: https://github.com/eclipse/omr/pull/1311/Docs: https://github.com/eclipse/omr/blob/master/doc/Valgrind%20Memcheck%20API.mdHeader: https://github.com/eclipse/omr/blob/master/gc/base/MemcheckWrapper.hpp",
                    "projectCode": "https://github.com/eclipse/omr/pull/1311/"
                },
                {
                    "title": "Improve PCA functionality in ChemClipse",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4534467557326848/",
                    "content": "ChemClipse is program for processing mass spectra and chromatograms. Chromatography and mass spectrometry techniques are widely used tools for life sciences, forensics as well as for quality control issues. ChemClipse is based on the Eclipse Rich Client Platform (RCP). ChemClipse offers tools for PCA (principal component analysis). PCA is statistical method used for reducing the number of variables and to find dependent groups of samples. Chromatograms which are processed by PCA can be easily compared then.Tools which are already included in ChemClipse program offer the following functionality for the data evaluation via PCA: loading of data from ocb files,processing of those data and visualization of resultsResults can be displayed in a peak intensity table editor, two-dimensional plot or a chart which compares error residues.My main goal is to make this process more user friendly, intuitively and to add new ways to display results. I also want to improve a stability and performance.",
                    "projectCode": "https://docs.google.com/document/d/1T345gtNlYVwcZ9uAqC4JfiEKzmUaHaGV4OQBXuHTaJE/edit?usp=sharing"
                },
                {
                    "title": "UI Modernisation (Developer Statistics)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6562100411367424/",
                    "content": "The goal of this project is to further optimize the user interface. The structure of the overview pages shall be improved. For a better structure, the collected data shall be presented in own UI sections. Last but not least, the current Developer Statistics dialog will be moved to an Eclipse view.",
                    "projectCode": "https://docs.google.com/document/d/e/2PACX-1vQWKd01l_QWFtqX6fvZwcuegmgJBxiRkEm8eI1e1jFhzK8zsrzkHpWTwXQAwnFKRTfRNfU0tJBMNYd-/pub"
                }
            ],
            "techStack": [
                "java",
                "geo",
                "iot",
                "che",
                "ide"
            ]
        },
        {
            "title": "The FreeType Project",
            "orgLink": "http://freetype.org",
            "projects": [
                {
                    "title": "Adding support for Type 1 fonts to Adobe CFF Engine",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5183742326865920/",
                    "content": "Thanks to Adobe's contribution of their CFF engine, FreeType has excellent rasterization of CFF fonts. However, Type 1 fonts, a similar PostScript font format, has relatively poor rasterization results. This is due to Type 1 being a legacy format, coupled with lack of maintenance for the corresponding module in FreeType. By extending the new CFF module, we can leverage its high quality output for an old format like Type 1.",
                    "projectCode": "http://lists.gnu.org/archive/html/freetype-devel/2017-08/msg00148.html"
                },
                {
                    "title": "GSoC 2017 Proposal - Kushal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6350994178834432/",
                    "content": "For a widely used library like FreeType, a test framework to check font rasterization is a must have.\nHaving a test framework to test the output of the library avoids many possible errors in early-stage.\nThe project is based on enabling the programmers visualize what exactly is changing and helping them decode why is it changing.The working of the Test_Framework1.Generating glyph images (using libpng) for both \"base\" and the \"test\"(developer) version of the    FreeType library. This is done by linking both version's DLL to the code.2.Comparing the images pixel by pixel and making a sprite sheet for each of the glyph.\nEach image in the sprite sheet corresponds to an effect after comparison.3.An web interface is generated which lists all the glyphs that are rendered incorrectly in the 'test' version. Selecting a particular image will animate the glyph. (Using the concept of CSS Sprite Sheet Animation)\n(Various animation effects used as per the needs of the developer.)All the code is written in ANSI C.",
                    "projectCode": "http://lists.nongnu.org/archive/html/freetype-devel/2017-08/msg00154.html"
                }
            ],
            "techStack": [
                "fonts",
                "opentype",
                "c",
                "library"
            ]
        },
        {
            "title": "The GNU Project",
            "orgLink": "http://www.gnu.org",
            "projects": [
                {
                    "title": "[GNU Wget] Design and implementation of statistics module",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5644180000866304/",
                    "content": "At the end of the project, the following objectives should be met:",
                    "projectCode": "https://gitlab.com/gnuwget/wget2/wikis/%5Bgsoc-2017%5D-final-report-:-design-and-implementation-of-a-statistics-module"
                },
                {
                    "title": "[GNU Wget] Design and Implementation of Test Suite Using Libmicrohttpd",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5018961074716672/",
                    "content": "At the end of the project, the following objectives should be met: Wget2 will use Libmicrohttpd, a small but powerful C library of HTTP server code, on all of its test suite.",
                    "projectCode": "https://drive.google.com/drive/folders/0B4yUFvLvAUANLU10X19qckZ6UkE?usp=sharing"
                },
                {
                    "title": "GNUstep - Make WebCore run on top of GNUstep",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6384501231976448/",
                    "content": "A longstanding problem in the GNUstep stack has been the absence of a web browser, due to the lack of a modern and feature-complete backing web engine. This proposal aims to make WebCore (WebKit's layout engine) render web pages on top of GNUstep's libraries. To do so, it expects to achieve a balance between adapting parts of WebCore to the GNUstep environment and adding functionality to GNUstep to support WebCore. It also aims to document in great detail the challenges (present and future) to having WebKit fully functional on GNUstep.",
                    "projectCode": "https://gist.github.com/theiostream/7b9e83997320ccade6b5ec749cdc3573"
                },
                {
                    "title": "Guix rewrite build daemon in Guile Scheme",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5913865560784896/",
                    "content": "This project proposes to replace the existing C++ guix-daemon with one implemented in Guile Scheme, for purposes of hackability and unity of code (and learning, of course).",
                    "projectCode": "https://lists.gnu.org/archive/html/guix-devel/2017-08/msg00267.html"
                },
                {
                    "title": "Improving Kawa's gnu.bytecode using ObjectWeb ASM",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5477373134766080/",
                    "content": "The goal of this project is to improve the gnu.bytecode library by creating a version of it which uses ObjectWeb ASM to generate classfiles, rather than generating classfiles from scratch, byte by byte. Reimplementing gnu.bytecode on top of ASM will reduce gnu.bytecode's complexity, and it will allow gnu.bytecode to have more features.",
                    "projectCode": "https://gitlab.com/tombousso/gnu-bytecode2"
                },
                {
                    "title": "Improving the Internal Structure of Chords",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6501081542557696/",
                    "content": "LilyPond's internal representation of chords is limited. As of now, it can mostly only represent the individual notes themselves that make up the chord. In addition to a chord's specific notes, there are numerous musical characteristics that define a chord. The goal of this project is to design a representation of chords that carries not only information about the specific notes, but other musical and semantic information important to the chord as well.",
                    "projectCode": "https://github.com/charlesrwinston/lilypond_chords/commits/dev/crw_chordsemantics?author=charlesrwinston"
                },
                {
                    "title": "Javascript Backend for Gnu Guile",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6661485954596864/",
                    "content": "To implement a Javascript backend to Gnu Guile, capable of compiling programs for execution in a modern web browser. This proposal completes work started as a Summer of Code project in 2016.A Javascript Backend will allow Guile users to run Guile Scheme, and other Guile based languages, in modern browsers merely by changing the build process for their programs. Usings the tools already built into Guile, this allows Guile to act as the full stack for small scale web sites, and provides a path for Guile based software like GNU Lilypond to be run on the web.It also provides further validation of Guile's Compiler Tower design, showing that backends can be written as easily as front ends.In a previous summer of code, I was able to compile a large portion of the cps language to Javascript and ported a large section of boot-9 (Guile's basic prelude), which meant I could run programs of some complexity, including using continuations for search, and mutually recursive numerical programs. This project will take it from an interesting toy to something we could confidently include in Guile.",
                    "projectCode": "https://lists.gnu.org/archive/html/guile-user/2017-08/msg00070.html"
                },
                {
                    "title": "JavaScript for info-style navigation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4714203348729856/",
                    "content": "The info program is very bare-bones (no fonts or images). On the other hand, the info program has a number of conveniences for browsing documentation, and the keyboard-centric user interface is very efficient.The main goal is to re-implement the user-interface features of the terminal-based info program (such as convenient keyboard navigation from a document), but in the context of a web browser displaying xhtml.The features of the info program that we would like to replicate in JavaScript include:",
                    "projectCode": "http://mathieu.lirzin.emi.u-bordeaux.fr/2017/08/25/gsoc-final-report/"
                },
                {
                    "title": "Multiple qualities of video (GNU MediaGoblin)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5497506330836992/",
                    "content": "GNU MediaGoblin is a well known free software media publishing platform where people can see and share their media. Even though we can think of it as an alternative to YouTube or SoundCloud, there are some missing features. The primary goal of this project is to improve the existing video player by adding an option for multiple resolutions.During the start of this project, I plan to work on transcoding the uploaded video into possible multiple qualities like 360p, 480p, 720p, 1080p and 4K. But there is a glitch here because transcoding the video into so many qualities may take too much time.Hence, I plan to use Celery's prioritized tasking with Rabbitmq to tackle this problem. The video will be rendered to the user just after the video is transcoded to 480p, and then subsequently the option for different qualities is given as and when the video is transcoded to that quality.At the end of the project, I will be handling the front-end part of the project where the option to choose different resolutions will be added to the video player. I also plan to extend on the idea where if the user's internet speed is low at page load, then a lower quality of the video should be rendered.",
                    "projectCode": "https://lists.mediagoblin.org/pipermail/devel/2017-August/001563.html"
                },
                {
                    "title": "Proposal GNU Ring project Olivier Grégoire",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5836252280520704/",
                    "content": "I will work on the GNU Ring project. This project is, at the moment, unstable due to a lack of automated tests. Only a part of the code is tested.I Need to improve this.",
                    "projectCode": "https://gasuleg.github.io/gsoc2017/final_report/2017/08/19/Final-Evaluation.html"
                },
                {
                    "title": "Ring - Create a C++ plugin for Ring",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5704614754123776/",
                    "content": "The plugin will read incoming messages and detect a particular sequence (keyword). The sequence is a written message in some scripting language (to be determined). The language allows using Ring's API (examples: camera selection, image/video sending, external commands, etc.).",
                    "projectCode": "https://github.com/SimpCosm/ring-client-iot/wiki"
                },
                {
                    "title": "Ring: NodeJS Plugin for Seamless Cross-platform Client Development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6532521776906240/",
                    "content": "A big problem impeding Ring development is developing  (and providing support for) different Ring clients running on disparate systems. What this means is that every time we want to add a feature, we have to figure out how to do it on each OS.In this project, I will add a NodeJS Wrapper around the  Ring Daemon (written in C++) that will convert client calls to appropriate native calls. My work will lead the way to a \"Write once, run anywhere\" kind of client, which will use the APIs I will expose as part of my project.",
                    "projectCode": "https://gerrit-ring.savoirfairelinux.com/#/q/owner:%22Asad+Salman+%253Cme%2540asad.co%253E%22"
                },
                {
                    "title": "wget2 - Design and implementation of a framework for plugins",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5545264622338048/",
                    "content": "Ability to extend wget for a paritcular purpose using dynamically loadable modules would be a nice addition.(Reference idea)",
                    "projectCode": "https://gitlab.com/akash_rawal/wget2/wikis/GSoc17"
                }
            ],
            "techStack": [
                "c",
                "guile",
                "python"
            ]
        },
        {
            "title": "The Honeynet Project",
            "orgLink": "https://honeynet.org/",
            "projects": [
                {
                    "title": "Android Sandbox Detection and Countermeasure Proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5442317074825216/",
                    "content": "Many Android apps are using sandbox-detection techniques, and here is an example. To make things worse, there are malware using the sandbox-detection techniques in order to escape from being detected by automatic dynamic app testing services and attack real users only, according to a study from Kim, Mijoo, et al., 2016. As a result, three research questions can be raised:The goal of the Android sandbox detection and countermeasure project is solving the problems mentioned above. This can be separated into finer stages:",
                    "projectCode": "https://yzygitzh.github.io/gsoc/2017/08/23/gsoc-2017-results.html"
                },
                {
                    "title": "Automated Malware Relationships Detection Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5236777925214208/",
                    "content": "The increase in volume and diversity of malware attacks has created a difficult situation for security analysts. \nNow more than ever, automatic systems capable of large-scale data analysis and aggregation of multiple\nsources have become an industry necessity. Malware analytics is no longer the realm of the individual human analyst. \nThe amount of newly collected malware samples grows every year and there is no sign that this trend is nearing its peak. Defending and fighting against malicious attacks requires tools and techniques to recognize their origin, family, actor, purpose and modus operandi. In this project, I will develop a system that can use a wide range of malware analytic outputs (source code, DNS/ASN data, peinfo results, yara rules, IPs, domains etc.) to automatically detect relationships  between malicious objects in a database and assign a score to each detected relationship. This system should accept user requests for analytic jobs and utilize distributed machine learning techniques and tools in order to extract knowledge out of the malware-related Big Data available. The system output for the analyst should be a graphical representation of the generated results.",
                    "projectCode": "https://www.holmesprocessing.com/gsoc/#portfolioModal6"
                },
                {
                    "title": "Building  examples services for Holmes processing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5867879077511168/",
                    "content": "Holmes processing is a platform for large scale malware analysis. To allow for scaling and performance gains, this has required multiple techniques to include microservices, docker, virtual machine, external message queues, and RESTful communication. While this is great for someone who is familiar with these design patterns, it increases the complexity required for new developers to extend the project. So creating templates for writing services will make it easier for newcomers to get started.The goal of this project is",
                    "projectCode": "https://www.holmesprocessing.com/gsoc/#portfolioModal5"
                },
                {
                    "title": "Conpot improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6182219680841728/",
                    "content": "Conpot is a honeypot that handles a number of protocols (including IPMI, SNMP, BACnet, modbus and s7comm), which are usually used in industrial applications/environments. Conpot is extensible to multiple services and devices. System definition occurs through XML  files, and protocol emulation is implemented using Python.In this project, we plan to improve Conpot in three aspects. First, we are going to resolve issues and fix bugs reported by Conpot users. Second, we would like to enhance our protocol stacks. Third, we want to make Conpot more versatile and support new protocols like CIP.",
                    "projectCode": "https://github.com/mushorg/conpot/commits/master?author=windflyer"
                },
                {
                    "title": "Glutton Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4518801798332416/",
                    "content": "Author of glutton have proposed some new functionalities to be added in Glutton, like:I will make code for those functionalities.\nFurthermore I want to add the support for https MITM in Glutton and a management interface that can help the administrator to track the number of established connections​ ​ or connections per services, so that they have control over their honeypot. Admins will also be able to terminate a specific connection, if it gets into too much mischief.",
                    "projectCode": "https://gist.github.com/furusiyya/38e8ca7963fd94ffc253e8b22e3338f2"
                },
                {
                    "title": "Holmes Framework to Automate Advanced Analytics",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5859375579136000/",
                    "content": "In this project I will design and develop a semi-generic interface that enables Holmes Processing to manage the execution of advanced statistical and machine learning analysis operations. The system will have four core parts: core, analytic engine, rendering, and analytic services.The core will receive and schedule taskings as well as manage their execution and monitoring their state. It will also take care of the backend management necessary for the analytic engines.The analytic engine will provide a modular way to connect Machine Learning and statistical frameworks to the core and services to provide a generic way to connect to various technologies and vendors like Apache Spark and TensorFlow.Rendering will provide ways for humans to interact with the system by providing a API and website to display running jobs as well as their schedules and results.Analytic services provide the logic for the Machine Learning task. They should be able to daisy chain jobs together to leverage multiple engines at once, provide all necessary configuration for the job and the execution as well as an RESTful interface for communication.(Quoted and extended from the official Honeynet idea page)",
                    "projectCode": "https://www.holmesprocessing.com/gsoc/#portfolioModal4"
                },
                {
                    "title": "Long term analysis",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6271040409829376/",
                    "content": "Integrating the existing Longcuckoo into the latest version of Cuckoo Sandbox so that Cuckoo Sandbox long term analysis will be available to all Cuckoo Sandbox users.",
                    "projectCode": "https://gist.github.com/RicoVZ/a93639a94339a6a1e04dc223ca7c6eb9"
                },
                {
                    "title": "Mitmproxy Core",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5195898158055424/",
                    "content": "Project type\n Improve existing toolProject goal\nSpend the summer working on mitmproxy's core and its addons!Improving mitmproxy. Adding various functionalities like, Map remote editor, Session store. Also, improving the currently implemented features like streaming request/response.",
                    "projectCode": "https://github.com/mitmproxy/mitmproxy/commits?author=ujjwal96"
                },
                {
                    "title": "Mitmweb Improve",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4789821079814144/",
                    "content": "Mitmweb is now shipped with our releases, supporting most of the fundamental features. However, some important features have not been brought to mitmweb yet. My plan for this summer is to make mitmweb have equally powerful functions as our console interface, and also take the advantage of its flexible Web interface, bringing some awesome visualization features to it.",
                    "projectCode": "http://honeynet.org/node/1359"
                },
                {
                    "title": "Proposal to the Honeynet Project.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4604799257411584/",
                    "content": "Hello! Eventually it happened! I am happy to present you my final version of proposal. \nI have worked on it for last 2 weeks. I did all I could to make it interesting, informative and just nice. So, I hope you will enjoy :)The project I am proposing is just fun. There is everything I like: a lot of qualitative Python code, interesting asynchrony, interaction with network protocols.\n   I have to implement Imap capability, convert the project to Python 3 and implement some auth mechanisms for other protocols. By the end of each month I'll finish one task. 1st month - imap capability, 2nd - porting on Python 3, 3rd - auth mechanisms implementation.I hope my summer work will help Heralding to make a step forward.\nImap capability implementation will cause implementing other network capabilities, increasing the number of supported auth mechanisms will cause implementing more auth mechanisms and porting the project to Python 3 will attract new contributors for Heralding.Prosperity to Heralding! Let's rock! :)",
                    "projectCode": "https://honeynet.org/node/1360"
                },
                {
                    "title": "Protocol and adversary identification in Go",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5378892487458816/",
                    "content": "When a client is connecting to a honeypot server, it is usually not legitimate traffic. However, as malware is always trying to be stealthy, the honeypot should make few assumptions about who it's talking with and how it should respond in order to keep the conversation going. This project would aim at creating a library to instruct a honeypot on how to proceed in such a situation by analyzing the traffic with different ways and coming up with the most likely protocol that could be used. This should help the honeypot gain deeper insight into the current landscape of malware on the internet.",
                    "projectCode": "https://github.com/mushorg/go-dpi"
                },
                {
                    "title": "SNARE/TANNER",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6115488505528320/",
                    "content": "SNARE is a web application honeypot sensor attracting all sort of maliciousness from the Internet. The web page is generated by cloning a real web application and injecting known vulnerabilities. SNARE connects to TANNER, a remote data analysis, and classification service, to evaluate HTTP requests and composing the response then served by SNARE.",
                    "projectCode": "https://github.com/mushorg/tanner/wiki/GSoC-2017-Work-Submission"
                }
            ],
            "techStack": [
                " python",
                "javascript",
                "golang",
                "android",
                "network stack"
            ]
        },
        {
            "title": "The Java Pathfinder Team",
            "orgLink": "http://babelfish.arc.nasa.gov/trac/jpf/",
            "projects": [
                {
                    "title": "Increasing SPF Performance with Bounded Static Symbolic Execution",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4719452335636480/",
                    "content": "Improving the performance of symbolic execution to make it scale to industrial-sized programs is an important current issue. Veritesting provides a practical solution by combining the advantages of static symbolic execution (SSE) with those of dynamic symbolic execution (DSE). While Avgerinos et al. showed veritesting allows large-scale testing at the X86 binary level, it can also be applied to improve the performance of dynamic symbolic execution at the Java bytecode level. Symbolic PathFinder (SPF) performs symbolic execution for Java programs at the bytecode level. In this project, I plan to work on extending Symbolic PathFinder (SPF) to perform bounded static symbolic execution.",
                    "projectCode": "https://gist.github.com/vaibhavbsharma/ec4442788fcbb33a4dd00792e1d12875"
                },
                {
                    "title": "Java StarFinder: Symbolic Execution with Separation Logic for Testing and Verifying Heap-manipulating Programs.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4789313736802304/",
                    "content": "Symbolic PathFinder (SPF) has been very successful in testing and verifying Java bytecode programs with numeric inputs. However, its capability is very limited when coping with programs that have heap data structures. The underlying lazy initialization algorithm exhaustively enumerates all heap objects that can bind to the structured inputs accessed by the program. This enumeration may identify many invalid heap configurations that violate properties of the data structures in the heap, which leads to a huge amount of false alarms.We aim to tackle this problem by using separation logic, a well-known assertion language designed for reasoning about heap-manipulating programs. We will build a system, Java StarFinder (JSF), that enables users to describe properties of the data structures in the heap using separation logic. JSF is a symbolic execution engine, built on top of SPF, that generates path conditions (PCs) in the form of separation logic. These PCs are checked by a solver for satisfiability and test input generation. In addition, JSF can verify program correctness by collecting PCs satisfying some given preconditions and verifying if these PCs satisfy user-provided assertions.",
                    "projectCode": "https://github.com/longph1989/jpf-star"
                },
                {
                    "title": "jpf-nas",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5012310720512000/",
                    "content": "Extending jpf-nas tool.",
                    "projectCode": "https://bitbucket.org/jayton/jpf-nas-gsoc2017/wiki/Home"
                },
                {
                    "title": "Optimize GREEN’s caching for satisfiability and model counting when using SPF",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6505791108415488/",
                    "content": "Many symbolic program analysis techniques use satisfiability modulo theory (SMT) solvers to verify properties of programs. SMT solvers can provide solutions quicker if they cache their results. GREEN, which is currently integrated into Symbolic Pathfinding (SPF), is a promising SMT\nmemoization solution. The project entails (a) optimization of GREEN's satisfiability checking, (b) improving the model counting and (c) incorporating unit propagation into GREEN.",
                    "projectCode": "https://bitbucket.org/Developer_Jan/gsoc_2017/wiki/Home"
                },
                {
                    "title": "Program Repair via Symbolic Execution-Derived Constraint Characterization",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5269591475355648/",
                    "content": "The Symbolic Execution (SPF) extension for NASA’s Java Pathfinder (JPF) has been used to generate quality test cases by symbolically executing code and using the derived constraints to find test values which will follow each feasible program path.A similar idea views the derived constraints as a partial specification of correct program behavior and uses this data to guide program repair.  This turns program repair into a search problem over the space of code snippets characterized by constraints derived via symbolic execution, the “semantic search” problem.  Previous work in this area was done exclusively with C programs, and the extension of this work to Java would be of major benefit for program repair research.For GSoC, I propose to use SPF to empirically quantify the degree to which such an approach is possible using currently-existing open-source Java programs, create functionality-searchable database of Java code snippets, and use this with existing efforts for search-based program repair.",
                    "projectCode": "https://github.com/CanonicalSearchAndRepair/CanonizedSearch"
                },
                {
                    "title": "Verification and Testing of Heap-based Programs with Symbolic PathFinder",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4984409404997632/",
                    "content": "Symbolic Pathfinder (SPF) is an open-source symbolic execution tool, based on the NASA Java Pathfinder (JPF) model checker, which is used in research and industry labs. It executes Java bytecode using a custom JVM to perform its analysis.It currently uses lazy initialization, a brute-force enumeration of all heap objects that can bind to the structured inputs accessed by the program. This explicit enumeration may lead to a huge amount of false alarms.We propose to explore alternative ways of representing constraints over the heap. This would allow SPF to avoid a complete enumeration of all the possible cases, eliminating the ones violating the data structures properties. We want to focus in particular on separation logic and see if it brings an improvement compared to the lazy initialization or to languages like [1].",
                    "projectCode": "https://github.com/Niols/GSoC17"
                },
                {
                    "title": "Visualization of Execution Traces",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4886274234122240/",
                    "content": "Multithreaded programming is becoming a mainstream programming practice, while multithreaded programming is difficult and error prone. jpf-trace-server, an extension of Java PathFinder (JPF), can store and analyze traces. The error traces caused by deadlock can also be viewed in a new shell panel from jpf-shell.In this project, we will develop jpf-trace-server to trace the execution of the threads and to provide feedback to the programmer to help them fix the bugs. Inspired by previous work on visualization in JPF, we would like to show the thread interleavings as traces in a new panel of jpf-shell. We would like to show the source code in the panel along with the transition information. The users should be able to walk through each transition of a selected error trace and the corresponding source code where it is executed.",
                    "projectCode": "https://bitbucket.org/qiyitang71/jpf-visual/overview"
                }
            ],
            "techStack": [
                "java",
                " jvm",
                " android",
                " distributed systems"
            ]
        },
        {
            "title": "The Julia Language",
            "orgLink": "http://julialang.org/",
            "projects": [
                {
                    "title": "A Wrapper for the FEniCS Finite Element Toolbox",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6267564707545088/",
                    "content": "We will create a wrapper for the FEniCS toolbox in Julia, using PyCall.jl , to allow Julia users direct access to the FEniCS functionality. This will allow existing users to access more features in Julia. Furthermore, it will help with the adoption of Julia across the scientific community, as more packages and libraries will be on offer, making it an attractive option to them.",
                    "projectCode": "https://gist.github.com/ysimillides/997f1a3337d716e87a08b18eb34642ca"
                },
                {
                    "title": "An Artificial Neural Network Differential Equation solver for Julia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4733837523288064/",
                    "content": "The purpose of this project is to develop a flexible library of NN solvers (NeuralNetDiffEq.jl) which are able to utilize parallelization, and plugs into the DifferentialEquations.jl ecosystem giving user an easy option to switch to these methods. \nThe problem to be solved and advantages of the proposed approach are discussed in the Introduction of the proposal. The library will implement as much of DE solver interface features we have in julia along with some integration with other related packages. The goals and timeline for the project are also discussed in the proposal.\nI have a single ODE solver as a prototype and code can be checked here.",
                    "projectCode": "https://github.com/JuliaDiffEq/NeuralNetDiffEq.jl"
                },
                {
                    "title": "Efficient Finite Difference Discretizations of Partial Differential Operators",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6364480376143872/",
                    "content": "JuliaDiffEq is the most popular github organization for solving differential equations in Julia.Currently, it has an assorted collection of Ordinary Differential Equations (ODE), StochasticDifferential Equations (SDE) and Algebraic Differential Equations (DAE) solvers.But currently, there is no support for Partial Differential Equations (PDEs) which form an integral class of Differential  equations  found  ubiquitously  in  natural  sciences  and  engineering. PDEs  are generally solved approximately by discretizing them to form ODEs which can then be solved separately.A toolbox to solve a large family of scientifically-interesting PDEs is thus sought. In light of this, I propose to create a toolbox of methods for discretizing PDEs in Julia.",
                    "projectCode": "https://github.com/JuliaDiffEq/DiffEqOperators.jl"
                },
                {
                    "title": "Hamiltonian Approximate Bayesian Computation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4740559549759488/",
                    "content": "Likelihood-based methods have many appealing features, but they are difficult to use for models which do not have a closed-form, tractable likelihood function. When these models can be solved numerically and simulated, indirect inference can be used. In a Bayesian context, this approach is called Approximate Bayesian Computation (ABC). ABC methods using an extension of the Metropolis-Hastings algorithm (Marjoram et al 2003) allow sampling from the posterior using simulation, but are not effective for larger dimensions. Hamiltonian Monte Carlo (Neal 2012) and related algorithms can overcome these problems when the likelihood is available. Hamiltonian Approximate Bayesian Computation combines the ABC methodology with the Hamiltonian approach.",
                    "projectCode": "https://github.com/DoriszAlbrecht/Bayesian_Examples.jl"
                },
                {
                    "title": "Image Segmentation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4557553811849216/",
                    "content": "Image Segmentation is described as one of the most important aspects of image processing. Image segmentation is the process of partitioning an image by essentially assigning every pixel to a specific set based on the properties of this pixel and its neighborhood and henceforth dividing the image into segments and getting a more meaningful representation of the image. It is generally used to detect boundaries and high-level features and as a preprocessing step for compression and object detection algorithms which are impractical if applied directly on the whole image. The proposal primarily concerns implementing many of the popular image segmentation algorithms in pure Julia in the existing module ImageFeatures.jl (or a new module). A proper documentation and a few tutorials showing the usage of these algorithms shall also be developed.",
                    "projectCode": "https://gist.github.com/annimesh2809/49871574c9bc1287a330d126c3953a24"
                },
                {
                    "title": "Image Segmentation and HOG features",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4982314668916736/",
                    "content": "I propose to",
                    "projectCode": "https://gist.github.com/tejus-gupta/6180d450ba57963916bed0df536cbe51"
                },
                {
                    "title": "Improving and demonstrating Julia statistical models' MCMC: CrossCat example",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5683453718691840/",
                    "content": "General-purpose statistical modeling tools such as OpenBugs and Stan allow using easy-to-build modular likelihood models to fit models to data through MCMC or other techniques. Crucial to the efficiency of such tools, especially as parameter dimensions increase, are tools like HMC, which allow use differentiation and/or conjugacy for continuous parameters, so that fitting is not solely a matter of getting lucky with random Metropolis-Hastings proposals. Yet some models, especially nonparametric ones, also require discrete parameters and/or hand-written jump steps; and existing tools for HMC generally don't play well with discrete parameters. My project is intended to generally improve the Julia toolchain for MCMC when there is a mix of continuous and discrete parameters. My work will be based on Mamba.jl; though when I can make something that will be useful to Klara.jl too, even better. To make that plan concrete, I'll be implementing CrossCat, a general-purpose nonparametric model for \"medium-size\" tabular data including missingness and various data types. (Roughly speaking, \"medium-size\" might mean p<1e3, n<1e5).",
                    "projectCode": "https://gist.github.com/jamesonquinn/48d632f246f9c271033c8da17c77104d#file-mu_results-svg"
                },
                {
                    "title": "Integration of Documentation facilities into the Juno IDE",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5799727878635520/",
                    "content": "Juno as an IDE (and, since the introduction of JuliaPro, the quasi-standard IDE for Julia) has matured quite a bit during the last years, but the integration of documentation facilities is still somewhat lacking. In particular, there is no way to search for docstrings and displaying them is limited to the console and inline documentation.\nThis proposal aims at implementing documentation search for local packages and improving their display in Juno.",
                    "projectCode": "https://julialang.org/blog/2017/08/gsoc-docs-in-juno"
                },
                {
                    "title": "Middlewares for common web application chores",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6482146642362368/",
                    "content": "Implementation of mid-level features - specifically routing, load-balancing, cookie/session handling, and authentication.",
                    "projectCode": "https://gist.github.com/sarvjeetsinghghotra/165fce3b5dd7288ccd7825134640c3d7"
                },
                {
                    "title": "Native Julia implementations of iterative solvers for numerical linear algebra",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6476815514206208/",
                    "content": "The IterativeSolvers.jl package is currently lacking some well-known iterative methods such as QMR and BiCGStab(l) for solving linear systems and IRAM and Jacobi-Davidson for eigenvalue problems. The first two methods are probably the last low-hanging fruit type of algorithms, while the latter two are quite specialized.Implementing Jacobi-Davidson and IRAM is important, since currently Lanczos is the only eigensolver available, which applies to hermitian matrices only. Jacobi-Davidson and IRAM are quite subtle to implement correctly and efficiently (they require specialized restarts for instance), which probably explains why they are currently not yet available.A benefit of having implicit restart available is that it can improve restarted GMRES as well.",
                    "projectCode": "http://stoppels.blog/posts/gsoc-2017-summary"
                },
                {
                    "title": "Native Julia Solvers for Ordinary Differential Equations Boundary Value Problem: A GSoC proposal",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6473487988293632/",
                    "content": "This is a proposal for the project \"Native Julia solvers for ordinary differential equations and algebraic differential equations\". There is no solver for ordinary differential equation (ODE) boundary value problem (BVP) yet in the JuliaDiffEq organization. I am going to implement native Julia solvers for ODE BVP problem. There are a number for advantages of Julia native solvers over calling C or Fortran's existing libraries via Julia's FFI, including the ability to use a wide variety of types in Julia like BigFloat for arbitrary precision, easier for people to contribute and better integrate with other packages in Julia ecosystem. The goals for this project are to implement BVP related data structures, a shooting method and a collocation method. Together, this contribution will help make Julia a viable environment for researchers and scientists to simulate models from boundary value problems.",
                    "projectCode": "https://gist.github.com/YingboMa/65dbe1a43564ab367408588467ccb671"
                },
                {
                    "title": "New Features for Flux.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6392166809075712/",
                    "content": "Flux.jl is a high-level neural network library in Julia, which has an intuitive API, easy to debug, and performant. One of the key features of Flux.jl is that it allows user to define a layer in Julia, using most Julia Array operations, while not to worry about size inference, grad calculations, etc. Unlike Knet.jl, a promising competitor of Flux.jl, which do all the tensor calculations from scratch with a lot of magics, Flux.jl simply transcompile the computation graph to mature backends like MXNet and TensorFlow. Thus, it can take the benefits of those advanced technologies and get a cutting-edge performance.Flux.jl is in alpha and lacks a lot of features before being actually useful. One of the problems is currently it only supports SGD optimizer without decay and momentum. It also only shows the progress during training, while saving checkpoints or doing custom evaluations once a while can help users to build a better model.After this program finished, Flux.jl will be able to:",
                    "projectCode": "http://blog.ylxdzsw.com/2017-08-29-gsoc-2017-report.html"
                },
                {
                    "title": "Optimization and Bayesian Techniques for the parameter estimation of Differential Equations",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5640556659081216/",
                    "content": "Differential equation models are widely used in many scientific fields that include engineering, physics and biomedical sciences. The so-called “forward problem” that is the problem of solving differential equations for given parameter values in the differential equation models has been extensively studied by mathematicians, physicists, and engineers. However, the “inverse problem”, the problem of parameter estimation based on the measurements of output variables, has not been well explored using modern optimization and statistical methods. Parameter estimation aims to find the unknown parameters of the model which give the best fit to a set of experimental data. In this way, parameters which cannot be measured directly will be determined in order to ensure the best fit of the model with the experimental results. This will be done by globally minimizing an objective function which measures the quality of the fit. This inverse problem usually considers a cost function to be optimized (such as maximum likelihood). This problem has applications in systems biology, HIV-AIDS study.",
                    "projectCode": "http://ayush-iitkgp.rhcloud.com/google-summer-of-code-2017/"
                },
                {
                    "title": "Parallel Graph development",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6144860981559296/",
                    "content": "I am interested in working on parallel graph algorithms and an efficient data structure to represent Graphs, which take advantage of Julia’s parallel environment. The data structure would be based on LightGraphs and all algorithms that I intend to code would be an addition to LightGraphs.jl . The algorithms would be Implementation of various research papers published and data structure would be such that it minimises overheads in parallel computations .",
                    "projectCode": "https://somil55.github.io/gsoc'17/"
                },
                {
                    "title": "Parallelism in Bio.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6299634423037952/",
                    "content": "Support parallelism in Bio.jl based on Dagger.jl",
                    "projectCode": "https://github.com/JuliaLang/julialang.github.com/pull/615"
                },
                {
                    "title": "Rebuilding Interact.jl with WebIO.jl",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4784638128029696/",
                    "content": "Interactive data exploration is an increasingly important component of data science. Interact.jl and Escher.jl are good libraries that have the potential to be extremely powerful for these tasks, but currently Interact only supports IJulia and Escher suffers some stability issues. WebIO.jl looks to be a promising path forward for building web based components that are created by or interface with Julia. Rebuilding Interact.jl on top of WebIO.jl will bring Interact beyond IJulia, to the Atom/Juno IDE and to desktop apps with Electron/Blink.jl. Additionally it should enable Escher.jl to reuse much of Interact, which will likely reduce Escher’s size and complexity significantly, increasing its stability. Furthermore, by removing its dependence on Jupyter and IPywidgets, Interact will gain flexibility to produce more complex UIs which intermix displayed data such as plots, and UI controls. Finally, I plan to add some automated UI testing which hopefully will assist in improving the stability of not just Interact and Escher, but potentially IJulia, Juno, and Blink as well.",
                    "projectCode": "https://jobjob.github.io/gsoc2017"
                }
            ],
            "techStack": [
                "julia",
                " javascript",
                "gpu",
                "c/c++",
                "llvm"
            ]
        },
        {
            "title": "The Libreswan Project",
            "orgLink": "https://libreswan.org",
            "projects": [
                {
                    "title": "Implement TCP Encapsulation of IKE and IPsec Packets",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5478532239065088/",
                    "content": "Currently, the IKE and IPsec use UDP encapsulation whenever faced with NAT gateways which do not allow ESP or IKE packets. But some NAT rules even drop the UDP packets, only allowing TCP streams to go through. TCP encapsulation can reach through to hosts behind such NATs. An initiator must always try to send IKE_SA_INIT over UDP first, and if there are a certain number of transmission fails then only it should fall back to TCP. Another thing to do would be to schedule checks for UDP so we can go to establishing the tunnel using UDP if it becomes available and tear down the TCP IPsec tunnel. The above two steps are to be done as TCP encapsulation adds overheads and has performance trade offs compared to UDP, therefore we should always prefer using UDP unless required otherwise. Once the TCP support is added, we need to look into enabling ESPinTCP support in the kernel. The kernel must be able to identify TCP packets where the first 4 bytes are zero and we must tell the kernel to process ESPinTCP packets. Everything else will be done by following the draft RFC draft-ietf-ipsecme-tcp-encaps-09.",
                    "projectCode": "https://libreswan.org/wiki/GSOC_2017:_Implementing_RFC_8229_%22TCP_Encapsulation_of_IKE_and_IPsec_Packets%22_for_Libreswan"
                },
                {
                    "title": "RFC-7427 Signature Authentication support to IKEv2 for Libreswan",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6740068286857216/",
                    "content": "Currently in IKEv2 , signature based authentication is per algorithm i.e., there is one for RSA digital signatures, one for DSS digital signatures (using SHA-1), and three for different ECDSA curves, each tied to exactly one hash algorithm.This design is cumbersome when more signature algorithms, hash algorithms, and elliptic curves need to be supported.\n RFC 7427 generalizes IKEv2 signature support to allow any signature method supported by PKIX and also adds signature hash algorithm negotiation.\nWhy is it important for libreswan and what problem does it solve?\nCurrently  Libreswan  only supports RSA as  the digitial signature authentication method. Therefore there exists a need for extension so that other methods, such as ECDSA or EDDSA can be used easily. Implementation of RFC 7427 would solve this problem as the new digital signature method is flexible enough to include all current signature methods (RSA, DSA, ECDSA, RSASSA-PSS, etc.) and add new methods (ECGDSA, ElGamal, etc.) in the future.",
                    "projectCode": "https://libreswan.org/wiki/Compliance_of_RFC_7427_-_Signature_Authentication_in_IKEv2"
                }
            ],
            "techStack": [
                "c",
                "python",
                " shell script"
            ]
        },
        {
            "title": "The Linux Foundation",
            "orgLink": "http://www.linuxfoundation.org/",
            "projects": [
                {
                    "title": "Add support to CUPS-FILTERS for enabling conversion to and printing of PCLm files supported by IPP everywhere printers.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5722648516493312/",
                    "content": "PCLm is a file format which is a light-weight subset of PDF which makes printing fast and efficient. It is streamable, i.e. can be printed page by page unlike PDFs, where PDF files require them to be loaded completely to the printer memory to be printed. Many cheap printers which are low on memory have this limitation of printing large PDF files, and here PCLm comes to the rescue. It also makes printing faster for high end printers. PCLm is also one of the standards for Wifi-Direct IPP printers. \nThe project aims at enabling PCLm printing using cups and cups filters to PCLm supported printers.",
                    "projectCode": "https://github.com/sahilarora535/cups-filters/wiki/Google-Summer-of-Code-2017-%7C-The-Linux-Foundation---Adding-PCLm-support-to-cups-filters"
                },
                {
                    "title": "Common Print Dialog",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5193723830861824/",
                    "content": "I intend to integrate the backend being developed as part of the common print dialog in libreoffice.The common backend ensures that all applications/toolkits receive the same information regarding the printers and use the same method for printing to those printers with the backend acting as a mediator.",
                    "projectCode": "https://yashsriv.org/2017/08/gsoc.html"
                },
                {
                    "title": "Common Print Dialog",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5877421957971968/",
                    "content": "This project aims to create a unified solution for printing in desktop and mobile environments. A well designed print dialog will help the users to find the right printers as well as the right printing configurations for documents. And this will happen in a way which is consistent with every platform and with every application within the platforms. The front-end of the print dialog will be ergonomic and written in Qt. The back-end will have the functionality for printing with CUPS, IPP or Google Cloud Print.This project will change the way millions of users print.",
                    "projectCode": "https://anshulgupta0803.github.io/common-print-dialog/"
                },
                {
                    "title": "Common Print Dialog for desktop applications and mobile devices",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6715861582741504/",
                    "content": "To make printing easy for the users of desktop systems and mobile devices, a well designed print dialog should be there where a user can easily find right printers and right options to get the desired print. This project aims at implementing a common print dialog that will enable users to print documents easily. This project has a UI component which will be implemented in a major toolkit (GTK, Qt) and the backend component of this project is divided into three parts namely CUPS backend, IPP Backend and Google Cloud Print Backend. This project aims at implementing these modules. More specifically, implementation of Google Cloud Print backend will include designing and implementing a module along with proper documentation and tests.",
                    "projectCode": "https://github.com/dracarys09/gcp-backend/wiki/1.-Google-Summer-of-Code-2017-%7C-Common-Printing-Dialog"
                },
                {
                    "title": "DBus activatable Print Backends and Common Libraries for the Common Printing Dialog",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5017841430429696/",
                    "content": "Goals: Design a dbus interface for the common print dialog(CPD). Switching over to a dbus interface for communicating to print backends would also make it more efficient, and easier to add new backends. Also, develop CUPS and IPP print backends for the CPD using the new CUPS API.",
                    "projectCode": "https://nilanjanalodh.github.io/common-print-dialog-gsoc17/"
                },
                {
                    "title": "Finding bugs related to the data races in Linux kernel",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6074673162878976/",
                    "content": "This project's goal is making the Linux kernel more error-proof through the detection of data races with the help of static verification tools. However, even the best verification tools can give false alarms and because of that this project would require extensive analysis of the verification results and communication with maintainers. Its desired result is finding the existing data races in Linux kernel and making steps towards their correction by maintainers.",
                    "projectCode": "http://linuxtesting.org/28-08-2017"
                },
                {
                    "title": "Finding bugs related to the memory errors in Linux kernel",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5485056025952256/",
                    "content": "Memory errors at the kernel of operation system are a kind of bugs that lead to grave consequences but are hard to detect. Debug and disclose of kernel memory corruptions often requires specially compiled kernel.I want to perform static verification of the Linux kernel latest release  on memory errors by LDV project environment.\nI'll analyse results of static verification, provide patches to kernel for true errors and offer improvement to LDV staff to reduce false alarms.",
                    "projectCode": "http://linuxtesting.org/27-08-2017"
                },
                {
                    "title": "Flattening non-static content (like filled forms) in PDF files for printing",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5482169807929344/",
                    "content": "At present, CUPS filter does not support printing the PDF files with dynamic form content. The dynamic form content includes digitally filled forms, tax forms or any kind of registration forms. When the user tries to print the PDF with filled forms, the content either gets vanished or is not displayed properly. CUPS uses a filter named pdftopdf to handle printing of PDF forms. This filter performs some manipulations on PDF file before printing it. These manipulations results into content loss of filled forms. This project aims at adding PDF form flattening support to pdftopdf filter of CUPS wherein, the filter will identify whether the PDF files contains dynamic content or not and if yes, then it will first convert the PDF into static content and then perform its manipulations. It includes adding the actual functionality in QPDF, a library that is internally used by pdftopdf filter for PDF file processing. And then using this functionality of QPDF library to perform the flattening work by the pdftopdf filter.",
                    "projectCode": "https://psmlbhor.github.io/whiteglass/2017/08/27/Google-Summer-of-Code/"
                },
                {
                    "title": "Performance Optimization / Android Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6045119761350656/",
                    "content": "WireGuard is already a fast, efficient VPN solution because it is implemented in the kernel and uses modern cryptography. While it supports parallel encryption and decryption of data packets, the implementation has been unstable in the past, and it does not scale well to datacenter or backbone-level performance.This project's goal is to improve performance and robustness by:Because of its statelessness and efficiency, WireGuard is well-suited to mobile applications. However, there is currently no official front end for mobile phones. A secondary goal of this project is to implement an Android application to create and configure a WireGuard interface using wg(8) and the Android VPN framework. After that, a patch for Android distributions will add WireGuard directly to the system VPN settings with a simplified configuration interface.",
                    "projectCode": "https://gist.github.com/smaeul/975a11083db0294ca93c2ec6a8df4010"
                },
                {
                    "title": "Qt based Common Print Dialog",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4643900639674368/",
                    "content": "To make printing easy for the users of desktop systems and mobile devices, we need a well-designed print dialog where one can easily find the right printer under the available printers, set general, printer-specific, and document-specific options, preview the printout, and send the job. But we also need consistency between applications i.e. printing should work the same way from every application, hence the plan to build a common print dialog that ships with the desktop environment itself and the dialog is called whenever one tries to print from any application on desktop or mobile system.",
                    "projectCode": "https://github.com/rithvikp1998/cpd/"
                },
                {
                    "title": "Userland implementation of WireGuard in Golang",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5030120205058048/",
                    "content": "WireGuard is a simple VPN solution, opting for speed and simplicity over cipher and protocol agility.\nThe end result is that the WireGuard codebase is smaller, simpler and hence easier to audit, than that of other existing solutions in both kernel space (IPSec) and userland (e.g OpenVPN).Currently WireGuard is implemented as a kernel module for performance reasons.\nHowever a number of reasons for wanting a userland implementation exists, among others:The ultimate goal of the project is to further WireGuard adoption.",
                    "projectCode": "https://gist.github.com/rot256/e4ba56cdff7e1bffe6e7e62c4cd9b85c"
                }
            ],
            "techStack": [
                "c",
                "c++",
                "cups",
                "mysql",
                "gtk"
            ]
        },
        {
            "title": "The MacPorts Project",
            "orgLink": "https://www.macports.org/",
            "projects": [
                {
                    "title": "Adding migrate action to port command",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4647824360734720/",
                    "content": "A MacPorts installation is designed to work with a particular OS and a particular hardware architecture. After major system changes like an OS upgrade or hardware change, currently, MacPorts users have to follow a set of manual migration instructions to ensure a smooth transition.The purpose of this project is to automate the processes described in the migration documentation, so that following the migration steps is no longer challenging for casual users or for anyone. The migration tool would install a new port command and using PortIndex, it would deactivate and reinstall the requested ports with variants.",
                    "projectCode": "https://github.com/macports/macports-base/commits/gsoc17-migrate?author=umeshksingla"
                },
                {
                    "title": "Bot and CI for macports-ports",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6525238720331776/",
                    "content": "Right now PRs have to be manually tested by commiters and some commiters aren't aware of new PRs at all.\nAlso certain information like whether the PR is submitted by the port maintainer have to be checked manually.I plan to implement a bot in Go dealing with PRs for macports-ports and utilize Travis CI to test commits and PRs.",
                    "projectCode": "https://github.com/l2dy/gsoc2017_mp#readme"
                }
            ],
            "techStack": [
                "tcl",
                "make",
                "git"
            ]
        },
        {
            "title": "The NetBSD Foundation",
            "orgLink": "https://www.NetBSD.org/",
            "projects": [
                {
                    "title": "Add multi-packages support to pkgsrc",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5493508521590784/",
                    "content": "Multi-packages support permits the generation of multiple binary packages\nfrom a single pkgsrc package.\nThis feature is needed to generate <package>-debugpkgs (packages\ncontaining debug symbols for <package>); improve organization and/or\navoid code duplication (e.g. tex-* packages and their corresponding\ntex-*-doc packages) and avoid extract, configure phases of certain\npackages multiple times.",
                    "projectCode": "https://github.com/iamleot/pkgsrc/compare/cb3b0aa4847aae82890947240bd9cec94ec3feb1...5e901b632927a3df75827b1e6e269af785025ab3"
                },
                {
                    "title": "LFS cleanup",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5000331385634816/",
                    "content": "Log-structured filesystem (LFS) is a reliable filesystem that suffers from critical bugs preventing its use. It's time to fix those.\nThe project aim is to fix deadlocks and races under heavy use and low free space, and modernize the codebase.",
                    "projectCode": "http://coypu.sdf.org/2017-08-29-LFS"
                },
                {
                    "title": "Make Anita support multiple virtual machine systems",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5311595181768704/",
                    "content": "This project aims at making Anita, a tool for automated testing of NetBSD, modular, provide support for other virtual machine systems like GXemul and Virtualbox and support testing for as many releases/ports (like NetBSD/evbarm-earmv7hf etc.) as possible. This also includes building releases, testing them and debugging the system files (written in C) to make them work. Currently, Anita only has support for qemu (and experimental support for running NetBSD as Xen DomU). Unlike BSD, Linux has a kernel module known as KVM, which allows a user space program to utilize the hardware virtualization features of various processors and can be utilized by qemu to provide “KVM acceleration” when the target architecture is the same as host architecture. The lack of such support makes qemu really slow on NetBSD. Testing system installation on a wide variety of platforms is very crucial for any organisation that’s into OS business. It can be a frustrating task to do that manually, but, if neglected can be a make or break situation for the OS (adoption/marketing). Automated testing with Anita makes the job a cakewalk. Support for Xen and Virtualbox will further enhance the capabilities of Anita.",
                    "projectCode": "https://bumblebeesky.tumblr.com/post/164549873777/wrapping-things-up"
                }
            ],
            "techStack": [
                "virtualization",
                "filesystems",
                "network stack",
                "arm",
                "mips"
            ]
        },
        {
            "title": "The ns-3 Network Simulator Project",
            "orgLink": "https://www.nsnam.org",
            "projects": [
                {
                    "title": "Enabling LTE CA handover to secondary cell",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5130326087041024/",
                    "content": "The goal of my project is implementation of handover to secondary cell in LTE with Carrier Aggregation.To make it possible I plan to:More detailed plan is provided in project proposal itself.",
                    "projectCode": "https://www.nsnam.org/wiki/GSOC2017Lte#Project_summary"
                },
                {
                    "title": "Framework for TCP Prague simulations in ns-3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5373072538337280/",
                    "content": "Recently, there has been a lot of interest in the research community (IRTF / IETF) towards parallely implementing and standardizing a new TCP extension called TCP Prague, which is targeted to be an evolution of Data Center TCP (DCTCP). DCTCP starves the throughput of other TCP flows (e.g., Reno, Cubic, etc) when they co-exist; so one of the goals is to ensure that TCP Prague can co-exist with other TCP flows without degrading their throughput. Although TCP Prague is still a work in progress, some related modules have been finalised and briefly experimented, such as: the Low Latency, Low Loss, Scalable throughput (L4S) service architecture, DualQ Coupled AQM, Modified ECN Semantics for Ultra Low Queueing Delay. Availability of these modules in network simulators like ns-3 is crucial to boost up the ongoing efforts of standardizing TCP Prague. In this project, the aim is to implement the above mentioned modules in ns-3. Additionally, the functionality of these modules will be tested, and the necessary documentation with some examples will also be provided.",
                    "projectCode": "https://tcp-prague-framework-gsoc-2017.github.io/"
                },
                {
                    "title": "Implementation of Token Bucket Filter and Heavy-Hitter Filter in ns-3",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5936345956483072/",
                    "content": "In PSNs, sometimes it is not possible to distinguish and manipulate different kinds of network flows. For example, we may want to give priority to some flows while limiting bandwidth of other flows or even perform packet classification. To solve such problems, we have a traffic control layer in ns-3 which intercepts the packets flowing between the L2 Net devices and any IP protocol. It uses several qdiscs like pfifo, HBT, RED, CoDel etc., in order to process these packets and perform scheduling or shaping. Currently the ns-3 traffic layer only contains traffic scheduling qdisc models (AQMs) and lacks realistic traffic shaping algorithms. This project aims to introduce the TBF and HHF algorithms into the ns-3 traffic control layer. TBF is a classless traffic shaper, that is used to control the flow rate or bandwidth of the throughput. HHF is a size-based qdisc that attempts to differentiate small and heavy flows. The goal is to catch the heavy flows and move them to a separate queue with less priority so that bulk traffic does not affect the latency of critical traffic.",
                    "projectCode": "https://www.nsnam.org/wiki/GSOC2017TBFAndHHF#GSoC_Wrap_Up_and_Final_Report"
                },
                {
                    "title": "Mobile IPv6 Implementation with LTE Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5437524965064704/",
                    "content": "MIPv6 is the base standard from the IETF for IP based mobility management in wireless networks. The next generation mobility management schemes are mainly following the protocol stack of MIPv6. Until today ns-3 – which aims to replace the aging ns2 and its associated old-featured simulators –  does not have even in its latest version a MIPv6 module that is fully compliant to the IETF specification. To fill this gap, I am going to implement a novel MIPv6 simulation model which can be integrated into ns-3.\nThe project idea aims at testing the code in different network scenarios, containing different link layer technologies such as Wi-Fi, WiMAX and LTE. The current implementation of LTE does not have support of IPv6 in ns-3. So, the idea of testing MIPv6 code into LTE would follow IPv6 support implementation in LTE first and then the MIPv6 support. So, ns-3 researchers can benefit themselves with the addition of this feature. \nThus, implementation of MIPv6 in ns-3 as the base mobility management solution and providing LTE support within it could help the current network researchers working on ns-3.",
                    "projectCode": "https://www.nsnam.org/wiki/GSOC2017MobileIp#Final_Report_for_Google"
                },
                {
                    "title": "ns-3 App Store",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6606597614731264/",
                    "content": "The ns-3 App Store project aims to support modularization of the ns-3 codebase and federation of development activities. Once this project is complete, ns-3 users will be able to download modules depending on their requirements. Developers can make use of the app store to upload new modules as well. The app store will support dependency management, patch management, bake integration, module grouping, regression testing and also a rating system.",
                    "projectCode": "https://gitpitch.com/abhijithanilkumar/ns-3-AppStore"
                }
            ],
            "techStack": [
                "c++",
                "python"
            ]
        },
        {
            "title": "The Processing Foundation",
            "orgLink": "http://processingfoundation.org",
            "projects": [
                {
                    "title": "Build system migration from Ant to Gradle",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5967477087404032/",
                    "content": "Currently, Processing for Android uses ANT scripts and android tool for building the project. The latest version of the Android SDK tools removes them, thus breaking the system. This project aims to transition to Gradle, a newer, modern build tool with a lot of room for a higher level customization of the build process as the internal build system.",
                    "projectCode": "https://procandsoc17.wordpress.com/2017/08/25/final-report/"
                },
                {
                    "title": "Easier Debugging and Development in the p5 Web Editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6347130318880768/",
                    "content": "This project aims to improve debugging and development in the p5 web editor by implementing autocomplete code suggestions and improving the existing console.",
                    "projectCode": "http://blog.jennnkagan.com/2017/08/19/google-summer-of-code-final-submission/"
                },
                {
                    "title": "i18n for Processing and p5.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5589277165486080/",
                    "content": "Work on expanding the community in other languages related to Processing software. In particular, work on both the Processing and p5.js i18n websites, by fixing issues of documentation and reference and make them available in Spanish online.",
                    "projectCode": "https://github.com/montoyamoraga/gsoc_2017"
                },
                {
                    "title": "Image Processing Library to ease differentiation of colors for Color Blind People",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5754905868369920/",
                    "content": "My proposal is to build a processing library to process images and ease differentiation of colors for color blind people. Color blind people cannot differentiate between certain values of colors in an image due to a defect in their eyes. This library aims to modify the colors in a given image using various algorithms (for different types of images) and ease the differentiation of colors for them. This will provide a complete platform to any future endeavors in the field. This project will work as a universal base for any image processing algorithms for color blind people.",
                    "projectCode": "https://gsocsarjak.wordpress.com/finalsubmission/"
                },
                {
                    "title": "Implementing New Developer Operations and Enhancing Current Ones in p5.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5217232200138752/",
                    "content": "This Project aims to address and pursue DevOps Issues of p5.js (#522, #94, #707), along with implementing an Issue Template for contributors.Expected end results would include a modularised build design of p5.js along with an option to download custom components of p5.js from the website; an automated release process of p5.js; and a standardised format of Issues.",
                    "projectCode": "https://github.com/processing/p5.js/wiki/Wrapping-Up-GSoC-2017-(by-@sakshamsaxena)"
                },
                {
                    "title": "Improvement to WebGL core for p5.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4639299119087616/",
                    "content": "I would like to work on stabilizing the WebGL core for p5.js. This would be done with an eye towards accessibility. Also, I would investigate the possibility of a restructuring of a large portion of the GL portion of the p5 codebase so that it can be built with future open-source contribution and clarity in mind.",
                    "projectCode": "https://mlarghydracept.github.io/GSOC17/"
                },
                {
                    "title": "p5.js addon and examples for spatial and data mapping.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6258464745586688/",
                    "content": "This proposal describes a project to build a set of p5.js tools around mapping with the specific purpose of being able to quickly and smoothly add a spatial layer to creative, interactive or visual sketches. The 2016 Processing Foundation Community Survey revealed that one of the most popular interests, when people used p5.js or Processing was for data visualization. Therefore, expanding this topic with more easy to use, capabilities, extensions, and examples could potentially augment even more the number of people interested in this environments and contribute to the Foundation's original purpose of making coding accessible for artists, designers, educators and other communities.",
                    "projectCode": "https://github.com/cvalenzuela/Mappa"
                },
                {
                    "title": "p5.js Web Editor:  Public Release and Online Community Building",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6389992481882112/",
                    "content": "There is an ongoing effort to create a browser-based editor for p5.js. I propose to help the current developers working to create a stable version of the p5.js Web Editor and to also to work on the community-oriented aspects of the new editor.",
                    "projectCode": "https://medium.com/@zrispo/a-free-to-use-classrooms-system-for-p5-js-5d7b455ded08"
                },
                {
                    "title": "p5.js.Sound Enhancements - Abstract Classes, Sound Design, and Composition",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4915582285643776/",
                    "content": "Processing and p5.js are accessible tools that can be easy to understand for the novice programmer and powerful enough for the experienced. With the intention of helping to diversify the potential users and uses of Processing / p5, this proposal outlines a series of enhancements to p5.js.sound, including new effects, presets, and modules for algorithmic composition. These developments will be useful and interesting to electronic musicians interested in visual art, visual artists interested in electronic music, sound artists, and any other potential user of Processing. These developments are inline with the vision of the tool, as they will add features without distracting from its definition as a “flexible software sketchbook”.",
                    "projectCode": "https://jvntf.github.io/gsoc_workproduct/"
                },
                {
                    "title": "p5: Bringing the Processing API to Python",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5258601325133824/",
                    "content": "p5 is a Python package based on the core ideas of Processing. It aims to make programming more accessible for beginners, artists, and educators by combining Python's readability with Processing's emphasis on learning to code in a visual context. By exposing an API similar to Processing's, it opens up Python's rich data science ecosystem to current Processing users who can now use Python's powerful data analysis tools to create interactive data visualizations.To know more visit the project repository on Github.",
                    "projectCode": "https://abhikpal.github.io/blog/2017/08/27/p5-google-summer-of-code-progress-report"
                },
                {
                    "title": "Processing for Android: Cardboard Mode Demo",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6181263379529728/",
                    "content": "“Cardboard Mode Demo” is a Virtual Reality application aimed at demonstrating the possibilities of Cardboard Mode in Processing.",
                    "projectCode": "https://github.com/picorana/VR_audioscape"
                },
                {
                    "title": "Processing.R",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5596616996159488/",
                    "content": "Offer a new mode in Processing for R Language. Refer to github.com/gaocegege/Processing.R for more details.",
                    "projectCode": "https://github.com/gaocegege/Processing.R"
                },
                {
                    "title": "Redesign Friendly Debugger for p5.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5336838449397760/",
                    "content": "I propose to redesign p5.js’s friendly debugger module to improve user-experience -- in particular, to make it more inviting and helpful for both existing and new users.",
                    "projectCode": "https://medium.com/@almchung/gsoc17-redesign-friendly-debugger-for-p5-js-cf63a85ae57"
                },
                {
                    "title": "Web GL improvements for p5.js",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5091597561626624/",
                    "content": "Add web GL support for texture (u, v) coordinate mapping, add support for additional camera features, and fix bugs in the web GL renderer.",
                    "projectCode": "http://www.katehollenbach.com/gsoc-2017/"
                }
            ],
            "techStack": [
                "java",
                " javascript",
                " python",
                " android",
                " opengl"
            ]
        },
        {
            "title": "The Wine Project",
            "orgLink": "http://www.winehq.org/",
            "projects": [],
            "techStack": [
                "c",
                " opengl",
                " directx",
                " x11",
                " win32"
            ]
        },
        {
            "title": "Tiled",
            "orgLink": "http://www.mapeditor.org",
            "projects": [
                {
                    "title": "General Improvements and Bug Fixes for Tiled",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5103365772017664/",
                    "content": "Tiled is a map editor. A good user experience as well as interface is one of the key components for its users. A lot of small improvements can be done to Tiled. A lot of features have been mentioned in the issue tracker but have remained stagnant since then. I plan to add some of these features by the end of GSoC period and keep fixing bugs reported during the GSoC period.",
                    "projectCode": "http://ketangupta.in/blog/gsoc/development/2017/08/29/gsoc-final-report/"
                },
                {
                    "title": "Reusable Object Templates",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5897411272638464/",
                    "content": "Tiled doesn’t support saving custom objects and reusing them with their predefined properties, currently for doing so, an object can be duplicated, but then, when one of the duplicates is updated, the other won’t.Tiled also offers a type system, a type is a property that can be given to an object, it provides sharing custom properties between objects, but can't define properties like the geometry of the objects or the specific graphics.This issue appeared many times on GitHub, solving it will have a great impact on productivity while working on big projects which require reusing a certain object and frequently applying changes to it.This project aims to create a template system in Tiled, templates will save the properties of an object and will allow creating multiple instances of it, sharing the same properties.",
                    "projectCode": "https://gist.github.com/thabetx/57cbf9c3fcb62ebe95c457678ba3f4b1"
                },
                {
                    "title": "Wang Tiles, and Filling Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5221230412038144/",
                    "content": "With a small set of base tiles, users will be able to fill large areas of a tile map in a continuous, non-repetitive way, and dynamically edit portions of the randomly filled area to better fit their needs. Also possible with this powerful concept is automatic maze generation, path generation, and much more.Often users expect a quick way to fill an area of a simple shape, such as a rectangle or circle. While currently possible in multiple steps, there is no way to do this in just one. A shape fill tool will solve this, and pair nicely with the Wang implementation. Users will be able to pick a shape (rectangle, circle, maybe more) and click and drag to fill an area of that shape with a selected tile stamp, random tiles, or Wang set.",
                    "projectCode": "https://github.com/bjorn/tiled/wiki/GSOC-2017:-Wang-Tiles"
                }
            ],
            "techStack": [
                "qt",
                "c++",
                "git",
                "github"
            ]
        },
        {
            "title": "TimVideos",
            "orgLink": "https://code.timvideos.us",
            "projects": [
                {
                    "title": "Convert the JPEG encoder from VHDL to  Migen/MiSoC",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5197434682605568/",
                    "content": "This aim of this project is to convert the JPEG encoder from VHDL to the Migen/Misoc . Different modules of the encoder are been implemented using the python libraries(Migen) and as a minor modification to the initial architecture of the encoder which include FSM machine for passing the data from one submodule to the other , this include Ready-Valid Handshake Protocol (Streaming Version of the JPEG encoder) for doing so. All the major work regarding the issue will be done under in the HDMI2USB-litex-firmware repository based on the issue #31[HDMI2USB] Convert the JPEG encoder from VHDL to Migen / Misoc.",
                    "projectCode": "https://gsoc2017blog.wordpress.com/2017/08/27/gsoc-final-report/"
                },
                {
                    "title": "USB Sound Capture",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6047262144724992/",
                    "content": "This project will add USB audio to the HDMI2USB firmware. It will allow the FX2 USB module to present itself as an audio device as well as the current video device. USB audio is a much needed addition as it reduces the number of required cables when setting up a presenter’s laptops. It also has applications for other sources as many HDMI capable devices send their audio over that HDMI connection. Note that this does not include the HDMI capture side of the audio.",
                    "projectCode": "https://gsoc.paddatrapper.me/post/gsoc-project-report-usb-sound-capture"
                }
            ],
            "techStack": [
                "python",
                "verilog",
                "fpga",
                "vhdl",
                "c"
            ]
        },
        {
            "title": "Tor",
            "orgLink": "https://www.torproject.org/",
            "projects": [
                {
                    "title": "anon-connection-wizard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5417890790506496/",
                    "content": "The anon-connection-wizard is a Python-clone of the Tor Launcher which aims at providing Tor users with a graphical instruction on configuring the Tor. This program is especially helpful for users who live in Tor-censored area. This is because those users can only connect to the Tor network with the help of other censorship circumvention tools which include but are not limited to Tor bridges, pluggable transports and other third party Internet censorship circumvention tools like Lantern and VPN.The current implementation of the Tor Launcher heavily relies on the Tor Browser. Besides, the current instructions provided by the anon-connection-wizard and Tor launcher is not be clear enough for user to configure Tor correctly. Therefore I would like to implement and redesign the anon-connection-wizard. I hope that my work will help more people to connect to the Tor network efficiently and successfully.",
                    "projectCode": "https://forums.whonix.org/t/graphical-gui-whonix-setup-wizard-anon-connection-wizard-technical-discussion/650/303"
                },
                {
                    "title": "Crash Reporter for Tor Browser",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6102453011349504/",
                    "content": "Crash Reporter will be helping developers to improve Tor Browser, find bugs and crash reasons easier, that would make Tor Browser more stable and user-friendly. The goal of this project is to adapt Crash Reporter (from Mozilla) for Tor Browser and make crash reports and statistic completely anonymous.",
                    "projectCode": "https://nmago.github.io/GSoC-2017/"
                },
                {
                    "title": "Improving Ahmia - Hidden Service Search",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6171539573571584/",
                    "content": "Ahmia is a search engine that indexes, searches, and catalogs content published on Tor Hidden Services. Furthermore, it is a medium to share meaningful insights, statistics, and news about the Tor network itself. There are several improvements and upgrades required in Ahmia.Initial tasks include automating blacklisting and tweaking 'Add' page. Then 'Statistics' page should be fixed and graphs need to be plotted to visualize analytical data. Then I will move on to replacing Polipo with Torsocks in ahmia-crawler and upgrading Elasticsearch support from 2.4 to 5.X. Once these major tasks are done, documentation and software dependancies need to be updated. If time permits, I plan to add advance search options like double quotes(\"\") for exact matching of query and boolean operators like AND & OR.",
                    "projectCode": "https://gist.github.com/mdhash/2bc637ff15545fa58366ee0bb1d93680"
                },
                {
                    "title": "Improving unMessage's Code Quality",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5136415813795840/",
                    "content": "unMessage is a privacy\nenhanced instant messenger that uses its own end-to-end encrypted\nprotocol to maintain conversations, not depending on servers, metadata\nor transport.Designed by Felipe Dau and David R. Andersen, unMessage's initial\nPython implementation had issues such as improper use of the Python\nTwisted asynchronous network IO framework, lack of a test suite and others\nthat would harm its maintainability and quality.Mentored by David Stainton and meejah, the goal of this project is\nteaching Felipe how to work with asynchronous programming, how to use\nTwisted better, how to test the software and how to use Continuous\nIntegration, while applying it to unMessage to improve its code\nquality and contributing to its maturity as a messenger which the\ncommunity can benefit from.",
                    "projectCode": "https://gist.github.com/felipedau/86045f6ca7e11c81b4373af9d3db811e"
                }
            ],
            "techStack": [
                "c",
                " python",
                "javascript",
                "c++"
            ]
        },
        {
            "title": "UCSC Xena",
            "orgLink": "http://xena.ucsc.edu",
            "projects": [
                {
                    "title": "Transcript Centric View",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4658280458616832/",
                    "content": "Currently UCSC Xena is designed in such a way that each row is a sample and columns are data types. Biologists often need to study the different versions of a gene called transcripts. Transcripts are important because an increase in the abundance of one of the versions may lead or drive cancer. This project aims at building a new application where the rows will be transcripts and columns will be data types about that transcript. Both the applications will then be linked giving users a smooth toggle between the sample centric and transcript centric views about the same underlying data. The project also proposes to blend the visual spreadsheet view and the chart view in a way that a column will plot the transcript expressions across a set of samples.",
                    "projectCode": "https://github.com/ucscXena/ucsc-xena-client/wiki/Google-Summer-of-Code-2017---Transcript-View"
                }
            ],
            "techStack": [
                "javascript",
                "react",
                "clojure",
                "d3",
                "python"
            ]
        },
        {
            "title": "Urban Energy Systems Laboratory, Empa",
            "orgLink": "https://hues-platform.github.io/",
            "projects": [
                {
                    "title": "GIS Interface for Energy Hub and Network Definitions",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5625793514307584/",
                    "content": "The HUES platform is a set of open source computational resources that support distributed energy systems (DES) design and control. It provides models to simulate and optimize energy systems, as well as modelling tool to design and optimize these energy systems.A GIS interface for the energy hubs and the related network definitions would help to understand and visualize the spatial aspects related to effectively develop an energy hub configuration. Parameters like placement of hubs and their interconnections can be done through this GIS interface (QGIS plugin), which would enable to effectively describe and compare one configuration with the other.This project would provide the researchers with a GUI based tool for creating their network configuration along with the type of energy technologies to be used and connect these entities together,  and thus finally simulate and analyze the results. This plugin would be utilizing a python based energy hub modelling environment (Modular Energy Hub Modelling Framework), which would help in modelling energy systems and perform optimizations and simulations on the energy network configuration created using the plugin.",
                    "projectCode": "https://bitbucket.org/empa_lbst/gui-gis"
                },
                {
                    "title": "Visualization Dashboard for Empa-NEST using node-red",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5143085629571072/",
                    "content": "The aim of this project is to develop a visualization dashboard based on node-red and javascript charting library Highcharts which will have a connection to the Microsoft SQL Database and OPC UA server and can be integrated into a Website. The trend data is logged into a SQL Database in the NEST-Cloud, which is accessible for researchers and technicians from all over the world. And the live data which will be accessible via OPC UA server. To bring the big data to life it is essential to have attractive visualization charts.",
                    "projectCode": "https://github.com/arugarg/GSOC2017-VisualizationDashboard-EmpaNest"
                },
                {
                    "title": "Visualization Module for the Ehub Modeling Tool",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6482668749324288/",
                    "content": "The Energy Hub (Ehub) Modeling Tool is a set of MATLAB scripts for writing and executing a district energy system optimization. The purpose of the tool is to aid the design of decentralized energy systems at the building and district level. It can be used for creating, executing and visualizing the results of an energy hub model for a given case study and a set of technologies. The Ehub Modeling Tool takes as input case study data and technology data in defined formats and outputs an AMS file which is executed in the optimization package Aimms. The Ehub Modeling Tool also includes R code for visualizing the results of the energy hub model.This project focuses on developing a Python-based visualization module for the Ehub Modeling Tool. The results from a run of the model include the optimal dispatch schedule of different technologies, the technologies to be installed and the optimal capacities of these technologies, and other data. This project involves developing a set of scripts to import and visualize the results data from a set of experiments.",
                    "projectCode": "https://gist.github.com/gmomo/040f0728cbe94171e9b95a836ac6f9ed"
                }
            ],
            "techStack": [
                "python",
                "gis",
                "fast fluid dynamics"
            ]
        },
        {
            "title": "VideoLAN",
            "orgLink": "https://www.videolan.org",
            "projects": [
                {
                    "title": "Adding 3D support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4845369234030592/",
                    "content": "I plan to add support for various 3D video formats to libVLC.",
                    "projectCode": "https://code.videolan.org/GSoC2017/Shaan/vlc/tree/FinalSubmission"
                },
                {
                    "title": "Cloud Storage integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6570146898378752/",
                    "content": "VLC wants to access cloud services using a library libcloudstorage that is not integrated anywhere in libVLC. This integration will allow it to be used later in the respective internal modules, like Media Library.The user is going to be able to access any media directly from most of the cloud services (as long as it is supposed by libcloudstorage) and reproduce it using VLC.",
                    "projectCode": "https://gist.github.com/dbtdsilva/74f5ae9663cb7bec7ac10ddf9969ab83"
                },
                {
                    "title": "Fuzz testing libVLC with LibFuzzer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5373396003061760/",
                    "content": "Test libVLC internal modules with various input using LibFuzzer which is a library for coverage-guided fuzz testing for exposing various bugs, vulnerabilities and performance issues.",
                    "projectCode": "https://shalzz.github.io/blog/fuzzing-vlc-4/"
                },
                {
                    "title": "iOS: Medialibrary port",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6458593310146560/",
                    "content": "The medialibrary(MediaLibraryKit) available for the Apple platform’s such as iOS, macOS, and tvOS is quite old and limited. \nHowever, the other platforms are using a medialibrary written in C++ which is newer, maintained and full of possibility.\nTherefore, the overall goal will be to port the said media library to be Apple friendly.",
                    "projectCode": "https://code.videolan.org/GSoC2017/Bubu/MediaLibraryKit"
                },
                {
                    "title": "macOS interface redesign",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5834013528817664/",
                    "content": "The goal of this project is to bring the macOS interface of VLC Media Player to an easier to maintain state and improve the overall design of it, to fit better into recent macOS versions.",
                    "projectCode": "https://epir.at/2017/08/26/gsoc-2017-vlc-for-macos-interface-redesign/"
                },
                {
                    "title": "Media Workflow rework and a remote UI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4653081400705024/",
                    "content": "Through refactoring the rendering, workflow and UI classes, we will have a better structure of the software, which will make easier to implement a sandboxed rendering engine and a remote UI. The sandboxed rendering engine will help reduce the risk of crashing the main UI process of VLMC. And being able to create a remote UI will give us many options of UI forms such as a web application and QML.",
                    "projectCode": "https://github.com/luyikei/VLMC"
                },
                {
                    "title": "Modern Look For VLC Web UI",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5919196688941056/",
                    "content": "My proposal is for the modernization of the Web UI of VLC player using Vue.js",
                    "projectCode": "https://medium.com/@gautamc/google-summer-of-code-2017-final-report-ef869351937f"
                },
                {
                    "title": "Videolan application updater",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5266266902233088/",
                    "content": "The project meant to build a smart updating system.The system is composed of a client module responsible for update management (for example VLC) , and a server written in Golang to manage releases, matching update_requests and administrative web panel .",
                    "projectCode": "https://code.videolan.org/GSoC2017/Marco/UpdateServer/wikis/home"
                },
                {
                    "title": "VLC crashes server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6560423092420608/",
                    "content": "The aim of this project is to make a breakpad server for VLC and other VideoLAN projects, similar to Socorro from Mozilla.",
                    "projectCode": "https://code.videolan.org/GSoC2017/ToddShepard/CrashDragon"
                }
            ],
            "techStack": [
                "c++",
                "c",
                "opengl",
                "qt",
                "assembly"
            ]
        },
        {
            "title": "ViSP",
            "orgLink": "https://visp.inria.fr/",
            "projects": [
                {
                    "title": "Markerless model-based tracker CAD model editor",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6353080996069376/",
                    "content": "ViSP supports CAD model in .cao format or in .vrml format which are needed for Markerless \nmodel-based tracker module. Currently, the creation of .cao model formats, which is a \nhomemade file format, and its corresponding config files has to be done manually. The goal of \nthis project is to automate this process by providing extensive tools to achieve perfect and \nloss-less conversion from existing 3D file formats to .cao and also generation from scratch:1) Develop dedicated Blender plugin to edit and convert from classical 3D file format \n(for example .obj) to home-made CAD model file format.2) Develop a very simple CAD model viewer and editor that allows to add ViSP MBT \nspecific characteristics to a face or a line such as a label or a level of details (lod).",
                    "projectCode": "https://github.com/lagadic/visp_cao_editor/wiki/GSoC-2017-with-ViSP"
                }
            ],
            "techStack": [
                "vision",
                " c++"
            ]
        },
        {
            "title": "Wikimedia Foundation",
            "orgLink": "http://wikimediafoundation.org",
            "projects": [
                {
                    "title": "Add a \"hierarchy\" type to the Cargo extension",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6108556965183488/",
                    "content": "This project aims to introduce hierarchy fields in Cargo MediaWiki extension. This project will enhance the capability of MediaWiki by enabling efficient storage and querying over information which is hierarchical in nature, such as following piece of information :Chapter Name > Topic > Sub-TopicProject also involves addition of support for hierarchy fields in Page Forms MediaWiki extension, to ensure easy input from users entering hierarchy data into the wiki as well as to maintain compatibility with frequently used helper pages.",
                    "projectCode": "https://phabricator.wikimedia.org/T174294"
                },
                {
                    "title": "Adding custom features while Upgrading and updating Quiz extension",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6281949895196672/",
                    "content": "Quiz extension is currently used on several WMF projects, such as Wikiversity but has lot of bugs and limited features for users.The project aims to update and upgrade MediaWiki Quiz extension while removing legacy code and adding new features to the extension.Benefits of this project include stability and functionality to the extension and comprehensive features for users of various Wikis.Adding various custom features suggested by community would provide more power to user.The project will work on the following :",
                    "projectCode": "https://gist.github.com/hsb4995/2f47e62e520bdd9365a4eeb5cef9a283"
                },
                {
                    "title": "Automatic editing suggestions and feedbacks for articles in Wiki Ed Dashboard",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6671467458592768/",
                    "content": "The Wiki Ed Dashboard / Programs & Events Dashboard is a Ruby on Rails + Javascript application that helps people organize groups of newcomers to contribute to Wikipedia. This project aims to use ORES (Objective Revision Evaluation Service) to provide specific useful editing suggestions to newcomers about how they can improve existing Wikipedia articles or article drafts they are working on. This can give an idea of what kind of improvements are needed for the article and gives them a jumpstart in their contributions",
                    "projectCode": "https://github.com/WikiEducationFoundation/WikiEduDashboard/commits/master?author=keer25"
                },
                {
                    "title": "Glam2Commons (previously Single Image Batch Upload)",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6252744117583872/",
                    "content": "The project aims to develop a tool which allows any Wikimedia Commons user to import images to Commons from the online repositories of a number of GLAMs (galleries, libraries, archives and museums) easily.",
                    "projectCode": "https://infobliss.github.io/gsoc2017/"
                },
                {
                    "title": "GSoC17 Proposal to provide enhanced usability for Wikimedia Programs & Events Dashboard managed by Wiki Education foundation.",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5840103255572480/",
                    "content": "The Dashboard code runs 2 main projects:\n1) The Wiki Education Foundation Dashboard : The use case(scope) for this project is limited to higher education programs in United States and Canada.\n2) Wikimedia Programs & Events Dashboard : For global Wikimedia community to organize all kinds of programs, including edit-a-thons, education programs, and other events.The use case for the Programs & Events Dashboard project is wide and there are many enhancements to be made to increase the user experience, I'll be working on issues related to this and the overall user testing.",
                    "projectCode": "https://medium.com/@sejal.khatri5/gsoc-2017-project-overview-8421480081f0"
                },
                {
                    "title": "Implement Thanks support in Pywikibot",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6141212406841344/",
                    "content": "Pywikibot is a popular framework for writing MediaWiki bots. Thanks is an extension for MediaWiki wikis which is designed to allow users to send quick \"thank you\" messages to other users for edits or Flow comments. Pywikibot does not currently have support for Thanks, meaning that bots using Pywikibot cannot send thanks, use the log of thanks on a wiki, or compile statistics on thanks.This project proposes to implement Pywikibot support for Thanks by:Also included in the proposal is at least one to-be-determined contribution to the PHP extension code not directly related to the new Pywikibot functionality.",
                    "projectCode": "https://gist.github.com/happy5214/dff10388cb9684e3a1ff1acaa360c841"
                },
                {
                    "title": "Improvements to ProofreadPage Extension and Wikisource",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4934556377415680/",
                    "content": "This project aims at the improvement and enhancement of the ProofreadPage Extension and Wikisource, through important bug fixes that are left as backlog and implementation of significant features that would make it more user-friendly. This will be done, so that the extension and Wikisource become easier to use and so that they are raised to the contemporary Mediawiki standards.",
                    "projectCode": "https://amritsreekumar.wordpress.com/2017/08/28/final-work-product-of-gsoc17/"
                }
            ],
            "techStack": [
                "php ",
                "javascript ",
                " html ",
                " css ",
                " jquery"
            ]
        },
        {
            "title": "WorldBrain - Verifying the Internet with Science",
            "orgLink": "http://worldbrain.io",
            "projects": [
                {
                    "title": "Implementation of Continuous Integration Pipeline and a Testing Suite for WorldBrain",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5091921026351104/",
                    "content": "This proposal aims to setup a continuous integration pipeline and a testing suite for the WorldBrain organization to facilitate faster and more efficient development process.",
                    "projectCode": "https://gist.github.com/reficul31/3cf54d8b40fc5e2e580500eab8409765"
                }
            ],
            "techStack": [
                "reactjs",
                " javascript"
            ]
        },
        {
            "title": "WSO2",
            "orgLink": "http://wso2.com/",
            "projects": [
                {
                    "title": "[IS] WS-Trust Implementation for IS 6.0.0 using Apache CXF Library",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6040323088187392/",
                    "content": "WS-Trust is a WS-* specification that provides extensions to the WS-Security specification. WS-Security provides the basic framework for message level security in web services. WS-Trust builds on that base to specify a framework for broker trust across different security domains. It specifically deals with the issuing, renewing, and validating of security tokens, as well as with ways to establish, assess the presence of, and broker trust relationships between participants in a secure message exchange.\nThis project focuses on implementing the WS-Trust specification for the WSO2 Identity Server 6.0.0 by simply integrating with Apache CXF.",
                    "projectCode": "https://github.com/IsurangaPerera/identity-inbound-auth-sts"
                },
                {
                    "title": "Eclipse plugin for Siddhi",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5862266360561664/",
                    "content": "WSO2 Complex Event Processor(WSO2 CEP) is real-time  and it has a quick response time in identifying patterns in incoming stream of events/large data feeds with minimum storage.  WSO2 CEP is popular among community since it’s simple and easy to use as well as since it is free and open source. The core of WSO2 CEP is Siddhi which is a SQL-like query language that is used for complex queries.  An Eclipse plugin for Siddhi is a valuable approach for the developer community since eclipse IDE is a widely used IDE among developers. Eclipse plugin for Siddhi will comprise syntax highlighting, auto completion, error reporting, running and debugging support for Siddhi based on Siddhi grammar using Xtext and Java.",
                    "projectCode": "https://medium.com/@sewwandikaus.13/gsoc-2017-eclipse-plugin-for-siddhi-documentation-c4d82e8089cb"
                },
                {
                    "title": "Environment Support for API Manager",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5145140502986752/",
                    "content": "Building capability in the user interfaces of WSO2 API Manager version 3.0.0 (SNAPSHOT version as of now) to switch between different environments for performing user operations.",
                    "projectCode": "http://ravindublog.tk/gsoc-2017-environment-support-for-wso2-api-manager/"
                },
                {
                    "title": "Native inbound and connector for IBM MQ 8.0",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6370003167215616/",
                    "content": "Currently with WSO2 Enterprise Service Bus recommended way to connect to IBM MQ is using JMS transport. But this has limitations and sometimes gives issues when integrating.Identifying limitations and provide a better solution is part of this project.",
                    "projectCode": "https://gist.github.com/hasithajayasundara/c73bc15a522f2e0059aa1f6254c964c1"
                },
                {
                    "title": "Non-Occurrence of Events for Siddhi Patterns",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5690015891849216/",
                    "content": "Siddhi provides an elegant solution to detect patterns among the events that happened. However, it cannot identify the absence of events using the pattern implementation. Instead, an alternative solution using Windows is suggested in the official document which is more complex than the regular patterns and less memory efficient when it comes to one-time pattern detection. The solution I propose here provides a native implementation for patterns to identify the events that do not arrive.",
                    "projectCode": "https://medium.com/@lgobinath/gsoc-siddhi-pattern-to-detect-absence-of-events-8b267bd173fe"
                },
                {
                    "title": "OAuth 2.0 Dynamic Client Registration Management Protocol support for WSO2 Identity Server",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4557915662843904/",
                    "content": "OAuth 2.0 Dynamic Client Registration Management Protocol specification defines  a set of rules to manage the OAuth 2.0 Dynamic Client Registration which is already supported by the WSO2 IS. OAuth 2.0 Dynamic Client Registration Protocol describes how a client dynamically registered in the authorization server. But there can be situations where client needs to modify the registered data or check the current registration data or delete the data from the authorization server. So OAuth 2.0 Dynamic Client Registration Management Protocol came up with methods to enable the above functionalities. The primary scope of this project is to implement the OAuth 2.0 Dynamic Client Registration Management Protocol in the WSO2 Identity Server.",
                    "projectCode": "https://medium.com/@abilashini/oauth-2-0-dcrm-protocol-support-for-wso2-identity-server-gsoc-2017-96b89fbfc74b"
                },
                {
                    "title": "Python API for Siddhi CEP",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5985493804122112/",
                    "content": "The scope of this project is to develop a Python API for Siddhi CEP Java Library. Additionally, the developed Python API would be able to directly interact with WSO2 Data Analytics Server through REST API in order to simulate events and manage Siddhi Apps.The proposed solution would be compatible with Python 2.7 and 3.x. It would be ready for easy deployment via PyPI by the end of GSoC Coding Period.",
                    "projectCode": "https://gist.github.com/madhawav/195b7dc601d94c40958d88be1d56e705"
                },
                {
                    "title": "SCIM 2.0 Compliance Test Suite",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4713460856258560/",
                    "content": "The proposal is on implementing the SCIM 2.0 compliance test suite which can be run on both the cloud and on premise by eliminating the limitations that can be seen in SCIM 1.1 compliance test suite. In the proposed test suite, it is expected to validate the supportability of a provided service provider, in terms of the SCIM 2.0 core specification and protocol specification.The test suite should be able to generate a detailed analysis view and comprehensive report upon providing the server’s SCIM endpoint. The report should include the test results indicating the coverage percentage of each specification and a detailed view of the results of each test including requests sent by the test suite, expected response and the server response along with the indication whether a particular test is passed or not.Apart from that the test suite should be run against WSO2 Identity Server to identify any gaps between the SCIM 2.0 specifications and Identity Server and provide improvements to the product.",
                    "projectCode": "https://medium.com/@vindulajayawardana/scim-2-0-compliance-test-suite-737fd4ace3cc"
                },
                {
                    "title": "Siddhi Extension Doc Auto Generation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5957128497922048/",
                    "content": "This project consists of two main parts of the automated generation of documentation for Siddhi Complex Event Processing Engine.",
                    "projectCode": "https://gist.github.com/nadundesilva/abeac5279468c8c5f37fbd0f8c2d2091"
                }
            ],
            "techStack": [
                "soa",
                "middleware",
                "java",
                "distributed computing",
                "web services"
            ]
        },
        {
            "title": "wxWidgets",
            "orgLink": "http://www.wxwidgets.org/",
            "projects": [
                {
                    "title": "Support multi-touch gestures",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5379891201572864/",
                    "content": "The goal of this project is to generate wxWidgets events for the multi-touch gestures recognized by the underlying system and, possibly, also the raw touches which compose them. But it's adding support for the high level events, such as \"zoom\", \"pan\" or \"rotate\" which is the most important part of this project.",
                    "projectCode": "https://github.com/wxWidgets/wxWidgets/compare/master...prashantkn94:SOC2017_GESTURES"
                },
                {
                    "title": "wxWebView JavaScript Integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6201193772613632/",
                    "content": "wxWebView currently provides a simple RunScript() function for running JavaScript. However in many cases it would be preferable have access to a return value, or even to call C++ from the JavaScript. This project would aim to provide at least basic functionality for accessing JavaScript values. An API would be required that ensures uniform behaviour across the different backends. Before applying for this project please contact the wx-dev mailing list as further research is required.",
                    "projectCode": "https://docs.google.com/document/d/1oA-lPdjwPWgWehhgSTNcZR1fL_z2ds8zgGY9QjLEwu4/edit?usp=sharing"
                }
            ],
            "techStack": [
                "c++",
                "gtk+",
                "win32",
                "cocoa"
            ]
        },
        {
            "title": "X.Org Foundation",
            "orgLink": "http://www.x.org",
            "projects": [
                {
                    "title": "Add OpenMAX state tracker in Mesa/Gallium that uses Tizonia",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6355967214092288/",
                    "content": "Currently the OpenMAX state tracker in Mesa/Gallium uses. Bellagio has not been updated for a few years and only supports the OpenMAX IL 1.1 specification while the latest OpenMAX specification version is 1.2. \nThe main aim of the project is to provide a new state tracker that conforms to the latest OpenMAX 1.2 specifications using Tizonia. Tizonia is actively maintained and also up to date with latest OpenMAX IL 1.2 provisional specification. \nThis project is a step towards completely replacing the old bellagio state tracker. In addition to that the project would also be focused on enhancing the performance of the new state tracker by adding support for reference frame management (optional) and adding support of OMX_UseEGLImage.",
                    "projectCode": "https://singhcodes.wordpress.com/2017/08/22/gsoc-2017-project-summary-success/"
                },
                {
                    "title": "Multi buffered Present in XWayland",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6098284611371008/",
                    "content": "XWayland currently only renders into a single Wayland buffer. This leads to tearing in case of prolonged use by the compositor or on direct scan out. This project aims at solving the issue by implementing multi buffered Present functionality in XWayland.",
                    "projectCode": "https://lists.x.org/archives/xorg-devel/2017-August/054422.html"
                },
                {
                    "title": "Piper, gaming mice configuration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5203581049241600/",
                    "content": "Piper is an application frontend to libratbag and ratbagd, a library and system daemon to\nconfigure gaming mice respectively. In its current state Piper is not user friendly and lacks\nsupport for features found in many modern gaming mice. This project aims to reimplement\nPiper such that it is more user friendly and can support these missing new features.",
                    "projectCode": "https://hjdskes.github.io/blog/gsoc-part-15/"
                },
                {
                    "title": "Software Renderer for Vulkan",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5689794164162560/",
                    "content": "Write a software renderer for Vulkan that implements graphics and compute shaders by translating directly from SPIR-V to LLVM IR, running a custom whole-function vectorization pass, running a custom control-barrier lowering pass, then using LLVM's MC framework to generate code.",
                    "projectCode": "https://github.com/programmerjake/vulkan-cpu/blob/gsoc-2017/docs/gsoc-2017-landing-page.md"
                }
            ],
            "techStack": [
                "opengl",
                "vulkan",
                "x11",
                "wayland",
                "opencl"
            ]
        },
        {
            "title": "Xapian Search Engine Library",
            "orgLink": "https://xapian.org/",
            "projects": [
                {
                    "title": "Learning to Rank Click Data Mining",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6678438458949632/",
                    "content": "Click logs provide a highly valuable source of relevance information. Compared to editorial labels, clicks are much cheaper to obtain and always reflect current relevance. Click models have been shown to be very successful for obtaining relevance judgements from the click logs.The idea is to implement a module capable of logging the click information from Omega and mine relevance judgements from it that would complement the existing letor module in Xapian.  Another significant part of the project will include writing clear documentation for the logging and other parts of the project so people can use it to produce relevance judgements easily.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2017/LetorClickstream/WorkProduct"
                },
                {
                    "title": "Learning to Rank Stablization",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6389689552470016/",
                    "content": "The Main Objective of this project is to create a Learning to Rank system which will eventually be integrated in Xapian. This project can be broken down into the following components.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2017/LetorStabilisation/ProjectReport"
                },
                {
                    "title": "PHP Bindings Improvement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5895643356725248/",
                    "content": "PHP7 the new version, is considered to be a major release after the release of PHP5 in 2004. Currently PHP7 Binding for Xapian is based heavily on PHP5. The project is to use Zend C API to generate objects as the SWIG's PHP backend as opposed to the current stage, which wraps the C++ API a set of \"flat\" functions and a PHP file having the classes which call the flat functions.",
                    "projectCode": "https://trac.xapian.org/wiki/GSoC2017/PHP7/ProjectReport"
                }
            ],
            "techStack": [
                "c++",
                "unicode",
                "swig",
                "linux",
                "golang"
            ]
        },
        {
            "title": "XBMC Foundation",
            "orgLink": "http://kodi.tv",
            "projects": [
                {
                    "title": "Add Python3 Support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4955302948503552/",
                    "content": "Kodi codebase is written in C++ which is dynamically converted to Python through SWIG and Groovy. In this project Python 3 support is to be added for Kodi add-ons and updating the Kodi built-in libraries by changing the custom Python templates provided as an input to Groovy and updating the calls to threads and sub-interpreters as per Python3 C API.",
                    "projectCode": "https://forum.kodi.tv/showthread.php?tid=310136&pid=2637648#pid2637648"
                },
                {
                    "title": "RetroPlayer Improvements",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6395644658843648/",
                    "content": "",
                    "projectCode": "https://velocityra.github.io/gsoc-2017/"
                },
                {
                    "title": "Wayland support",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5773724267577344/",
                    "content": "Wayland is a set of protocols for communication between applications and compositors that is expected to replace Xorg in the Linux graphics stack in the next years. Mainline Kodi currently lacks support for Wayland and must thus use an Xwayland-emulated X11 session for display which is not optimal in the long run. Therefore, native support for Wayland should be implemented in Kodi.",
                    "projectCode": "https://forum.kodi.tv/showthread.php?tid=309254&pid=2636174#pid2636174"
                }
            ],
            "techStack": [
                "python",
                "c++11",
                "xml",
                "git",
                "drupal"
            ]
        },
        {
            "title": "Xen Project",
            "orgLink": "http://xenproject.org/",
            "projects": [
                {
                    "title": "Fuzzing the Xen Hypercall Interface",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6343132106981376/",
                    "content": "Fuzzing is a recent trend for systematic testing of interfaces by trying more or less random inputs and iterating over them. A subset of fuzzers uses code-coverage as feedback when permuting and choosing inputs, among them the popular user-space fuzzer American Fuzzy Lop. Recently there have been attempts to port fuzzers to the kernel and in a similar manner should now the hypercall interface of Xen be tested.While this is overall a very comprehensive problem this project will help to develop a better understanding of the problem space and make at least first advances of the source tree into the necessary direction. A generic mechanism will be implemented allowing fuzzers to obtain feedback on code-coverage. In the next step this output will be further processed in order to actually run a particular fuzzer (such as AFL), although there might not be sufficient time to commit this to the source tree.To sum up, the overall steps to getting a fuzzer running are the following:",
                    "projectCode": "https://lists.xen.org/archives/html/xen-devel/2017-08/msg01960.html"
                },
                {
                    "title": "Xen: share memory areas among VMs from the config file",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5356246735519744/",
                    "content": "Virtual machines use grant table hypercalls to setup a share page for inter-VMs communications. These hypercalls are used by all PV protocols today. However, very simple guests, such as baremetal applications, might not have the infrastructure to handle the grant table. This project is about setting up several shared memory areas for inter-VMs communications directly from the VM config file. So that the guest kernel doesn't have to have grant table support to be able to communicate with other guests. This should work on both x86 and ARM.",
                    "projectCode": "https://docs.google.com/spreadsheets/d/1mktb0e2NQ4Xh-cL8tx4ENRcL6j-lVXOCP7lbQYE9BaU/edit#gid=0"
                }
            ],
            "techStack": [
                "linux",
                "free/netbsd",
                "asm/c/c++",
                "qemu",
                "ocaml"
            ]
        },
        {
            "title": "XMPP Standards Foundation",
            "orgLink": "https://xmpp.org",
            "projects": [
                {
                    "title": "Certificate management support for Spark",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6661234564792320/",
                    "content": "The aim of the project is to provide to the Spark's users a tool for managing their Public Key Certificates. Currently the users can only decide if they want to accept all certificates, even expired or distrusted. After completion of the project the users of the Spark will gain access to useful graphic interface which will allow them to freely control their certificates.",
                    "projectCode": "https://alameyo.github.io/GSoC2017/"
                },
                {
                    "title": "OMEMO encrypted Jingle implementation",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6702837899722752/",
                    "content": "This is my proposal to implement Jingle file transfer in Smack utilizing my OMEMO implementation I made earlier this year as part of my bachelors thesis. Jingle is used in order to negotiate on a transportation method for sending or receiving data.",
                    "projectCode": "https://vanitasvitae.github.io/GSOC2017/"
                }
            ],
            "techStack": [
                "xmpp",
                "c++",
                "java",
                "erlang",
                "javascript"
            ]
        },
        {
            "title": "XWiki",
            "orgLink": "http://www.xwiki.org/",
            "projects": [
                {
                    "title": "DokuWiki importer",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6081202855346176/",
                    "content": "OpenWiki has been developing the filter stream framework, to allow for converting from some input streams to any/multiple output target streams. Filter stream framework creates generic interfaces for the input which could be written down to any target output stream without any/much changes to the input streams filter. This allows for easy extension of the converter to target multiple output streams target filter, while maintaining a single input stream filter definition.There are some pre-existing extensions that help convert from dokuwiki to XWiki. Using the a steam framework, we can create input streams from dokuwiki which can now be generic and be output to any other wiki schema including XWiki’s own.",
                    "projectCode": "http://dev.xwiki.org/xwiki/bin/view/GoogleSummerOfCode/DokuWikiimporter2017"
                },
                {
                    "title": "More extension repositories",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4986328450072576/",
                    "content": "So far it was possible inside XWiki to import extensions and artifacts from two types of repositories: XWiki Reposiory and Maven Repository. The aim of the \"More extension repositories\" project was to extend XWiki import capabilities and add integration with other types of remote repositories: Bintray, PyPi and NPM. The goal, in first place, was to enable download of artifacts and packages deployed on those remote repositories using Extension Manager, in the same way as from e.g. Maven Central. In second place, the goal was to adapt those packages and artifacts to make them usable in running XWiki: by scripts, or by other extensions.",
                    "projectCode": "http://dev.xwiki.org/xwiki/bin/view/GoogleSummerOfCode/Moreextensionrepositories2017"
                }
            ],
            "techStack": [
                "java",
                " javascript",
                " html5",
                " css3",
                " velocity"
            ]
        },
        {
            "title": "Zenodo",
            "orgLink": "https://zenodo.org",
            "projects": [
                {
                    "title": "Research Data Metadata Extraction",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5308486699188224/",
                    "content": "As a graduate student, I know how painful but crucial to manage research assets. It is exciting to see Zenodo as an open source public platform and aims to improve the life of researchers.Metadata extraction is a challenging problem. I have used many different research resource management tools (e.g., Zotero, Melendy, Papers etc.), which partially solves the problem but is far from perfect. And I often end up writing ad-hoc scripts for my demands.It is exciting to see Zenodo as an open platform to tackle these problems and benefit many researchers.",
                    "projectCode": "https://gist.github.com/xiaom/106b9d111726cc99017b7efe7aead01c"
                },
                {
                    "title": "Zenodo Research Profile",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6248952064114688/",
                    "content": "Zenodo is a great initiative for researchers and invenio is a collection of wonderful APIs. I have chosen this project because it targets every researcher and one of the basic and immediate requirements of the user from such a beautiful platform. It would also promote zenodo as researchers will start sharing their zenodo profiles in social media.",
                    "projectCode": "https://docs.google.com/document/d/1_ohQqpsYx7PlUhT8CqINVt57bydy15SCl995JkMIkUY/edit?usp=sharing"
                }
            ],
            "techStack": [
                "python",
                "postgresql",
                "flask",
                "angularjs",
                "elasticsearch"
            ]
        },
        {
            "title": "Zulip",
            "orgLink": "https://zulip.org/",
            "projects": [
                {
                    "title": "Automation of building bots to Zulip",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6568216981667840/",
                    "content": "To enhance Zulip to easily integrate bots to the main codebase. To build a model whereby a bot could easily progress from being an initial quick prototype, to being a third-party extension, to being built into Zulip. The main aim would be to build the existing bots in ‘contrib_bots’ into Zulip’s main codebase. For the bots built-in Zulip, straight-forward and explicit instructions (fine user interface) provided to configure these bots. I also plan to work on AI chatbot integration with Zulip.",
                    "projectCode": "https://abhijeetkaur.github.io/blogs/gsoc-2017-with-zulip/"
                },
                {
                    "title": "Build a Slack meta-integration",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5830753380204544/",
                    "content": "My proposal describes my approach of how we could implement a Zulip incoming webhook API that allows Slack to post into Zulip with the additional goal of further integrating as many of Slack's own third-party integrations as possible.",
                    "projectCode": "https://paper.dropbox.com/doc/Links-to-GSoC-work-product-OhaMdW6b35gBdnmbePoXA"
                },
                {
                    "title": "Building support for Outgoing Webhooks and Slash commands",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/5835567770107904/",
                    "content": "Through this project, I wish to improve the chat-ops capabilities of Zulip by adding support for slash commands and outgoing webhooks. Outgoing webhooks are integrations which send data to third party services from Zulip on being triggered. Slash commands enable users to make use of services through chat messages. Example: change topic, archive messages, etc. I wish to build an outgoing webhook system which will enable users to easily add outgoing webhooks into their Zulip realm through UI. Users can also use their own code by adding it to the codebase for complex uses. I also wish to add support for slash commands which can be enabled, disabled and managed by users.",
                    "projectCode": "https://docs.google.com/document/d/1CiWkT5-Btx9tcz4zBx0_O5goos2DEy6JK49h6Vhi_FQ/edit#heading=h.hlvkr1x49tyn"
                },
                {
                    "title": "Enhance UX for zulip mobile app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4698653151199232/",
                    "content": "Work extensively on UX issues and high priority tasks.",
                    "projectCode": "https://sam1301.github.io/gsoc"
                },
                {
                    "title": "Illustration & Web Design Project",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6030802085216256/",
                    "content": "I am interested in improving the general look of the site and its UI by working on Zulip's HTML/CSS/JavaScript, designing emojis for the chat, and making illustrations for various pages (landing/error pages, newsletter headers). I am excited to work on Zulip because the project is very eager to welcome beginners to Open Source and is interested in helping people grow-- I would be able to learn a lot by working with such a dynamic team. I believe this project would be able to showcase the importance of designers contributing to Open Source, demonstrating that spending a few months improving the front-end of a project can make it more appealing and easier to use!",
                    "projectCode": "https://gist.github.com/vaidap/83ff59865f199e75ccd1b06607d07bd5"
                },
                {
                    "title": "Improve the on-boarding/new user experience in Zulip",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6292309087879168/",
                    "content": "My project would be to improve the on-boarding/new user experience in Zulip",
                    "projectCode": "http://vishnuks.com/blog/event/gsoc/2017/08/27/google-summer-of-code-2017"
                },
                {
                    "title": "Improve, enhance current  React Native app",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4718856408924160/",
                    "content": "Zulip is a powerful open source group chat application. It is easy to get started, I used it to contact mentors, discuss in the community etc. I have also deployed a local server in my hostel wing. It resulted in complete success to do various discussions. The best part is you never miss a message even if a server has thousands of users; unread counts are managed, get email and desktop notifications. It’s like impossible to miss a single message even after long vacations. It is an awesome tool for startups and companies to chat and discuss ideas.The project idea aims to enhance current React-Native app, increase user experience, fix bugs, polish app, and add new features.",
                    "projectCode": "https://vishwesh3.github.io/gsoc-work-report/"
                },
                {
                    "title": "Improvements to Development and Testing Infrastructure",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6414525335076864/",
                    "content": "Having a great development environment is one of the many things that ensure ease of developing software. It increases productivity and interest in software building. Another very important aspect in software development is testing. With a strong testing infrastructure, the cases of buggy code being patched to production can be reduced a lot. Also the load on committers/reviewers drops down drastically with this as obvious bugs fail to pass the automatic testing phase and alerting the developers that something has gone wrong before they ask for reviews. Through this project we can aspire to improve upon both these aspects and hence result in a big enhancement to the developer experience. This project will involve clearing out various issues relating to enhancement requests tied to these areas as well as developing new tools to support our vision of a better development and testing infrastructure.",
                    "projectCode": "https://paper.dropbox.com/doc/Improvements-to-Development-and-Testing-Infrastructure-of-Zulip-nxep2tE7zWXNQGIXYMkYv"
                },
                {
                    "title": "Zulip Electron",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/4773685692989440/",
                    "content": "For Zulip Desktop:",
                    "projectCode": "https://gist.github.com/geeeeeeeeek/7aee91a648c26b4dd10094322c7f6265"
                },
                {
                    "title": "Zulip Mobile Enhancement",
                    "projectLink": "https://summerofcode.withgoogle.com/archive/2017/projects/6358558421549056/",
                    "content": "The current react native project runs great for iOS but a little buggy for Android. I intend to make it more robust, easy to use by implementing a plethora of new features like a new compose message layout/action system, push notifications, drafts screen, settings screen etc. while fixing most of the bugs to make the project near perfect before my program ends.",
                    "projectCode": "http://kunall17.com/gsoc/gsoc17"
                }
            ],
            "techStack": [
                "python",
                "django",
                "javascript",
                "react native",
                "electron"
            ]
        }
    ]
}